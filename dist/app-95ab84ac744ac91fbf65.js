/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/modules/my/app/app.js":
/*!***********************************!*\
  !*** ./src/modules/my/app/app.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _app_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./app.html */ "./src/modules/my/app/app.html");



class App extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  constructor(...args) {
    super(...args);
    this.jsonString = void 0;
    this.csvString = void 0;
    this.fileName = void 0;
  }

  onFileNameChange(event) {
    this.fileName = event.target.value;
  }

  handleJSONStringChange(event) {
    this.jsonString = event.target.value;
  }

  convertJSONToCSV(event) {
    let jsonObjectArray = JSON.parse(this.jsonString);
    let maxLength = 0;
    let objectKeys = [];
    jsonObjectArray.forEach(item => {
      if (Object.keys(item).length > maxLength) {
        maxLength = Object.keys(item).length;
        objectKeys = Object.keys(item);
      }
    });
    let csvRows = [];

    for (let jsonObj of jsonObjectArray) {
      let row = '';
      let rowElements = [];

      for (let key of objectKeys) {
        let value = jsonObj[key] instanceof Object ? JSON.stringify(jsonObj[key]) : jsonObj[key];
        rowElements.push(value);
      }

      row = rowElements.join(',');
      csvRows.push(row);
    }

    this.csvString = objectKeys.join(',') + '\n' + csvRows.join('\n');
    this.template.querySelector(`[data-id="area2"]`).value = this.csvString;
  }

  beautifyJSON(event) {
    const obj = JSON.parse(this.jsonString);
    this.jsonString = JSON.stringify(obj, undefined, 4);
    this.template.querySelector(`[data-id="area1"]`).value = this.jsonString;
  }

  handleRemoveWhitespace(event) {
    this.jsonString = JSON.stringify(JSON.parse(this.jsonString));
    this.template.querySelector(`[data-id="area1"]`).value = this.jsonString;
  }

  downloadCSV() {
    let encodedUri = encodeURI(this.csvString);
    let fileName = this.fileName;
    let hiddenElement = document.createElement('a');
    hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodedUri;
    hiddenElement.target = '_blank';
    hiddenElement.download = fileName + '.csv';
    hiddenElement.click();
  }

  get isDisabledDownload() {
    return !this.csvString ? true : false;
  }

  traverse(event) {
    for (let i in o) {
      func.apply(this, [i, o[i]]);

      if (o[i] !== null && typeof o[i] == "object") {
        //going one step down in the object tree!!
        traverse(o[i], func);
      }
    }
  }

  handleReset() {
    this.jsonString = "";
    this.csvString = "";
    this.fileName = "";
    this.template.querySelectorAll('textarea').forEach(item => {
      item.value = "";
    });
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(App, {
  fields: ["jsonString", "csvString", "fileName"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(App, {
  tmpl: _app_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-client-formFactor.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-client-formFactor.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Large');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-calendarData.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-calendarData.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _salesforce_i18n_calendarData_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./@salesforce-i18n-calendarData.html */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_1__.registerComponent)(JSON.parse('{"buddhist":{"dayPeriods":{"format":{"abbreviated":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"},"narrow":{"midnight":"mi","am":"a","am-alt-variant":"am","noon":"n","pm":"p","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"},"wide":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"}},"stand-alone":{"abbreviated":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"},"narrow":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"},"wide":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"}}},"days":{"format":{"abbreviated":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"},"narrow":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"},"short":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"},"wide":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}},"stand-alone":{"abbreviated":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"},"narrow":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"},"short":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"},"wide":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"eras":{"eraNames":{"0":"BE"},"eraAbbr":{"0":"BE"},"eraNarrow":{"0":"BE"}},"months":{"format":{"abbreviated":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"},"narrow":{"1":"J","2":"F","3":"M","4":"A","5":"M","6":"J","7":"J","8":"A","9":"S","10":"O","11":"N","12":"D"},"wide":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}},"stand-alone":{"abbreviated":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"},"narrow":{"1":"J","2":"F","3":"M","4":"A","5":"M","6":"J","7":"J","8":"A","9":"S","10":"O","11":"N","12":"D"},"wide":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}},"quarters":{"format":{"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"},"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}},"stand-alone":{"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"},"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}}}},"ethiopic-amete-alem":{"dayPeriods":{"format":{"abbreviated":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"},"narrow":{"midnight":"mi","am":"a","am-alt-variant":"am","noon":"n","pm":"p","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"},"wide":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"}},"stand-alone":{"abbreviated":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"},"narrow":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"},"wide":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"}}},"days":{"format":{"abbreviated":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"},"narrow":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"},"short":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"},"wide":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}},"stand-alone":{"abbreviated":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"},"narrow":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"},"short":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"},"wide":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"eras":{"eraNames":{"0":"ERA0"},"eraAbbr":{"0":"ERA0"},"eraNarrow":{"0":"ERA0"}},"months":{"format":{"abbreviated":{"1":"Meskerem","2":"Tekemt","3":"Hedar","4":"Tahsas","5":"Ter","6":"Yekatit","7":"Megabit","8":"Miazia","9":"Genbot","10":"Sene","11":"Hamle","12":"Nehasse","13":"Pagumen"},"narrow":{"1":"1","2":"2","3":"3","4":"4","5":"5","6":"6","7":"7","8":"8","9":"9","10":"10","11":"11","12":"12","13":"13"},"wide":{"1":"Meskerem","2":"Tekemt","3":"Hedar","4":"Tahsas","5":"Ter","6":"Yekatit","7":"Megabit","8":"Miazia","9":"Genbot","10":"Sene","11":"Hamle","12":"Nehasse","13":"Pagumen"}},"stand-alone":{"abbreviated":{"1":"Meskerem","2":"Tekemt","3":"Hedar","4":"Tahsas","5":"Ter","6":"Yekatit","7":"Megabit","8":"Miazia","9":"Genbot","10":"Sene","11":"Hamle","12":"Nehasse","13":"Pagumen"},"narrow":{"1":"1","2":"2","3":"3","4":"4","5":"5","6":"6","7":"7","8":"8","9":"9","10":"10","11":"11","12":"12","13":"13"},"wide":{"1":"Meskerem","2":"Tekemt","3":"Hedar","4":"Tahsas","5":"Ter","6":"Yekatit","7":"Megabit","8":"Miazia","9":"Genbot","10":"Sene","11":"Hamle","12":"Nehasse","13":"Pagumen"}}},"quarters":{"format":{"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"},"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}},"stand-alone":{"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"},"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}}}},"generic":{"dayPeriods":{"format":{"abbreviated":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"},"narrow":{"midnight":"mi","am":"a","am-alt-variant":"am","noon":"n","pm":"p","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"},"wide":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"}},"stand-alone":{"abbreviated":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"},"narrow":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"},"wide":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"}}},"days":{"format":{"abbreviated":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"},"narrow":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"},"short":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"},"wide":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}},"stand-alone":{"abbreviated":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"},"narrow":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"},"short":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"},"wide":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"eras":{"eraNames":{"0":"ERA0","1":"ERA1"},"eraAbbr":{"0":"ERA0","1":"ERA1"},"eraNarrow":{"0":"ERA0","1":"ERA1"}},"months":{"format":{"abbreviated":{"1":"M01","2":"M02","3":"M03","4":"M04","5":"M05","6":"M06","7":"M07","8":"M08","9":"M09","10":"M10","11":"M11","12":"M12"},"narrow":{"1":"1","2":"2","3":"3","4":"4","5":"5","6":"6","7":"7","8":"8","9":"9","10":"10","11":"11","12":"12"},"wide":{"1":"M01","2":"M02","3":"M03","4":"M04","5":"M05","6":"M06","7":"M07","8":"M08","9":"M09","10":"M10","11":"M11","12":"M12"}},"stand-alone":{"abbreviated":{"1":"M01","2":"M02","3":"M03","4":"M04","5":"M05","6":"M06","7":"M07","8":"M08","9":"M09","10":"M10","11":"M11","12":"M12"},"narrow":{"1":"1","2":"2","3":"3","4":"4","5":"5","6":"6","7":"7","8":"8","9":"9","10":"10","11":"11","12":"12"},"wide":{"1":"M01","2":"M02","3":"M03","4":"M04","5":"M05","6":"M06","7":"M07","8":"M08","9":"M09","10":"M10","11":"M11","12":"M12"}}},"quarters":{"format":{"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"},"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}},"stand-alone":{"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"},"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}}}},"gregorian":{"dayPeriods":{"format":{"abbreviated":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"},"narrow":{"midnight":"mi","am":"a","am-alt-variant":"am","noon":"n","pm":"p","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"},"wide":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"}},"stand-alone":{"abbreviated":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"},"narrow":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"},"wide":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"}}},"days":{"format":{"abbreviated":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"},"narrow":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"},"short":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"},"wide":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}},"stand-alone":{"abbreviated":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"},"narrow":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"},"short":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"},"wide":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"eras":{"eraNames":{"0":"Before Christ","1":"Anno Domini","0-alt-variant":"Before Common Era","1-alt-variant":"Common Era"},"eraAbbr":{"0":"BC","1":"AD","0-alt-variant":"BCE","1-alt-variant":"CE"},"eraNarrow":{"0":"B","1":"A","0-alt-variant":"BCE","1-alt-variant":"CE"}},"months":{"format":{"abbreviated":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"},"narrow":{"1":"J","2":"F","3":"M","4":"A","5":"M","6":"J","7":"J","8":"A","9":"S","10":"O","11":"N","12":"D"},"wide":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}},"stand-alone":{"abbreviated":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"},"narrow":{"1":"J","2":"F","3":"M","4":"A","5":"M","6":"J","7":"J","8":"A","9":"S","10":"O","11":"N","12":"D"},"wide":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}},"quarters":{"format":{"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"},"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}},"stand-alone":{"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"},"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}}}},"indian":{"dayPeriods":{"format":{"abbreviated":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"},"narrow":{"midnight":"mi","am":"a","am-alt-variant":"am","noon":"n","pm":"p","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"},"wide":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"}},"stand-alone":{"abbreviated":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"},"narrow":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"},"wide":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"}}},"days":{"format":{"abbreviated":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"},"narrow":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"},"short":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"},"wide":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}},"stand-alone":{"abbreviated":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"},"narrow":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"},"short":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"},"wide":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"eras":{"eraNames":{"0":"Saka"},"eraAbbr":{"0":"Saka"},"eraNarrow":{"0":"Saka"}},"months":{"format":{"abbreviated":{"1":"Chaitra","2":"Vaisakha","3":"Jyaistha","4":"Asadha","5":"Sravana","6":"Bhadra","7":"Asvina","8":"Kartika","9":"Agrahayana","10":"Pausa","11":"Magha","12":"Phalguna"},"narrow":{"1":"1","2":"2","3":"3","4":"4","5":"5","6":"6","7":"7","8":"8","9":"9","10":"10","11":"11","12":"12"},"wide":{"1":"Chaitra","2":"Vaisakha","3":"Jyaistha","4":"Asadha","5":"Sravana","6":"Bhadra","7":"Asvina","8":"Kartika","9":"Agrahayana","10":"Pausa","11":"Magha","12":"Phalguna"}},"stand-alone":{"abbreviated":{"1":"Chaitra","2":"Vaisakha","3":"Jyaistha","4":"Asadha","5":"Sravana","6":"Bhadra","7":"Asvina","8":"Kartika","9":"Agrahayana","10":"Pausa","11":"Magha","12":"Phalguna"},"narrow":{"1":"1","2":"2","3":"3","4":"4","5":"5","6":"6","7":"7","8":"8","9":"9","10":"10","11":"11","12":"12"},"wide":{"1":"Chaitra","2":"Vaisakha","3":"Jyaistha","4":"Asadha","5":"Sravana","6":"Bhadra","7":"Asvina","8":"Kartika","9":"Agrahayana","10":"Pausa","11":"Magha","12":"Phalguna"}}},"quarters":{"format":{"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"},"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}},"stand-alone":{"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"},"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}}}},"japanese":{"dayPeriods":{"format":{"abbreviated":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"},"narrow":{"midnight":"mi","am":"a","am-alt-variant":"am","noon":"n","pm":"p","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"},"wide":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"}},"stand-alone":{"abbreviated":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"},"narrow":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"},"wide":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"}}},"days":{"format":{"abbreviated":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"},"narrow":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"},"short":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"},"wide":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}},"stand-alone":{"abbreviated":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"},"narrow":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"},"short":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"},"wide":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"eras":{"eraNames":{"0":"Taika (645–650)","1":"Hakuchi (650–671)","2":"Hakuhō (672–686)","3":"Shuchō (686–701)","4":"Taihō (701–704)","5":"Keiun (704–708)","6":"Wadō (708–715)","7":"Reiki (715–717)","8":"Yōrō (717–724)","9":"Jinki (724–729)","10":"Tenpyō (729–749)","11":"Tenpyō-kampō (749–749)","12":"Tenpyō-shōhō (749–757)","13":"Tenpyō-hōji (757–765)","14":"Tenpyō-jingo (765–767)","15":"Jingo-keiun (767–770)","16":"Hōki (770–780)","17":"Ten-ō (781–782)","18":"Enryaku (782–806)","19":"Daidō (806–810)","20":"Kōnin (810–824)","21":"Tenchō (824–834)","22":"Jōwa (834–848)","23":"Kajō (848–851)","24":"Ninju (851–854)","25":"Saikō (854–857)","26":"Ten-an (857–859)","27":"Jōgan (859–877)","28":"Gangyō (877–885)","29":"Ninna (885–889)","30":"Kanpyō (889–898)","31":"Shōtai (898–901)","32":"Engi (901–923)","33":"Enchō (923–931)","34":"Jōhei (931–938)","35":"Tengyō (938–947)","36":"Tenryaku (947–957)","37":"Tentoku (957–961)","38":"Ōwa (961–964)","39":"Kōhō (964–968)","40":"Anna (968–970)","41":"Tenroku (970–973)","42":"Ten’en (973–976)","43":"Jōgen (976–978)","44":"Tengen (978–983)","45":"Eikan (983–985)","46":"Kanna (985–987)","47":"Eien (987–989)","48":"Eiso (989–990)","49":"Shōryaku (990–995)","50":"Chōtoku (995–999)","51":"Chōhō (999–1004)","52":"Kankō (1004–1012)","53":"Chōwa (1012–1017)","54":"Kannin (1017–1021)","55":"Jian (1021–1024)","56":"Manju (1024–1028)","57":"Chōgen (1028–1037)","58":"Chōryaku (1037–1040)","59":"Chōkyū (1040–1044)","60":"Kantoku (1044–1046)","61":"Eishō (1046–1053)","62":"Tengi (1053–1058)","63":"Kōhei (1058–1065)","64":"Jiryaku (1065–1069)","65":"Enkyū (1069–1074)","66":"Shōho (1074–1077)","67":"Shōryaku (1077–1081)","68":"Eihō (1081–1084)","69":"Ōtoku (1084–1087)","70":"Kanji (1087–1094)","71":"Kahō (1094–1096)","72":"Eichō (1096–1097)","73":"Jōtoku (1097–1099)","74":"Kōwa (1099–1104)","75":"Chōji (1104–1106)","76":"Kashō (1106–1108)","77":"Tennin (1108–1110)","78":"Ten-ei (1110–1113)","79":"Eikyū (1113–1118)","80":"Gen’ei (1118–1120)","81":"Hōan (1120–1124)","82":"Tenji (1124–1126)","83":"Daiji (1126–1131)","84":"Tenshō (1131–1132)","85":"Chōshō (1132–1135)","86":"Hōen (1135–1141)","87":"Eiji (1141–1142)","88":"Kōji (1142–1144)","89":"Ten’yō (1144–1145)","90":"Kyūan (1145–1151)","91":"Ninpei (1151–1154)","92":"Kyūju (1154–1156)","93":"Hōgen (1156–1159)","94":"Heiji (1159–1160)","95":"Eiryaku (1160–1161)","96":"Ōho (1161–1163)","97":"Chōkan (1163–1165)","98":"Eiman (1165–1166)","99":"Nin’an (1166–1169)","100":"Kaō (1169–1171)","101":"Shōan (1171–1175)","102":"Angen (1175–1177)","103":"Jishō (1177–1181)","104":"Yōwa (1181–1182)","105":"Juei (1182–1184)","106":"Genryaku (1184–1185)","107":"Bunji (1185–1190)","108":"Kenkyū (1190–1199)","109":"Shōji (1199–1201)","110":"Kennin (1201–1204)","111":"Genkyū (1204–1206)","112":"Ken’ei (1206–1207)","113":"Jōgen (1207–1211)","114":"Kenryaku (1211–1213)","115":"Kenpō (1213–1219)","116":"Jōkyū (1219–1222)","117":"Jōō (1222–1224)","118":"Gennin (1224–1225)","119":"Karoku (1225–1227)","120":"Antei (1227–1229)","121":"Kanki (1229–1232)","122":"Jōei (1232–1233)","123":"Tenpuku (1233–1234)","124":"Bunryaku (1234–1235)","125":"Katei (1235–1238)","126":"Ryakunin (1238–1239)","127":"En’ō (1239–1240)","128":"Ninji (1240–1243)","129":"Kangen (1243–1247)","130":"Hōji (1247–1249)","131":"Kenchō (1249–1256)","132":"Kōgen (1256–1257)","133":"Shōka (1257–1259)","134":"Shōgen (1259–1260)","135":"Bun’ō (1260–1261)","136":"Kōchō (1261–1264)","137":"Bun’ei (1264–1275)","138":"Kenji (1275–1278)","139":"Kōan (1278–1288)","140":"Shōō (1288–1293)","141":"Einin (1293–1299)","142":"Shōan (1299–1302)","143":"Kengen (1302–1303)","144":"Kagen (1303–1306)","145":"Tokuji (1306–1308)","146":"Enkyō (1308–1311)","147":"Ōchō (1311–1312)","148":"Shōwa (1312–1317)","149":"Bunpō (1317–1319)","150":"Genō (1319–1321)","151":"Genkō (1321–1324)","152":"Shōchū (1324–1326)","153":"Karyaku (1326–1329)","154":"Gentoku (1329–1331)","155":"Genkō (1331–1334)","156":"Kenmu (1334–1336)","157":"Engen (1336–1340)","158":"Kōkoku (1340–1346)","159":"Shōhei (1346–1370)","160":"Kentoku (1370–1372)","161":"Bunchū (1372–1375)","162":"Tenju (1375–1379)","163":"Kōryaku (1379–1381)","164":"Kōwa (1381–1384)","165":"Genchū (1384–1392)","166":"Meitoku (1384–1387)","167":"Kakei (1387–1389)","168":"Kōō (1389–1390)","169":"Meitoku (1390–1394)","170":"Ōei (1394–1428)","171":"Shōchō (1428–1429)","172":"Eikyō (1429–1441)","173":"Kakitsu (1441–1444)","174":"Bun’an (1444–1449)","175":"Hōtoku (1449–1452)","176":"Kyōtoku (1452–1455)","177":"Kōshō (1455–1457)","178":"Chōroku (1457–1460)","179":"Kanshō (1460–1466)","180":"Bunshō (1466–1467)","181":"Ōnin (1467–1469)","182":"Bunmei (1469–1487)","183":"Chōkyō (1487–1489)","184":"Entoku (1489–1492)","185":"Meiō (1492–1501)","186":"Bunki (1501–1504)","187":"Eishō (1504–1521)","188":"Taiei (1521–1528)","189":"Kyōroku (1528–1532)","190":"Tenbun (1532–1555)","191":"Kōji (1555–1558)","192":"Eiroku (1558–1570)","193":"Genki (1570–1573)","194":"Tenshō (1573–1592)","195":"Bunroku (1592–1596)","196":"Keichō (1596–1615)","197":"Genna (1615–1624)","198":"Kan’ei (1624–1644)","199":"Shōho (1644–1648)","200":"Keian (1648–1652)","201":"Jōō (1652–1655)","202":"Meireki (1655–1658)","203":"Manji (1658–1661)","204":"Kanbun (1661–1673)","205":"Enpō (1673–1681)","206":"Tenna (1681–1684)","207":"Jōkyō (1684–1688)","208":"Genroku (1688–1704)","209":"Hōei (1704–1711)","210":"Shōtoku (1711–1716)","211":"Kyōhō (1716–1736)","212":"Genbun (1736–1741)","213":"Kanpō (1741–1744)","214":"Enkyō (1744–1748)","215":"Kan’en (1748–1751)","216":"Hōreki (1751–1764)","217":"Meiwa (1764–1772)","218":"An’ei (1772–1781)","219":"Tenmei (1781–1789)","220":"Kansei (1789–1801)","221":"Kyōwa (1801–1804)","222":"Bunka (1804–1818)","223":"Bunsei (1818–1830)","224":"Tenpō (1830–1844)","225":"Kōka (1844–1848)","226":"Kaei (1848–1854)","227":"Ansei (1854–1860)","228":"Man’en (1860–1861)","229":"Bunkyū (1861–1864)","230":"Genji (1864–1865)","231":"Keiō (1865–1868)","232":"Meiji","233":"Taishō","234":"Shōwa","235":"Heisei","236":"Reiwa"},"eraAbbr":{"0":"Taika (645–650)","1":"Hakuchi (650–671)","2":"Hakuhō (672–686)","3":"Shuchō (686–701)","4":"Taihō (701–704)","5":"Keiun (704–708)","6":"Wadō (708–715)","7":"Reiki (715–717)","8":"Yōrō (717–724)","9":"Jinki (724–729)","10":"Tenpyō (729–749)","11":"Tenpyō-kampō (749–749)","12":"Tenpyō-shōhō (749–757)","13":"Tenpyō-hōji (757–765)","14":"Tenpyō-jingo (765–767)","15":"Jingo-keiun (767–770)","16":"Hōki (770–780)","17":"Ten-ō (781–782)","18":"Enryaku (782–806)","19":"Daidō (806–810)","20":"Kōnin (810–824)","21":"Tenchō (824–834)","22":"Jōwa (834–848)","23":"Kajō (848–851)","24":"Ninju (851–854)","25":"Saikō (854–857)","26":"Ten-an (857–859)","27":"Jōgan (859–877)","28":"Gangyō (877–885)","29":"Ninna (885–889)","30":"Kanpyō (889–898)","31":"Shōtai (898–901)","32":"Engi (901–923)","33":"Enchō (923–931)","34":"Jōhei (931–938)","35":"Tengyō (938–947)","36":"Tenryaku (947–957)","37":"Tentoku (957–961)","38":"Ōwa (961–964)","39":"Kōhō (964–968)","40":"Anna (968–970)","41":"Tenroku (970–973)","42":"Ten’en (973–976)","43":"Jōgen (976–978)","44":"Tengen (978–983)","45":"Eikan (983–985)","46":"Kanna (985–987)","47":"Eien (987–989)","48":"Eiso (989–990)","49":"Shōryaku (990–995)","50":"Chōtoku (995–999)","51":"Chōhō (999–1004)","52":"Kankō (1004–1012)","53":"Chōwa (1012–1017)","54":"Kannin (1017–1021)","55":"Jian (1021–1024)","56":"Manju (1024–1028)","57":"Chōgen (1028–1037)","58":"Chōryaku (1037–1040)","59":"Chōkyū (1040–1044)","60":"Kantoku (1044–1046)","61":"Eishō (1046–1053)","62":"Tengi (1053–1058)","63":"Kōhei (1058–1065)","64":"Jiryaku (1065–1069)","65":"Enkyū (1069–1074)","66":"Shōho (1074–1077)","67":"Shōryaku (1077–1081)","68":"Eihō (1081–1084)","69":"Ōtoku (1084–1087)","70":"Kanji (1087–1094)","71":"Kahō (1094–1096)","72":"Eichō (1096–1097)","73":"Jōtoku (1097–1099)","74":"Kōwa (1099–1104)","75":"Chōji (1104–1106)","76":"Kashō (1106–1108)","77":"Tennin (1108–1110)","78":"Ten-ei (1110–1113)","79":"Eikyū (1113–1118)","80":"Gen’ei (1118–1120)","81":"Hōan (1120–1124)","82":"Tenji (1124–1126)","83":"Daiji (1126–1131)","84":"Tenshō (1131–1132)","85":"Chōshō (1132–1135)","86":"Hōen (1135–1141)","87":"Eiji (1141–1142)","88":"Kōji (1142–1144)","89":"Ten’yō (1144–1145)","90":"Kyūan (1145–1151)","91":"Ninpei (1151–1154)","92":"Kyūju (1154–1156)","93":"Hōgen (1156–1159)","94":"Heiji (1159–1160)","95":"Eiryaku (1160–1161)","96":"Ōho (1161–1163)","97":"Chōkan (1163–1165)","98":"Eiman (1165–1166)","99":"Nin’an (1166–1169)","100":"Kaō (1169–1171)","101":"Shōan (1171–1175)","102":"Angen (1175–1177)","103":"Jishō (1177–1181)","104":"Yōwa (1181–1182)","105":"Juei (1182–1184)","106":"Genryaku (1184–1185)","107":"Bunji (1185–1190)","108":"Kenkyū (1190–1199)","109":"Shōji (1199–1201)","110":"Kennin (1201–1204)","111":"Genkyū (1204–1206)","112":"Ken’ei (1206–1207)","113":"Jōgen (1207–1211)","114":"Kenryaku (1211–1213)","115":"Kenpō (1213–1219)","116":"Jōkyū (1219–1222)","117":"Jōō (1222–1224)","118":"Gennin (1224–1225)","119":"Karoku (1225–1227)","120":"Antei (1227–1229)","121":"Kanki (1229–1232)","122":"Jōei (1232–1233)","123":"Tenpuku (1233–1234)","124":"Bunryaku (1234–1235)","125":"Katei (1235–1238)","126":"Ryakunin (1238–1239)","127":"En’ō (1239–1240)","128":"Ninji (1240–1243)","129":"Kangen (1243–1247)","130":"Hōji (1247–1249)","131":"Kenchō (1249–1256)","132":"Kōgen (1256–1257)","133":"Shōka (1257–1259)","134":"Shōgen (1259–1260)","135":"Bun’ō (1260–1261)","136":"Kōchō (1261–1264)","137":"Bun’ei (1264–1275)","138":"Kenji (1275–1278)","139":"Kōan (1278–1288)","140":"Shōō (1288–1293)","141":"Einin (1293–1299)","142":"Shōan (1299–1302)","143":"Kengen (1302–1303)","144":"Kagen (1303–1306)","145":"Tokuji (1306–1308)","146":"Enkyō (1308–1311)","147":"Ōchō (1311–1312)","148":"Shōwa (1312–1317)","149":"Bunpō (1317–1319)","150":"Genō (1319–1321)","151":"Genkō (1321–1324)","152":"Shōchū (1324–1326)","153":"Karyaku (1326–1329)","154":"Gentoku (1329–1331)","155":"Genkō (1331–1334)","156":"Kenmu (1334–1336)","157":"Engen (1336–1340)","158":"Kōkoku (1340–1346)","159":"Shōhei (1346–1370)","160":"Kentoku (1370–1372)","161":"Bunchū (1372–1375)","162":"Tenju (1375–1379)","163":"Kōryaku (1379–1381)","164":"Kōwa (1381–1384)","165":"Genchū (1384–1392)","166":"Meitoku (1384–1387)","167":"Kakei (1387–1389)","168":"Kōō (1389–1390)","169":"Meitoku (1390–1394)","170":"Ōei (1394–1428)","171":"Shōchō (1428–1429)","172":"Eikyō (1429–1441)","173":"Kakitsu (1441–1444)","174":"Bun’an (1444–1449)","175":"Hōtoku (1449–1452)","176":"Kyōtoku (1452–1455)","177":"Kōshō (1455–1457)","178":"Chōroku (1457–1460)","179":"Kanshō (1460–1466)","180":"Bunshō (1466–1467)","181":"Ōnin (1467–1469)","182":"Bunmei (1469–1487)","183":"Chōkyō (1487–1489)","184":"Entoku (1489–1492)","185":"Meiō (1492–1501)","186":"Bunki (1501–1504)","187":"Eishō (1504–1521)","188":"Taiei (1521–1528)","189":"Kyōroku (1528–1532)","190":"Tenbun (1532–1555)","191":"Kōji (1555–1558)","192":"Eiroku (1558–1570)","193":"Genki (1570–1573)","194":"Tenshō (1573–1592)","195":"Bunroku (1592–1596)","196":"Keichō (1596–1615)","197":"Genna (1615–1624)","198":"Kan’ei (1624–1644)","199":"Shōho (1644–1648)","200":"Keian (1648–1652)","201":"Jōō (1652–1655)","202":"Meireki (1655–1658)","203":"Manji (1658–1661)","204":"Kanbun (1661–1673)","205":"Enpō (1673–1681)","206":"Tenna (1681–1684)","207":"Jōkyō (1684–1688)","208":"Genroku (1688–1704)","209":"Hōei (1704–1711)","210":"Shōtoku (1711–1716)","211":"Kyōhō (1716–1736)","212":"Genbun (1736–1741)","213":"Kanpō (1741–1744)","214":"Enkyō (1744–1748)","215":"Kan’en (1748–1751)","216":"Hōreki (1751–1764)","217":"Meiwa (1764–1772)","218":"An’ei (1772–1781)","219":"Tenmei (1781–1789)","220":"Kansei (1789–1801)","221":"Kyōwa (1801–1804)","222":"Bunka (1804–1818)","223":"Bunsei (1818–1830)","224":"Tenpō (1830–1844)","225":"Kōka (1844–1848)","226":"Kaei (1848–1854)","227":"Ansei (1854–1860)","228":"Man’en (1860–1861)","229":"Bunkyū (1861–1864)","230":"Genji (1864–1865)","231":"Keiō (1865–1868)","232":"Meiji","233":"Taishō","234":"Shōwa","235":"Heisei","236":"Reiwa"},"eraNarrow":{"0":"Taika (645–650)","1":"Hakuchi (650–671)","2":"Hakuhō (672–686)","3":"Shuchō (686–701)","4":"Taihō (701–704)","5":"Keiun (704–708)","6":"Wadō (708–715)","7":"Reiki (715–717)","8":"Yōrō (717–724)","9":"Jinki (724–729)","10":"Tenpyō (729–749)","11":"Tenpyō-kampō (749–749)","12":"Tenpyō-shōhō (749–757)","13":"Tenpyō-hōji (757–765)","14":"Tenpyō-jingo (765–767)","15":"Jingo-keiun (767–770)","16":"Hōki (770–780)","17":"Ten-ō (781–782)","18":"Enryaku (782–806)","19":"Daidō (806–810)","20":"Kōnin (810–824)","21":"Tenchō (824–834)","22":"Jōwa (834–848)","23":"Kajō (848–851)","24":"Ninju (851–854)","25":"Saikō (854–857)","26":"Ten-an (857–859)","27":"Jōgan (859–877)","28":"Gangyō (877–885)","29":"Ninna (885–889)","30":"Kanpyō (889–898)","31":"Shōtai (898–901)","32":"Engi (901–923)","33":"Enchō (923–931)","34":"Jōhei (931–938)","35":"Tengyō (938–947)","36":"Tenryaku (947–957)","37":"Tentoku (957–961)","38":"Ōwa (961–964)","39":"Kōhō (964–968)","40":"Anna (968–970)","41":"Tenroku (970–973)","42":"Ten’en (973–976)","43":"Jōgen (976–978)","44":"Tengen (978–983)","45":"Eikan (983–985)","46":"Kanna (985–987)","47":"Eien (987–989)","48":"Eiso (989–990)","49":"Shōryaku (990–995)","50":"Chōtoku (995–999)","51":"Chōhō (999–1004)","52":"Kankō (1004–1012)","53":"Chōwa (1012–1017)","54":"Kannin (1017–1021)","55":"Jian (1021–1024)","56":"Manju (1024–1028)","57":"Chōgen (1028–1037)","58":"Chōryaku (1037–1040)","59":"Chōkyū (1040–1044)","60":"Kantoku (1044–1046)","61":"Eishō (1046–1053)","62":"Tengi (1053–1058)","63":"Kōhei (1058–1065)","64":"Jiryaku (1065–1069)","65":"Enkyū (1069–1074)","66":"Shōho (1074–1077)","67":"Shōryaku (1077–1081)","68":"Eihō (1081–1084)","69":"Ōtoku (1084–1087)","70":"Kanji (1087–1094)","71":"Kahō (1094–1096)","72":"Eichō (1096–1097)","73":"Jōtoku (1097–1099)","74":"Kōwa (1099–1104)","75":"Chōji (1104–1106)","76":"Kashō (1106–1108)","77":"Tennin (1108–1110)","78":"Ten-ei (1110–1113)","79":"Eikyū (1113–1118)","80":"Gen’ei (1118–1120)","81":"Hōan (1120–1124)","82":"Tenji (1124–1126)","83":"Daiji (1126–1131)","84":"Tenshō (1131–1132)","85":"Chōshō (1132–1135)","86":"Hōen (1135–1141)","87":"Eiji (1141–1142)","88":"Kōji (1142–1144)","89":"Ten’yō (1144–1145)","90":"Kyūan (1145–1151)","91":"Ninpei (1151–1154)","92":"Kyūju (1154–1156)","93":"Hōgen (1156–1159)","94":"Heiji (1159–1160)","95":"Eiryaku (1160–1161)","96":"Ōho (1161–1163)","97":"Chōkan (1163–1165)","98":"Eiman (1165–1166)","99":"Nin’an (1166–1169)","100":"Kaō (1169–1171)","101":"Shōan (1171–1175)","102":"Angen (1175–1177)","103":"Jishō (1177–1181)","104":"Yōwa (1181–1182)","105":"Juei (1182–1184)","106":"Genryaku (1184–1185)","107":"Bunji (1185–1190)","108":"Kenkyū (1190–1199)","109":"Shōji (1199–1201)","110":"Kennin (1201–1204)","111":"Genkyū (1204–1206)","112":"Ken’ei (1206–1207)","113":"Jōgen (1207–1211)","114":"Kenryaku (1211–1213)","115":"Kenpō (1213–1219)","116":"Jōkyū (1219–1222)","117":"Jōō (1222–1224)","118":"Gennin (1224–1225)","119":"Karoku (1225–1227)","120":"Antei (1227–1229)","121":"Kanki (1229–1232)","122":"Jōei (1232–1233)","123":"Tenpuku (1233–1234)","124":"Bunryaku (1234–1235)","125":"Katei (1235–1238)","126":"Ryakunin (1238–1239)","127":"En’ō (1239–1240)","128":"Ninji (1240–1243)","129":"Kangen (1243–1247)","130":"Hōji (1247–1249)","131":"Kenchō (1249–1256)","132":"Kōgen (1256–1257)","133":"Shōka (1257–1259)","134":"Shōgen (1259–1260)","135":"Bun’ō (1260–1261)","136":"Kōchō (1261–1264)","137":"Bun’ei (1264–1275)","138":"Kenji (1275–1278)","139":"Kōan (1278–1288)","140":"Shōō (1288–1293)","141":"Einin (1293–1299)","142":"Shōan (1299–1302)","143":"Kengen (1302–1303)","144":"Kagen (1303–1306)","145":"Tokuji (1306–1308)","146":"Enkyō (1308–1311)","147":"Ōchō (1311–1312)","148":"Shōwa (1312–1317)","149":"Bunpō (1317–1319)","150":"Genō (1319–1321)","151":"Genkō (1321–1324)","152":"Shōchū (1324–1326)","153":"Karyaku (1326–1329)","154":"Gentoku (1329–1331)","155":"Genkō (1331–1334)","156":"Kenmu (1334–1336)","157":"Engen (1336–1340)","158":"Kōkoku (1340–1346)","159":"Shōhei (1346–1370)","160":"Kentoku (1370–1372)","161":"Bunchū (1372–1375)","162":"Tenju (1375–1379)","163":"Kōryaku (1379–1381)","164":"Kōwa (1381–1384)","165":"Genchū (1384–1392)","166":"Meitoku (1384–1387)","167":"Kakei (1387–1389)","168":"Kōō (1389–1390)","169":"Meitoku (1390–1394)","170":"Ōei (1394–1428)","171":"Shōchō (1428–1429)","172":"Eikyō (1429–1441)","173":"Kakitsu (1441–1444)","174":"Bun’an (1444–1449)","175":"Hōtoku (1449–1452)","176":"Kyōtoku (1452–1455)","177":"Kōshō (1455–1457)","178":"Chōroku (1457–1460)","179":"Kanshō (1460–1466)","180":"Bunshō (1466–1467)","181":"Ōnin (1467–1469)","182":"Bunmei (1469–1487)","183":"Chōkyō (1487–1489)","184":"Entoku (1489–1492)","185":"Meiō (1492–1501)","186":"Bunki (1501–1504)","187":"Eishō (1504–1521)","188":"Taiei (1521–1528)","189":"Kyōroku (1528–1532)","190":"Tenbun (1532–1555)","191":"Kōji (1555–1558)","192":"Eiroku (1558–1570)","193":"Genki (1570–1573)","194":"Tenshō (1573–1592)","195":"Bunroku (1592–1596)","196":"Keichō (1596–1615)","197":"Genna (1615–1624)","198":"Kan’ei (1624–1644)","199":"Shōho (1644–1648)","200":"Keian (1648–1652)","201":"Jōō (1652–1655)","202":"Meireki (1655–1658)","203":"Manji (1658–1661)","204":"Kanbun (1661–1673)","205":"Enpō (1673–1681)","206":"Tenna (1681–1684)","207":"Jōkyō (1684–1688)","208":"Genroku (1688–1704)","209":"Hōei (1704–1711)","210":"Shōtoku (1711–1716)","211":"Kyōhō (1716–1736)","212":"Genbun (1736–1741)","213":"Kanpō (1741–1744)","214":"Enkyō (1744–1748)","215":"Kan’en (1748–1751)","216":"Hōreki (1751–1764)","217":"Meiwa (1764–1772)","218":"An’ei (1772–1781)","219":"Tenmei (1781–1789)","220":"Kansei (1789–1801)","221":"Kyōwa (1801–1804)","222":"Bunka (1804–1818)","223":"Bunsei (1818–1830)","224":"Tenpō (1830–1844)","225":"Kōka (1844–1848)","226":"Kaei (1848–1854)","227":"Ansei (1854–1860)","228":"Man’en (1860–1861)","229":"Bunkyū (1861–1864)","230":"Genji (1864–1865)","231":"Keiō (1865–1868)","232":"M","233":"T","234":"S","235":"H","236":"R"}},"months":{"format":{"abbreviated":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"},"narrow":{"1":"J","2":"F","3":"M","4":"A","5":"M","6":"J","7":"J","8":"A","9":"S","10":"O","11":"N","12":"D"},"wide":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}},"stand-alone":{"abbreviated":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"},"narrow":{"1":"J","2":"F","3":"M","4":"A","5":"M","6":"J","7":"J","8":"A","9":"S","10":"O","11":"N","12":"D"},"wide":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}},"quarters":{"format":{"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"},"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}},"stand-alone":{"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"},"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}}}},"persian":{"dayPeriods":{"format":{"abbreviated":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"},"narrow":{"midnight":"mi","am":"a","am-alt-variant":"am","noon":"n","pm":"p","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"},"wide":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"}},"stand-alone":{"abbreviated":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"},"narrow":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"},"wide":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"}}},"days":{"format":{"abbreviated":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"},"narrow":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"},"short":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"},"wide":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}},"stand-alone":{"abbreviated":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"},"narrow":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"},"short":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"},"wide":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"eras":{"eraNames":{"0":"AP"},"eraAbbr":{"0":"AP"},"eraNarrow":{"0":"AP"}},"months":{"format":{"abbreviated":{"1":"Farvardin","2":"Ordibehesht","3":"Khordad","4":"Tir","5":"Mordad","6":"Shahrivar","7":"Mehr","8":"Aban","9":"Azar","10":"Dey","11":"Bahman","12":"Esfand"},"narrow":{"1":"1","2":"2","3":"3","4":"4","5":"5","6":"6","7":"7","8":"8","9":"9","10":"10","11":"11","12":"12"},"wide":{"1":"Farvardin","2":"Ordibehesht","3":"Khordad","4":"Tir","5":"Mordad","6":"Shahrivar","7":"Mehr","8":"Aban","9":"Azar","10":"Dey","11":"Bahman","12":"Esfand"}},"stand-alone":{"abbreviated":{"1":"Farvardin","2":"Ordibehesht","3":"Khordad","4":"Tir","5":"Mordad","6":"Shahrivar","7":"Mehr","8":"Aban","9":"Azar","10":"Dey","11":"Bahman","12":"Esfand"},"narrow":{"1":"1","2":"2","3":"3","4":"4","5":"5","6":"6","7":"7","8":"8","9":"9","10":"10","11":"11","12":"12"},"wide":{"1":"Farvardin","2":"Ordibehesht","3":"Khordad","4":"Tir","5":"Mordad","6":"Shahrivar","7":"Mehr","8":"Aban","9":"Azar","10":"Dey","11":"Bahman","12":"Esfand"}}},"quarters":{"format":{"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"},"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}},"stand-alone":{"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"},"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}}}},"roc":{"dayPeriods":{"format":{"abbreviated":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"},"narrow":{"midnight":"mi","am":"a","am-alt-variant":"am","noon":"n","pm":"p","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"},"wide":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"in the morning","afternoon1":"in the afternoon","evening1":"in the evening","night1":"at night"}},"stand-alone":{"abbreviated":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"},"narrow":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"},"wide":{"midnight":"midnight","am":"AM","am-alt-variant":"am","noon":"noon","pm":"PM","pm-alt-variant":"pm","morning1":"morning","afternoon1":"afternoon","evening1":"evening","night1":"night"}}},"days":{"format":{"abbreviated":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"},"narrow":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"},"short":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"},"wide":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}},"stand-alone":{"abbreviated":{"sun":"Sun","mon":"Mon","tue":"Tue","wed":"Wed","thu":"Thu","fri":"Fri","sat":"Sat"},"narrow":{"sun":"S","mon":"M","tue":"T","wed":"W","thu":"T","fri":"F","sat":"S"},"short":{"sun":"Su","mon":"Mo","tue":"Tu","wed":"We","thu":"Th","fri":"Fr","sat":"Sa"},"wide":{"sun":"Sunday","mon":"Monday","tue":"Tuesday","wed":"Wednesday","thu":"Thursday","fri":"Friday","sat":"Saturday"}}},"eras":{"eraNames":{"0":"Before R.O.C.","1":"Minguo"},"eraAbbr":{"0":"Before R.O.C.","1":"Minguo"},"eraNarrow":{"0":"Before R.O.C.","1":"Minguo"}},"months":{"format":{"abbreviated":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"},"narrow":{"1":"J","2":"F","3":"M","4":"A","5":"M","6":"J","7":"J","8":"A","9":"S","10":"O","11":"N","12":"D"},"wide":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}},"stand-alone":{"abbreviated":{"1":"Jan","2":"Feb","3":"Mar","4":"Apr","5":"May","6":"Jun","7":"Jul","8":"Aug","9":"Sep","10":"Oct","11":"Nov","12":"Dec"},"narrow":{"1":"J","2":"F","3":"M","4":"A","5":"M","6":"J","7":"J","8":"A","9":"S","10":"O","11":"N","12":"D"},"wide":{"1":"January","2":"February","3":"March","4":"April","5":"May","6":"June","7":"July","8":"August","9":"September","10":"October","11":"November","12":"December"}}},"quarters":{"format":{"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"},"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}},"stand-alone":{"abbreviated":{"1":"Q1","2":"Q2","3":"Q3","4":"Q4"},"narrow":{"1":"1","2":"2","3":"3","4":"4"},"wide":{"1":"1st quarter","2":"2nd quarter","3":"3rd quarter","4":"4th quarter"}}}}}'), {
  tmpl: _salesforce_i18n_calendarData_html__WEBPACK_IMPORTED_MODULE_0__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-common.calendarData.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-common.calendarData.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _salesforce_i18n_common_calendarData_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./@salesforce-i18n-common.calendarData.html */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_1__.registerComponent)(JSON.parse('{"buddhist":{"calendarSystem":"solar","eras":{"0":{"_start":"-542-01-01"}}},"ethiopic-amete-alem":{"eras":{"0":{"_end":"-5492-08-29"}}},"generic":{},"gregorian":{"calendarSystem":"solar","eras":{"0":{"_end":"0-12-31"},"1":{"_start":"1-01-01"}}},"indian":{"eras":{"0":{"_start":"79-01-01"}}},"japanese":{"calendarSystem":"solar","eras":{"0":{"_start":"645-6-19"},"1":{"_start":"650-2-15"},"2":{"_start":"672-1-1"},"3":{"_start":"686-7-20"},"4":{"_start":"701-3-21"},"5":{"_start":"704-5-10"},"6":{"_start":"708-1-11"},"7":{"_start":"715-9-2"},"8":{"_start":"717-11-17"},"9":{"_start":"724-2-4"},"10":{"_start":"729-8-5"},"11":{"_start":"749-4-14"},"12":{"_start":"749-7-2"},"13":{"_start":"757-8-18"},"14":{"_start":"765-1-7"},"15":{"_start":"767-8-16"},"16":{"_start":"770-10-1"},"17":{"_start":"781-1-1"},"18":{"_start":"782-8-19"},"19":{"_start":"806-5-18"},"20":{"_start":"810-9-19"},"21":{"_start":"824-1-5"},"22":{"_start":"834-1-3"},"23":{"_start":"848-6-13"},"24":{"_start":"851-4-28"},"25":{"_start":"854-11-30"},"26":{"_start":"857-2-21"},"27":{"_start":"859-4-15"},"28":{"_start":"877-4-16"},"29":{"_start":"885-2-21"},"30":{"_start":"889-4-27"},"31":{"_start":"898-4-26"},"32":{"_start":"901-7-15"},"33":{"_start":"923-4-11"},"34":{"_start":"931-4-26"},"35":{"_start":"938-5-22"},"36":{"_start":"947-4-22"},"37":{"_start":"957-10-27"},"38":{"_start":"961-2-16"},"39":{"_start":"964-7-10"},"40":{"_start":"968-8-13"},"41":{"_start":"970-3-25"},"42":{"_start":"973-12-20"},"43":{"_start":"976-7-13"},"44":{"_start":"978-11-29"},"45":{"_start":"983-4-15"},"46":{"_start":"985-4-27"},"47":{"_start":"987-4-5"},"48":{"_start":"989-8-8"},"49":{"_start":"990-11-7"},"50":{"_start":"995-2-22"},"51":{"_start":"999-1-13"},"52":{"_start":"1004-7-20"},"53":{"_start":"1012-12-25"},"54":{"_start":"1017-4-23"},"55":{"_start":"1021-2-2"},"56":{"_start":"1024-7-13"},"57":{"_start":"1028-7-25"},"58":{"_start":"1037-4-21"},"59":{"_start":"1040-11-10"},"60":{"_start":"1044-11-24"},"61":{"_start":"1046-4-14"},"62":{"_start":"1053-1-11"},"63":{"_start":"1058-8-29"},"64":{"_start":"1065-8-2"},"65":{"_start":"1069-4-13"},"66":{"_start":"1074-8-23"},"67":{"_start":"1077-11-17"},"68":{"_start":"1081-2-10"},"69":{"_start":"1084-2-7"},"70":{"_start":"1087-4-7"},"71":{"_start":"1094-12-15"},"72":{"_start":"1096-12-17"},"73":{"_start":"1097-11-21"},"74":{"_start":"1099-8-28"},"75":{"_start":"1104-2-10"},"76":{"_start":"1106-4-9"},"77":{"_start":"1108-8-3"},"78":{"_start":"1110-7-13"},"79":{"_start":"1113-7-13"},"80":{"_start":"1118-4-3"},"81":{"_start":"1120-4-10"},"82":{"_start":"1124-4-3"},"83":{"_start":"1126-1-22"},"84":{"_start":"1131-1-29"},"85":{"_start":"1132-8-11"},"86":{"_start":"1135-4-27"},"87":{"_start":"1141-7-10"},"88":{"_start":"1142-4-28"},"89":{"_start":"1144-2-23"},"90":{"_start":"1145-7-22"},"91":{"_start":"1151-1-26"},"92":{"_start":"1154-10-28"},"93":{"_start":"1156-4-27"},"94":{"_start":"1159-4-20"},"95":{"_start":"1160-1-10"},"96":{"_start":"1161-9-4"},"97":{"_start":"1163-3-29"},"98":{"_start":"1165-6-5"},"99":{"_start":"1166-8-27"},"100":{"_start":"1169-4-8"},"101":{"_start":"1171-4-21"},"102":{"_start":"1175-7-28"},"103":{"_start":"1177-8-4"},"104":{"_start":"1181-7-14"},"105":{"_start":"1182-5-27"},"106":{"_start":"1184-4-16"},"107":{"_start":"1185-8-14"},"108":{"_start":"1190-4-11"},"109":{"_start":"1199-4-27"},"110":{"_start":"1201-2-13"},"111":{"_start":"1204-2-20"},"112":{"_start":"1206-4-27"},"113":{"_start":"1207-10-25"},"114":{"_start":"1211-3-9"},"115":{"_start":"1213-12-6"},"116":{"_start":"1219-4-12"},"117":{"_start":"1222-4-13"},"118":{"_start":"1224-11-20"},"119":{"_start":"1225-4-20"},"120":{"_start":"1227-12-10"},"121":{"_start":"1229-3-5"},"122":{"_start":"1232-4-2"},"123":{"_start":"1233-4-15"},"124":{"_start":"1234-11-5"},"125":{"_start":"1235-9-19"},"126":{"_start":"1238-11-23"},"127":{"_start":"1239-2-7"},"128":{"_start":"1240-7-16"},"129":{"_start":"1243-2-26"},"130":{"_start":"1247-2-28"},"131":{"_start":"1249-3-18"},"132":{"_start":"1256-10-5"},"133":{"_start":"1257-3-14"},"134":{"_start":"1259-3-26"},"135":{"_start":"1260-4-13"},"136":{"_start":"1261-2-20"},"137":{"_start":"1264-2-28"},"138":{"_start":"1275-4-25"},"139":{"_start":"1278-2-29"},"140":{"_start":"1288-4-28"},"141":{"_start":"1293-8-5"},"142":{"_start":"1299-4-25"},"143":{"_start":"1302-11-21"},"144":{"_start":"1303-8-5"},"145":{"_start":"1306-12-14"},"146":{"_start":"1308-10-9"},"147":{"_start":"1311-4-28"},"148":{"_start":"1312-3-20"},"149":{"_start":"1317-2-3"},"150":{"_start":"1319-4-28"},"151":{"_start":"1321-2-23"},"152":{"_start":"1324-12-9"},"153":{"_start":"1326-4-26"},"154":{"_start":"1329-8-29"},"155":{"_start":"1331-8-9"},"156":{"_start":"1334-1-29"},"157":{"_start":"1336-2-29"},"158":{"_start":"1340-4-28"},"159":{"_start":"1346-12-8"},"160":{"_start":"1370-7-24"},"161":{"_start":"1372-4-1"},"162":{"_start":"1375-5-27"},"163":{"_start":"1379-3-22"},"164":{"_start":"1381-2-10"},"165":{"_start":"1384-4-28"},"166":{"_start":"1387-8-22"},"167":{"_start":"1387-8-23"},"168":{"_start":"1389-2-9"},"169":{"_start":"1390-3-26"},"170":{"_start":"1394-7-5"},"171":{"_start":"1428-4-27"},"172":{"_start":"1429-9-5"},"173":{"_start":"1441-2-17"},"174":{"_start":"1444-2-5"},"175":{"_start":"1449-7-28"},"176":{"_start":"1452-7-25"},"177":{"_start":"1455-7-25"},"178":{"_start":"1457-9-28"},"179":{"_start":"1460-12-21"},"180":{"_start":"1466-2-28"},"181":{"_start":"1467-3-3"},"182":{"_start":"1469-4-28"},"183":{"_start":"1487-7-29"},"184":{"_start":"1489-8-21"},"185":{"_start":"1492-7-19"},"186":{"_start":"1501-2-29"},"187":{"_start":"1504-2-30"},"188":{"_start":"1521-8-23"},"189":{"_start":"1528-8-20"},"190":{"_start":"1532-7-29"},"191":{"_start":"1555-10-23"},"192":{"_start":"1558-2-28"},"193":{"_start":"1570-4-23"},"194":{"_start":"1573-7-28"},"195":{"_start":"1592-12-8"},"196":{"_start":"1596-10-27"},"197":{"_start":"1615-7-13"},"198":{"_start":"1624-2-30"},"199":{"_start":"1644-12-16"},"200":{"_start":"1648-2-15"},"201":{"_start":"1652-9-18"},"202":{"_start":"1655-4-13"},"203":{"_start":"1658-7-23"},"204":{"_start":"1661-4-25"},"205":{"_start":"1673-9-21"},"206":{"_start":"1681-9-29"},"207":{"_start":"1684-2-21"},"208":{"_start":"1688-9-30"},"209":{"_start":"1704-3-13"},"210":{"_start":"1711-4-25"},"211":{"_start":"1716-6-22"},"212":{"_start":"1736-4-28"},"213":{"_start":"1741-2-27"},"214":{"_start":"1744-2-21"},"215":{"_start":"1748-7-12"},"216":{"_start":"1751-10-27"},"217":{"_start":"1764-6-2"},"218":{"_start":"1772-11-16"},"219":{"_start":"1781-4-2"},"220":{"_start":"1789-1-25"},"221":{"_start":"1801-2-5"},"222":{"_start":"1804-2-11"},"223":{"_start":"1818-4-22"},"224":{"_start":"1830-12-10"},"225":{"_start":"1844-12-2"},"226":{"_start":"1848-2-28"},"227":{"_start":"1854-11-27"},"228":{"_start":"1860-3-18"},"229":{"_start":"1861-2-19"},"230":{"_start":"1864-2-20"},"231":{"_start":"1865-4-7"},"232":{"_start":"1868-9-8"},"233":{"_start":"1912-7-30"},"234":{"_start":"1926-12-25"},"235":{"_start":"1989-1-8"},"236":{"_start":"2019-5-1"}}},"persian":{"calendarSystem":"solar","eras":{"0":{"_start":"622-01-01"}}},"roc":{"eras":{"0":{"_end":"1911-12-31"},"1":{"_start":"1912-01-01"}}}}'), {
  tmpl: _salesforce_i18n_common_calendarData_html__WEBPACK_IMPORTED_MODULE_0__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-common.digits.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-common.digits.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _salesforce_i18n_common_digits_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./@salesforce-i18n-common.digits.html */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_1__.registerComponent)(JSON.parse('{"adlm":"𞥐𞥑𞥒𞥓𞥔𞥕𞥖𞥗𞥘𞥙","ahom":"𑜰𑜱𑜲𑜳𑜴𑜵𑜶𑜷𑜸𑜹","arab":"٠١٢٣٤٥٦٧٨٩","arabext":"۰۱۲۳۴۵۶۷۸۹","bali":"᭐᭑᭒᭓᭔᭕᭖᭗᭘᭙","beng":"০১২৩৪৫৬৭৮৯","bhks":"𑱐𑱑𑱒𑱓𑱔𑱕𑱖𑱗𑱘𑱙","brah":"𑁦𑁧𑁨𑁩𑁪𑁫𑁬𑁭𑁮𑁯","cakm":"𑄶𑄷𑄸𑄹𑄺𑄻𑄼𑄽𑄾𑄿","cham":"꩐꩑꩒꩓꩔꩕꩖꩗꩘꩙","deva":"०१२३४५६७८९","fullwide":"０１２３４５６７８９","gong":"𑶠𑶡𑶢𑶣𑶤𑶥𑶦𑶧𑶨𑶩","gonm":"𑵐𑵑𑵒𑵓𑵔𑵕𑵖𑵗𑵘𑵙","gujr":"૦૧૨૩૪૫૬૭૮૯","guru":"੦੧੨੩੪੫੬੭੮੯","hanidec":"〇一二三四五六七八九","hmng":"𖭐𖭑𖭒𖭓𖭔𖭕𖭖𖭗𖭘𖭙","hmnp":"𞅀𞅁𞅂𞅃𞅄𞅅𞅆𞅇𞅈𞅉","java":"꧐꧑꧒꧓꧔꧕꧖꧗꧘꧙","kali":"꤀꤁꤂꤃꤄꤅꤆꤇꤈꤉","khmr":"០១២៣៤៥៦៧៨៩","knda":"೦೧೨೩೪೫೬೭೮೯","lana":"᪀᪁᪂᪃᪄᪅᪆᪇᪈᪉","lanatham":"᪐᪑᪒᪓᪔᪕᪖᪗᪘᪙","laoo":"໐໑໒໓໔໕໖໗໘໙","latn":"0123456789","lepc":"᱀᱁᱂᱃᱄᱅᱆᱇᱈᱉","limb":"᥆᥇᥈᥉᥊᥋᥌᥍᥎᥏","mathbold":"𝟎𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗","mathdbl":"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡","mathmono":"𝟶𝟷𝟸𝟹𝟺𝟻𝟼𝟽𝟾𝟿","mathsanb":"𝟬𝟭𝟮𝟯𝟰𝟱𝟲𝟳𝟴𝟵","mathsans":"𝟢𝟣𝟤𝟥𝟦𝟧𝟨𝟩𝟪𝟫","mlym":"൦൧൨൩൪൫൬൭൮൯","modi":"𑙐𑙑𑙒𑙓𑙔𑙕𑙖𑙗𑙘𑙙","mong":"᠐᠑᠒᠓᠔᠕᠖᠗᠘᠙","mroo":"𖩠𖩡𖩢𖩣𖩤𖩥𖩦𖩧𖩨𖩩","mtei":"꯰꯱꯲꯳꯴꯵꯶꯷꯸꯹","mymr":"၀၁၂၃၄၅၆၇၈၉","mymrshan":"႐႑႒႓႔႕႖႗႘႙","mymrtlng":"꧰꧱꧲꧳꧴꧵꧶꧷꧸꧹","newa":"𑑐𑑑𑑒𑑓𑑔𑑕𑑖𑑗𑑘𑑙","nkoo":"߀߁߂߃߄߅߆߇߈߉","olck":"᱐᱑᱒᱓᱔᱕᱖᱗᱘᱙","orya":"୦୧୨୩୪୫୬୭୮୯","osma":"𐒠𐒡𐒢𐒣𐒤𐒥𐒦𐒧𐒨𐒩","rohg":"𐴰𐴱𐴲𐴳𐴴𐴵𐴶𐴷𐴸𐴹","saur":"꣐꣑꣒꣓꣔꣕꣖꣗꣘꣙","shrd":"𑇐𑇑𑇒𑇓𑇔𑇕𑇖𑇗𑇘𑇙","sind":"𑋰𑋱𑋲𑋳𑋴𑋵𑋶𑋷𑋸𑋹","sinh":"෦෧෨෩෪෫෬෭෮෯","sora":"𑃰𑃱𑃲𑃳𑃴𑃵𑃶𑃷𑃸𑃹","sund":"᮰᮱᮲᮳᮴᮵᮶᮷᮸᮹","takr":"𑛀𑛁𑛂𑛃𑛄𑛅𑛆𑛇𑛈𑛉","talu":"᧐᧑᧒᧓᧔᧕᧖᧗᧘᧙","tamldec":"௦௧௨௩௪௫௬௭௮௯","telu":"౦౧౨౩౪౫౬౭౮౯","thai":"๐๑๒๓๔๕๖๗๘๙","tibt":"༠༡༢༣༤༥༦༧༨༩","tirh":"𑓐𑓑𑓒𑓓𑓔𑓕𑓖𑓗𑓘𑓙","vaii":"꘠꘡꘢꘣꘤꘥꘦꘧꘨꘩","wara":"𑣠𑣡𑣢𑣣𑣤𑣥𑣦𑣧𑣨𑣩","wcho":"𞋰𞋱𞋲𞋳𞋴𞋵𞋶𞋷𞋸𞋹"}'), {
  tmpl: _salesforce_i18n_common_digits_html__WEBPACK_IMPORTED_MODULE_0__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-currency.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-currency.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('USD');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.longDateFormat.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.longDateFormat.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('MMMM d, yyyy');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.mediumDateFormat.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.mediumDateFormat.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('MMM d, yyyy');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.mediumTimeFormat.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.mediumTimeFormat.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('h:mm:ss a');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.shortDateFormat.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.shortDateFormat.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('M/d/yyyy');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.shortTimeFormat.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.shortTimeFormat.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('h:mm a');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-defaultCalendar.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-defaultCalendar.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('gregorian');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-defaultNumberingSystem.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-defaultNumberingSystem.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('latn');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dir.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dir.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('ltr');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-firstDayOfWeek.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-firstDayOfWeek.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('1');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-lang.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-lang.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('en');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-locale.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-locale.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('en-US');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.currencyFormat.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.currencyFormat.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('¤#,##0.00;(¤#,##0.00)');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.currencySymbol.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.currencySymbol.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('$');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.decimalSeparator.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.decimalSeparator.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('.');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.exponentialSign.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.exponentialSign.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('E');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.groupingSeparator.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.groupingSeparator.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (',');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.infinity.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.infinity.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('∞');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.minusSign.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.minusSign.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('-');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.nan.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.nan.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('NaN');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.numberFormat.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.numberFormat.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('#,##0.###');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.perMilleSign.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.perMilleSign.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('‰');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.percentFormat.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.percentFormat.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('#,##0%');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.percentSign.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.percentSign.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('%');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.plusSign.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.plusSign.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('+');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.superscriptingExponentSign.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.superscriptingExponentSign.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('×');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-showJapaneseCalendar.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-showJapaneseCalendar.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('false');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-timeZone.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-timeZone.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('America/Los_Angeles');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-Duration.secondsAgo.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-Duration.secondsAgo.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('a few seconds ago');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-Duration.secondsLater.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-Duration.secondsLater.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('in a few seconds');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.a11yTriggerText.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.a11yTriggerText.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Choose a color. Current color: ');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.bInput.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.bInput.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('B');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.blueAbbr.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.blueAbbr.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Blue');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.cancelButton.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.cancelButton.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Cancel');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.colorPickerInstructions.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.colorPickerInstructions.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Use arrow keys to select a saturation and brightness, on an x and y axis.');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.doneButton.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.doneButton.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Done');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.errorMessage.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.errorMessage.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Enter a valid hexadecimal value.');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.gInput.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.gInput.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('G');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.greenAbbr.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.greenAbbr.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Green');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.hexLabel.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.hexLabel.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Hex');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.hueInput.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.hueInput.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Select Hue');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.rInput.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.rInput.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('R');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.redAbbr.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.redAbbr.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Red');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPickerPanel.customTab.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPickerPanel.customTab.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Custom');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPickerPanel.defaultTab.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPickerPanel.defaultTab.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Default');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.ariaSelectedOptions.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.ariaSelectedOptions.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Selected Options:');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.deselectOptionKeyboard.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.deselectOptionKeyboard.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Press delete or backspace to remove');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.loadingText.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.loadingText.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Loading');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.pillCloseButtonAlternativeText.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.pillCloseButtonAlternativeText.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Clear Selection');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.placeholder.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.placeholder.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Select an Option');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.activeCapitalized.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.activeCapitalized.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Active');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.clear.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.clear.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Clear');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.inactiveCapitalized.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.inactiveCapitalized.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Inactive');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.loading.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.loading.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Loading');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.required.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.required.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('required');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.ariaLabelMonth.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.ariaLabelMonth.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Date picker: ');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.dateLabel.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.dateLabel.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Date');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.invalidDate.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.invalidDate.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Your entry does not match the allowed format {0}.');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.maxRangeMessage.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.maxRangeMessage.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Select a date before {0}');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.minAndMaxRangeMessage.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.minAndMaxRangeMessage.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Select a date between {0} and {1}');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.minRangeMessage.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.minRangeMessage.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Select a date after {0}');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.nextMonth.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.nextMonth.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Next Month');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.previousMonth.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.previousMonth.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Previous Month');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.rangeOverflow.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.rangeOverflow.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Value must be {0} or earlier.');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.rangeUnderflow.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.rangeUnderflow.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Value must be {0} or later.');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.selectDateFor.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.selectDateFor.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Select a date for {0}');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.timeLabel.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.timeLabel.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Time');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.today.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.today.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Today');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.yearSelector.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.yearSelector.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Pick a Year');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityBadInput.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityBadInput.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Enter a valid value.');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityPatternMismatch.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityPatternMismatch.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Your entry does not match the allowed pattern.');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityRangeOverflow.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityRangeOverflow.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('The number is too high.');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityRangeUnderflow.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityRangeUnderflow.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('The number is too low.');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validitySelectAtleastOne.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validitySelectAtleastOne.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('You must select at least one choice from this set.');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityStepMismatch.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityStepMismatch.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Your entry isn\'t a valid increment.');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityTooLong.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityTooLong.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Your entry is too long.');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityTooShort.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityTooShort.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Your entry is too short.');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityTypeMismatch.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityTypeMismatch.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('You have entered an invalid format.');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityValueMissing.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityValueMissing.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Complete this field.');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningHelptext.buttonAlternativeText.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningHelptext.buttonAlternativeText.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Help');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInput.helptextAlternativeText.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInput.helptextAlternativeText.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('{0} Help Info');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInputFile.bodyText.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInputFile.bodyText.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Or drop files');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInputFile.buttonLabel.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInputFile.buttonLabel.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Upload Files');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInputNumber.decrementCounter.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInputNumber.decrementCounter.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Decrease number');

/***/ }),

/***/ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInputNumber.incrementCounter.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInputNumber.incrementCounter.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('Increase number');

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/ariaObserver/ariaObserver.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/ariaObserver/ariaObserver.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ariaObserver_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ariaObserver.html */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");



const CONTENT_SEPARATOR = '\n';

function getAttr(elm, attr) {
  if (elm.tagName.match(/lightning/i)) {
    return elm[attr];
  }

  return elm.getAttribute(attr);
}

function extractElements(root, ids) {
  if (typeof ids !== 'string' || ids === '') {
    return [];
  } // We must query the elements in the order of ids, so that
  // the content will be extracted in the correct order.


  return splitIds(ids).map(id => root.querySelector(`#${id}`)).filter(el => !!el);
}

function extractContent(elements) {
  return elements.map(element => element.textContent).filter(text => text.length).join(CONTENT_SEPARATOR);
}

function splitIds(ids) {
  return (ids + '').trim().split(/\s+/);
}

function hashIds(ids) {
  return (ids + '').trim().split(/\s+/).reduce((r, v) => {
    r[v] = 1;
    return r;
  }, {});
} // this method should check each individual id from computedIds
// against the existing value of the attrName on elm, and dupe
// them, and add the new ones.


function addAriaRefWhenNeeded(elm, attrName, computedIds) {
  const newIds = splitIds(computedIds);
  const oldIds = getAttr(elm, attrName) || '';
  const oldIdsHash = hashIds(oldIds);
  const suffix = [];

  for (let i = 0; i < newIds.length; i += 1) {
    if (!oldIdsHash[newIds[i]]) {
      suffix.push(newIds[i]);
    }
  }

  if (suffix.length !== 0) {
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.synchronizeAttrs)(elm, {
      [attrName]: oldIds + (oldIds.length === 0 ? '' : ' ') + suffix.join(' ')
    });
  }
} // this method should check each individual id from computedIds
// against the existing value of the attrName on elm, and remove
// them when possible in preparation for some new values.


function removeAriaRefWhenPossible(elm, attrName, computedIds) {
  const newIds = splitIds(computedIds);
  const oldIds = getAttr(elm, attrName) || '';
  const oldIdsHash = hashIds(oldIds);
  const newValues = [];

  for (let i = 0; i < newIds.length; i += 1) {
    if (!oldIdsHash[newIds[i]]) {
      newValues.push(newIds[i]);
    }
  }

  (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.synchronizeAttrs)(elm, {
    [attrName]: newValues.join(' ')
  });
}

function createPlaceholderContainer() {
  const container = document.createElement('span');
  container.className = 'slds-assistive-text';
  container.setAttribute('placeholder-container', '');
  return container;
}

class AriaObserver {
  constructor(component) {
    this.component = component;
    this.template = component.template;
    this.isNative = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.isNativeComponent)(component);
    this.state = {};
    this.liveIds = {};
    this.guid = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.guid)();
    this.placeholderContainer = null;
  }

  connectLiveIdRef(refs, callback) {
    const selector = (refs + '').trim().split(/\s+/).map(ref => `[id*="${ref}"]`).join(',');
    const liveId = {
      selector,
      callback
    };
    this.liveIds[refs] = liveId;
  }

  connect({
    targetSelector,
    attribute,
    id,
    ids
  }) {
    ids = ids || id;
    this.state[attribute] = this.state[attribute] || {};
    const attrState = this.state[attribute]; // note: we don't support linking to a different targetSelector

    attrState.innerSelector = attrState.innerSelector || targetSelector; // removing the old ids if possible before setting the new ones

    if (!this.isNative && attrState.ids) {
      const elm = this.template.querySelector(attrState.innerSelector);

      if (elm) {
        removeAriaRefWhenPossible(elm, attribute, attrState.ids);
      }
    }

    attrState.ids = ids;

    if (this.isNative && !attrState.placeholder) {
      // create placeholder element for copied content
      attrState.placeholder = document.createElement('span');
      attrState.placeholder.id = `auto-link-${attribute}-${this.guid}`;
    }

    if (this.component.isConnected) {
      this.privateUpdate(attribute);
    }
  }

  sync() {
    if (!this.component.isConnected) {
      throw new Error(`Invalid sync invocation. It can only be invoked during renderedCallback().`);
    }

    if (this.isNative && !this.mo) {
      this.privateConnect();
    }

    for (const attrName in this.state) {
      if (Object.prototype.hasOwnProperty.call(this.state, attrName)) {
        this.privateUpdate(attrName);
      }
    } // live idRef feature is a no-op in native


    if (!this.isNative) {
      this.privateUpdateLiveIds();
    }
  }

  privateExtractIds(elements) {
    return elements.map(el => {
      return el.getAttribute('id');
    }).join(' ');
  }

  privateUpdateLiveIds() {
    const root = this.template.host.getRootNode(); // if not connected do nothing

    if (!root) {
      return;
    }

    for (const liveId in this.liveIds) {
      if (Object.prototype.hasOwnProperty.call(this.liveIds, liveId)) {
        const thisId = this.liveIds[liveId];

        if (!thisId.elements) {
          // element refs are cached
          thisId.elements = Array.prototype.slice.call(root.querySelectorAll(thisId.selector));
        }

        const newIds = this.privateExtractIds(thisId.elements); // only fire calback if the value changed

        if (newIds !== thisId.ids) {
          thisId.callback(newIds);
          thisId.ids = newIds;
        }
      }
    }
  }

  privateUpdate(attrName) {
    const {
      innerSelector
    } = this.state[attrName];
    const elm = this.template.querySelector(innerSelector);

    if (!elm) {
      return; // nothing to update
    }

    let computedIds;

    if (this.isNative) {
      const {
        ids,
        content,
        placeholder
      } = this.state[attrName];
      const newContent = extractContent(extractElements(this.root, ids));

      if (content !== newContent) {
        this.state[attrName].content = placeholder.textContent = newContent;
      }

      if (!placeholder.parentNode) {
        // create placeholder container at template root, if not already exist
        if (!this.placeholderContainer) {
          this.placeholderContainer = createPlaceholderContainer();
          this.template.appendChild(this.placeholderContainer);
        } // inserting the placeholder once


        this.placeholderContainer.appendChild(placeholder);
      }

      computedIds = placeholder.id;
    } else {
      computedIds = this.state[attrName].ids;
    }

    addAriaRefWhenNeeded(elm, attrName, computedIds);
  }

  privateConnect() {
    // caching root ref
    this.root = this.template.host.getRootNode(); // creating the observer once

    this.mo = new MutationObserver(() => {
      if (!this.component.isConnected) {
        return; // do nothing when the template is not connected
      }

      this.sync();
    });
    this.mo.observe(this.root, {
      characterData: true,
      childList: true,
      subtree: true
    });
  }

  disconnect() {
    // MutationObservers must be disconnected manually when using @lwc/synthetic-shadow
    // https://lwc.dev/guide/composition#:~:text=memory%20leak
    if (this.mo) {
      this.mo.disconnect();
      this.mo = undefined;
    }
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_1__.registerComponent)(AriaObserver, {
  tmpl: _ariaObserver_html__WEBPACK_IMPORTED_MODULE_0__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/baseCombobox/baseCombobox.css":
/*!********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/baseCombobox/baseCombobox.css ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function stylesheet(useActualHostSelector, token) {
  var shadowSelector = token ? ("[" + token + "]") : "";
  var hostSelector = token ? ("[" + token + "-host]") : "";
  return [".slds-inline-logo", shadowSelector, " {height: 1rem;margin-top: 1rem;margin-bottom: 1rem;}input[aria-readonly=\"true\"]", shadowSelector, " {caret-color: transparent;}"].join('');
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([stylesheet]);

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/baseCombobox/baseCombobox.html":
/*!*********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/baseCombobox/baseCombobox.html ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseCombobox_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baseCombobox.css */ "./node_modules/lightning-base-components/src/lightning/baseCombobox/baseCombobox.css");
/* harmony import */ var _baseCombobox_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./baseCombobox.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lightning_icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/icon */ "./node_modules/lightning-base-components/src/lightning/icon/icon.js");
/* harmony import */ var lightning_primitiveIcon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/primitiveIcon */ "./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.js");
/* harmony import */ var lightning_baseComboboxItem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lightning/baseComboboxItem */ "./node_modules/lightning-base-components/src/lightning/baseComboboxItem/baseComboboxItem.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");








function tmpl($api, $cmp, $slotset, $ctx) {
  const {b: api_bind, c: api_custom_element, gid: api_scoped_id, h: api_element, d: api_dynamic_text, t: api_text, k: api_key, i: api_iterator, f: api_flatten} = $api;
  const {_m0, _m1, _m2, _m3, _m4, _m5, _m6, _m7, _m8, _m9, _m10, _m11, _m12, _m13, _m14, _m15, _m16, _m17} = $ctx;
  return [api_element("div", {
    className: $cmp.computedDropdownTriggerClass,
    key: 0,
    on: {
      "click": _m0 || ($ctx._m0 = api_bind($cmp.handleTriggerClick))
    }
  }, [api_element("div", {
    className: $cmp.computedFormElementClass,
    attrs: {
      "role": "none"
    },
    key: 1
  }, [$cmp.hasInputPill ? api_custom_element("lightning-icon", lightning_icon__WEBPACK_IMPORTED_MODULE_2__.default, {
    classMap: {
      "slds-icon_container": true,
      "slds-combobox__input-entity-icon": true
    },
    props: {
      "iconName": $cmp.inputPill.iconName,
      "alternativeText": $cmp.inputPill.iconAlternativeText,
      "size": "x-small"
    },
    key: 2
  }, []) : null, !$cmp.isUserInputDisabled ? api_element("input", {
    className: $cmp.computedInputClass,
    attrs: {
      "id": api_scoped_id("combobox-input"),
      "type": "text",
      "role": "combobox",
      "aria-expanded": $cmp.computedAriaExpanded,
      "aria-haspopup": "listbox",
      "required": $cmp.required ? "" : null,
      "readonly": $cmp._inputAriaReadOnly ? "" : null,
      "autocomplete": $cmp.autocomplete,
      "data-value": $cmp.computedInputValue,
      "name": $cmp.name,
      "placeholder": $cmp.computedPlaceholder,
      "maxlength": $cmp.inputMaxlength,
      "disabled": $cmp.disabled ? "" : null,
      "aria-readonly": $cmp._inputAriaReadOnly,
      "aria-autocomplete": $cmp.computedAriaAutocomplete,
      "aria-owns": api_scoped_id("dropdown-element"),
      "aria-label": $cmp.inputLabel
    },
    props: {
      "value": $cmp.computedInputValue
    },
    key: 3,
    on: {
      "focus": _m1 || ($ctx._m1 = api_bind($cmp.handleFocus)),
      "select": _m2 || ($ctx._m2 = api_bind($cmp.handleInputSelect)),
      "change": _m3 || ($ctx._m3 = api_bind($cmp.handleTextChange)),
      "input": _m4 || ($ctx._m4 = api_bind($cmp.handleInput)),
      "keydown": _m5 || ($ctx._m5 = api_bind($cmp.handleInputKeyDown)),
      "blur": _m6 || ($ctx._m6 = api_bind($cmp.handleBlur))
    }
  }, []) : null, $cmp.isUserInputDisabled ? api_element("button", {
    className: $cmp.computedInputClass,
    attrs: {
      "id": api_scoped_id("combobox-button"),
      "type": "button",
      "aria-expanded": $cmp.computedAriaExpanded,
      "aria-haspopup": "listbox",
      "name": $cmp.name,
      "role": "combobox",
      "data-value": $cmp.computedInputValue,
      "disabled": $cmp.disabled ? "" : null,
      "aria-label": $cmp.computedButtonTriggerAriaLabel,
      "aria-required": $cmp.required
    },
    key: 4,
    on: {
      "focus": _m7 || ($ctx._m7 = api_bind($cmp.handleFocus)),
      "keydown": _m8 || ($ctx._m8 = api_bind($cmp.handleInputKeyDown)),
      "blur": _m9 || ($ctx._m9 = api_bind($cmp.handleBlur))
    }
  }, [api_element("span", {
    classMap: {
      "slds-truncate": true
    },
    key: 5
  }, [$cmp.computedInputValue ? api_text(api_dynamic_text($cmp.computedInputValue)) : null, !$cmp.computedInputValue ? api_text(api_dynamic_text($cmp.computedPlaceholder)) : null])]) : null, $cmp.isCloseVisible ? api_element("div", {
    classMap: {
      "slds-input__icon-group": true,
      "slds-input__icon-group_right": true
    },
    key: 6
  }, [api_element("button", {
    classMap: {
      "slds-button": true,
      "slds-button_icon": true,
      "slds-input__icon": true,
      "slds-input__icon_right": true
    },
    attrs: {
      "type": "button",
      "title": $cmp.i18n.pillCloseButtonAlternativeText
    },
    key: 7,
    on: {
      "click": _m10 || ($ctx._m10 = api_bind($cmp.handlePillRemove))
    }
  }, [api_custom_element("lightning-primitive-icon", lightning_primitiveIcon__WEBPACK_IMPORTED_MODULE_3__.default, {
    props: {
      "iconName": "utility:close",
      "variant": "bare",
      "svgClass": "slds-button__icon"
    },
    key: 8
  }, []), api_element("span", {
    classMap: {
      "slds-assistive-text": true
    },
    key: 9
  }, [api_text(api_dynamic_text($cmp.i18n.pillCloseButtonAlternativeText))])])]) : null, !$cmp.hasInputPill ? api_element("div", {
    classMap: {
      "slds-input__icon-group": true,
      "slds-input__icon-group_right": true
    },
    key: 10
  }, [$cmp.showInputActivityIndicator ? api_element("div", {
    classMap: {
      "slds-spinner": true,
      "slds-spinner_brand": true,
      "slds-spinner_x-small": true,
      "slds-input__spinner": true
    },
    key: 11
  }, [api_element("span", {
    classMap: {
      "slds-assistive-text": true
    },
    key: 12
  }, [api_text(api_dynamic_text($cmp.i18n.loadingText))]), api_element("div", {
    classMap: {
      "slds-spinner__dot-a": true
    },
    key: 13
  }, []), api_element("div", {
    classMap: {
      "slds-spinner__dot-b": true
    },
    key: 14
  }, [])]) : null, $cmp.inputIconName ? api_custom_element("lightning-icon", lightning_icon__WEBPACK_IMPORTED_MODULE_2__.default, {
    classMap: {
      "slds-input__icon": true,
      "slds-input__icon_right": true
    },
    props: {
      "alternativeText": $cmp.inputIconAlternativeText,
      "iconName": $cmp.inputIconName,
      "size": $cmp.inputIconSize
    },
    key: 15
  }, []) : null]) : null]), api_element("div", {
    className: $cmp.computedDropdownClass,
    attrs: {
      "id": api_scoped_id("dropdown-element"),
      "data-dropdown-element": "",
      "role": "listbox"
    },
    key: 16,
    on: {
      "scroll": _m11 || ($ctx._m11 = api_bind($cmp.handleListboxScroll)),
      "mousedown": _m12 || ($ctx._m12 = api_bind($cmp.handleDropdownMouseDown)),
      "mouseup": _m13 || ($ctx._m13 = api_bind($cmp.handleDropdownMouseUp)),
      "mouseleave": _m14 || ($ctx._m14 = api_bind($cmp.handleDropdownMouseLeave)),
      "click": _m15 || ($ctx._m15 = api_bind($cmp.handleOptionClick))
    }
  }, $cmp._hasDropdownOpened ? api_flatten([api_iterator($cmp._items, function (item) {
    return [!item.items ? api_custom_element("lightning-base-combobox-item", lightning_baseComboboxItem__WEBPACK_IMPORTED_MODULE_4__.default, {
      classMap: {
        "slds-media": true,
        "slds-listbox__option": true,
        "slds-media_center": true
      },
      attrs: {
        "data-item-id": item.id,
        "data-value": item.value
      },
      props: {
        "role": "option",
        "item": item,
        "id": api_scoped_id(item.id),
        "ariaChecked": item.checked
      },
      key: api_key(17, item.value),
      on: {
        "mouseenter": _m16 || ($ctx._m16 = api_bind($cmp.handleOptionMouseEnter))
      }
    }, []) : null, item.items ? api_element("ul", {
      attrs: {
        "role": "group",
        "aria-label": item.label
      },
      key: api_key(18, item.label)
    }, api_flatten([item.label ? api_element("li", {
      classMap: {
        "slds-listbox__item": true
      },
      attrs: {
        "role": "presentation"
      },
      key: 19
    }, [api_element("div", {
      classMap: {
        "slds-media": true,
        "slds-listbox__option": true,
        "slds-listbox__option_plain": true,
        "slds-media_small": true
      },
      attrs: {
        "role": "presentation"
      },
      key: 20
    }, [api_element("h3", {
      attrs: {
        "role": "presentation",
        "title": item.label
      },
      key: 21
    }, [api_text(api_dynamic_text(item.label))])])]) : null, api_iterator(item.items, function (groupItem) {
      return api_element("li", {
        classMap: {
          "slds-listbox__item": true
        },
        attrs: {
          "role": "presentation"
        },
        key: api_key(22, groupItem.value)
      }, [api_custom_element("lightning-base-combobox-item", lightning_baseComboboxItem__WEBPACK_IMPORTED_MODULE_4__.default, {
        classMap: {
          "slds-media": true,
          "slds-listbox__option": true,
          "slds-media_center": true
        },
        attrs: {
          "data-item-id": groupItem.id,
          "data-value": groupItem.value
        },
        props: {
          "role": "option",
          "item": groupItem,
          "id": api_scoped_id(groupItem.id),
          "ariaChecked": groupItem.checked
        },
        key: 23,
        on: {
          "mouseenter": _m17 || ($ctx._m17 = api_bind($cmp.handleOptionMouseEnter))
        }
      }, [])]);
    })])) : null];
  }), $cmp.showDropdownActivityIndicator ? api_element("div", {
    classMap: {
      "slds-listbox__item": true
    },
    attrs: {
      "role": "presentation"
    },
    key: 24
  }, [api_element("div", {
    classMap: {
      "slds-align_absolute-center": true,
      "slds-p-top_medium": true
    },
    key: 25
  }, [api_element("div", {
    classMap: {
      "slds-spinner": true,
      "slds-spinner_x-small": true,
      "slds-spinner_inline": true
    },
    attrs: {
      "role": "status"
    },
    key: 26
  }, [api_element("span", {
    classMap: {
      "slds-assistive-text": true
    },
    key: 27
  }, [api_text(api_dynamic_text($cmp.i18n.loadingText))]), api_element("div", {
    classMap: {
      "slds-spinner__dot-a": true
    },
    key: 28
  }, []), api_element("div", {
    classMap: {
      "slds-spinner__dot-b": true
    },
    key: 29
  }, [])])])]) : null, $cmp.showAttribution ? api_element("div", {
    classMap: {
      "slds-align_absolute-center": true
    },
    key: 30
  }, [api_element("img", {
    classMap: {
      "slds-inline-logo": true
    },
    attrs: {
      "src": $cmp.attributionLogoUrl,
      "alt": $cmp.attributionLogoAssistiveText,
      "title": $cmp.attributionLogoAssistiveText
    },
    key: 31
  }, [])]) : null]) : [])])];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_5__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_baseCombobox_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _baseCombobox_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_baseCombobox_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _baseCombobox_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-baseCombobox_baseCombobox"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/baseCombobox/baseCombobox.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/baseCombobox/baseCombobox.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _baseCombobox_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./baseCombobox.html */ "./node_modules/lightning-base-components/src/lightning/baseCombobox/baseCombobox.html");
/* harmony import */ var _salesforce_label_LightningCombobox_ariaSelectedOptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/label/LightningCombobox.ariaSelectedOptions */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.ariaSelectedOptions.js");
/* harmony import */ var _salesforce_label_LightningCombobox_deselectOptionKeyboard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @salesforce/label/LightningCombobox.deselectOptionKeyboard */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.deselectOptionKeyboard.js");
/* harmony import */ var _salesforce_label_LightningCombobox_loadingText__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @salesforce/label/LightningCombobox.loadingText */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.loadingText.js");
/* harmony import */ var _salesforce_label_LightningCombobox_pillCloseButtonAlternativeText__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @salesforce/label/LightningCombobox.pillCloseButtonAlternativeText */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.pillCloseButtonAlternativeText.js");
/* harmony import */ var _salesforce_label_LightningCombobox_placeholder__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @salesforce/label/LightningCombobox.placeholder */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.placeholder.js");
/* harmony import */ var _keyboard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./keyboard */ "./node_modules/lightning-base-components/src/lightning/baseCombobox/keyboard.js");
/* harmony import */ var _baseComboboxEvents__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./baseComboboxEvents */ "./node_modules/lightning-base-components/src/lightning/baseCombobox/baseComboboxEvents.js");
/* harmony import */ var lightning_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lightning/utils */ "./node_modules/lightning-base-components/src/lightning/utils/utils.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lightning/positionLibrary */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/positionLibrary.js");
/* harmony import */ var lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! lightning/inputUtils */ "./node_modules/lightning-base-components/src/lightning/inputUtils/inputUtils.js");










 // remove-next-line-for-c-namespace



const i18n = {
  ariaSelectedOptions: _salesforce_label_LightningCombobox_ariaSelectedOptions__WEBPACK_IMPORTED_MODULE_2__.default,
  deselectOptionKeyboard: _salesforce_label_LightningCombobox_deselectOptionKeyboard__WEBPACK_IMPORTED_MODULE_3__.default,
  pillCloseButtonAlternativeText: _salesforce_label_LightningCombobox_pillCloseButtonAlternativeText__WEBPACK_IMPORTED_MODULE_5__.default,
  loadingText: _salesforce_label_LightningCombobox_loadingText__WEBPACK_IMPORTED_MODULE_4__.default,
  placeholder: _salesforce_label_LightningCombobox_placeholder__WEBPACK_IMPORTED_MODULE_6__.default
};
const SMALL_MIN_HEIGHT = '2.25rem';
const MEDIUM_MIN_HEIGHT = '6.75rem';
/**
 * Breakpoint when viewport height doesn't fit 10 items in the dropdown
 * 834px is the height of 11 inch iPad in horizontal mode.
 */

const VIEWPORT_HEIGHT_SMALL = 834;
const ARIA_CONTROLS = 'aria-controls';
const ARIA_LABELLEDBY = 'aria-labelledby';
const ARIA_DESCRIBEDBY = 'aria-describedby';
const ARIA_LABEL = 'aria-label';
const ARIA_ACTIVEDESCENDANT = 'aria-activedescendant';
const ARIA_INVALID = 'aria-invalid';

class LightningBaseCombobox extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  /**
   * Controls auto-filling of the input. Set the attribute to pass
   * through autocomplete values to be interpreted by the browser.
   * By default autocomplete is off to avoid overlap of dropdowns.
   * @type {string}
   */
  get autocomplete() {
    return this._autocomplete;
  }

  set autocomplete(value) {
    this._autocomplete = value || 'off';
  }

  constructor() {
    super();
    this.inputText = '';
    this.inputIconName = 'utility:down';
    this.inputIconSize = 'x-small';
    this.inputIconAlternativeText = void 0;
    this.inputMaxlength = void 0;
    this.showInputActivityIndicator = false;
    this.required = false;
    this.placeholder = i18n.placeholder;
    this.inputLabel = void 0;
    this.name = void 0;
    this.inputPill = void 0;
    this.attributionLogoUrl = void 0;
    this.attributionLogoAssistiveText = void 0;
    this._showDropdownActivityIndicator = false;
    this._items = [];
    this._disabled = false;
    this._dropdownVisible = false;
    this._hasDropdownOpened = false;
    this._highlightedOptionElementId = null;
    this._variant = void 0;
    this._dropdownHeight = 'standard';
    this._readonly = false;
    this._logoLoaded = false;
    this._inputDescribedBy = [];
    this._inputAriaControls = void 0;
    this._activeElementDomId = void 0;
    this._autocomplete = 'off';
    this._dropdownAlignment = 'left';
    this.originDisableDefaultHighlight = void 0;
    this.privateDisableDefaultHighlight = void 0;
    this._editingMode = false;
    this._events = new _baseComboboxEvents__WEBPACK_IMPORTED_MODULE_8__.BaseComboboxEvents(this);
  }

  renderedCallback() {
    this.dispatchEvent(new CustomEvent('ready', {
      detail: {
        id: this.inputId,
        name: this.name
      }
    }));
    this.synchronizeA11y();
  }

  connectedCallback() {
    this.overrideDropdownAlignment();
    this.classList.add('slds-combobox_container');
    this._connected = true;
    this._keyboardInterface = this.dropdownKeyboardInterface();
  }

  disconnectedCallback() {
    this._connected = false;
    this._listBoxElementCache = undefined;
  }

  get dropdownAlignment() {
    return this._dropdownAlignment;
  }

  set dropdownAlignment(value) {
    this._dropdownAlignment = value;
  }

  get inputControlsElement() {
    return this._inputAriaControls;
  }

  set inputControlsElement(el) {
    this._inputAriaControls = el;
    this.synchronizeA11y();
  }

  get inputDescribedByElements() {
    return this._inputDescribedBy;
  }

  set inputDescribedByElements(elements) {
    if (Array.isArray(elements)) {
      this._inputDescribedBy = elements;
    } else {
      this._inputDescribedBy = [elements];
    }

    this.synchronizeA11y();
  }

  get inputLabelledByElement() {
    return this._inputLabelledBy;
  }

  set inputLabelledByElement(el) {
    this._inputLabelledBy = el;
    this.synchronizeA11y();
  }

  get inputLabelledById() {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.getRealDOMId)(this._inputLabelledBy);
  }

  get inputAriaControlsId() {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.getRealDOMId)(this._inputAriaControls);
  }

  get inputId() {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.getRealDOMId)(this.inputElement);
  }

  get computedAriaDescribedBy() {
    const ariaValues = [];

    this._inputDescribedBy.forEach(el => {
      ariaValues.push((0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.getRealDOMId)(el));
    });

    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.normalizeAriaAttribute)(ariaValues);
  }

  get dropdownHeight() {
    return this._dropdownHeight;
  }

  set dropdownHeight(height) {
    this._dropdownHeight = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.normalizeString)(height, {
      fallbackValue: 'standard',
      validValues: ['standard', 'small']
    });
  }

  get showDropdownActivityIndicator() {
    return this._showDropdownActivityIndicator;
  }

  set showDropdownActivityIndicator(value) {
    this._showDropdownActivityIndicator = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.normalizeBoolean)(value);

    if (this._connected) {
      if (this._showDropdownActivityIndicator) {
        if (this._shouldOpenDropDown) {
          this.openDropdownIfNotEmpty();
        }
      } else if (this._dropdownVisible && this.isDropdownEmpty) {
        this.closeDropdown();
      }
    }
  }

  get disabled() {
    return this._disabled;
  }

  set disabled(value) {
    this._disabled = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.normalizeBoolean)(value);

    if (this._disabled && this._dropdownVisible) {
      this.closeDropdown();
    }
  }

  get readOnly() {
    return this._readonly;
  }

  set readOnly(value) {
    this._readonly = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.normalizeBoolean)(value);

    if (this._readonly && this._dropdownVisible) {
      this.closeDropdown();
    }
  }

  get variant() {
    return this._variant || lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__.VARIANT.STANDARD;
  }

  set variant(value) {
    this._variant = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.normalizeString)(value, {
      fallbackValue: lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__.VARIANT.STANDARD,
      validValues: [lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__.VARIANT.STANDARD, 'lookup']
    });
  }

  get items() {
    return this._unprocessedItems;
  }

  set items(items = []) {
    this._unprocessedItems = items;
    this.updateItems(items);

    if (this._connected) {
      if (this._hasDropdownOpened) {
        // The dropdown has already been opened at least once, so process the items immediately
        this.updateItems(items);

        if (this._dropdownVisible) {
          // The dropdown is visible but there are no items to show, close it
          if (this.isDropdownEmpty) {
            this.closeDropdown();
          } else {
            // We have new items, update highlight
            this.highlightDefaultItem(); // Since the items have changed, the positioning should be recomputed
            // remove-next-line-for-c-namespace

            this.startDropdownAutoPositioning();
          }
        }
      }

      if (this._shouldOpenDropDown) {
        this.openDropdownIfNotEmpty();
      }
    }
  }
  /**
   * Whether disable the highlighting default item behavior
   *
   * @type {boolean}
   * @memberof LightningBaseCombobox
   */


  get disableDefaultHighlight() {
    return this.originDisableDefaultHighlight;
  }

  set disableDefaultHighlight(value) {
    this.originDisableDefaultHighlight = value;
    this.privateDisableDefaultHighlight = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.normalizeBoolean)(value);
  }

  highlightInputText() {
    if (this._connected) {
      // Safari has issues with invoking set selection range immediately in the 'focus' handler, instead
      // we'd be doing it in an animation frame. Remove the requestAnimationFrame once/if this is fixed
      // in Safari
      // eslint-disable-next-line @lwc/lwc/no-async-operation
      requestAnimationFrame(() => {
        const {
          inputElement
        } = this;
        inputElement.setSelectionRange(0, inputElement.value.length);
      });
    }
  }

  get showAttribution() {
    return this.attributionLogoUrl;
  }

  focus() {
    if (this._connected) {
      this.inputElement.focus();
    }
  }

  focusAndOpenDropdownIfNotEmpty() {
    if (this._connected) {
      if (!this._inputHasFocus) {
        this.focus();
      }

      this.openDropdownIfNotEmpty();
    }
  }

  blur() {
    if (this._connected) {
      this.inputElement.blur();
    }
  }

  synchronizeA11y() {
    const input = this.inputElement;

    if (!input) {
      return;
    }

    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.synchronizeAttrs)(input, {
      [ARIA_LABELLEDBY]: this.inputLabelledById,
      [ARIA_DESCRIBEDBY]: this.computedAriaDescribedBy,
      [ARIA_CONTROLS]: this.computedInputControls,
      [ARIA_LABEL]: this.isUserInputDisabled ? this.computedButtonTriggerAriaLabel : this.inputLabel,
      [ARIA_INVALID]: this.computedAriaInvalid,
      [ARIA_ACTIVEDESCENDANT]: this._editingMode ? undefined : this._activeElementDomId
    });
  }

  itemId(index) {
    return this.inputId + '-' + index;
  }

  itemIndexFromId(id) {
    // Extracts the index from an item id.
    return parseInt(id.substring(id.lastIndexOf('-') + 1), 10);
  }

  processItem(item) {
    const itemCopy = {}; // Supported item properties:
    // 'type' (string): option-inline, option-card
    // 'highlight' (boolean): Whether to highlight the item when dropdown opens
    // 'iconName': left icon name
    // 'iconSize': left icon size
    // 'iconAlternativeText': assistive text for the left icon
    // 'rightIconName': right icon name
    // 'rightIconSize': right icon size
    // 'rightIconAlternativeText': assistive text for the right icon
    // 'text': text to display
    // 'subText': sub-text to display (only option-card supports it)
    // 'value': value associated with the option
    // 'checked': has this been chosen by the user.  Different than selected as that is hover.

    itemCopy.type = item.type;
    itemCopy.iconName = item.iconName;
    itemCopy.iconSize = item.iconSize;
    itemCopy.iconAlternativeText = item.iconAlternativeText;
    itemCopy.rightIconName = item.rightIconName;
    itemCopy.rightIconSize = item.rightIconSize;
    itemCopy.rightIconAlternativeText = item.rightIconAlternativeText;
    itemCopy.text = item.text;
    itemCopy.subText = item.subText;
    itemCopy.value = item.value; // so that we do not get aria-checked="undefined"

    itemCopy.checked = item.checked || false; // extra metadata needed

    itemCopy.selectable = ['option-card', 'option-inline'].indexOf(item.type) >= 0;

    if (itemCopy.selectable) {
      itemCopy.index = this._selectableItems;
      itemCopy.id = this.itemId(itemCopy.index);
      this._selectableItems += 1;

      if (item.highlight) {
        this._highlightedItemIndex = itemCopy.index;
      }
    }

    return itemCopy;
  }

  get isAutocompleteEnabled() {
    return this.autocomplete && this.autocomplete !== 'off';
  }

  get isStandardVariant() {
    return this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__.VARIANT.STANDARD;
  }

  get isDefaultReadOnlyTypes() {
    return this.isStandardVariant || this.hasInputPill;
  }
  /**
   * Returns true for comboboxes that never allow user input
   * Used to determine if input or button should be rendered
   */


  get isUserInputDisabled() {
    return this.isStandardVariant && !this.isAutocompleteEnabled;
  }

  get _inputAriaReadOnly() {
    // For standard combobox, if the dropdown is open, we must make the input readonly,
    // so the user can type and search in the dropdown list
    // For grouped combobox, the input must remain editable because the search is done through
    // the input.
    if (this._dropdownVisible && this.isStandardVariant) {
      return true;
    }

    return (// we want Autocomplete to override the "default assumptions"
      // UNLESS the parent component deliberately determines it is readOnly
      this._readonly || !this.isAutocompleteEnabled && this.isDefaultReadOnlyTypes
    );
  }

  get computedAriaAutocomplete() {
    if (this.hasInputPill) {
      // no aria-autocomplete when pill is showing
      return null;
    }

    return this._inputAriaReadOnly ? 'none' : 'list';
  }

  get computedPlaceholder() {
    return this.hasInputPill ? this.inputPill.label : this.placeholder;
  }

  get computedInputValue() {
    return this.hasInputPill ? this.inputPill.label : this.inputText;
  }

  get computedButtonTriggerAriaLabel() {
    const label = this.inputLabel;
    const value = this.computedInputValue || this.computedPlaceholder;

    if (!label) {
      return value;
    }

    return `${label}, ${value}`;
  }

  handleListboxScroll(event) {
    // We don't want this to bubble up to the modal which due to event retargeting wouldn't be able
    // to know what is actually being scrolled and thus may lead to the scrolling of the modal
    event.stopPropagation();
    const listbox = event.target;
    const height = listbox.getBoundingClientRect().height;
    const maxScroll = listbox.scrollHeight - height; // Account for variation between browsers when it comes to calculation of margins/padding

    const buffer = 20;
    const bottomReached = listbox.scrollTop + buffer >= maxScroll;

    if (bottomReached) {
      this._events.dispatchEndReached();
    }
  }

  get listboxElement() {
    if (!this._listBoxElementCache) {
      this._listBoxElementCache = this.template.querySelector('[role="listbox"]');
    }

    return this._listBoxElementCache;
  }

  get computedUniqueElementId() {
    return this.inputId;
  }

  get computedUniqueDropdownElementId() {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.getRealDOMId)(this.template.querySelector('[data-dropdown-element]'));
  }

  get computedInputControls() {
    const ariaValues = [this.computedUniqueDropdownElementId];

    if (this.inputControlsElement) {
      ariaValues.push(this.inputAriaControlsId);
    }

    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.normalizeAriaAttribute)(ariaValues);
  }

  get i18n() {
    return i18n;
  }

  get computedDropdownTriggerClass() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_9__.classSet)('slds-combobox slds-dropdown-trigger slds-dropdown-trigger_click').add({
      'slds-is-open': this._dropdownVisible
    }).toString();
  }

  get computedDropdownClass() {
    const alignment = this.dropdownAlignment;
    let dropdownLengthClass = '';

    if (this._dropdownVisible) {
      if (this.dropdownHeight === 'standard') {
        // When viewport height is small(i.e. 11 inch iPad), there may not be enough space to fit 10 items
        // either on top or bottom of the input. Therefore show 7 items instead.
        if (window.innerHeight <= VIEWPORT_HEIGHT_SMALL) {
          dropdownLengthClass = 'slds-dropdown_length-with-icon-7';
        } else {
          dropdownLengthClass = 'slds-dropdown_length-with-icon-10';
        }
      } else if (this.dropdownHeight === 'small') {
        dropdownLengthClass = 'slds-dropdown_length-with-icon-5';
      }
    }

    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_9__.classSet)(`slds-listbox slds-listbox_vertical slds-dropdown slds-dropdown_fluid ${dropdownLengthClass}`).add({
      'slds-dropdown_left': alignment === 'left' || alignment === 'auto',
      'slds-dropdown_center': alignment === 'center',
      'slds-dropdown_right': alignment === 'right',
      'slds-dropdown_bottom': alignment === 'bottom-center',
      'slds-dropdown_bottom slds-dropdown_right slds-dropdown_bottom-right': alignment === 'bottom-right',
      'slds-dropdown_bottom slds-dropdown_left slds-dropdown_bottom-left': alignment === 'bottom-left'
    }).toString();
  }

  get computedInputClass() {
    const classes = (0,lightning_utils__WEBPACK_IMPORTED_MODULE_9__.classSet)('slds-combobox__input');
    classes.add({
      'slds-input_faux': this.isUserInputDisabled,
      //rendering button
      'slds-input': !this.isUserInputDisabled,
      //rendering input
      'slds-is-disabled': this.disabled,
      'slds-combobox__input-value': this.computedInputValue,
      'slds-input-has-icon_group-right': !this.computedInputValue && this.showInputActivityIndicator
    });
    return classes.toString();
  }

  get _shouldOpenDropDown() {
    // If items were empty and through a user interaction the dropdown should have opened, and if the
    // component still has the focus we'll open it on items update instead.
    return !this.dropdownDisabled && this._inputHasFocus && this._requestedDropdownOpen;
  }

  get dropdownDisabled() {
    return this.readOnly || this.disabled;
  }

  handleOptionClick(event) {
    if (event.target.hasAttribute('aria-selected')) {
      event.stopPropagation();
      event.preventDefault();
      this.selectOptionAndCloseDropdown(event.target);
    }
  }

  handleOptionMouseEnter(event) {
    if (event.target.hasAttribute('aria-selected')) {
      this._editingMode = false;
      this.highlightOption(event.target);
    }
  }

  handleDropdownMouseLeave() {
    this.removeHighlight(); // This is to account for when a user makes a mousedown press on the dropdown and then leaves the dropdown
    // area, it would leave the dropdown open even though the focus would no longer be on the input

    if (!this._inputHasFocus) {
      this.closeDropdown();
    }
  }

  handleTriggerClick(event) {
    event.stopPropagation();
    this.allowBlur();

    if (this.dropdownDisabled) {
      return;
    }

    if (!this.hasInputPill) {
      // toggle dropdown only for readonly combobox, only open the dropdown otherwise
      // if it's not already opened.
      if (this._inputAriaReadOnly) {
        if (this._dropdownVisible) {
          this.closeDropdown();
        } else {
          this.openDropdownIfNotEmpty();
        }
      } else {
        this.openDropdownIfNotEmpty();
      }

      this.inputElement.focus();
    }
  }

  handlePillKeyDown(event) {
    if (this.dropdownDisabled) {
      return;
    } // 'Del' is IE11 specific, remove once IE11 is no longer supported


    if (event.key === 'Delete' || event.key === 'Del' || event.key === 'Backspace') {
      this.handlePillRemove();
    }
  }

  handleInputKeyDown(event) {
    if (this.dropdownDisabled) {
      return;
    } // For details: https://developer.mozilla.org/en-US/docs/Web/API/Element/keydown_event


    if (event.isComposing || event.keyCode === 229) {
      return;
    }

    if (this.hasInputPill) {
      this.handlePillKeyDown(event);
    } else {
      (0,_keyboard__WEBPACK_IMPORTED_MODULE_7__.handleKeyDownOnInput)({
        event,
        currentIndex: this.getCurrentHighlightedOptionIndex(),
        dropdownInterface: this._keyboardInterface
      });
    }
  }

  handleTextChange(event) {
    const inputValue = event.target.value;

    if (this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__.VARIANT.STANDARD) {
      let selectedItem;

      const itemByValue = this._unprocessedItems.find(item => item.value === inputValue);

      selectedItem = itemByValue;

      if (!itemByValue) {
        const itemByLabel = this._unprocessedItems.find(item => item.value && item.text === inputValue);

        selectedItem = itemByLabel;
      }

      if (selectedItem) {
        this._events.dispatchSelect(selectedItem.value);
      }
    } else {
      this._events.dispatchTextChange(inputValue);
    }
  }

  handleFocus() {
    this._inputHasFocus = true;

    this._events.dispatchFocus();
  }

  handleInput(event) {
    // Do not dispatch any events if the pill is showing, this is specifically an IE11 problem,
    // which fires an 'input' event when the placeholder on an input is changed (which is what happens when
    // the pill is shown). The check can be removed when IE11 is no longer supported.
    if (!this.hasInputPill) {
      this._events.dispatchTextInput(event.target.value);
    }
  }

  handleBlur() {
    this._inputHasFocus = false;

    if (this._cancelBlur) {
      return;
    }

    this.closeDropdown();

    this._events.dispatchBlur();
  }

  handleDropdownMouseDown(event) {
    const mainButton = 0;

    if (event.button === mainButton) {
      this.cancelBlur();
    }
  }

  handleDropdownMouseUp() {
    // We need this to make sure that if a scrollbar is being dragged with the mouse, upon release
    // of the drag we allow blur, otherwise the dropdown would not close on blur since we'd have cancel blur
    // set
    this.allowBlur();
  }

  highlightOption(option) {
    this.removeHighlight();

    if (option) {
      option.highlight();
      this._highlightedOptionElement = option;
      this._highlightedOptionElementId = option.getAttribute('data-item-id'); // active element is a component id getter works properly

      this._activeElementDomId = option.id;
    }

    this.synchronizeA11y();
  }

  highlightOptionAndScrollIntoView(optionElement) {
    if (this._selectableItems.length === 0 || !optionElement) {
      return;
    }

    this.highlightOption(optionElement);
    scrollIntoViewIfNeeded(optionElement, this.listboxElement);
  }

  removeHighlight() {
    const option = this._highlightedOptionElement;

    if (option) {
      option.removeHighlight();
      this._highlightedOptionElement = null;
      this._highlightedOptionElementId = null;
      this._activeElementDomId = null;
    }
  }

  selectOptionAndCloseDropdown(optionElement) {
    this.closeDropdown();
    this.inputElement.focus();
    const selectedValue = optionElement.getAttribute('data-value');

    this._events.dispatchSelect(selectedValue);
  }

  handleInputSelect(event) {
    event.stopPropagation();
  }

  openDropdownIfNotEmpty() {
    if (this._dropdownVisible) {
      // Already visible
      return;
    }

    const noOptions = !Array.isArray(this.items) || this.items.length === 0; // Do not dispatch the open request event if there already was a request to open

    if (noOptions && !this._requestedDropdownOpen) {
      // Dispatch dropdown open request
      this._events.dispatchDropdownOpenRequest();
    } // Do not open if there's nothing to show in the dropdown (eg. no options and no dropdown activity indicator)


    if (this.isDropdownEmpty) {
      // We use this attribute to flag whether an attempt has been made via user-interaction
      // to open the dropdown
      this._requestedDropdownOpen = true;
      return;
    }

    if (!this._hasDropdownOpened) {
      if (this._unprocessedItems) {
        this.updateItems(this._unprocessedItems);
      }

      this._hasDropdownOpened = true;
    }

    this._requestedDropdownOpen = false;
    this._dropdownVisible = true; // remove-next-line-for-c-namespace

    this.startDropdownAutoPositioning();
    this.highlightDefaultItem();

    this._events.dispatchDropdownOpen();
  }

  closeDropdown() {
    if (!this._dropdownVisible) {
      // Already closed
      return;
    } // remove-next-line-for-c-namespace


    this.stopDropdownPositioning();
    this.removeHighlight();
    this._dropdownVisible = false;
  }

  findOptionElementByIndex(index) {
    return this.template.querySelector(`[data-item-id="${this.itemId(index)}"]`);
  }

  allowBlur() {
    this._cancelBlur = false;
  }

  cancelBlur() {
    this._cancelBlur = true;
  }

  getCurrentHighlightedOptionIndex() {
    if (this._highlightedOptionElementId && this._highlightedOptionElementId.length > 0) {
      return this.itemIndexFromId(this._highlightedOptionElementId);
    }

    return -1;
  }

  get inputElement() {
    return this.template.querySelector('.slds-combobox__input');
  } // remove-next-line-for-c-namespace


  startDropdownAutoPositioning() {
    if (this.dropdownAlignment !== 'auto') {
      return;
    }

    if (!this._autoPosition) {
      this._autoPosition = new lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_11__.AutoPosition(this);
    }

    this._autoPosition.start({
      target: () => this.inputElement,
      element: () => this.template.querySelector('div.slds-dropdown'),
      align: {
        horizontal: lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_11__.Direction.Left,
        vertical: lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_11__.Direction.Top
      },
      targetAlign: {
        horizontal: lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_11__.Direction.Left,
        vertical: lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_11__.Direction.Bottom
      },
      autoFlip: true,
      alignWidth: true,
      autoShrinkHeight: true,
      minHeight: this._selectableItems < 3 ? SMALL_MIN_HEIGHT : MEDIUM_MIN_HEIGHT,
      keepInViewport: true
    });
  } // remove-next-line-for-c-namespace


  stopDropdownPositioning() {
    if (this._autoPosition) {
      this._autoPosition.stop();
    }
  }

  get hasInputPill() {
    return this.inputPill && Object.keys(this.inputPill).length > 0;
  }

  get isCloseVisible() {
    if (this.disabled) {
      return false;
    }

    return this.hasInputPill;
  }

  handlePillRemove() {
    this.inputElement.focus();

    this._events.dispatchPillRemove(this.inputPill);
  }

  get computedFormElementClass() {
    const hasIcon = this.hasInputPill && this.inputPill.iconName;
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_9__.classSet)('slds-combobox__form-element slds-input-has-icon').add({
      'slds-input-has-icon_right': !hasIcon,
      'slds-input-has-icon_left-right': hasIcon
    }).toString();
  }

  get computedAriaExpanded() {
    return this._dropdownVisible ? 'true' : 'false';
  }

  updateItems(items) {
    if (!items) {
      return;
    }

    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.assert)(Array.isArray(items), '"items" must be an array');
    this._selectableItems = 0;
    this._highlightedItemIndex = 0;
    this._items = items.map(item => {
      if (item.items) {
        // This is a group
        const groupCopy = {
          label: item.label
        };
        groupCopy.items = item.items.map(groupItem => {
          return this.processItem(groupItem);
        });
        return groupCopy;
      }

      return this.processItem(item);
    });
  }

  highlightDefaultItem() {
    this.removeHighlight();

    if (!this.privateDisableDefaultHighlight && !this._editingMode) {
      // eslint-disable-next-line @lwc/lwc/no-async-operation
      requestAnimationFrame(() => {
        this.highlightOptionAndScrollIntoView(this.findOptionElementByIndex(this._highlightedItemIndex));
      });
    }
  }

  get isDropdownEmpty() {
    // If the activity indicator is showing then it's not empty
    return !this.showDropdownActivityIndicator && (!Array.isArray(this.items) || this.items.length === 0);
  }

  dropdownKeyboardInterface() {
    const that = this;
    return {
      getTotalOptions() {
        return that._selectableItems;
      },

      selectByIndex(index) {
        that.selectOptionAndCloseDropdown(that.findOptionElementByIndex(index));
      },

      highlightOptionWithIndex(index) {
        that.highlightOptionAndScrollIntoView(that.findOptionElementByIndex(index));
      },

      isInputReadOnly() {
        return that._inputAriaReadOnly;
      },

      shouldPreventInputDeletion() {
        return that.isAutocompleteEnabled && that.isDefaultReadOnlyTypes;
      },

      highlightOptionWithText(currentIndex, text) {
        // This only supports a flat structure, groups are not supported
        for (let index = currentIndex + 1; index < that._items.length; index++) {
          const option = that._items[index];

          if (option.selectable && option.text && option.text.toLowerCase().indexOf(text.toLowerCase()) === 0) {
            that.highlightOptionAndScrollIntoView(that.findOptionElementByIndex(index));
            return;
          }
        }

        for (let index = 0; index < currentIndex; index++) {
          const option = that._items[index];

          if (option.selectable && option.text && option.text.toLowerCase().indexOf(text.toLowerCase()) === 0) {
            that.highlightOptionAndScrollIntoView(that.findOptionElementByIndex(index));
            return;
          }
        }
      },

      isDropdownVisible() {
        return that._dropdownVisible;
      },

      openDropdownIfNotEmpty() {
        that.openDropdownIfNotEmpty();
      },

      closeDropdown() {
        that.closeDropdown();
      },

      setEditingMode(isEditing) {
        that._editingMode = isEditing;

        if (isEditing) {
          that._activeElementDomId = null;
        }

        that.synchronizeA11y();
      }

    };
  }

  get computedAriaInvalid() {
    const ariaInvalid = this.template.host.getAttribute('data-aria-invalid');
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.computeAriaInvalid)(ariaInvalid, true);
  }

  isShadowRoot(node) {
    return node && node.nodeType === 11;
  }

  parentNodeContainsClass(host, className) {
    let element = host;

    while (element.parentNode) {
      element = this.isShadowRoot(element.parentNode) ? element.parentNode.host : element.parentNode;

      if (element.classList && element.classList.contains(className)) {
        return true;
      }
    }

    return false;
  }

  overrideDropdownAlignment() {
    let isModal = this.parentNodeContainsClass(this.template.host, 'slds-modal');

    if (isModal) {
      this._dropdownAlignment = 'auto';
    }
  }

}

LightningBaseCombobox.delegatesFocus = true;

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningBaseCombobox, {
  publicProps: {
    autocomplete: {
      config: 3
    },
    inputText: {
      config: 0
    },
    inputIconName: {
      config: 0
    },
    inputIconSize: {
      config: 0
    },
    inputIconAlternativeText: {
      config: 0
    },
    inputMaxlength: {
      config: 0
    },
    showInputActivityIndicator: {
      config: 0
    },
    required: {
      config: 0
    },
    placeholder: {
      config: 0
    },
    inputLabel: {
      config: 0
    },
    name: {
      config: 0
    },
    inputPill: {
      config: 0
    },
    attributionLogoUrl: {
      config: 0
    },
    attributionLogoAssistiveText: {
      config: 0
    },
    dropdownAlignment: {
      config: 3
    },
    inputControlsElement: {
      config: 3
    },
    inputDescribedByElements: {
      config: 3
    },
    inputLabelledByElement: {
      config: 3
    },
    dropdownHeight: {
      config: 3
    },
    showDropdownActivityIndicator: {
      config: 3
    },
    disabled: {
      config: 3
    },
    readOnly: {
      config: 3
    },
    variant: {
      config: 3
    },
    items: {
      config: 3
    },
    disableDefaultHighlight: {
      config: 3
    }
  },
  publicMethods: ["highlightInputText", "focus", "focusAndOpenDropdownIfNotEmpty", "blur"],
  track: {
    _showDropdownActivityIndicator: 1,
    _items: 1,
    _disabled: 1,
    _dropdownVisible: 1,
    _hasDropdownOpened: 1,
    _highlightedOptionElementId: 1,
    _variant: 1,
    _dropdownHeight: 1,
    _readonly: 1,
    _logoLoaded: 1
  },
  fields: ["_inputDescribedBy", "_inputAriaControls", "_activeElementDomId", "_autocomplete", "_dropdownAlignment", "originDisableDefaultHighlight", "privateDisableDefaultHighlight", "_editingMode"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningBaseCombobox, {
  tmpl: _baseCombobox_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

function scrollIntoViewIfNeeded(element, scrollingParent) {
  const parentRect = scrollingParent.getBoundingClientRect();
  const findMeRect = element.getBoundingClientRect();

  if (findMeRect.top < parentRect.top) {
    if (element.offsetTop + findMeRect.height < parentRect.height) {
      // If element fits by scrolling to the top, then do that
      scrollingParent.scrollTop = 0;
    } else {
      // Otherwise, top align the element
      scrollingParent.scrollTop = element.offsetTop;
    }
  } else if (findMeRect.bottom > parentRect.bottom) {
    // bottom align the element
    scrollingParent.scrollTop += findMeRect.bottom - parentRect.bottom;
  }
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/baseCombobox/baseComboboxEvents.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/baseCombobox/baseComboboxEvents.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseComboboxEvents": () => (/* binding */ BaseComboboxEvents)
/* harmony export */ });
class BaseComboboxEvents {
  constructor(baseCombobox) {
    this.dispatchEvent = baseCombobox.dispatchEvent.bind(baseCombobox);
  }

  dispatchPillRemove(pill) {
    this.dispatchEvent(new CustomEvent('pillremove', {
      detail: {
        item: pill
      }
    }));
  }

  dispatchEndReached() {
    this.dispatchEvent(new CustomEvent('endreached'));
  }

  dispatchFocus() {
    this.dispatchEvent(new CustomEvent('focus'));
  }

  dispatchBlur() {
    this.dispatchEvent(new CustomEvent('blur'));
  }

  dispatchTextInput(text) {
    this.dispatchEvent(new CustomEvent('textinput', {
      detail: {
        text
      }
    }));
  }

  dispatchTextChange(text) {
    this.dispatchEvent(new CustomEvent('textchange', {
      detail: {
        text
      }
    }));
  }

  dispatchSelect(value) {
    this.dispatchEvent(new CustomEvent('select', {
      detail: {
        value
      }
    }));
  }

  dispatchDropdownOpen() {
    this.dispatchEvent(new CustomEvent('dropdownopen'));
  }

  dispatchDropdownOpenRequest() {
    this.dispatchEvent(new CustomEvent('dropdownopenrequest'));
  }

}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/baseCombobox/keyboard.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/baseCombobox/keyboard.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "handleKeyDownOnInput": () => (/* binding */ handleKeyDownOnInput)
/* harmony export */ });
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");


function preventDefaultAndStopPropagation(event) {
  event.preventDefault();
  event.stopPropagation();
}

function handleEnterKey({
  event,
  currentIndex,
  dropdownInterface
}) {
  preventDefaultAndStopPropagation(event);

  if (dropdownInterface.isDropdownVisible() && currentIndex >= 0) {
    dropdownInterface.selectByIndex(currentIndex);
  } else {
    dropdownInterface.openDropdownIfNotEmpty();
  }
}

function handlePageUpOrDownKey({
  event,
  currentIndex,
  dropdownInterface
}) {
  preventDefaultAndStopPropagation(event);

  if (!dropdownInterface.isDropdownVisible()) {
    dropdownInterface.openDropdownIfNotEmpty();
  }

  const pageUpDownOptionSkipCount = 10;

  if (dropdownInterface.getTotalOptions() > 0) {
    // eslint-disable-next-line @lwc/lwc/no-async-operation
    requestAnimationFrame(() => {
      let highlightIndex = 0;

      if (event.key === 'PageUp') {
        highlightIndex = Math.max(currentIndex - pageUpDownOptionSkipCount, 0);
      } else {
        // Jump 10 options down
        highlightIndex = Math.min(currentIndex + pageUpDownOptionSkipCount, dropdownInterface.getTotalOptions() - 1);
      }

      dropdownInterface.highlightOptionWithIndex(highlightIndex);
    });
  }
}

function handleHomeOrEndKey({
  event,
  dropdownInterface
}) {
  // If not a read-only input we want the default browser behaviour
  if (!dropdownInterface.isInputReadOnly()) {
    return;
  }

  preventDefaultAndStopPropagation(event);

  if (!dropdownInterface.isDropdownVisible()) {
    dropdownInterface.openDropdownIfNotEmpty();
  }

  if (dropdownInterface.getTotalOptions() > 0) {
    // eslint-disable-next-line @lwc/lwc/no-async-operation
    requestAnimationFrame(() => {
      const highlightIndex = event.key === 'Home' ? 0 : dropdownInterface.getTotalOptions() - 1;
      dropdownInterface.highlightOptionWithIndex(highlightIndex);
    });
  }
}

function handleUpOrDownKey({
  event,
  currentIndex,
  dropdownInterface
}) {
  preventDefaultAndStopPropagation(event);

  if (!dropdownInterface.isDropdownVisible()) {
    dropdownInterface.openDropdownIfNotEmpty();
  }

  const isUpKey = event.key === 'Up' || event.key === 'ArrowUp';
  let nextIndex;

  if (currentIndex >= 0) {
    nextIndex = isUpKey ? currentIndex - 1 : currentIndex + 1;

    if (nextIndex >= dropdownInterface.getTotalOptions()) {
      nextIndex = 0;
    } else if (nextIndex < 0) {
      nextIndex = dropdownInterface.getTotalOptions() - 1;
    }
  } else {
    nextIndex = isUpKey ? dropdownInterface.getTotalOptions() - 1 : 0;
  }

  if (dropdownInterface.getTotalOptions() > 0) {
    // eslint-disable-next-line @lwc/lwc/no-async-operation
    requestAnimationFrame(() => {
      dropdownInterface.highlightOptionWithIndex(nextIndex);
    });
  }
}

function handleEscapeOrTabKey({
  event,
  dropdownInterface
}) {
  if (dropdownInterface.isDropdownVisible()) {
    event.stopPropagation();
    dropdownInterface.closeDropdown();
  }
}

function handleDeletionKeys({
  event,
  dropdownInterface
}) {
  if (dropdownInterface.shouldPreventInputDeletion()) {
    event.preventDefault();
  }
}

function handleTypedCharacters({
  event,
  currentIndex,
  dropdownInterface
}) {
  if (event.key && event.key.length > 1) {
    // not a printable character
    return;
  }

  if (!dropdownInterface.isDropdownVisible()) {
    dropdownInterface.openDropdownIfNotEmpty();
  }

  if (dropdownInterface.isInputReadOnly()) {
    // The element should be read only, it's a work-around for IE11 as it will still make editable an input
    // that has focus and was dynamically changed to be readonly on focus change. Remove once we no longer
    // support IE11
    event.preventDefault(); // eslint-disable-next-line @lwc/lwc/no-async-operation

    requestAnimationFrame(() => (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__.runActionOnBufferedTypedCharacters)(event, dropdownInterface.highlightOptionWithText.bind(this, currentIndex || 0)));
  }
}

const eventKeyToHandlerMap = {
  Enter: handleEnterKey,
  PageUp: handlePageUpOrDownKey,
  PageDown: handlePageUpOrDownKey,
  Home: handleHomeOrEndKey,
  End: handleHomeOrEndKey,
  Down: handleUpOrDownKey,
  // IE11/Edge specific
  Up: handleUpOrDownKey,
  // IE11/Edge specific
  ArrowUp: handleUpOrDownKey,
  ArrowDown: handleUpOrDownKey,
  Esc: handleEscapeOrTabKey,
  // IE11/Edge specific
  Escape: handleEscapeOrTabKey,
  Tab: handleEscapeOrTabKey,
  Backspace: handleDeletionKeys,
  Delete: handleDeletionKeys
};
const NON_EDITING_KEYS = ['Enter', 'PageUp', 'PageDown', 'Home', 'End', 'Down', 'Up', 'ArrowUp', 'ArrowDown', 'Esc', 'Escape', 'Tab'];

const isAnEditingKey = key => {
  return !NON_EDITING_KEYS.includes(key);
};

const handleEditingMode = ({
  event,
  dropdownInterface
}) => {
  if (isAnEditingKey(event.key)) {
    dropdownInterface.setEditingMode(true);
  } else {
    dropdownInterface.setEditingMode(false);
  }
};

function handleKeyDownOnInput({
  event,
  currentIndex,
  dropdownInterface
}) {
  const parameters = {
    event,
    currentIndex,
    dropdownInterface
  };

  if (eventKeyToHandlerMap[event.key]) {
    eventKeyToHandlerMap[event.key](parameters);
  } else {
    handleTypedCharacters(parameters);
  }

  handleEditingMode(parameters);
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/baseComboboxFormattedText/baseComboboxFormattedText.html":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/baseComboboxFormattedText/baseComboboxFormattedText.html ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _baseComboboxFormattedText_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baseComboboxFormattedText.css */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var _baseComboboxFormattedText_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./baseComboboxFormattedText.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");





function tmpl($api, $cmp, $slotset, $ctx) {
  const {k: api_key, d: api_dynamic_text, t: api_text, h: api_element, i: api_iterator, f: api_flatten} = $api;
  return api_flatten([$cmp.hasParts ? api_iterator($cmp.text, function (item) {
    return [item.part.highlight ? api_element("strong", {
      key: api_key(0, item.key)
    }, [api_text(api_dynamic_text(item.part.text))]) : null, !item.part.highlight ? api_text(api_dynamic_text(item.part.text)) : null];
  }) : [], !$cmp.hasParts ? api_text(api_dynamic_text($cmp.text)) : null]);
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_2__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_baseComboboxFormattedText_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _baseComboboxFormattedText_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_baseComboboxFormattedText_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _baseComboboxFormattedText_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-baseComboboxFormattedText_baseComboboxFormattedText"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/baseComboboxFormattedText/baseComboboxFormattedText.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/baseComboboxFormattedText/baseComboboxFormattedText.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _baseComboboxFormattedText_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./baseComboboxFormattedText.html */ "./node_modules/lightning-base-components/src/lightning/baseComboboxFormattedText/baseComboboxFormattedText.html");



class LightningBaseComboboxFormattedText extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  constructor(...args) {
    super(...args);
    this._text = '';
    this.hasParts = void 0;
  }

  get text() {
    return this._text;
  }

  set text(value) {
    this.hasParts = Array.isArray(value) && value.length > 0;

    if (this.hasParts) {
      // Generate keys for LWC DOM
      this._text = value.map((part, i) => ({
        part,
        key: i
      }));
    } else {
      this._text = value;
    }
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningBaseComboboxFormattedText, {
  publicProps: {
    text: {
      config: 3
    }
  },
  track: {
    _text: 1,
    hasParts: 1
  }
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningBaseComboboxFormattedText, {
  tmpl: _baseComboboxFormattedText_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/baseComboboxItem/baseComboboxItem.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/baseComboboxItem/baseComboboxItem.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _baseComboboxItem_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./baseComboboxItem.html */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var _card_html__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./card.html */ "./node_modules/lightning-base-components/src/lightning/baseComboboxItem/card.html");
/* harmony import */ var _inline_html__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./inline.html */ "./node_modules/lightning-base-components/src/lightning/baseComboboxItem/inline.html");





class LightningBaseComboboxItem extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  constructor(...args) {
    super(...args);
    this.item = {};
  }

  connectedCallback() {
    // We want to make sure that the item has 'aria-selected' if it's selectable
    if (this.item.selectable) {
      this.setAttribute('aria-selected', 'false');
    }

    if (this.item.type === 'option-inline') {
      this.classList.add('slds-media_small', 'slds-listbox__option_plain');
    } else {
      this.classList.add('slds-listbox__option_entity');
    }
  }

  get textHasParts() {
    const text = this.item.text;
    return text && Array.isArray(text) && text.length > 0;
  }

  get subTextHasParts() {
    const subText = this.item.subText;
    return subText && Array.isArray(subText) && subText.length > 0;
  } // Return html based on the specified item type


  render() {
    if (this.item.type === 'option-card') {
      return _card_html__WEBPACK_IMPORTED_MODULE_2__.default;
    }

    return _inline_html__WEBPACK_IMPORTED_MODULE_3__.default;
  }

  highlight() {
    this.toggleHighlight(true);
  }

  removeHighlight() {
    this.toggleHighlight(false);
  }

  toggleHighlight(highlighted) {
    if (this.item.selectable) {
      this.setAttribute('aria-selected', highlighted ? 'true' : 'false');
      this.classList.toggle('slds-has-focus', highlighted);
    }
  } // Parts are needed for highlighting


  partsToText(parts) {
    if (parts && Array.isArray(parts) && parts.length > 0) {
      return parts.map(part => part.text).join('');
    }

    return parts;
  }

  get rightIconSize() {
    return this.item.rightIconSize || 'small';
  }

  get iconSize() {
    return this.item.iconSize || 'small';
  }

  get text() {
    return this.partsToText(this.item.text);
  }

  get subText() {
    return this.partsToText(this.item.subText);
  }

  get hasSubText() {
    const subText = this.item.subText;
    return subText && subText.length > 0;
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningBaseComboboxItem, {
  publicProps: {
    item: {
      config: 0
    }
  },
  publicMethods: ["highlight", "removeHighlight"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningBaseComboboxItem, {
  tmpl: _baseComboboxItem_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/baseComboboxItem/card.html":
/*!*****************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/baseComboboxItem/card.html ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _card_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./card.css */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var _card_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./card.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lightning_icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/icon */ "./node_modules/lightning-base-components/src/lightning/icon/icon.js");
/* harmony import */ var lightning_baseComboboxFormattedText__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/baseComboboxFormattedText */ "./node_modules/lightning-base-components/src/lightning/baseComboboxFormattedText/baseComboboxFormattedText.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");







function tmpl($api, $cmp, $slotset, $ctx) {
  const {c: api_custom_element, h: api_element, d: api_dynamic_text, t: api_text} = $api;
  return [api_element("span", {
    classMap: {
      "slds-media__figure": true,
      "slds-listbox__option-icon": true
    },
    key: 0
  }, [$cmp.item.iconName ? api_custom_element("lightning-icon", lightning_icon__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "size": $cmp.iconSize,
      "alternativeText": $cmp.item.iconAlternativeText,
      "iconName": $cmp.item.iconName
    },
    key: 1
  }, []) : null]), api_element("span", {
    classMap: {
      "slds-media__body": true
    },
    key: 2
  }, [api_element("span", {
    classMap: {
      "slds-listbox__option-text": true,
      "slds-listbox__option-text_entity": true
    },
    key: 3
  }, [!$cmp.textHasParts ? api_element("span", {
    classMap: {
      "slds-truncate": true
    },
    attrs: {
      "title": $cmp.item.text
    },
    key: 4
  }, [api_text(api_dynamic_text($cmp.item.text))]) : null, $cmp.textHasParts ? api_custom_element("lightning-base-combobox-formatted-text", lightning_baseComboboxFormattedText__WEBPACK_IMPORTED_MODULE_3__.default, {
    classMap: {
      "slds-truncate": true
    },
    props: {
      "title": $cmp.text,
      "text": $cmp.item.text
    },
    key: 5
  }, []) : null]), $cmp.hasSubText ? api_element("span", {
    classMap: {
      "slds-listbox__option-meta": true,
      "slds-listbox__option-meta_entity": true
    },
    key: 6
  }, [!$cmp.subTextHasParts ? api_element("span", {
    classMap: {
      "slds-truncate": true
    },
    attrs: {
      "title": $cmp.item.subText
    },
    key: 7
  }, [api_text(api_dynamic_text($cmp.item.subText))]) : null, $cmp.subTextHasParts ? api_custom_element("lightning-base-combobox-formatted-text", lightning_baseComboboxFormattedText__WEBPACK_IMPORTED_MODULE_3__.default, {
    classMap: {
      "slds-truncate": true
    },
    props: {
      "title": $cmp.subText,
      "text": $cmp.item.subText
    },
    key: 8
  }, []) : null]) : null]), $cmp.item.rightIconName ? api_element("span", {
    classMap: {
      "slds-media__figure": true,
      "slds-media__figure_reverse": true
    },
    key: 9
  }, [api_custom_element("lightning-icon", lightning_icon__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "size": $cmp.rightIconSize,
      "alternativeText": $cmp.item.rightIconAlternativeText,
      "iconName": $cmp.item.rightIconName
    },
    key: 10
  }, [])]) : null];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_4__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_card_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _card_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_card_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _card_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-baseComboboxItem_card"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/baseComboboxItem/inline.html":
/*!*******************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/baseComboboxItem/inline.html ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _inline_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./inline.css */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var _inline_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inline.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lightning_icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/icon */ "./node_modules/lightning-base-components/src/lightning/icon/icon.js");
/* harmony import */ var lightning_baseComboboxFormattedText__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/baseComboboxFormattedText */ "./node_modules/lightning-base-components/src/lightning/baseComboboxFormattedText/baseComboboxFormattedText.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");







function tmpl($api, $cmp, $slotset, $ctx) {
  const {c: api_custom_element, h: api_element, d: api_dynamic_text, t: api_text} = $api;
  return [api_element("span", {
    classMap: {
      "slds-media__figure": true,
      "slds-listbox__option-icon": true
    },
    key: 0
  }, [$cmp.item.iconName ? api_custom_element("lightning-icon", lightning_icon__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "alternativeText": $cmp.item.iconAlternativeText,
      "iconName": $cmp.item.iconName,
      "size": "x-small"
    },
    key: 1
  }, []) : null]), api_element("span", {
    classMap: {
      "slds-media__body": true
    },
    key: 2
  }, [!$cmp.textHasParts ? api_element("span", {
    classMap: {
      "slds-truncate": true
    },
    attrs: {
      "title": $cmp.item.text
    },
    key: 3
  }, [api_text(api_dynamic_text($cmp.item.text))]) : null, $cmp.textHasParts ? api_custom_element("lightning-base-combobox-formatted-text", lightning_baseComboboxFormattedText__WEBPACK_IMPORTED_MODULE_3__.default, {
    classMap: {
      "slds-truncate": true
    },
    props: {
      "text": $cmp.item.text,
      "title": $cmp.text
    },
    key: 4
  }, []) : null])];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_4__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_inline_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _inline_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_inline_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _inline_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-baseComboboxItem_inline"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/button/button.html":
/*!*********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/button/button.html ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _button_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./button.css */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var _button_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./button.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lightning_primitiveIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/primitiveIcon */ "./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");






function tmpl($api, $cmp, $slotset, $ctx) {
  const {b: api_bind, c: api_custom_element, d: api_dynamic_text, t: api_text, h: api_element} = $api;
  const {_m0, _m1} = $ctx;
  return [api_element("button", {
    className: $cmp.computedButtonClass,
    attrs: {
      "disabled": $cmp.disabled ? "" : null,
      "aria-disabled": $cmp.disabled,
      "name": $cmp.name,
      "accesskey": $cmp.accessKey,
      "title": $cmp.title,
      "type": $cmp.normalizedType,
      "value": $cmp.value,
      "aria-atomic": $cmp.computedAriaAtomic,
      "aria-busy": $cmp.computedAriaBusy,
      "aria-label": $cmp.ariaLabel,
      "aria-expanded": $cmp.computedAriaExpanded,
      "aria-haspopup": $cmp.computedAriaHasPopup,
      "aria-live": $cmp.computedAriaLive,
      "aria-pressed": $cmp.computedAriaPressed,
      "aria-relevant": $cmp.computedAriaRelevant
    },
    key: 0,
    on: {
      "focus": _m0 || ($ctx._m0 = api_bind($cmp.handleButtonFocus)),
      "blur": _m1 || ($ctx._m1 = api_bind($cmp.handleButtonBlur))
    }
  }, [$cmp.showIconLeft ? api_custom_element("lightning-primitive-icon", lightning_primitiveIcon__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "iconName": $cmp.iconName,
      "svgClass": $cmp.computedIconClass,
      "variant": "bare"
    },
    key: 1
  }, []) : null, api_text(api_dynamic_text($cmp.label)), $cmp.showIconRight ? api_custom_element("lightning-primitive-icon", lightning_primitiveIcon__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "iconName": $cmp.iconName,
      "svgClass": $cmp.computedIconClass,
      "variant": "bare"
    },
    key: 2
  }, []) : null])];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_3__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_button_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _button_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_button_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _button_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-button_button"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/button/button.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/button/button.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _button_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./button.html */ "./node_modules/lightning-base-components/src/lightning/button/button.html");
/* harmony import */ var lightning_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/utils */ "./node_modules/lightning-base-components/src/lightning/utils/utils.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var lightning_primitiveButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lightning/primitiveButton */ "./node_modules/lightning-base-components/src/lightning/primitiveButton/primitiveButton.js");






/**
 * A clickable element used to perform an action.
 */

class LightningButton extends lightning_primitiveButton__WEBPACK_IMPORTED_MODULE_4__.default {
  constructor(...args) {
    super(...args);
    this._normalizedVariant = 'neutral';
    this._stretch = false;
    this.name = void 0;
    this.value = void 0;
    this.label = void 0;
    this.iconName = void 0;
    this.iconPosition = 'left';
    this._originalStretch = false;
    this._normalizedStretch = false;
    this.type = 'button';
    this.disableAnimation = void 0;
  }

  /**
   * The variant changes the appearance of the button.
   * Accepted variants include base, neutral, brand, brand-outline, destructive, destructive-text, inverse, and success.
   * This value defaults to neutral.
   *
   * @type {string}
   * @default neutral
   */
  get variant() {
    return this.originalVariant;
  }

  set variant(value) {
    this.originalVariant = value;
    this._normalizedVariant = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_3__.normalizeString)(value, {
      fallbackValue: 'neutral',
      validValues: ['base', 'neutral', 'brand', 'brand-outline', 'destructive', 'destructive-text', 'inverse', 'success']
    });
  }
  /**
   * The Lightning Design System name of the icon.
   * Names are written in the format 'utility:down' where 'utility' is the category,
   * and 'down' is the specific icon to be displayed.
   *
   * @type {string}
   */


  /**
   * Setting it to true allows the button to take up the entire available width.
   * This value defaults to false.
   *
   * @type {boolean}
   * @default false
   */
  get stretch() {
    return this._originalStretch;
  }

  set stretch(value) {
    this._originalStretch = value;
    this._normalizedStretch = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_3__.normalizeBoolean)(value);
  }
  /**
   * Specifies the type of button.
   * Valid values are button, reset, and submit.
   * This value defaults to button.
   *
   * @type {string}
   * @default button
   */


  render() {
    return _button_html__WEBPACK_IMPORTED_MODULE_1__.default;
  }

  get computedButtonClass() {
    const classes = (0,lightning_utils__WEBPACK_IMPORTED_MODULE_2__.classSet)(super.computedButtonClass);
    return classes.add({
      'slds-button_neutral': this._normalizedVariant === 'neutral',
      'slds-button_brand': this._normalizedVariant === 'brand',
      'slds-button_outline-brand': this._normalizedVariant === 'brand-outline',
      'slds-button_destructive': this._normalizedVariant === 'destructive',
      'slds-button_text-destructive': this._normalizedVariant === 'destructive-text',
      'slds-button_inverse': this._normalizedVariant === 'inverse',
      'slds-button_success': this._normalizedVariant === 'success',
      'slds-button_stretch': this.stretch
    }).toString();
  }

  get normalizedType() {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_3__.normalizeString)(this.type, {
      fallbackValue: 'button',
      validValues: ['button', 'reset', 'submit']
    });
  }

  get normalizedIconPosition() {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_3__.normalizeString)(this.iconPosition, {
      fallbackValue: 'left',
      validValues: ['left', 'right']
    });
  }

  get showIconLeft() {
    return this.iconName && this.normalizedIconPosition === 'left';
  }

  get showIconRight() {
    return this.iconName && this.normalizedIconPosition === 'right';
  }

  get computedIconClass() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_2__.classSet)('slds-button__icon').add({
      'slds-button__icon_left': this.normalizedIconPosition === 'left',
      'slds-button__icon_right': this.normalizedIconPosition === 'right'
    }).toString();
  }

  handleButtonFocus() {
    this.dispatchEvent(new CustomEvent('focus'));
  }

  handleButtonBlur() {
    this.dispatchEvent(new CustomEvent('blur'));
  }
  /**
   * Sets focus on the button.
   */


  focus() {
    if (this._connected) {
      this.button.focus();
    }
  }
  /**
   * Simulates a mouse click on the button.
   */


  click() {
    if (this._connected) {
      this.button.click();
    }
  }

  get button() {
    return this.template.querySelector('button');
  }
  /**
   * Once we are connected, we fire a register event so the button-group (or other) component can register
   * the buttons.
   */


  connectedCallback() {
    if (!this._connected) {
      this._connected = true;
    }
  }

  renderedCallback() {
    // initialize aria attributes in primitiveButton
    super.renderedCallback(); // button inherits from primitiveButton, button.css not working in this case.
    // change host style to disable pointer event.

    this.template.host.style.pointerEvents = this.disabled ? 'none' : '';
  }

  disconnectedCallback() {
    this._connected = false;
  }

}

LightningButton.delegatesFocus = true;

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningButton, {
  publicProps: {
    name: {
      config: 0
    },
    value: {
      config: 0
    },
    label: {
      config: 0
    },
    variant: {
      config: 3
    },
    iconName: {
      config: 0
    },
    iconPosition: {
      config: 0
    },
    stretch: {
      config: 3
    },
    type: {
      config: 0
    },
    disableAnimation: {
      config: 0
    }
  },
  publicMethods: ["focus", "click"],
  fields: ["_normalizedVariant", "_stretch", "_originalStretch", "_normalizedStretch"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningButton, {
  tmpl: _button_html__WEBPACK_IMPORTED_MODULE_1__.default
}));
LightningButton.interopMap = {
  exposeNativeEvent: {
    click: true,
    focus: true,
    blur: true
  }
};

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/buttonIcon/buttonIcon.css":
/*!****************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/buttonIcon/buttonIcon.css ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([]);

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/buttonIcon/buttonIcon.html":
/*!*****************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/buttonIcon/buttonIcon.html ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _buttonIcon_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buttonIcon.css */ "./node_modules/lightning-base-components/src/lightning/buttonIcon/buttonIcon.css");
/* harmony import */ var _buttonIcon_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buttonIcon.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lightning_primitiveIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/primitiveIcon */ "./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");






function tmpl($api, $cmp, $slotset, $ctx) {
  const {b: api_bind, c: api_custom_element, d: api_dynamic_text, t: api_text, h: api_element} = $api;
  const {_m0, _m1} = $ctx;
  return [api_element("button", {
    className: $cmp.computedButtonClass,
    attrs: {
      "disabled": $cmp.disabled ? "" : null,
      "name": $cmp.name,
      "title": $cmp.computedTitle,
      "accesskey": $cmp.accessKey,
      "type": $cmp.normalizedType,
      "value": $cmp.value,
      "aria-label": $cmp.ariaLabel,
      "aria-expanded": $cmp.computedAriaExpanded,
      "aria-live": $cmp.computedAriaLive,
      "aria-atomic": $cmp.computedAriaAtomic,
      "aria-haspopup": $cmp.computedAriaHasPopup,
      "part": "button button-icon"
    },
    key: 0,
    on: {
      "focus": _m0 || ($ctx._m0 = api_bind($cmp.handleFocus)),
      "blur": _m1 || ($ctx._m1 = api_bind($cmp.handleBlur))
    }
  }, [api_custom_element("lightning-primitive-icon", lightning_primitiveIcon__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "iconName": $cmp.iconName,
      "svgClass": $cmp.computedIconClass,
      "variant": "bare"
    },
    key: 1
  }, []), $cmp.alternativeText ? api_element("span", {
    classMap: {
      "slds-assistive-text": true
    },
    key: 2
  }, [api_text(api_dynamic_text($cmp.alternativeText))]) : null])];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_3__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_buttonIcon_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _buttonIcon_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_buttonIcon_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _buttonIcon_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-buttonIcon_buttonIcon"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/buttonIcon/buttonIcon.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/buttonIcon/buttonIcon.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _buttonIcon_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buttonIcon.html */ "./node_modules/lightning-base-components/src/lightning/buttonIcon/buttonIcon.html");
/* harmony import */ var lightning_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/utils */ "./node_modules/lightning-base-components/src/lightning/utils/utils.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var lightning_tooltipLibrary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lightning/tooltipLibrary */ "./node_modules/lightning-base-components/src/lightning/tooltipLibrary/tooltipLibrary.js");
/* harmony import */ var lightning_primitiveButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lightning/primitiveButton */ "./node_modules/lightning-base-components/src/lightning/primitiveButton/primitiveButton.js");



 // remove-next-line-for-c-namespace




const DEFAULT_SIZE = 'medium';
const DEFAULT_VARIANT = 'border';
const DEFAULT_TYPE = 'button';
/**
 * An icon-only HTML button.
 */

class LightningButtonIcon extends lightning_primitiveButton__WEBPACK_IMPORTED_MODULE_5__.default {
  constructor(...args) {
    super(...args);
    this.name = void 0;
    this.value = void 0;
    this._variant = DEFAULT_VARIANT;
    this.iconName = void 0;
    this.iconClass = void 0;
    this._size = DEFAULT_SIZE;
    this.type = DEFAULT_TYPE;
    this.alternativeText = void 0;
    this._tooltip = null;
    this.tooltipValue = null;
    this.tooltipType = lightning_tooltipLibrary__WEBPACK_IMPORTED_MODULE_4__.TooltipType.Info;
    this.rendered = false;
  }

  get variant() {
    return this._originalVariant;
  }

  set variant(val) {
    this._originalVariant = val;
    this._variant = this.normalizeVariant(val); // set the variant attribute on the host

    this.setAttribute('variant', this._variant);
  }
  /**
   * The Lightning Design System name of the icon.
   * Names are written in the format 'utility:down' where 'utility' is the category,
   * and 'down' is the specific icon to be displayed.
   * Only utility icons can be used in this component.
   *
   * @type {string}
   * @required
   */


  get size() {
    return this._originalSize;
  }

  set size(val) {
    this._originalSize = val;
    this._size = this.normalizeSize(val); // set the size attribute on the host

    this.setAttribute('size', this._size);
  }
  /**
   * Specifies the type of button. Valid values are button, reset, and submit.
   * This value defaults to button.
   *
   * @type {string}
   * @default button
   */


  // remove-next-line-for-c-namespace
  set tooltip(value) {
    this.tooltipValue = value;

    if (this._tooltip) {
      this._tooltip.value = value;
    } else if (value && this.rendered) {
      this.createTooltip(value);
    }
  } // remove-next-line-for-c-namespace

  /**
   * Text to display when the user mouses over or focuses on the button.
   * The tooltip is auto-positioned relative to the button and screen space.
   * @type {string}
   * @param {string} value - The plain text string for the tooltip
   */


  get tooltip() {
    return this._tooltip ? this._tooltip.value : undefined;
  } // remove-next-line-for-c-namespace


  /**
   * Generate a tooltip with the specified value and current tooltip type
   *
   * @param {*} value - The plain text string for the tooltip
   */
  createTooltip(value) {
    this._tooltip = new lightning_tooltipLibrary__WEBPACK_IMPORTED_MODULE_4__.Tooltip(value, {
      root: this,
      target: () => this.template.querySelector('button'),
      type: this.tooltipType
    });

    this._tooltip.initialize();
  } // this is there because raptor currently doesnt support inheritance


  render() {
    return _buttonIcon_html__WEBPACK_IMPORTED_MODULE_1__.default;
  }

  get computedTitle() {
    return this.title || this.alternativeText || '';
  }

  normalizeVariant(variant) {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_3__.normalizeString)(variant, {
      fallbackValue: DEFAULT_VARIANT,
      validValues: ['bare', 'brand', 'container', 'border', 'border-filled', 'bare-inverse', 'border-inverse']
    });
  }

  get normalizedType() {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_3__.normalizeString)(this.type, {
      fallbackValue: DEFAULT_TYPE,
      validValues: ['button', 'reset', 'submit']
    });
  }

  normalizeSize(size) {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_3__.normalizeString)(size, {
      fallbackValue: DEFAULT_SIZE,
      validValues: ['xx-small', 'x-small', 'small', 'medium', 'large']
    });
  }
  /**
   * Retrieve the base part of the variant
   * Example: for variant "border-inverse", the base is "border".
   */


  get variantBase() {
    return this._variant.split('-')[0];
  }
  /**
   * Retrieve the modifier of the variant
   * Example: for variant "border-inverse", the modifier is "inverse".
   */


  get variantModifier() {
    return this._variant.split('-')[1] || '';
  }

  get computedButtonClass() {
    const classes = (0,lightning_utils__WEBPACK_IMPORTED_MODULE_2__.classSet)(super.computedButtonClass);
    const isBare = this.variantBase === 'bare';
    classes.add('slds-button_icon');

    if (!isBare) {
      // If the variant is not bare, then size the button instead of the icon
      switch (this._size) {
        case 'small':
          classes.add('slds-button_icon-small');
          break;

        case 'x-small':
          classes.add('slds-button_icon-x-small');
          break;

        case 'xx-small':
          classes.add('slds-button_icon-xx-small');
          break;

        case 'large':
          // There is no `large` modifier for buttons so we should drop down one size to `medium`
          console.warn(`<lightning-button-icon> The non-bare variants of buttonIcon do not support a size value of "large". Supported values include "xx-small", "x-small", "small", and "medium". Falling back to size value "medium".`);

        /* falls through */

        case 'medium': // Medium is the default size, and the default size doesn't require a size modifier

        default:
      }
    }

    return classes.add({
      'slds-button_icon-bare': isBare,
      'slds-button_icon-container': this._variant === 'container',
      'slds-button_icon-border': this._variant === 'border',
      'slds-button_icon-border-filled': this._variant === 'border-filled',
      'slds-button_icon-border-inverse': this._variant === 'border-inverse',
      'slds-button_icon-inverse': this._variant === 'bare-inverse',
      'slds-button_icon-brand': this._variant === 'brand'
    }).toString();
  }

  get computedIconClass() {
    const isBare = this.variantBase === 'bare';
    const iconClass = this.iconClass || '';
    const classes = (0,lightning_utils__WEBPACK_IMPORTED_MODULE_2__.classSet)('slds-button__icon');
    classes.add(iconClass);

    if (isBare) {
      // If the variant is bare, then size the icon instead of the button
      switch (this._size) {
        case 'large':
          classes.add('slds-button__icon_large');
          break;

        case 'small':
          classes.add('slds-button__icon_small');
          break;

        case 'xx-small':
          // There is no `xx-small` modifier for bare so we should drop down one size to `x-small`
          console.warn(`<lightning-button-icon> The bare variant of buttonIcon does not support a size value of "xx-small". Supported values include "x-small", "small", "medium", and "large". The default is "medium".`);

        /* falls through */

        case 'x-small':
          classes.add('slds-button__icon_x-small');
          break;

        case 'medium': // Medium is the default size, and the default size doesn't require a size modifier

        default:
      }
    }

    return classes.toString();
  }

  handleFocus() {
    this.dispatchEvent(new CustomEvent('focus'));
  }

  handleBlur() {
    this.dispatchEvent(new CustomEvent('blur'));
  }
  /**
   * Sets focus on the button.
   */


  focus() {
    if (this._connected) {
      this.template.querySelector('button').focus();
    }
  }
  /**
   * Simulates a mouse click on the button.
   */


  click() {
    if (this._connected) {
      this.template.querySelector('button').click();
    }
  }
  /**
   * Once we are connected, we fire a register event so the button-group (or other) component can register
   * the buttons.
   */


  connectedCallback() {
    this._connected = true;
    this.dispatchEvent(new CustomEvent('privatebuttoniconregister', {
      cancelable: true,
      bubbles: true,
      detail: {
        setTooltipType: tooltipType => {
          this.tooltipType = tooltipType;
        }
      }
    }));
  }

  renderedCallback() {
    // initialize aria attributes in primitiveButton
    super.renderedCallback(); // remove-next-line-for-c-namespace

    if (this.tooltipValue) {
      this.createTooltip(this.tooltipValue);
    } // button inherits from primitiveButton, button.css not working in this case.
    // change host style to disable pointer event.


    this.template.host.style.pointerEvents = this.disabled ? 'none' : '';
    this.rendered = true;
  }

  disconnectedCallback() {
    super.disconnectedCallback();
    this._connected = false;
  }

}

LightningButtonIcon.delegatesFocus = true;

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningButtonIcon, {
  publicProps: {
    name: {
      config: 0
    },
    value: {
      config: 0
    },
    variant: {
      config: 3
    },
    iconName: {
      config: 0
    },
    iconClass: {
      config: 0
    },
    size: {
      config: 3
    },
    type: {
      config: 0
    },
    alternativeText: {
      config: 0
    },
    tooltip: {
      config: 3
    }
  },
  publicMethods: ["focus", "click"],
  fields: ["_variant", "_size", "_tooltip", "tooltipValue", "tooltipType", "rendered"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningButtonIcon, {
  tmpl: _buttonIcon_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/calendar/calendar.css":
/*!************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/calendar/calendar.css ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function stylesheet(useActualHostSelector, token) {
  var shadowSelector = token ? ("[" + token + "]") : "";
  var hostSelector = token ? ("[" + token + "-host]") : "";
  return ["[dir=\"rtl\"] .slds-dropdown_left", shadowSelector, " {left: 0;right: auto;}"].join('');
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([stylesheet]);

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/calendar/calendar.html":
/*!*************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/calendar/calendar.html ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _calendar_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./calendar.css */ "./node_modules/lightning-base-components/src/lightning/calendar/calendar.css");
/* harmony import */ var _calendar_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./calendar.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lightning_buttonIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/buttonIcon */ "./node_modules/lightning-base-components/src/lightning/buttonIcon/buttonIcon.js");
/* harmony import */ var lightning_select__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/select */ "./node_modules/lightning-base-components/src/lightning/select/select.js");
/* harmony import */ var lightning_focusTrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lightning/focusTrap */ "./node_modules/lightning-base-components/src/lightning/focusTrap/focusTrap.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");








function tmpl($api, $cmp, $slotset, $ctx) {
  const {b: api_bind, c: api_custom_element, h: api_element, gid: api_scoped_id, d: api_dynamic_text, t: api_text, k: api_key, i: api_iterator, ti: api_tab_index} = $api;
  const {_m0, _m1, _m2, _m3, _m4, _m5, _m6} = $ctx;
  return [api_element("div", {
    classMap: {
      "slds-datepicker": true,
      "slds-dropdown": true,
      "slds-dropdown_left": true
    },
    attrs: {
      "aria-hidden": "false",
      "aria-label": $cmp.computedAriaLabel,
      "role": "dialog",
      "tabindex": "-1"
    },
    key: 0
  }, [api_custom_element("lightning-focus-trap", lightning_focusTrap__WEBPACK_IMPORTED_MODULE_4__.default, {
    key: 1
  }, [api_element("div", {
    classMap: {
      "slds-datepicker__filter": true,
      "slds-grid": true
    },
    key: 2
  }, [api_element("div", {
    classMap: {
      "slds-datepicker__filter_month": true,
      "slds-grid": true,
      "slds-grid_align-spread": true,
      "slds-grow": true
    },
    key: 3
  }, [api_element("div", {
    classMap: {
      "slds-align-middle": true
    },
    key: 4
  }, [api_custom_element("lightning-button-icon", lightning_buttonIcon__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "iconName": "utility:left",
      "variant": "container",
      "alternativeText": $cmp.i18n.previousMonth
    },
    key: 5,
    on: {
      "click": _m0 || ($ctx._m0 = api_bind($cmp.goToPreviousMonth))
    }
  }, [])]), api_element("h2", {
    classMap: {
      "slds-align-middle": true
    },
    attrs: {
      "aria-atomic": "true",
      "aria-live": "assertive",
      "role": "alert",
      "id": api_scoped_id("month-title"),
      "data-index": $cmp.monthIndex
    },
    key: 6
  }, [api_text(api_dynamic_text($cmp.computedMonthTitle))]), api_element("div", {
    classMap: {
      "slds-align-middle": true
    },
    key: 7
  }, [api_custom_element("lightning-button-icon", lightning_buttonIcon__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "iconName": "utility:right",
      "variant": "container",
      "alternativeText": $cmp.i18n.nextMonth
    },
    key: 8,
    on: {
      "click": _m1 || ($ctx._m1 = api_bind($cmp.goToNextMonth))
    }
  }, [])])]), api_element("div", {
    classMap: {
      "slds-shrink-none": true
    },
    key: 9
  }, [api_custom_element("lightning-select", lightning_select__WEBPACK_IMPORTED_MODULE_3__.default, {
    props: {
      "value": $cmp.calendarYear,
      "label": $cmp.i18n.yearSelector,
      "variant": "label-hidden",
      "options": $cmp.computedYearList
    },
    key: 10,
    on: {
      "change": _m2 || ($ctx._m2 = api_bind($cmp.handleYearChange)),
      "click": _m3 || ($ctx._m3 = api_bind($cmp.handleYearSelectClick))
    }
  }, [])])]), api_element("table", {
    classMap: {
      "slds-datepicker__month": true
    },
    attrs: {
      "aria-labelledby": api_scoped_id("month-title"),
      "role": "grid"
    },
    key: 11
  }, [api_element("thead", {
    key: 12
  }, [api_element("tr", {
    attrs: {
      "id": api_scoped_id("weekdays-element")
    },
    key: 13
  }, api_iterator($cmp.computedWeekdayLabels, function (weekday) {
    return api_element("th", {
      attrs: {
        "id": api_scoped_id(weekday.fullName),
        "scope": "col"
      },
      key: api_key(14, weekday.fullName)
    }, [api_element("abbr", {
      attrs: {
        "title": weekday.fullName
      },
      key: 15
    }, [api_text(api_dynamic_text(weekday.shortName))])]);
  }))]), api_element("tbody", {
    key: 16,
    on: {
      "keydown": _m4 || ($ctx._m4 = api_bind($cmp.handleCalendarKeyDown))
    }
  }, api_iterator($cmp.computedMonth, function (week, index) {
    return api_element("tr", {
      key: api_key(17, week.id)
    }, api_iterator(week.days, function (day) {
      return api_element("td", {
        className: day.className,
        attrs: {
          "role": "gridcell",
          "aria-selected": day.isSelected,
          "aria-current": day.ariaCurrent,
          "tabindex": api_tab_index(day.tabIndex),
          "data-value": day.dateValue,
          "aria-label": day.dateValue
        },
        key: api_key(18, day.dateValue)
      }, [api_element("span", {
        classMap: {
          "slds-day": true
        },
        attrs: {
          "tabindex": "-1",
          "role": "button"
        },
        key: 19,
        on: {
          "click": _m5 || ($ctx._m5 = api_bind($cmp.handleDateClick))
        }
      }, [api_text(api_dynamic_text(day.dayInMonth))])]);
    }));
  }))]), api_element("button", {
    classMap: {
      "slds-button": true,
      "slds-align_absolute-center": true,
      "slds-text-link": true
    },
    attrs: {
      "name": "today",
      "type": "button"
    },
    key: 20,
    on: {
      "click": _m6 || ($ctx._m6 = api_bind($cmp.handleTodayClick))
    }
  }, [api_text(api_dynamic_text($cmp.i18n.today))])])])];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_5__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_calendar_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _calendar_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_calendar_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _calendar_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-calendar_calendar"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/calendar/calendar.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/calendar/calendar.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _calendar_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./calendar.html */ "./node_modules/lightning-base-components/src/lightning/calendar/calendar.html");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_ariaLabelMonth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.ariaLabelMonth */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.ariaLabelMonth.js");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_nextMonth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.nextMonth */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.nextMonth.js");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_previousMonth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.previousMonth */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.previousMonth.js");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_today__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.today */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.today.js");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_yearSelector__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.yearSelector */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.yearSelector.js");
/* harmony import */ var lightning_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lightning/utils */ "./node_modules/lightning-base-components/src/lightning/utils/utils.js");
/* harmony import */ var lightning_inputUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lightning/inputUtils */ "./node_modules/lightning-base-components/src/lightning/inputUtils/inputUtils.js");
/* harmony import */ var _salesforce_i18n_firstDayOfWeek__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @salesforce/i18n/firstDayOfWeek */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-firstDayOfWeek.js");
/* harmony import */ var _keyboard__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./keyboard */ "./node_modules/lightning-base-components/src/lightning/calendar/keyboard.js");
/* harmony import */ var _salesforce_i18n_lang__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @salesforce/i18n/lang */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-lang.js");
/* harmony import */ var _salesforce_i18n_showJapaneseCalendar__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @salesforce/i18n/showJapaneseCalendar */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-showJapaneseCalendar.js");
/* harmony import */ var lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! lightning/internationalizationLibrary */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/internationalizationLibrary.js");
/* harmony import */ var lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! lightning/iso8601Utils */ "./node_modules/lightning-base-components/src/lightning/iso8601Utils/iso8601Utils.js");















const i18n = {
  ariaLabelMonth: _salesforce_label_LightningDateTimePicker_ariaLabelMonth__WEBPACK_IMPORTED_MODULE_2__.default,
  nextMonth: _salesforce_label_LightningDateTimePicker_nextMonth__WEBPACK_IMPORTED_MODULE_3__.default,
  previousMonth: _salesforce_label_LightningDateTimePicker_previousMonth__WEBPACK_IMPORTED_MODULE_4__.default,
  today: _salesforce_label_LightningDateTimePicker_today__WEBPACK_IMPORTED_MODULE_5__.default,
  yearSelector: _salesforce_label_LightningDateTimePicker_yearSelector__WEBPACK_IMPORTED_MODULE_6__.default
};
const WEEKS_PER_MONTH = 6;
const DAYS_PER_WEEK = 7;
const calendarCache = {}; // cache of calendar cells for a given year/month
// Japanese Era (https://en.wikipedia.org/wiki/Regnal_year#Japanese)

const JAPANESE_CALENDAR_YEARS = [// note: the order matters. the latest comes first.
{
  key: 'R',
  year: 2019,
  label: '\u4ee4\u548c'
}, // Reiwa:   5/1/2019
{
  key: 'H',
  year: 1989,
  label: '\u5e73\u6210'
}, // Heisei:  1/8/1989
{
  key: 'S',
  year: 1926,
  label: '\u662d\u548c'
}, // Showa:  12/25/1926
{
  key: 'T',
  year: 1912,
  label: '\u5927\u6b63'
}, // Taisho:  7/30/1912
{
  key: 'M',
  year: 1868,
  label: '\u660e\u6cbb'
} // Meiji:   1/1/1868
];

class LightningCalendar extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  get value() {
    return this.selectedDate;
  }

  set value(newValue) {
    // if value is an ISO string, only fetch the time part
    const dateOnlyString = typeof newValue === 'string' ? newValue.split(lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_14__.TIME_SEPARATOR)[0] : newValue;

    if (dateOnlyString !== this.selectedDate) {
      this.selectedDate = dateOnlyString;

      if (!this._connected) {
        return;
      }

      const newDate = this.parseDate(dateOnlyString); // if the date is invalid, render today's date

      if (!newDate) {
        this.selectedDate = null;
        this.renderToday();
      } else {
        this.selectDate(newDate);
      }
    }
  }

  constructor() {
    super();
    this.calendarYear = null;
    this.calendarMonth = null;
    this.min = void 0;
    this.max = void 0;
    this.uniqueId = (0,lightning_inputUtils__WEBPACK_IMPORTED_MODULE_8__.generateUniqueId)();
  }

  renderedCallback() {
    this.dispatchEvent(new CustomEvent('ready'));
  }

  connectedCallback() {
    this._connected = true;
    this.todayDate = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_13__.getCurrentDateString)();
    const renderDate = this.getSelectedDate() || this.getTodaysDate();
    this.renderCalendar(renderDate);
    this.keyboardInterface = this.calendarKeyboardInterface();
  }

  disconnectedCallback() {
    this._connected = false;
  }
  /**
   * Sets focus on the focusable date cell in the calendar.
   */


  focus() {
    // eslint-disable-next-line @lwc/lwc/no-async-operation
    requestAnimationFrame(() => {
      const dateElement = this.getFocusableDateCell();

      if (dateElement) {
        dateElement.focus();
      }
    });
  }

  get i18n() {
    return i18n;
  }

  get computedAriaLabel() {
    const renderedMonth = this.getCalendarDate().getMonth();
    return i18n.ariaLabelMonth + (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_13__.getMonthNames)()[renderedMonth].fullName;
  }

  get computedMonthTitle() {
    const renderedMonth = this.getCalendarDate().getMonth();
    return (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_13__.getMonthNames)()[renderedMonth].fullName;
  }

  get computedWeekdayLabels() {
    const nameOfWeekdays = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_13__.getNameOfWeekdays)();
    const firstDay = this.getFirstDayOfWeek();
    const computedWeekdayLabels = []; // We need to adjust the weekday labels to start from the locale's first day of week

    for (let i = firstDay; i < nameOfWeekdays.length; i++) {
      computedWeekdayLabels.push(nameOfWeekdays[i]);
    }

    for (let i = 0; i < firstDay; i++) {
      computedWeekdayLabels.push(nameOfWeekdays[i]);
    }

    return computedWeekdayLabels;
  }

  get computedSelectElementId() {
    return this.uniqueId + '-select';
  }

  get computedWeekdaysElementId() {
    return this.uniqueId + '-weekdays';
  }

  get computedMonthTitleId() {
    return this.uniqueId + '-month';
  }

  get computedYearList() {
    const sampleDate = new Date();
    const currentYear = sampleDate.getFullYear();
    const minDate = this.parseDate(this.min);
    const maxDate = this.parseDate(this.max);
    const minYear = minDate ? minDate.getFullYear() : currentYear - 100;
    const maxYear = maxDate ? maxDate.getFullYear() : currentYear + 100;
    const yearList = [];

    for (let year = minYear; year <= maxYear; year++) {
      yearList.push({
        label: this.getYearDisplayValue(sampleDate, year),
        value: year
      });
    }

    return yearList;
  }

  get monthIndex() {
    return this.getCalendarDate().getMonth();
  }

  getJapaneseCalendarYear(year) {
    const JAPANESE = 'ja';

    const displayValue = (japaneseYearData, useKey) => {
      return useKey ? japaneseYearData.key : japaneseYearData.label;
    };

    let useShortName = _salesforce_i18n_lang__WEBPACK_IMPORTED_MODULE_11__.default !== JAPANESE;

    for (let i = 0; i < JAPANESE_CALENDAR_YEARS.length; i++) {
      if (year < JAPANESE_CALENDAR_YEARS[i].year) {
        continue;
      }

      let jpYear = displayValue(JAPANESE_CALENDAR_YEARS[i], useShortName) + (year - JAPANESE_CALENDAR_YEARS[i].year + 1);

      if (year === JAPANESE_CALENDAR_YEARS[i].year && i < JAPANESE_CALENDAR_YEARS.length - 1) {
        // transition year -- display both
        let previousJapaneseYearData = JAPANESE_CALENDAR_YEARS[i + 1];
        jpYear += '/' + displayValue(previousJapaneseYearData, useShortName) + (year - previousJapaneseYearData.year + 1);
      }

      return jpYear;
    }

    return null;
  }

  getYearDisplayValue(date, yearValue) {
    date.setFullYear(yearValue);
    let displayValue = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_13__.toLocalizedDigits)(String((0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_13__.toOtherCalendar)(date).getFullYear())); // additional display value for Japanese calendar year support

    if (_salesforce_i18n_showJapaneseCalendar__WEBPACK_IMPORTED_MODULE_12__.default) {
      let jpYear = this.getJapaneseCalendarYear(yearValue);

      if (jpYear) {
        displayValue += ' (' + jpYear + ')';
      }
    }

    return displayValue;
  }

  get computedMonth() {
    if (!this._connected) {
      return [];
    }

    this.removeCurrentlySelectedDateAttributes();
    const selectedDate = this.getSelectedDate();
    const renderDate = this.getCalendarDate();
    const cacheKey = this.getCalendarCacheKey(renderDate, selectedDate);

    if (cacheKey in calendarCache) {
      return calendarCache[cacheKey];
    }

    const todayDate = this.getTodaysDate();
    const focusableDate = this.getInitialFocusDate(todayDate, selectedDate, renderDate);
    const calendarDates = {
      selectedDate,
      renderDate,
      focusableDate,
      todayDate,
      minDate: this.parseDate(this.min),
      maxDate: this.parseDate(this.max)
    };
    const monthCells = [];
    const date = this.getCalendarStartDate(renderDate);

    for (let week = 0; week < WEEKS_PER_MONTH; week++) {
      const weekCells = {
        id: week,
        days: []
      };

      for (let weekday = 0; weekday < DAYS_PER_WEEK; weekday++) {
        const dayCell = this.getDateCellAttributes(date, calendarDates);
        weekCells.days.push(dayCell);
        date.setDate(date.getDate() + 1);
      }

      monthCells.push(weekCells);
    }

    calendarCache[cacheKey] = monthCells;
    return monthCells;
  }

  getDateCellAttributes(date, calendarDates) {
    const isInAdjacentMonth = !this.dateInCalendar(date, calendarDates.renderDate) || !this.isBetween(date, calendarDates.minDate, calendarDates.maxDate);
    const isSelected = this.isSame(date, calendarDates.selectedDate);
    const isToday = this.isSame(date, calendarDates.todayDate);
    const ariaCurrent = isToday ? 'date' : false;
    const tabIndex = this.isSame(date, calendarDates.focusableDate) ? '0' : false;
    const className = (0,lightning_utils__WEBPACK_IMPORTED_MODULE_7__.classSet)().add({
      'slds-is-today': isToday,
      'slds-is-selected': isSelected,
      'slds-day_adjacent-month': isInAdjacentMonth
    }).toString();
    return {
      dayInMonth: (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_13__.toLocalizedDigits)(String(date.getDate())),
      dateValue: this.formatDate(date),
      isSelected: isSelected ? 'true' : 'false',
      className,
      tabIndex,
      ariaCurrent
    };
  }

  dispatchSelectEvent() {
    this.dispatchEvent(new CustomEvent('select', {
      composed: true,
      bubbles: true,
      cancelable: true,
      detail: {
        value: this.selectedDate
      }
    }));
  } // Determines if the date is in the rendered month/year calendar.


  dateInCalendar(date, calendarDate) {
    const renderedCalendar = calendarDate || this.getCalendarDate();
    return date.getMonth() === renderedCalendar.getMonth() && date.getFullYear() === renderedCalendar.getFullYear();
  }

  getInitialFocusDate(todayDate, selectedDate, renderedDate) {
    if (selectedDate && this.dateInCalendar(selectedDate, renderedDate)) {
      return selectedDate;
    }

    if (this.dateInCalendar(todayDate, renderedDate)) {
      return todayDate;
    }

    return new Date(renderedDate.getFullYear(), renderedDate.getMonth(), 1);
  }

  getTodaysDate() {
    if (this.todayDate) {
      return this.parseDate(this.todayDate);
    } // Today's date will be fetched in connectedCallback. In the meantime, use the date based on the device timezone.


    return new Date();
  }

  getSelectedDate() {
    return this.parseDate(this.selectedDate);
  } // returns the month and year in the calendar


  getCalendarDate() {
    if (this.calendarYear) {
      return new Date(this.calendarYear, this.calendarMonth, 1);
    }

    return this.getTodaysDate();
  }

  getCalendarStartDate(renderedDate) {
    const firstDayOfMonth = new Date(renderedDate.getFullYear(), renderedDate.getMonth(), 1);
    return this.getStartOfWeek(firstDayOfMonth);
  }

  getStartOfWeek(dayInWeek) {
    const firstDay = this.getFirstDayOfWeek(); // Negative dates in JS will subtract days from the 1st of the given month

    let startDay = dayInWeek.getDay();

    while (startDay !== firstDay) {
      dayInWeek.setDate(dayInWeek.getDate() - 1);
      startDay = dayInWeek.getDay();
    }

    return dayInWeek;
  }

  getFirstDayOfWeek() {
    return _salesforce_i18n_firstDayOfWeek__WEBPACK_IMPORTED_MODULE_9__.default - 1; // In Java, week days are 1 - 7
  } // This method is called when a new value is set, or when you click the today button.
  // In both cases, we need to check if newValue is in the currently rendered calendar


  selectDate(newDate) {
    if (this.dateInCalendar(newDate)) {
      const dateElement = this.getElementByDate(this.formatDate(newDate));
      this.selectDateInCalendar(dateElement);
    } else {
      this.renderCalendar(newDate);
    }
  } // Select a date in current calendar without the need to re-render the calendar


  selectDateInCalendar(dateElement) {
    this.selectedDate = dateElement.getAttribute('data-value');
    this.removeCurrentlySelectedDateAttributes();
    this.addSelectedDateAttributes(dateElement);
  }

  selectDateInCalendarAndDispatchSelect(dateElement) {
    this.selectDateInCalendar(dateElement);
    this.dispatchSelectEvent();
  } // we should be able to control the select value with an attribute once we have a select component


  selectYear(year) {
    const optionElement = this.template.querySelector(`option[value='${year}']`);

    if (optionElement) {
      optionElement.selected = true;
    }
  }

  getElementByDate(dateString) {
    return this.template.querySelector(`td[data-value='${dateString}']`);
  }

  getFocusableDateCell() {
    return this.template.querySelector(`td[tabIndex='0']`);
  }

  unfocusDateCell(element) {
    if (element) {
      element.removeAttribute('tabIndex');
    }
  }

  focusDateCell(element) {
    if (element) {
      element.setAttribute('tabIndex', 0);
      element.focus();
    }
  }

  focusElementByDate(date) {
    // eslint-disable-next-line @lwc/lwc/no-async-operation
    requestAnimationFrame(() => {
      const element = this.getElementByDate(this.formatDate(date));

      if (element) {
        this.unfocusDateCell(this.getFocusableDateCell());
        this.focusDateCell(element);
      }
    });
  }

  renderCalendar(newDate) {
    this.calendarMonth = newDate.getMonth();
    this.calendarYear = newDate.getFullYear();
    this.selectYear(newDate.getFullYear());
  }

  renderToday() {
    const todaysDate = this.getTodaysDate();

    if (this.dateInCalendar(todaysDate)) {
      this.removeCurrentlySelectedDateAttributes();
      this.unfocusDateCell(this.getFocusableDateCell());
      const todayElement = this.getElementByDate(this.todayDate);
      todayElement.setAttribute('tabIndex', 0);
    } else {
      this.renderCalendar(todaysDate);
    }
  }

  removeCurrentlySelectedDateAttributes() {
    const currentlySelectedElement = this.template.querySelector(`td[class*='slds-is-selected']`);

    if (currentlySelectedElement) {
      currentlySelectedElement.classList.remove('slds-is-selected');
      currentlySelectedElement.setAttribute('aria-selected', 'false');
    }

    this.unfocusDateCell(this.getFocusableDateCell());
  }

  addSelectedDateAttributes(dateElement) {
    this.focusDateCell(dateElement);
    dateElement.classList.add('slds-is-selected');
    dateElement.setAttribute('aria-selected', 'true');
  }

  handleCalendarKeyDown(event) {
    const dateString = event.target.getAttribute('data-value');
    (0,_keyboard__WEBPACK_IMPORTED_MODULE_10__.handleKeyDownOnCalendar)(event, this.parseDate(dateString), this.keyboardInterface);
  }

  handleDateClick(event) {
    event.stopPropagation();
    const tdElement = event.target.parentElement;
    this.selectDateInCalendarAndDispatchSelect(tdElement);
  }

  handleTodayClick(event) {
    event.stopPropagation();
    this.selectedDate = this.todayDate;
    this.selectDate(this.getTodaysDate());
    this.dispatchSelectEvent();
  }

  handleYearSelectClick(event) {
    event.stopPropagation();
  }

  handleYearChange(event) {
    event.stopPropagation();
    const newYearValue = event.target.value;

    if (this.calendarYear !== newYearValue) {
      this.calendarYear = newYearValue;
    }
  }

  goToNextMonth(event) {
    event.stopPropagation();
    const calendarDate = this.getCalendarDate();
    calendarDate.setMonth(calendarDate.getMonth() + 1);
    this.renderCalendar(calendarDate);
  }

  goToPreviousMonth(event) {
    event.stopPropagation();
    const calendarDate = this.getCalendarDate();
    calendarDate.setMonth(calendarDate.getMonth() - 1);
    this.renderCalendar(calendarDate);
  }

  calendarKeyboardInterface() {
    const that = this;
    return {
      focusDate(newDate) {
        if (!that.dateInCalendar(newDate)) {
          that.renderCalendar(newDate);
        }

        that.focusElementByDate(newDate);
      },

      getStartOfWeek(dayInWeek) {
        return that.getStartOfWeek(dayInWeek);
      },

      selectDate(dateElement) {
        that.selectDateInCalendarAndDispatchSelect(dateElement);
      }

    };
  }

  formatDate(date) {
    return (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_13__.getISODateString)(date);
  }

  parseDate(dateString) {
    return (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_13__.parseDateTime)(dateString, lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_14__.STANDARD_DATE_FORMAT, true);
  }

  isSame(date1, date2) {
    if (!date1 || !date2) {
      return false;
    }

    return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate() // getDate returns the day in month whereas getDay returns the weekday number
    ;
  }

  isBetween(date, date1, date2) {
    let isBeforeEndDate = true;
    let isAfterStartDate = true;

    if (date2) {
      isBeforeEndDate = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_13__.isBefore)(date, date2, 'day') || this.isSame(date, date2);
    }

    if (date1) {
      isAfterStartDate = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_13__.isAfter)(date, date1, 'day') || this.isSame(date, date1);
    }

    return isBeforeEndDate && isAfterStartDate;
  }

  getCalendarCacheKey(renderDate, selectedDate) {
    let key = renderDate.getFullYear() + '-' + renderDate.getMonth(); // Having the key include min/max seems enough for now.
    // We're not going to complicate things by checking if renderDate falls before/after the min/max.

    key += this.min ? 'min' + this.min : '';
    key += this.max ? 'max' + this.max : '';

    if (selectedDate && this.dateInCalendar(selectedDate, renderDate)) {
      key += '_' + selectedDate.getDate();
    }

    return key;
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningCalendar, {
  publicProps: {
    min: {
      config: 0
    },
    max: {
      config: 0
    },
    value: {
      config: 3
    }
  },
  publicMethods: ["focus"],
  track: {
    calendarYear: 1,
    calendarMonth: 1
  }
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningCalendar, {
  tmpl: _calendar_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/calendar/keyboard.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/calendar/keyboard.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "handleKeyDownOnCalendar": () => (/* binding */ handleKeyDownOnCalendar)
/* harmony export */ });
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");

function handleKeyDownOnCalendar(event, date, calendarInterface) {
  const tdElement = event.target;
  const keyValue = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__.normalizeKeyValue)(event.key);

  switch (keyValue) {
    case 'ArrowUp':
      preventDefaultAndStopPropagation(event);
      date.setDate(date.getDate() - 7);
      calendarInterface.focusDate(date);
      break;

    case 'ArrowDown':
      preventDefaultAndStopPropagation(event);
      date.setDate(date.getDate() + 7);
      calendarInterface.focusDate(date);
      break;

    case 'ArrowRight':
      preventDefaultAndStopPropagation(event);
      date.setDate(date.getDate() + 1);
      calendarInterface.focusDate(date);
      break;

    case 'ArrowLeft':
      preventDefaultAndStopPropagation(event);
      date.setDate(date.getDate() - 1);
      calendarInterface.focusDate(date);
      break;

    case 'Enter':
    case ' ':
      preventDefaultAndStopPropagation(event);
      calendarInterface.selectDate(tdElement);
      break;

    case 'PageUp':
      preventDefaultAndStopPropagation(event);

      if (event.altKey) {
        date.setFullYear(date.getFullYear() - 1);
      } else {
        date.setMonth(date.getMonth() - 1);
      }

      calendarInterface.focusDate(date);
      break;

    case 'PageDown':
      preventDefaultAndStopPropagation(event);

      if (event.altKey) {
        date.setFullYear(date.getFullYear() + 1);
      } else {
        date.setMonth(date.getMonth() + 1);
      }

      calendarInterface.focusDate(date);
      break;

    case 'Home':
      {
        preventDefaultAndStopPropagation(event);
        const startOfWeek = calendarInterface.getStartOfWeek(date);
        calendarInterface.focusDate(startOfWeek);
        break;
      }

    case 'End':
      {
        preventDefaultAndStopPropagation(event);
        const endOfWeek = calendarInterface.getStartOfWeek(date);
        endOfWeek.setDate(endOfWeek.getDate() + 6);
        calendarInterface.focusDate(endOfWeek);
        break;
      }

    default:
  }
}

function preventDefaultAndStopPropagation(event) {
  event.preventDefault();
  event.stopPropagation();
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/colorPickerCustom/colorPickerCustom.css":
/*!******************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/colorPickerCustom/colorPickerCustom.css ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([]);

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/colorPickerCustom/colorPickerCustom.html":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/colorPickerCustom/colorPickerCustom.html ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _colorPickerCustom_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./colorPickerCustom.css */ "./node_modules/lightning-base-components/src/lightning/colorPickerCustom/colorPickerCustom.css");
/* harmony import */ var _colorPickerCustom_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./colorPickerCustom.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");





function tmpl($api, $cmp, $slotset, $ctx) {
  const {gid: api_scoped_id, d: api_dynamic_text, t: api_text, h: api_element, b: api_bind} = $api;
  const {_m0, _m1, _m2, _m3, _m4, _m5, _m6, _m7, _m8, _m9} = $ctx;
  return [api_element("div", {
    classMap: {
      "slds-color-picker__custom": true
    },
    attrs: {
      "part": "color-picker-custom"
    },
    key: 0
  }, [api_element("p", {
    classMap: {
      "slds-assistive-text": true
    },
    attrs: {
      "id": api_scoped_id("color-picker-instructions")
    },
    key: 1
  }, [api_text(api_dynamic_text($cmp.i18n.colorPickerInstructions))]), api_element("div", {
    classMap: {
      "slds-m-bottom_small": true
    },
    style: $cmp.gradientStyle,
    attrs: {
      "data-id": "color-gradient"
    },
    key: 2,
    on: {
      "mousedown": _m0 || ($ctx._m0 = api_bind($cmp.handleMouseDown))
    }
  }, [api_element("canvas", {
    attrs: {
      "width": $cmp.canvasRect.x,
      "height": $cmp.canvasRect.y
    },
    key: 3
  }, []), api_element("a", {
    classMap: {
      "slds-color-picker__range-indicator": true
    },
    styleDecls: [["position", "absolute", false], ["display", "inline", false]],
    attrs: {
      "data-id": "color-anchor",
      "href": "javascript:void(0)",
      "aria-live": "assertive",
      "aria-atomic": "true",
      "aria-describedby": api_scoped_id("color-picker-instructions")
    },
    key: 4,
    on: {
      "mousedrag": _m1 || ($ctx._m1 = api_bind($cmp.handlePreventDefault)),
      "mousedown": _m2 || ($ctx._m2 = api_bind($cmp.handlePreventDefault)),
      "keydown": _m3 || ($ctx._m3 = api_bind($cmp.handleKeydown))
    }
  }, [api_element("span", {
    classMap: {
      "slds-assistive-text": true
    },
    key: 5
  }, [api_text(api_dynamic_text($cmp.computedSaturationAndBrightness))])])]), api_element("div", {
    classMap: {
      "slds-color-picker__hue-and-preview": true
    },
    key: 6
  }, [api_element("label", {
    classMap: {
      "slds-assistive-text": true
    },
    attrs: {
      "for": api_scoped_id("rainbow")
    },
    key: 7
  }, [api_text(api_dynamic_text($cmp.i18n.hueInput))]), api_element("input", {
    classMap: {
      "slds-color-picker__hue-slider": true
    },
    attrs: {
      "data-id": "hue-slider",
      "type": "range",
      "min": "0",
      "max": "360",
      "id": api_scoped_id("rainbow")
    },
    props: {
      "value": $cmp._hueValue
    },
    key: 8,
    on: {
      "mousedown": _m4 || ($ctx._m4 = api_bind($cmp.handleDrag)),
      "change": _m5 || ($ctx._m5 = api_bind($cmp.onChange))
    }
  }, []), api_element("span", {
    classMap: {
      "slds-swatch": true
    },
    style: $cmp.thumbnailStyle,
    attrs: {
      "data-id": "color-preview"
    },
    key: 9
  }, [api_element("span", {
    classMap: {
      "slds-assistive-text": true
    },
    attrs: {
      "aria-hidden": "true"
    },
    key: 10
  }, [api_text(api_dynamic_text($cmp._hex))])])]), api_element("div", {
    classMap: {
      "slds-color-picker__custom-inputs": true
    },
    key: 11
  }, [api_element("div", {
    classMap: {
      "slds-form-element": true,
      "slds-color-picker__input-custom-hex": true
    },
    attrs: {
      "part": "input-text"
    },
    key: 12
  }, [api_element("label", {
    classMap: {
      "slds-form-element__label": true
    },
    attrs: {
      "part": "label",
      "for": api_scoped_id("input")
    },
    key: 13
  }, [api_text(api_dynamic_text($cmp.i18n.hexLabel))]), api_element("div", {
    classMap: {
      "slds-form-element__control": true
    },
    attrs: {
      "part": "input-container"
    },
    key: 14
  }, [api_element("input", {
    classMap: {
      "slds-input": true
    },
    attrs: {
      "data-primary-input": "",
      "type": "text",
      "id": api_scoped_id("input"),
      "part": "input",
      "minlength": "4",
      "maxlength": "7",
      "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
      "placeholder": "#FFFFFF"
    },
    props: {
      "value": $cmp._hex
    },
    key: 15,
    on: {
      "change": _m6 || ($ctx._m6 = api_bind($cmp.handleHexChange))
    }
  }, [])])]), api_element("div", {
    classMap: {
      "slds-form-element": true
    },
    attrs: {
      "part": "input-text"
    },
    key: 16
  }, [api_element("label", {
    classMap: {
      "slds-form-element__label": true
    },
    attrs: {
      "part": "label",
      "for": api_scoped_id("red")
    },
    key: 17
  }, [api_element("abbr", {
    attrs: {
      "title": $cmp.i18n.redAbbr
    },
    key: 18
  }, [api_text(api_dynamic_text($cmp.i18n.rInput))])]), api_element("div", {
    classMap: {
      "slds-form-element__control": true
    },
    attrs: {
      "part": "input-container"
    },
    key: 19
  }, [api_element("input", {
    classMap: {
      "slds-input": true
    },
    attrs: {
      "type": "text",
      "id": api_scoped_id("red"),
      "data-color-name": "red",
      "part": "input",
      "placeholder": "255"
    },
    props: {
      "value": $cmp._rgb.red
    },
    key: 20,
    on: {
      "change": _m7 || ($ctx._m7 = api_bind($cmp.handleRgbChange))
    }
  }, [])])]), api_element("div", {
    classMap: {
      "slds-form-element": true
    },
    attrs: {
      "part": "input-text"
    },
    key: 21
  }, [api_element("label", {
    classMap: {
      "slds-form-element__label": true
    },
    attrs: {
      "part": "label",
      "for": api_scoped_id("green")
    },
    key: 22
  }, [api_element("abbr", {
    attrs: {
      "title": $cmp.i18n.greenAbbr
    },
    key: 23
  }, [api_text(api_dynamic_text($cmp.i18n.gInput))])]), api_element("div", {
    classMap: {
      "slds-form-element__control": true
    },
    attrs: {
      "part": "input-container"
    },
    key: 24
  }, [api_element("input", {
    classMap: {
      "slds-input": true
    },
    attrs: {
      "type": "text",
      "id": api_scoped_id("green"),
      "data-color-name": "green",
      "part": "input",
      "placeholder": "255"
    },
    props: {
      "value": $cmp._rgb.green
    },
    key: 25,
    on: {
      "change": _m8 || ($ctx._m8 = api_bind($cmp.handleRgbChange))
    }
  }, [])])]), api_element("div", {
    classMap: {
      "slds-form-element": true
    },
    attrs: {
      "part": "input-text"
    },
    key: 26
  }, [api_element("label", {
    classMap: {
      "slds-form-element__label": true
    },
    attrs: {
      "part": "label",
      "for": api_scoped_id("blue")
    },
    key: 27
  }, [api_element("abbr", {
    attrs: {
      "title": $cmp.i18n.blueAbbr
    },
    key: 28
  }, [api_text(api_dynamic_text($cmp.i18n.bInput))])]), api_element("div", {
    classMap: {
      "slds-form-element__control": true
    },
    attrs: {
      "part": "input-container"
    },
    key: 29
  }, [api_element("input", {
    classMap: {
      "slds-input": true
    },
    attrs: {
      "type": "text",
      "id": api_scoped_id("blue"),
      "data-color-name": "blue",
      "part": "input",
      "placeholder": "255"
    },
    props: {
      "value": $cmp._rgb.blue
    },
    key: 30,
    on: {
      "change": _m9 || ($ctx._m9 = api_bind($cmp.handleRgbChange))
    }
  }, [])])])]), $cmp._errorMessage ? api_element("div", {
    classMap: {
      "slds-form-element__help": true
    },
    attrs: {
      "aria-live": "assertive"
    },
    key: 31
  }, [api_text(api_dynamic_text($cmp._errorMessage))]) : null])];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_2__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_colorPickerCustom_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _colorPickerCustom_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_colorPickerCustom_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _colorPickerCustom_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-colorPickerCustom_colorPickerCustom"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/colorPickerCustom/colorPickerCustom.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/colorPickerCustom/colorPickerCustom.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _colorPickerCustom_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./colorPickerCustom.html */ "./node_modules/lightning-base-components/src/lightning/colorPickerCustom/colorPickerCustom.html");
/* harmony import */ var _salesforce_label_LightningColorPicker_bInput__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/label/LightningColorPicker.bInput */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.bInput.js");
/* harmony import */ var _salesforce_label_LightningColorPicker_blueAbbr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @salesforce/label/LightningColorPicker.blueAbbr */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.blueAbbr.js");
/* harmony import */ var _salesforce_label_LightningColorPicker_colorPickerInstructions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @salesforce/label/LightningColorPicker.colorPickerInstructions */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.colorPickerInstructions.js");
/* harmony import */ var _salesforce_label_LightningColorPicker_errorMessage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @salesforce/label/LightningColorPicker.errorMessage */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.errorMessage.js");
/* harmony import */ var _salesforce_label_LightningColorPicker_gInput__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @salesforce/label/LightningColorPicker.gInput */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.gInput.js");
/* harmony import */ var _salesforce_label_LightningColorPicker_greenAbbr__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @salesforce/label/LightningColorPicker.greenAbbr */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.greenAbbr.js");
/* harmony import */ var _salesforce_label_LightningColorPicker_hexLabel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @salesforce/label/LightningColorPicker.hexLabel */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.hexLabel.js");
/* harmony import */ var _salesforce_label_LightningColorPicker_hueInput__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @salesforce/label/LightningColorPicker.hueInput */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.hueInput.js");
/* harmony import */ var _salesforce_label_LightningColorPicker_rInput__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @salesforce/label/LightningColorPicker.rInput */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.rInput.js");
/* harmony import */ var _salesforce_label_LightningColorPicker_redAbbr__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @salesforce/label/LightningColorPicker.redAbbr */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.redAbbr.js");
/* harmony import */ var _salesforce_client_formFactor__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @salesforce/client/formFactor */ "./node_modules/lightning-base-components/scopedImports/@salesforce-client-formFactor.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var lightning_inputUtils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! lightning/inputUtils */ "./node_modules/lightning-base-components/src/lightning/inputUtils/inputUtils.js");
/* harmony import */ var _colorUtil__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./colorUtil */ "./node_modules/lightning-base-components/src/lightning/colorPickerCustom/colorUtil.js");
















const i18n = {
  bInput: _salesforce_label_LightningColorPicker_bInput__WEBPACK_IMPORTED_MODULE_2__.default,
  blueAbbr: _salesforce_label_LightningColorPicker_blueAbbr__WEBPACK_IMPORTED_MODULE_3__.default,
  colorPickerInstructions: _salesforce_label_LightningColorPicker_colorPickerInstructions__WEBPACK_IMPORTED_MODULE_4__.default,
  errorMessage: _salesforce_label_LightningColorPicker_errorMessage__WEBPACK_IMPORTED_MODULE_5__.default,
  gInput: _salesforce_label_LightningColorPicker_gInput__WEBPACK_IMPORTED_MODULE_6__.default,
  greenAbbr: _salesforce_label_LightningColorPicker_greenAbbr__WEBPACK_IMPORTED_MODULE_7__.default,
  hexLabel: _salesforce_label_LightningColorPicker_hexLabel__WEBPACK_IMPORTED_MODULE_8__.default,
  hueInput: _salesforce_label_LightningColorPicker_hueInput__WEBPACK_IMPORTED_MODULE_9__.default,
  rInput: _salesforce_label_LightningColorPicker_rInput__WEBPACK_IMPORTED_MODULE_10__.default,
  redAbbr: _salesforce_label_LightningColorPicker_redAbbr__WEBPACK_IMPORTED_MODULE_11__.default
};
const CANVAS = {
  x: 198,
  y: 80
};

class LightningColorPickerCustom extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  constructor() {
    super();
    this._hueValue = null;
    this._rgb = {
      red: '86',
      green: '121',
      blue: '192'
    };
    this._hex = '#5679C0';
    this._errorMessage = null;
    this._currentColor = null;
    this._initialized = false;
    this.uniqueId = (0,lightning_inputUtils__WEBPACK_IMPORTED_MODULE_14__.generateUniqueId)();
  }

  renderedCallback() {
    if (!this._initialized) {
      // eslint-disable-next-line @lwc/lwc/no-async-operation
      requestAnimationFrame(() => {
        // (*1*)
        if (_salesforce_client_formFactor__WEBPACK_IMPORTED_MODULE_12__.default !== 'Large') {
          /**
           * We need to wait for one more animation frame and invoke .focus()
           * in iOS. This is because the positionLibray.js initially sets the position
           * of this color-picker element to "top: 0px" and then later repositions it asynchronously
           * it the next animation frames. The first (*1*) rAF callback is fired between
           * setting "top: 0px" and then later repositioning it. Calling .focus() in this callback
           * triggers a re-paint step and the page is scrolled to the top due to "top: 0px" being
           * present in the styles. To avoid this, we can delay the next re-paint after color-picker
           * is repositioned correctly by positionLibrary.js. Hence we wait for next animation frame
           * and then call .focus() to trigger the next re-paint after the color-picker is repositioned correctly
           * which was initially positioned with "top: 0px" by positionLibrary.js
           */
          // eslint-disable-next-line @lwc/lwc/no-async-operation
          requestAnimationFrame(() => this.focus());
        } else {
          this.focus();
        }
      });
      this.gradient();
      this.handleUpdateAnchor();
      this._initialized = true;
    }
  }

  get currentColor() {
    return this._currentColor;
  }

  set currentColor(value) {
    const fullHex = (0,_colorUtil__WEBPACK_IMPORTED_MODULE_15__.fullHexValue)(value);
    this._currentColor = value;
    this._hex = fullHex;
    this._rgb = (0,_colorUtil__WEBPACK_IMPORTED_MODULE_15__.hexToRgb)(fullHex);
  }

  focus() {
    this.anchorElement.focus();
  }

  get i18n() {
    return i18n;
  }

  get thumbnailStyle() {
    return `background: ${this._hex || 'hsl(220, 46%, 55%)'};`;
  }

  get gradientStyle() {
    return 'position: relative;';
  }

  get canvasRect() {
    return CANVAS;
  }

  get anchorElement() {
    return this.template.querySelector('*[data-id="color-anchor"]');
  }

  get thumbnailElement() {
    return this.template.querySelector('*[data-id="color-preview"]');
  }

  get gradientElement() {
    return this.template.querySelector('*[data-id="color-gradient"]');
  }

  get computedSaturationAndBrightness() {
    const rgb = this._rgb;
    const saturation = (0,_colorUtil__WEBPACK_IMPORTED_MODULE_15__.rgbToHsv)(rgb).saturation || 0;
    const brightness = (0,_colorUtil__WEBPACK_IMPORTED_MODULE_15__.rgbToHsv)(rgb).brightness || 0;
    return `Saturation: ${saturation.toFixed()}%. Brightness: ${brightness.toFixed()}%.`;
  }

  handlePreventDefault(event) {
    event.preventDefault();
  }

  selectColor(event) {
    this.dispatchEvent( // eslint-disable-next-line lightning-global/no-custom-event-bubbling
    new CustomEvent('updatecolor', {
      bubbles: true,
      composed: true,
      cancelable: true,
      detail: {
        color: event.target.innerText
      }
    }));
  }

  handleMouseDown(event) {
    event.preventDefault();
    this.onMouseDrag(event, true);
  }

  handleDrag(event) {
    this.onMouseDrag(event, false);
  }

  onChange() {
    this.rainbowCursor();
  }

  parseAndLimit(value) {
    let out = value;

    if (!value || parseInt(value, 10) < 0 || isNaN(value)) {
      out = 0;
    } else if (parseInt(value, 10) > 255) {
      out = 255;
    }

    return out;
  }

  handleRgbChange(event) {
    const target = event.currentTarget;
    const value = this.parseAndLimit(target.value); // Fix for no rerender on second bad value attempt

    target.value = value;
    const color = target.getAttribute('data-color-name');

    if (color === 'red') {
      this._rgb.red = value;
    } else if (color === 'green') {
      this._rgb.green = value;
    } else if (color === 'blue') {
      this._rgb.blue = value;
    }

    const rgb = this._rgb;
    const hue = (0,_colorUtil__WEBPACK_IMPORTED_MODULE_15__.rgbToHsl)(rgb).hue;
    const position = this.rgbToPosition(rgb);
    const selectedColor = `#${(0,_colorUtil__WEBPACK_IMPORTED_MODULE_15__.rgbToHex)(rgb)}`;
    this.updateRainbow(hue);
    this.setCanvasColor(hue);
    this.setCanvasCursor(position.x, position.y);
    this.updateSelectedColor(selectedColor);
  }

  handleHexChange(event) {
    const isInputValid = event.srcElement.validity.valid;

    if (isInputValid) {
      const selectedColor = (0,_colorUtil__WEBPACK_IMPORTED_MODULE_15__.fullHexValue)(event.target.value);
      this.classList.remove('slds-has-error');
      this._errorMessage = null;
      const rgb = (0,_colorUtil__WEBPACK_IMPORTED_MODULE_15__.hexToRgb)(selectedColor);
      this._rgb = rgb;
      const hue = (0,_colorUtil__WEBPACK_IMPORTED_MODULE_15__.rgbToHsl)(rgb).hue;
      const position = this.rgbToPosition(rgb);
      this.updateRainbow(hue);
      this.setCanvasColor(hue);
      this.setCanvasCursor(position.x, position.y);
      this.updateSelectedColor(selectedColor);
    } else {
      event.srcElement.classList.add('slds-has-error');
      this._errorMessage = (0,lightning_inputUtils__WEBPACK_IMPORTED_MODULE_14__.getErrorMessage)(event.srcElement.validity, {
        patternMismatch: this.i18n.errorMessage
      });
    }
  }

  updateSelectedColor(selectedColor) {
    this.template.querySelector(`[data-primary-input]`).classList.remove('slds-has-error');
    this._errorMessage = null;
    this._hex = selectedColor;
    this.dispatchEvent( // eslint-disable-next-line lightning-global/no-custom-event-bubbling
    new CustomEvent('updateselectedcolor', {
      bubbles: true,
      composed: true,
      cancelable: true,
      detail: {
        color: selectedColor
      }
    }));
  }

  onMouseDrag(event, isGradientCursor) {
    const that = this;
    let drag = false;

    if (isGradientCursor) {
      this.getColorFromGradient(event);
    } else {
      this.rainbowCursor();
    }

    if (this._mousedown && this._mousemove && this._mouseup) {
      return;
    }

    that._mousedown = function () {
      drag = true;
      this._cursorActive = true;
    };

    that._mouseup = function () {
      drag = false;
      this._cursorActive = false;
      window.removeEventListener('mousedown', that._mousedown);
      window.removeEventListener('mouseup', that._mouseup);
      window.removeEventListener('mousemove', that._mousemove);
      that._mousedown = null;
      that._mouseup = null;
      that._mousemove = null;
    };

    that._mousemove = function (evt) {
      if (drag && isGradientCursor) {
        that.getColorFromGradient(evt);
      } else if (drag) {
        that.rainbowCursor();
      }
    };

    window.addEventListener('mousedown', that._mousedown);
    window.addEventListener('mouseup', that._mouseup);
    window.addEventListener('mousemove', that._mousemove);
  }

  gradient() {
    const hue = (0,_colorUtil__WEBPACK_IMPORTED_MODULE_15__.rgbToHsl)(this._rgb).hue;
    this.canvasContext();
    this.setCanvasColor(hue);
    this.updateRainbow(hue);
  }

  getColorFromGradient(event) {
    let cursorPosition;

    if (event.type === 'keydown' && event.key !== 'Tab') {
      cursorPosition = this.gradientCursorPositionFromKeydown(event);
    } else if (event.type === 'mousedown' || event.type === 'mousemove') {
      cursorPosition = this.gradientCursorPosition(event);
    } else {
      return;
    }

    const x = cursorPosition.x;
    const y = cursorPosition.y; // Get the current HUE value and update the canvas & cursor

    this.setCanvasColor(this._hueValue); // set color from gradient

    this.setRGBValues(x, y);
  }

  rainbowCursor() {
    const rainbow = this.template.querySelector('*[data-id="hue-slider"]');
    const position = this._cachePosition || this.rgbToPosition(this._rgb);
    this.setCanvasColor(rainbow.value);
    this.setRGBValues(position.x, position.y);
    this.updateRainbow(rainbow.value);
  }

  updateRainbow(hue) {
    this._hueValue = hue;
  }

  handleUpdateAnchor() {
    const position = this._cachePosition || this.rgbToPosition(this._rgb);
    const anchor = this.anchorElement;
    const offset = anchor.offsetWidth / 2;
    const x = position.x - offset + 5;
    const y = position.y - offset - 5;
    const xPercent = x / this._canvas.width * 100;
    const yPercent = y / this._canvas.height * 100;
    anchor.style.left = `${xPercent}%`;
    anchor.style.top = `${yPercent}%`;
  }

  gradientCursorPosition(event) {
    const canvas = this._canvas;
    const gradientCanvas = canvas.getBoundingClientRect();
    let x = event.clientX - gradientCanvas.left;
    let y = event.clientY - gradientCanvas.top;

    if (x > gradientCanvas.width) {
      x = gradientCanvas.width - 1;
    }

    if (x < 0) {
      x = 0;
    }

    if (y > gradientCanvas.height) {
      y = gradientCanvas.height;
    }

    if (y < 0) {
      y = 0;
    }
    /*
     * Caching the position x & y in the component so that we can use it when moving the rainbow slider
     * instead of calculating the position of x & y each time.
     */


    this._cachePosition = {
      x,
      y
    };
    return {
      x,
      y
    };
  }

  gradientCursorPositionFromKeydown(event) {
    event.preventDefault();
    const canvas = this._canvas;
    const gradientCanvas = canvas.getBoundingClientRect();
    const keyCode = event.keyCode;
    let x, y;

    if (!this._cachePosition) {
      this._cachePosition = this.rgbToPosition(this._rgb);
    }

    const positionMap = {};
    positionMap[lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_13__.keyCodes.left] = {
      x: -1,
      y: 0
    };
    positionMap[lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_13__.keyCodes.up] = {
      x: 0,
      y: -1
    };
    positionMap[lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_13__.keyCodes.right] = {
      x: +1,
      y: 0
    };
    positionMap[lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_13__.keyCodes.down] = {
      x: 0,
      y: +1
    };
    const transform = positionMap[keyCode] ? positionMap[keyCode] : {
      x: 0,
      y: 0
    };
    x = this._cachePosition.x + transform.x;
    y = this._cachePosition.y + transform.y;

    if (x > gradientCanvas.width) {
      x = gradientCanvas.width - 1;
    }

    if (x < 0) {
      x = 0;
    }

    if (y > gradientCanvas.height) {
      y = gradientCanvas.height;
    }

    if (y < 0) {
      y = 0;
    }
    /*
     * Caching the position x & y in the component so that we can use it when moving the rainbow slider
     * instead of calculating the position of x & y each time.
     */


    this._cachePosition = {
      x,
      y
    };
    return {
      x,
      y
    };
  }

  setRGBValues(x, y) {
    const ctx = this._canvasCtx;
    const imageData = ctx.getImageData(x, y, 1, 1).data;
    const rgb = {
      red: imageData[0],
      green: imageData[1],
      blue: imageData[2]
    };
    const color = `#${(0,_colorUtil__WEBPACK_IMPORTED_MODULE_15__.rgbToHex)(rgb)}`;
    this._rgb = rgb;
    this.updateSelectedColor(color);
    this.handleUpdateAnchor();
  }

  setCanvasColor(hue) {
    const ctx = this._canvasCtx; // don't map the gradient onto extreme left and right to make extremes have their max values

    const white = ctx.createLinearGradient(1, 0, this.canvasRect.x - 1, 0);
    white.addColorStop(0, 'rgb(255,255,255)');
    white.addColorStop(1, 'hsl(' + hue + ', 100%, 50%)');
    ctx.fillStyle = white;
    ctx.fillRect(0, 0, this.canvasRect.x, this.canvasRect.y); // starting y is the first line to avoid blending the black into the hue, thus
    // making extreme values unselectable

    const black = ctx.createLinearGradient(0, 1, 0, this.canvasRect.y);
    black.addColorStop(0, 'rgba(0,0,0,0)');
    black.addColorStop(1, 'rgb(0,0,0)');
    ctx.fillStyle = black;
    ctx.fillRect(0, 0, this.canvasRect.x, this.canvasRect.y);
  }

  setCanvasCursor(x, y) {
    const position = {
      x,
      y
    };
    const anchor = this.anchorElement;
    const offset = anchor.offsetWidth / 2;
    x = position.x - offset + 5;
    y = position.y - offset - 5;
    const xPercent = x / this._canvas.width * 100;
    const yPercent = y / this._canvas.height * 100;
    anchor.style.left = `${xPercent}%`;
    anchor.style.top = `${yPercent}%`;
  }

  canvasContext() {
    this._canvas = this.template.querySelector('canvas');
    this._canvasCtx = this._canvas.getContext('2d');
    this._cursorActive = false;
  }

  handleKeydown(event) {
    this.getColorFromGradient(event);
  }

  rgbToPosition(rgb) {
    return (0,_colorUtil__WEBPACK_IMPORTED_MODULE_15__.rgbToPosition)(rgb, this.canvasRect);
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningColorPickerCustom, {
  publicProps: {
    currentColor: {
      config: 3
    }
  },
  publicMethods: ["focus"],
  track: {
    _hueValue: 1,
    _rgb: 1,
    _hex: 1,
    _errorMessage: 1,
    _currentColor: 1
  },
  fields: ["_initialized"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningColorPickerCustom, {
  tmpl: _colorPickerCustom_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/colorPickerCustom/colorUtil.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/colorPickerCustom/colorUtil.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fullHexValue": () => (/* binding */ fullHexValue),
/* harmony export */   "hexToRgb": () => (/* binding */ hexToRgb),
/* harmony export */   "rgbToHex": () => (/* binding */ rgbToHex),
/* harmony export */   "rgbToHsl": () => (/* binding */ rgbToHsl),
/* harmony export */   "rgbToPosition": () => (/* binding */ rgbToPosition),
/* harmony export */   "rgbToHsv": () => (/* binding */ rgbToHsv)
/* harmony export */ });
function fullHexValue(hex) {
  if (Array.isArray(hex) && hex.length > 0) {
    hex = hex[0];
  }

  if (hex && hex.length <= 6 && hex.charAt(0) !== '#') {
    hex = '#' + hex;
  }

  const isInputValid = /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(hex);

  if (!isInputValid) {
    hex = '#000000';
  } // Converting 3 digit hex color to 6 digit hex color


  if (hex.length === 4) {
    hex = '#' + hex.charAt(1) + hex.charAt(1) + hex.charAt(2) + hex.charAt(2) + hex.charAt(3) + hex.charAt(3);
  }

  return hex;
}
function hexToRgb(hex) {
  const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(fullHexValue(hex));

  if (!result) {
    return null;
  }

  return {
    red: parseInt(result[1], 16),
    green: parseInt(result[2], 16),
    blue: parseInt(result[3], 16)
  };
}
function rgbToHex(rgb) {
  const r = rgb.red;
  const g = rgb.green;
  const b = rgb.blue;
  const bin = r << 16 | g << 8 | b;
  return function (hex) {
    return new Array(7 - hex.length).join('0') + hex;
  }(bin.toString(16).toUpperCase());
}
function rgbToHsl(rgb) {
  const r1 = rgb.red / 255;
  const g1 = rgb.green / 255;
  const b1 = rgb.blue / 255;
  const maxColor = Math.max(r1, g1, b1);
  const minColor = Math.min(r1, g1, b1); // Calculate L:

  let L = (maxColor + minColor) / 2;
  let S = 0;
  let H = 0;

  if (maxColor !== minColor) {
    // Calculate S:
    if (L < 0.5) {
      S = (maxColor - minColor) / (maxColor + minColor);
    } else {
      S = (maxColor - minColor) / (2.0 - maxColor - minColor);
    } // Calculate H:


    if (r1 === maxColor) {
      const x = g1 - b1,
            y = maxColor - minColor;
      H = x / y;
    } else if (g1 === maxColor) {
      const x = b1 - r1,
            y = maxColor - minColor,
            z = x / y;
      H = 2.0 + z;
    } else {
      const x = r1 - g1,
            y = maxColor - minColor,
            z = x / y;
      H = 4.0 + z;
    }
  }

  L *= 100;
  S *= 100;
  H *= 60;

  if (H < 0) {
    H += 360;
  }

  const result = {
    hue: H,
    saturation: S,
    lightness: L
  };
  return result;
}
function rgbToPosition(rgb, canvas) {
  const hsv = rgbToHsv(rgb);
  const saturation = hsv.saturation / 100,
        brightness = hsv.brightness / 100;
  const x = canvas.x * saturation;
  const y = canvas.y * (1 - brightness);
  return {
    x,
    y
  };
}
function rgbToHsv(rgb) {
  const r = rgb.red / 255;
  const g = rgb.green / 255;
  const b = rgb.blue / 255;
  const max = Math.max(r, g, b),
        min = Math.min(r, g, b);
  const d = max - min,
        s = max === 0 ? 0 : d / max,
        v = max;
  let h, x, y;

  if (max === min) {
    h = 0;
  } else {
    switch (max) {
      case r:
        x = g - b;
        y = x / d;
        h = y + (g < b ? 6 : 0);
        break;

      case g:
        x = b - r;
        y = x / d;
        h = y + 2;
        break;

      case b:
        x = r - g;
        y = x / d;
        h = y + 4;
        break;

      default:
        break;
    }

    h /= 6;
  }

  const result = {
    hue: h * 360,
    saturation: s * 100,
    brightness: v * 100
  };
  return result;
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/colorPickerPanel/colorPickerPanel.css":
/*!****************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/colorPickerPanel/colorPickerPanel.css ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function stylesheet(useActualHostSelector, token) {
  var shadowSelector = token ? ("[" + token + "]") : "";
  var hostSelector = token ? ("[" + token + "-host]") : "";
  return (useActualHostSelector ? [":host:not([data-render-mode]) .fix-slds-color-picker__selector-footer", shadowSelector, " > lightning-button", shadowSelector, " {flex: 1;}"].join('') : [hostSelector, ":not([data-render-mode]) .fix-slds-color-picker__selector-footer", shadowSelector, " > lightning-button", shadowSelector, " {flex: 1;}"].join(''));
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([stylesheet]);

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/colorPickerPanel/colorPickerPanel.html":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/colorPickerPanel/colorPickerPanel.html ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _colorPickerPanel_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./colorPickerPanel.css */ "./node_modules/lightning-base-components/src/lightning/colorPickerPanel/colorPickerPanel.css");
/* harmony import */ var _colorPickerPanel_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./colorPickerPanel.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lightning_colorPickerCustom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/colorPickerCustom */ "./node_modules/lightning-base-components/src/lightning/colorPickerCustom/colorPickerCustom.js");
/* harmony import */ var lightning_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/button */ "./node_modules/lightning-base-components/src/lightning/button/button.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");







function tmpl($api, $cmp, $slotset, $ctx) {
  const {gid: api_scoped_id, b: api_bind, c: api_custom_element, h: api_element} = $api;
  const {_m0, _m1, _m2, _m3} = $ctx;
  return [api_element("section", {
    classMap: {
      "slds-popover": true,
      "slds-color-picker__selector": true,
      "slds-show": true,
      "slds-is-absolute": true
    },
    attrs: {
      "role": "dialog",
      "aria-label": "Choose a color",
      "aria-describedby": api_scoped_id("dialog-body-id")
    },
    key: 0,
    on: {
      "updateselectedcolor": _m0 || ($ctx._m0 = api_bind($cmp.handleUpdateSelectedColor)),
      "keydown": _m1 || ($ctx._m1 = api_bind($cmp.handleKeydown))
    }
  }, [api_element("div", {
    classMap: {
      "slds-popover__body": true
    },
    attrs: {
      "id": api_scoped_id("dialog-body-id")
    },
    key: 1
  }, [api_custom_element("lightning-color-picker-custom", lightning_colorPickerCustom__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "currentColor": $cmp.currentColor
    },
    key: 2
  }, [])]), api_element("footer", {
    classMap: {
      "slds-popover__footer": true
    },
    key: 3
  }, [api_element("div", {
    classMap: {
      "slds-color-picker__selector-footer": true,
      "fix-slds-color-picker__selector-footer": true
    },
    key: 4
  }, [api_custom_element("lightning-button", lightning_button__WEBPACK_IMPORTED_MODULE_3__.default, {
    props: {
      "label": $cmp.i18n.cancelButton,
      "name": "cancel",
      "stretch": true
    },
    key: 5,
    on: {
      "click": _m2 || ($ctx._m2 = api_bind($cmp.handleCancelClick))
    }
  }, []), api_custom_element("lightning-button", lightning_button__WEBPACK_IMPORTED_MODULE_3__.default, {
    classMap: {
      "slds-m-left_x-small": true
    },
    props: {
      "variant": "brand",
      "label": $cmp.i18n.doneButton,
      "name": "done",
      "stretch": true
    },
    key: 6,
    on: {
      "click": _m3 || ($ctx._m3 = api_bind($cmp.handleDoneClick))
    }
  }, [])])])])];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_4__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_colorPickerPanel_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _colorPickerPanel_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_colorPickerPanel_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _colorPickerPanel_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-colorPickerPanel_colorPickerPanel"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/colorPickerPanel/colorPickerPanel.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/colorPickerPanel/colorPickerPanel.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _colorPickerPanel_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./colorPickerPanel.html */ "./node_modules/lightning-base-components/src/lightning/colorPickerPanel/colorPickerPanel.html");
/* harmony import */ var _salesforce_label_LightningColorPicker_cancelButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/label/LightningColorPicker.cancelButton */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.cancelButton.js");
/* harmony import */ var _salesforce_label_LightningColorPickerPanel_customTab__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @salesforce/label/LightningColorPickerPanel.customTab */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPickerPanel.customTab.js");
/* harmony import */ var _salesforce_label_LightningColorPickerPanel_defaultTab__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @salesforce/label/LightningColorPickerPanel.defaultTab */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPickerPanel.defaultTab.js");
/* harmony import */ var _salesforce_label_LightningColorPicker_doneButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @salesforce/label/LightningColorPicker.doneButton */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.doneButton.js");
/* harmony import */ var lightning_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lightning/utils */ "./node_modules/lightning-base-components/src/lightning/utils/utils.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");








const i18n = {
  cancelButton: _salesforce_label_LightningColorPicker_cancelButton__WEBPACK_IMPORTED_MODULE_2__.default,
  customTab: _salesforce_label_LightningColorPickerPanel_customTab__WEBPACK_IMPORTED_MODULE_3__.default,
  defaultTab: _salesforce_label_LightningColorPickerPanel_defaultTab__WEBPACK_IMPORTED_MODULE_4__.default,
  doneButton: _salesforce_label_LightningColorPicker_doneButton__WEBPACK_IMPORTED_MODULE_5__.default
};
const DEFAULT_COLOR = '#000000';

class LightningColorPickerPanel extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  constructor(...args) {
    super(...args);
    this.currentColor = void 0;
    this._isCustomTabActive = false;
    this._selectedColor = null;
  }

  connectedCallback() {
    this._selectedColor = this.currentColor || DEFAULT_COLOR;
  }

  get i18n() {
    return i18n;
  }

  get computedClassDefault() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_6__.classSet)({
      'slds-tabs_default__item': true,
      'slds-is-active': !this._isCustomTabActive
    }).toString();
  }

  get computedClassCustom() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_6__.classSet)({
      'slds-tabs_default__item': true,
      'slds-is-active': this._isCustomTabActive
    }).toString();
  }

  get ariaSelectedDefault() {
    return !this._isCustomTabActive.toString();
  }

  get ariaSelectedCustom() {
    return this._isCustomTabActive.toString();
  }

  handleTabChange(event) {
    event.preventDefault();
    const tabElement = event.currentTarget;

    if (tabElement.classList.contains('slds-is-active')) {
      return;
    }

    this._isCustomTabActive = tabElement.title !== i18n.defaultTab;
  }

  handleUpdateSelectedColor(event) {
    this._selectedColor = event.detail.color;
  }

  dispatchUpdateColorEventWithColor(color) {
    this.dispatchEvent( // eslint-disable-next-line lightning-global/no-custom-event-bubbling
    new CustomEvent('updatecolor', {
      composed: true,
      bubbles: true,
      detail: {
        color
      }
    }));
  }

  handleDoneClick() {
    this.dispatchUpdateColorEventWithColor(this._selectedColor);
  }

  handleCancelClick() {
    this.dispatchUpdateColorEventWithColor(this.currentColor);
  }

  handleKeydown(event) {
    if (event.keyCode === lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_7__.keyCodes.escape) {
      event.preventDefault();
      this.dispatchUpdateColorEventWithColor(this.currentColor);
    } else if (event.shiftKey && event.keyCode === lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_7__.keyCodes.tab && event.srcElement.dataset.id === 'color-anchor') {
      event.preventDefault();
      this.template.querySelector('button[name="done"]').focus();
    } else if (!event.shiftKey && event.keyCode === lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_7__.keyCodes.tab && event.srcElement.name === 'done') {
      event.preventDefault();
      this.template.querySelector('lightning-color-picker-custom').focus();
    }
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningColorPickerPanel, {
  publicProps: {
    currentColor: {
      config: 0
    }
  },
  track: {
    _isCustomTabActive: 1,
    _selectedColor: 1
  }
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningColorPickerPanel, {
  tmpl: _colorPickerPanel_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/configProvider/configProvider.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/configProvider/configProvider.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ configProviderService),
/* harmony export */   "getPathPrefix": () => (/* binding */ getPathPrefix),
/* harmony export */   "getToken": () => (/* binding */ getToken),
/* harmony export */   "getLocalizationService": () => (/* binding */ getLocalizationService),
/* harmony export */   "getIconSvgTemplates": () => (/* binding */ getIconSvgTemplates),
/* harmony export */   "getOneConfig": () => (/* binding */ getOneConfig)
/* harmony export */ });
/* harmony import */ var _defaultConfig__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultConfig */ "./node_modules/lightning-base-components/src/lightning/configProvider/defaultConfig.js");
 // Closure to hold the APIs if and when available

let configProvided = false;
const {
  assign,
  freeze
} = Object;
let PROVIDED_IMPL = (0,_defaultConfig__WEBPACK_IMPORTED_MODULE_0__.getDefaultConfig)();

function resolveServiceApiProps(serviceAPI = {}) {
  const serviceApiMap = {
    getPathPrefix: serviceAPI.getPathPrefix,
    getToken: serviceAPI.getToken,
    getLocalizationService: serviceAPI.getLocalizationService,
    iconSvgTemplates: serviceAPI.iconSvgTemplates,
    getOneConfig: serviceAPI.getInitializer && serviceAPI.getInitializer('oneConfig')
  };
  return Object.keys(serviceApiMap).reduce((seed, prop) => {
    if (serviceApiMap[prop] !== undefined) {
      seed[prop] = serviceApiMap[prop];
    }

    return seed;
  }, {});
}

function configProviderService(serviceAPI) {
  if (!configProvided) {
    PROVIDED_IMPL = freeze(assign({}, PROVIDED_IMPL, resolveServiceApiProps(serviceAPI)));
    configProvided = true;
  } else {
    throw new Error('ConfigProvider can only be set once at initilization time');
  }

  return {
    name: 'lightning-config-provider'
  };
}
function getPathPrefix() {
  return PROVIDED_IMPL && PROVIDED_IMPL.getPathPrefix && PROVIDED_IMPL.getPathPrefix() || '';
}
function getToken(name) {
  return PROVIDED_IMPL && PROVIDED_IMPL.getToken && PROVIDED_IMPL.getToken(name);
}
function getLocalizationService() {
  return PROVIDED_IMPL && PROVIDED_IMPL.getLocalizationService && PROVIDED_IMPL.getLocalizationService();
}
function getIconSvgTemplates() {
  return PROVIDED_IMPL && PROVIDED_IMPL.iconSvgTemplates;
}
function getOneConfig() {
  return PROVIDED_IMPL && PROVIDED_IMPL.getOneConfig || {
    densitySetting: ''
  };
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/configProvider/defaultConfig.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/configProvider/defaultConfig.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getDefaultConfig": () => (/* binding */ getDefaultConfig)
/* harmony export */ });
/* harmony import */ var _defaultLocalizationConfig__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocalizationConfig */ "./node_modules/lightning-base-components/src/lightning/configProvider/defaultLocalizationConfig.js");


function getConfigFromAura($A) {
  return {
    getLocalizationService() {
      return $A.localizationService;
    },

    getPathPrefix() {
      return $A.getContext().getPathPrefix();
    },

    getToken(name) {
      return $A.getToken(name);
    }

  };
}

function createStandAloneConfig() {
  return {
    getLocalizationService() {
      return _defaultLocalizationConfig__WEBPACK_IMPORTED_MODULE_0__.default;
    },

    getPathPrefix() {
      return ''; // @sfdc.playground path-prefix DO-NOT-REMOVE-COMMENT
    },

    getToken() {
      return undefined; // @sfdc.playground token DO-NOT-REMOVE-COMMENT
    },

    getOneConfig() {
      return {
        densitySetting: ''
      };
    }

  };
}

function getDefaultConfig() {
  return window.$A !== undefined && window.$A.localizationService ? getConfigFromAura(window.$A) : createStandAloneConfig();
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/configProvider/defaultDurationConfig.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/configProvider/defaultDurationConfig.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _defaultDurationConfig_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultDurationConfig.html */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var _salesforce_label_Duration_secondsLater__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/label/Duration.secondsLater */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-Duration.secondsLater.js");
/* harmony import */ var _salesforce_label_Duration_secondsAgo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @salesforce/label/Duration.secondsAgo */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-Duration.secondsAgo.js");
/* harmony import */ var lightning_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lightning/utils */ "./node_modules/lightning-base-components/src/lightning/utils/utils.js");


// inspired by the duration logic in moment.js (extremely simplified) https://github.com/moment/moment
// Only using this in defaultConfig when we're outside of an aura context.
// Reasons for this are because the Intl api currently doesn't match the existing text formats:
// e.g. format(1, 'day') returns 'in 1 day' or 'tomorrow' (numeric=always/auto) in chrome, the existing moment implementation returns 'in a day'
// Intl.RelativeTimeFormat is also only supported by a handful of browsers (as of 220):
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat#Browser_compatibility
// The following two labels will be used even on browsers that support Intl.RelativeTimeFormat


 // These labels will only be used as fallback in browsers that do not support Intl.RelativeTimeFormat

const fallbackFutureLabel = 'in {0} {1}'; // e.g. in 1 minute

const fallbackPastLabel = '{0} {1} ago'; // e.g. 1 minute ago

const fallbackPluralSuffix = 's'; // plural suffix for the units, e.g. in 10 minutes
// The threshold values come from moment.js

const units = {
  SECONDS: {
    name: 'second',
    threshold: 45
  },
  // a few seconds to minute
  MINUTES: {
    name: 'minute',
    threshold: 45
  },
  // minutes to hour
  HOURS: {
    name: 'hour',
    threshold: 22
  },
  // hours to day
  DAYS: {
    name: 'day',
    threshold: 26
  },
  // days to month
  MONTHS: {
    name: 'month',
    threshold: 11
  },
  // months to year
  YEARS: {
    name: 'year'
  }
};
const SECOND_TO_MILLISECONDS = 1000;
const MINUTE_TO_MILLISECONDS = 6e4; // 60 * SECOND_TO_MILLISECONDS;

const HOUR_TO_MILLISECONDS = 36e5; // 60 * MINUTE_TO_MILLISECONDS

const DAY_TO_MILLISECONDS = 864e5; // 24 * HOUR_TO_MILLISECONDS;

class Duration {
  constructor(milliseconds) {
    this.milliseconds = 0;

    if (typeof milliseconds !== 'number') {
      this.isValid = false; // eslint-disable-next-line no-console

      console.warn(`The value of milliseconds passed into Duration must be of type number,
                but we are getting the ${typeof milliseconds} value "${milliseconds}" instead.
                `);
      return;
    }

    this.isValid = true;
    this.milliseconds = milliseconds;
  }

  humanize(locale) {
    if (!this.isValid) {
      return '';
    }

    const unit = findBestUnitMatch(this);

    if (unit === units.SECONDS) {
      const isLater = this.milliseconds > 0;
      return isLater ? _salesforce_label_Duration_secondsLater__WEBPACK_IMPORTED_MODULE_2__.default : _salesforce_label_Duration_secondsAgo__WEBPACK_IMPORTED_MODULE_3__.default;
    }

    return format(locale, this.asIn(unit), unit.name);
  }

  asIn(unit) {
    switch (unit) {
      case units.SECONDS:
        return Math.round(this.milliseconds / SECOND_TO_MILLISECONDS);

      case units.MINUTES:
        return Math.round(this.milliseconds / MINUTE_TO_MILLISECONDS);

      case units.HOURS:
        return Math.round(this.milliseconds / HOUR_TO_MILLISECONDS);

      case units.DAYS:
        return Math.round(this.milliseconds / DAY_TO_MILLISECONDS);

      case units.MONTHS:
        return Math.round(daysToMonth(this.milliseconds / DAY_TO_MILLISECONDS));

      case units.YEARS:
      default:
        return Math.round(daysToMonth(this.milliseconds / DAY_TO_MILLISECONDS) / 12);
    }
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(Duration, {
  fields: ["milliseconds"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(Duration, {
  tmpl: _defaultDurationConfig_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

function daysToMonth(days) {
  // 400 years have 146097 days (taking into account leap year rules)
  // 400 years have 12 months === 4800
  const daysToMonthRatio = 4800 / 146097;
  return days * daysToMonthRatio;
}

function findBestUnitMatch(duration) {
  // Traversing the object keys in order from Seconds to Years
  // http://exploringjs.com/es6/ch_oop-besides-classes.html#_traversal-order-of-properties
  const match = Object.keys(units).find(key => {
    const unit = units[key]; // Year is the max and doesn't have a threshold

    return unit === units.YEARS || Math.abs(duration.asIn(unit)) < unit.threshold;
  });
  return units[match];
}

function format(locale, value, unit) {
  if ('Intl' in window && Intl.RelativeTimeFormat) {
    const formatter = new Intl.RelativeTimeFormat(locale, {
      style: 'long',
      numeric: 'always'
    });
    return formatter.format(value, unit);
  }

  return fallbackFormatter(value, unit);
}

function fallbackFormatter(value, unit) {
  // eslint-disable-next-line no-console
  console.warn(`The current environment does not support formatters for relative time.`);
  const absoluteValue = Math.abs(value);
  const unitString = absoluteValue !== 1 ? unit + fallbackPluralSuffix : unit;
  const label = value > 0 ? fallbackFutureLabel : fallbackPastLabel;
  return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_4__.formatLabel)(label, absoluteValue, unitString);
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/configProvider/defaultLocalizationConfig.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/configProvider/defaultLocalizationConfig.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/iso8601Utils */ "./node_modules/lightning-base-components/src/lightning/iso8601Utils/iso8601Utils.js");
/* harmony import */ var _defaultDurationConfig__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultDurationConfig */ "./node_modules/lightning-base-components/src/lightning/configProvider/defaultDurationConfig.js");
/* harmony import */ var _salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/i18n/locale */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-locale.js");
/* harmony import */ var _salesforce_i18n_common_digits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @salesforce/i18n/common.digits */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-common.digits.js");
/* harmony import */ var _salesforce_i18n_defaultNumberingSystem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @salesforce/i18n/defaultNumberingSystem */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-defaultNumberingSystem.js");
// default implementation of localization service. This covers the current usage of the localizationService in the code base.
// This should be removed/heavily reworked when migrating off Aura





const MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
const DATE_FORMAT = {
  short: 'M/d/yyyy',
  medium: 'MMM d, yyyy',
  long: 'MMMM d, yyyy'
};
const TIME_FORMAT = {
  short: 'h:mm a',
  medium: 'h:mm:ss a',
  long: 'h:mm:ss a'
}; // The parseTime method normalizes the time format so that minor deviations are accepted

const TIME_FORMAT_SIMPLE = {
  short: 'h:m a',
  medium: 'h:m:s a',
  long: 'h:m:s a'
};
const BUDDHIST_YEAR_OFFSET = 543; // Only works with dates and iso strings
// formats the date object by ignoring the timezone offset
// e.g. assume date is Mar 11 2019 00:00:00 GMT+1100:
// formatDate(date, 'YYYY-MM-DD') -> 2019-03-11

function formatDate(value, format) {
  let isUTC = false;
  let dateString = value;

  if (typeof value === 'string') {
    dateString = value.split(lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_0__.TIME_SEPARATOR)[0];
    isUTC = true;
  }

  return formatDateInternal(dateString, format, isUTC);
} // Only works with date objects.
// formats the date object according to UTC.
// e.g. assume date is Mar 11 2019 00:00:00 GMT+1100:
// formatDateUTC(date, 'YYYY-MM-DD') -> 2019-03-10


function formatDateUTC(value, format) {
  return formatDateInternal(value, format, true);
} // Only works with a date object


function formatTime(date, format) {
  if (!isDate(date)) {
    return new Date('');
  }

  const hours = (date.getHours() + 11) % 12 + 1;
  const suffix = date.getHours() >= 12 ? 'PM' : 'AM';

  switch (format) {
    case lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_0__.STANDARD_TIME_FORMAT:
      // 16:12:32.000
      return `${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}.${doublePad(date.getMilliseconds())}`;

    case TIME_FORMAT.short:
      // 4:12 PM;
      return `${hours}:${pad(date.getMinutes())} ${suffix}`;

    case TIME_FORMAT.medium:
    case TIME_FORMAT.long:
    default:
      // 4:12:32 PM;
      return `${hours}:${pad(date.getMinutes())}:${pad(date.getSeconds())} ${suffix}`;
  }
} // Only works with a date object
// formats the date object according to UTC.
// e.g. assume date is Mar 11 2019 00:00:00 GMT+1100:
// formatDateTimeUTC(date) -> 2019-03-10  1:00:00 PM


function formatDateTimeUTC(value) {
  if (!isDate(value)) {
    return new Date('');
  }

  const date = new Date(value.getTime());
  return `${formatDateUTC(date)}, ${formatTime(addTimezoneOffset(date))}`;
} // parses ISO8601 date/time strings. Currently only used to parse ISO time strings without a TZD. Some examples:
// 20:00:00.000             -> Feb 26 2019 20:00:00 GMT-0500
// 2019-03-11               -> Mar 11 2019 00:00:00 GMT-0400
// 2019-03-11T00:00:00.000Z -> Mar 10 2019 20:00:00 GMT-0400


function parseDateTimeISO8601(value) {
  let isoString = null;
  let shouldAddOffset = true;

  if ((0,lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_0__.isValidISOTimeString)(value)) {
    isoString = `${getTodayInISO()}T${addTimezoneSuffix(value)}`;
  } else if ((0,lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_0__.isValidISODateTimeString)(value)) {
    if (value.indexOf(lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_0__.TIME_SEPARATOR) > 0) {
      isoString = addTimezoneSuffix(value);
      shouldAddOffset = false;
    } else {
      isoString = `${value}T00:00:00.000Z`;
    }
  }

  if (isoString) {
    // Browsers differ on how they treat iso strings without a timezone offset (local vs utc time)
    const parsedDate = new Date(isoString);

    if (shouldAddOffset) {
      addTimezoneOffset(parsedDate);
    }

    return parsedDate;
  }

  return null;
} // called by the datepicker and calendar for parsing iso and formatted date strings
// called by the timepicker to parse the formatted time string


function parseDateTime(value, format) {
  if (format === lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_0__.STANDARD_DATE_FORMAT && (0,lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_0__.isValidISODateTimeString)(value)) {
    return parseDateTimeISO8601(value);
  }

  if (Object.values(DATE_FORMAT).includes(format)) {
    return parseFormattedDate(value, format);
  }

  if (Object.values(TIME_FORMAT_SIMPLE).includes(format)) {
    return parseFormattedTime(value);
  }

  return null;
} // The input to this method is always an ISO string with timezone offset.


function parseDateTimeUTC(value) {
  return parseDateTimeISO8601(addTimezoneSuffix(value));
}

function isBefore(date1, date2, unit) {
  const normalizedDate1 = getDate(date1);
  const normalizedDate2 = getDate(date2);

  if (!normalizedDate1 || !normalizedDate2) {
    return false;
  }

  return startOf(normalizedDate1, unit).getTime() < startOf(normalizedDate2, unit).getTime();
} // unit can be millisecond, minute, day


function isAfter(date1, date2, unit) {
  const normalizedDate1 = getDate(date1);
  const normalizedDate2 = getDate(date2);

  if (!normalizedDate1 || !normalizedDate2) {
    return false;
  }

  return startOf(normalizedDate1, unit).getTime() > startOf(normalizedDate2, unit).getTime();
} // We're not doing timezone conversion in the default config. Only converting from UTC to system timezone


function UTCToWallTime(date, timezone, callback) {
  const utcDate = new Date(date.getTime());
  callback(subtractTimezoneOffset(utcDate));
} // We're not doing timezone conversion in the default config. Only converting from system timezone to UTC


function WallTimeToUTC(date, timezone, callback) {
  const localDate = new Date(date.getTime());
  callback(addTimezoneOffset(localDate));
} // Similar to Aura equivalent; add years for buddhist calendar


function translateToOtherCalendar(date) {
  if (_salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_2__.default === 'th-TH') {
    date.setFullYear(date.getFullYear() + BUDDHIST_YEAR_OFFSET);
  }

  return date;
} // Similar to Aura equivalent; subtract years for buddhist calendar


function translateFromOtherCalendar(date) {
  if (_salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_2__.default === 'th-TH') {
    date.setFullYear(date.getFullYear() - BUDDHIST_YEAR_OFFSET);
  }

  return date;
}
/**
 * Converts input from 'fromDigits' numbering system
 * to 'toDigits' numbering system
 */


function convertDigits(input, fromDigits, toDigits) {
  if (!input || !_salesforce_i18n_common_digits__WEBPACK_IMPORTED_MODULE_3__.default[fromDigits] || !_salesforce_i18n_common_digits__WEBPACK_IMPORTED_MODULE_3__.default[toDigits]) {
    return input;
  }

  const digitMap = {};
  _salesforce_i18n_common_digits__WEBPACK_IMPORTED_MODULE_3__.default[fromDigits].split('').forEach((digit, index) => {
    digitMap[digit] = _salesforce_i18n_common_digits__WEBPACK_IMPORTED_MODULE_3__.default[toDigits][index];
  });
  return input.split('').map(number => {
    return digitMap[number];
  }).join('');
} // Translates from latn digits to digits of current locale


function translateToLocalizedDigits(input) {
  if (_salesforce_i18n_defaultNumberingSystem__WEBPACK_IMPORTED_MODULE_4__.default !== 'latn') {
    return convertDigits(input, 'latn', _salesforce_i18n_defaultNumberingSystem__WEBPACK_IMPORTED_MODULE_4__.default);
  }

  return input;
} // Translates from current locale digits to latn digits


function translateFromLocalizedDigits(input) {
  if (_salesforce_i18n_defaultNumberingSystem__WEBPACK_IMPORTED_MODULE_4__.default !== 'latn') {
    return convertDigits(input, _salesforce_i18n_defaultNumberingSystem__WEBPACK_IMPORTED_MODULE_4__.default, 'latn');
  }

  return input;
} // This is called from the numberFormat library when the value exceeds the safe length.
// We currently rely on aura to format large numbers


function getNumberFormat() {
  return {
    format: value => {
      // eslint-disable-next-line no-console
      console.warn(`The current environment does not support large numbers and the original value of ${value} will be returned.`);
      return value;
    }
  };
} // relativeDateTime (currently the only user of duration) uses unit="minutes"
// The default implementation here assumes the unit is always minutes.


function duration(minutes) {
  return new _defaultDurationConfig__WEBPACK_IMPORTED_MODULE_1__.default(minutes * 60 * 1000);
}

function displayDuration(value) {
  return value.humanize('en');
} // parses a time string formatted in en-US locale i.e. h:mm:ss a


function parseFormattedTime(value) {
  // for time strings it's easier to just split on :.\s
  const values = value.trim().split(/[:.\s*]/); // at least two parts i.e. 12 PM, and at most 5 parts i.e. 12:34:21.432 PM

  const length = values.length;

  if (!values || length < 2 || length > 5) {
    return null;
  }

  const ampm = values[length - 1];
  const isBeforeNoon = ampm.toLowerCase() === 'am';
  const isAfternoon = ampm.toLowerCase() === 'pm'; // remove ampm

  values.splice(-1, 1);
  const allNumbers = values.every(item => !isNaN(item));

  if (!isAfternoon && !isBeforeNoon || !allNumbers) {
    return null;
  }

  const hours = values[0];
  const hour24 = pad(isAfternoon ? hours % 12 + 12 : hours % 12);
  const minutes = length >= 3 && values[1] || '0';
  const seconds = length >= 4 && values[2] || '0';
  const milliseconds = length === 5 && values[3] || '0';
  const newDate = new Date(getTodayInISO());
  newDate.setHours(hour24, minutes, seconds, milliseconds);
  return isDate(newDate) ? newDate : null;
} // parses a date string formatted in en-US locale, i.e. MMM d, yyyy


function parseFormattedDate(value, format) {
  // default to medium style pattern
  let pattern = /^([a-zA-Z]{3})\s*(\d{1,2}),\s*(\d{4})$/;

  switch (format) {
    case DATE_FORMAT.short:
      pattern = /^(\d{1,2})\/(\d{1,2})\/(\d{4})$/;
      break;

    case DATE_FORMAT.long:
      pattern = /^([a-zA-Z]+)\s*(\d{1,2}),\s*(\d{4})$/;
      break;

    default:
  } // matches[1]: month, matches[2]: day, matches[3]: year


  const match = pattern.exec(value.trim());

  if (!match) {
    return null;
  }

  let month = match[1];
  const day = match[2];
  const year = match[3]; // for long and medium style formats, we need to find the month index

  if (format !== DATE_FORMAT.short) {
    month = MONTH_NAMES.findIndex(item => item.toLowerCase().includes(month.toLowerCase())); // the actual month for the ISO string is 1 more than the index

    month += 1;
  }

  const isoValue = `${year}-${pad(month)}-${pad(day)}`;
  const newDate = new Date(`${isoValue}T00:00:00.000Z`);
  return isDate(newDate) ? addTimezoneOffset(newDate) : null;
}

function formatDateInternal(value, format, isUTC) {
  const date = getDate(value);

  if (!date) {
    // return Invalid Date
    return new Date('');
  }

  if (isUTC && isDate(value)) {
    // if value is an ISO string, we already add the timezone offset when parsing the date string.
    addTimezoneOffset(date);
  }

  switch (format) {
    case lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_0__.STANDARD_DATE_FORMAT:
      return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}`;

    case DATE_FORMAT.short:
      return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;

    case DATE_FORMAT.long:
      return `${MONTH_NAMES[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;

    case DATE_FORMAT.medium:
    default:
      {
        const shortMonthName = MONTH_NAMES[date.getMonth()].substring(0, 3);
        return `${shortMonthName} ${date.getDate()}, ${date.getFullYear()}`;
      }
  }
} // unit can be 'day' or 'minute', otherwise will default to milliseconds. These are the only units that are currently used in the codebase.


function startOf(date, unit) {
  switch (unit) {
    case 'day':
      date.setHours(0);
      date.setMinutes(0);
    // falls through

    case 'minute':
      date.setSeconds(0);
      date.setMilliseconds(0);
      break;

    default:
  }

  return date;
}

function isDate(value) {
  return Object.prototype.toString.call(value) === '[object Date]' && !isNaN(value.getTime());
}

function addTimezoneSuffix(value) {
  // first remove TZD if the string has one, and then add Z
  return (0,lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_0__.removeTimeZoneSuffix)(value) + 'Z';
}

function addTimezoneOffset(date) {
  date.setMinutes(date.getMinutes() + date.getTimezoneOffset());
  return date;
}

function subtractTimezoneOffset(date) {
  date.setMinutes(date.getMinutes() - date.getTimezoneOffset());
  return date;
}

function getDate(value) {
  if (!value) {
    return null;
  }

  if (isDate(value)) {
    return new Date(value.getTime());
  }

  if (isFinite(value) && (typeof value === 'number' || typeof value === 'string')) {
    return new Date(parseInt(value, 10));
  }

  if (typeof value === 'string') {
    return parseDateTimeISO8601(value);
  }

  return null;
}

function getTodayInISO() {
  return new Date().toISOString().split('T')[0];
}

function pad(n) {
  return Number(n) < 10 ? '0' + n : n;
}

function doublePad(n) {
  return Number(n) < 10 ? '00' + n : Number(n) < 100 ? '0' + n : n;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  formatDate,
  formatDateUTC,
  formatTime,
  formatDateTimeUTC,
  parseDateTimeISO8601,
  parseDateTime,
  parseDateTimeUTC,
  isBefore,
  isAfter,
  UTCToWallTime,
  WallTimeToUTC,
  translateToOtherCalendar,
  translateFromOtherCalendar,
  translateToLocalizedDigits,
  translateFromLocalizedDigits,
  getNumberFormat,
  duration,
  displayDuration
});

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/datepicker/datepicker.html":
/*!*****************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/datepicker/datepicker.html ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _datepicker_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./datepicker.css */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var _datepicker_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./datepicker.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lightning_helptext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/helptext */ "./node_modules/lightning-base-components/src/lightning/helptext/helptext.js");
/* harmony import */ var lightning_buttonIcon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/buttonIcon */ "./node_modules/lightning-base-components/src/lightning/buttonIcon/buttonIcon.js");
/* harmony import */ var lightning_calendar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lightning/calendar */ "./node_modules/lightning-base-components/src/lightning/calendar/calendar.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");








function tmpl($api, $cmp, $slotset, $ctx) {
  const {gid: api_scoped_id, t: api_text, h: api_element, d: api_dynamic_text, c: api_custom_element, b: api_bind} = $api;
  const {_m0, _m1, _m2, _m3, _m4, _m5, _m6, _m7, _m8, _m9, _m10, _m11, _m12, _m13, _m14} = $ctx;
  return [api_element("div", {
    classMap: {
      "slds-dropdown-trigger": true,
      "slds-dropdown-trigger_click": true,
      "slds-size_1-of-1": true
    },
    attrs: {
      "role": "group"
    },
    key: 0
  }, [!$cmp.hasExternalLabel ? api_element("label", {
    className: $cmp.computedLabelClass,
    attrs: {
      "for": api_scoped_id("input")
    },
    key: 1
  }, [$cmp.required ? api_element("abbr", {
    classMap: {
      "slds-required": true
    },
    attrs: {
      "title": $cmp.i18n.required
    },
    key: 2
  }, [api_text("*")]) : null, api_text(api_dynamic_text($cmp.label))]) : null, !$cmp.hasExternalLabel ? $cmp.fieldLevelHelp ? api_custom_element("lightning-helptext", lightning_helptext__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "content": $cmp.fieldLevelHelp,
      "alternativeText": $cmp.helptextAlternativeText
    },
    key: 3
  }, []) : null : null, $cmp.isRangeMessageVisible ? api_element("span", {
    classMap: {
      "slds-assistive-text": true
    },
    attrs: {
      "id": api_scoped_id("range-message"),
      "data-range-message": ""
    },
    key: 4
  }, [api_text(api_dynamic_text($cmp.rangeMessage))]) : null, api_element("div", {
    classMap: {
      "slds-form-element__control": true,
      "slds-input-has-icon": true,
      "slds-input-has-icon_right": true
    },
    key: 5
  }, [api_element("input", {
    classMap: {
      "slds-input": true
    },
    attrs: {
      "type": "text",
      "id": api_scoped_id("input"),
      "name": $cmp.name,
      "placeholder": $cmp.placeholder,
      "aria-invalid": $cmp.computedAriaInvalid,
      "aria-label": $cmp.ariaLabel,
      "required": $cmp.required ? "" : null,
      "readonly": $cmp.readOnly ? "" : null,
      "disabled": $cmp.disabled ? "" : null,
      "autocomplete": $cmp.autocomplete
    },
    props: {
      "value": $cmp.displayValue
    },
    key: 6,
    on: {
      "input": _m0 || ($ctx._m0 = api_bind($cmp.handleInput)),
      "change": _m1 || ($ctx._m1 = api_bind($cmp.handleInputChange)),
      "focusin": _m2 || ($ctx._m2 = api_bind($cmp.onFocusIn)),
      "focusout": _m3 || ($ctx._m3 = api_bind($cmp.handleInputBlur)),
      "keydown": _m4 || ($ctx._m4 = api_bind($cmp.handleInputKeydown)),
      "click": _m5 || ($ctx._m5 = api_bind($cmp.handleInputClick))
    }
  }, []), api_custom_element("lightning-button-icon", lightning_buttonIcon__WEBPACK_IMPORTED_MODULE_3__.default, {
    classMap: {
      "slds-input__icon": true,
      "slds-input__icon_right": true
    },
    props: {
      "iconName": "utility:event",
      "variant": "bare",
      "disabled": $cmp.computedIconDisabledState,
      "title": $cmp.computedSelectDateLabel,
      "alternativeText": $cmp.computedSelectDateLabel
    },
    key: 7,
    on: {
      "click": _m6 || ($ctx._m6 = api_bind($cmp.handleDatePickerIconClick)),
      "keydown": _m7 || ($ctx._m7 = api_bind($cmp.handleDatePickerIconKeyDown)),
      "focusin": _m8 || ($ctx._m8 = api_bind($cmp.onFocusIn)),
      "focusout": _m9 || ($ctx._m9 = api_bind($cmp.onFocusOut))
    }
  }, []), $cmp.isCalendarVisible ? api_custom_element("lightning-calendar", lightning_calendar__WEBPACK_IMPORTED_MODULE_4__.default, {
    props: {
      "value": $cmp.value,
      "min": $cmp.min,
      "max": $cmp.max
    },
    key: 8,
    on: {
      "select": _m10 || ($ctx._m10 = api_bind($cmp.handleDateSelect)),
      "ready": _m11 || ($ctx._m11 = api_bind($cmp.startPositioning)),
      "keydown": _m12 || ($ctx._m12 = api_bind($cmp.handleCalendarKeyDown)),
      "focusin": _m13 || ($ctx._m13 = api_bind($cmp.onFocusIn)),
      "focusout": _m14 || ($ctx._m14 = api_bind($cmp.onFocusOut))
    }
  }, []) : null])]), api_element("div", {
    className: $cmp.computedClass,
    attrs: {
      "id": api_scoped_id("error-message"),
      "data-error-message": "",
      "aria-live": "assertive"
    },
    key: 9
  }, [api_text(api_dynamic_text($cmp.errorMessage))])];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_5__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_datepicker_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _datepicker_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_datepicker_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _datepicker_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-datepicker_datepicker"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/datepicker/datepicker.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/datepicker/datepicker.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _datepicker_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./datepicker.html */ "./node_modules/lightning-base-components/src/lightning/datepicker/datepicker.html");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_invalidDate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.invalidDate */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.invalidDate.js");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_rangeOverflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.rangeOverflow */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.rangeOverflow.js");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_rangeUnderflow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.rangeUnderflow */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.rangeUnderflow.js");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_minRangeMessage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.minRangeMessage */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.minRangeMessage.js");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_maxRangeMessage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.maxRangeMessage */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.maxRangeMessage.js");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_minAndMaxRangeMessage__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.minAndMaxRangeMessage */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.minAndMaxRangeMessage.js");
/* harmony import */ var _salesforce_label_LightningControl_required__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @salesforce/label/LightningControl.required */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.required.js");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_selectDateFor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.selectDateFor */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.selectDateFor.js");
/* harmony import */ var _salesforce_label_LightningInput_helptextAlternativeText__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @salesforce/label/LightningInput.helptextAlternativeText */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInput.helptextAlternativeText.js");
/* harmony import */ var lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lightning/internationalizationLibrary */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/internationalizationLibrary.js");
/* harmony import */ var lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! lightning/positionLibrary */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/positionLibrary.js");
/* harmony import */ var lightning_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! lightning/utils */ "./node_modules/lightning-base-components/src/lightning/utils/utils.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var lightning_inputUtils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! lightning/inputUtils */ "./node_modules/lightning-base-components/src/lightning/inputUtils/inputUtils.js");
/* harmony import */ var _keyboard__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./keyboard */ "./node_modules/lightning-base-components/src/lightning/datepicker/keyboard.js");

















const i18n = {
  invalidDate: _salesforce_label_LightningDateTimePicker_invalidDate__WEBPACK_IMPORTED_MODULE_2__.default,
  rangeOverflow: _salesforce_label_LightningDateTimePicker_rangeOverflow__WEBPACK_IMPORTED_MODULE_3__.default,
  rangeUnderflow: _salesforce_label_LightningDateTimePicker_rangeUnderflow__WEBPACK_IMPORTED_MODULE_4__.default,
  minRangeMessage: _salesforce_label_LightningDateTimePicker_minRangeMessage__WEBPACK_IMPORTED_MODULE_5__.default,
  maxRangeMessage: _salesforce_label_LightningDateTimePicker_maxRangeMessage__WEBPACK_IMPORTED_MODULE_6__.default,
  minAndMaxRangeMessage: _salesforce_label_LightningDateTimePicker_minAndMaxRangeMessage__WEBPACK_IMPORTED_MODULE_7__.default,
  required: _salesforce_label_LightningControl_required__WEBPACK_IMPORTED_MODULE_8__.default,
  selectDateFor: _salesforce_label_LightningDateTimePicker_selectDateFor__WEBPACK_IMPORTED_MODULE_9__.default,
  helpTextAlternativeText: _salesforce_label_LightningInput_helptextAlternativeText__WEBPACK_IMPORTED_MODULE_10__.default
};
const ARIA_CONTROLS = 'aria-controls';
const ARIA_LABEL = 'aria-label';
const ARIA_LABELLEDBY = 'aria-labelledby';
const ARIA_DESCRIBEDBY = 'aria-describedby';
const ARIA_INVALID = 'aria-invalid';
const DATE_STYLE = {
  SHORT: 'short',
  MEDIUM: 'medium',
  LONG: 'long'
};

class LightningDatePicker extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  /**
   * Controls auto-filling of the input. Set the attribute to pass
   * through autocomplete values to be interpreted by the browser.
   * By default autocomplete is off to avoid overlap of dropdown.
   * @type {string}
   */
  get min() {
    return this._min;
  }

  set min(value) {
    // W-7702418: We previously always set the raw value and should continue to do so unless
    // normalization of the given value is possible.
    this._min = value;
    this._displayMin = value;
    const normalizedDate = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_11__.normalizeISODate)(value, this.dateStyle);

    if (normalizedDate.isoValue) {
      this._min = normalizedDate.isoValue;
      this._displayMin = normalizedDate.displayValue;
    }
  }

  get max() {
    return this._max;
  }

  set max(value) {
    // W-7702418: We previously always set the raw value and should continue to do so unless
    // normalization of the given value is possible.
    this._max = value;
    this._displayMax = value;
    const normalizedDate = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_11__.normalizeISODate)(value, this.dateStyle);

    if (normalizedDate.isoValue) {
      this._max = normalizedDate.isoValue;
      this._displayMax = normalizedDate.displayValue;
    }
  }

  get messageWhenBadInput() {
    return this._messageWhenBadInput || (0,lightning_utils__WEBPACK_IMPORTED_MODULE_13__.formatLabel)(this.i18n.invalidDate, (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_11__.getDateFormatFromStyle)(this.dateStyle, true));
  }

  set messageWhenBadInput(message) {
    this._messageWhenBadInput = message;
  }

  get messageWhenRangeOverflow() {
    return this._messageWhenRangeOverflow || (0,lightning_utils__WEBPACK_IMPORTED_MODULE_13__.formatLabel)(this.i18n.rangeOverflow, this._displayMax);
  }

  set messageWhenRangeOverflow(message) {
    this._messageWhenRangeOverflow = message;
  }

  get messageWhenRangeUnderflow() {
    return this._messageWhenRangeUnderflow || (0,lightning_utils__WEBPACK_IMPORTED_MODULE_13__.formatLabel)(this.i18n.rangeUnderflow, this._displayMin);
  }

  set messageWhenRangeUnderflow(message) {
    this._messageWhenRangeUnderflow = message;
  } // setter is required to properly trigger update


  get ariaLabel() {
    return this._ariaLabel;
  }

  set ariaLabel(val) {
    this._ariaLabel = val;
    this.synchronizeA11y();
  }

  set ariaLabelledByElement(el) {
    this._ariaLabelledBy = el;
    this.synchronizeA11y();
  }

  get ariaLabelledByElement() {
    return this._ariaLabelledBy;
  }

  set ariaControlsElement(el) {
    this._ariaControls = el;
    this.synchronizeA11y();
  }

  get ariaControlsElement() {
    return this._ariaControls;
  }

  set ariaDescribedByElements(el) {
    if (Array.isArray(el)) {
      this._ariaDescribedBy = el;
    } else {
      this._ariaDescribedBy = [el];
    }

    this.synchronizeA11y();
  }

  get ariaDescribedByElements() {
    return this._ariaDescribedBy;
  }

  get ariaLabelledbyId() {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_14__.getRealDOMId)(this._ariaLabelledBy);
  }

  get ariaControlsId() {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_14__.getRealDOMId)(this.ariaControlsElement);
  }

  synchronizeA11y() {
    const input = this.template.querySelector('input');

    if (!input) {
      return;
    }

    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_14__.synchronizeAttrs)(input, {
      [ARIA_LABELLEDBY]: this.ariaLabelledbyId,
      [ARIA_DESCRIBEDBY]: this.computedAriaDescribedby,
      [ARIA_CONTROLS]: this.ariaControlsId,
      [ARIA_LABEL]: this._ariaLabel,
      [ARIA_INVALID]: this.computedAriaInvalid
    }); // Set aria-describedby on the calendar button that opens the calendar dialog
    // to inform user of date validity (min/max). Same is done for input.

    const calendarButton = this.template.querySelector('lightning-button-icon');
    calendarButton.ariaDescribedBy = this.computedDatepickerButtonAriaDescribedby;
  }

  renderedCallback() {
    this.synchronizeA11y();
  }

  get value() {
    return this._value;
  }

  set value(newValue) {
    const normalizedDate = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_11__.normalizeISODate)(newValue, this.dateStyle);
    this._value = normalizedDate.isoValue;
    this._displayValue = normalizedDate.displayValue;
  }

  get disabled() {
    return this._disabled;
  }

  set disabled(value) {
    this._disabled = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_14__.normalizeBoolean)(value);
  }

  get readOnly() {
    return this._readonly;
  }

  set readOnly(value) {
    this._readonly = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_14__.normalizeBoolean)(value);
  }

  get required() {
    return this._required;
  }

  set required(value) {
    this._required = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_14__.normalizeBoolean)(value);
  }

  set fieldLevelHelp(value) {
    this._fieldLevelHelp = value;
  }

  get fieldLevelHelp() {
    return this._fieldLevelHelp;
  }

  get variant() {
    return this._variant || lightning_inputUtils__WEBPACK_IMPORTED_MODULE_15__.VARIANT.STANDARD;
  }

  set variant(value) {
    this._variant = (0,lightning_inputUtils__WEBPACK_IMPORTED_MODULE_15__.normalizeVariant)(value);
  }

  focus() {
    if (this.connected) {
      this.inputElement.focus();
    }
  }

  blur() {
    if (this.connected) {
      this.inputElement.blur();
    }
  }

  showHelpMessage(message) {
    if (!message) {
      this.classList.remove('slds-has-error');
      this._errorMessage = '';
    } else {
      this.classList.add('slds-has-error');
      this._errorMessage = message;
    }
  }

  hasBadInput() {
    return !!this._displayValue && this._value === null;
  }

  get dateStyle() {
    return this._dateStyle;
  }

  set dateStyle(value) {
    this._dateStyle = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_14__.normalizeString)(value, {
      fallbackValue: DATE_STYLE.MEDIUM,
      validValues: [DATE_STYLE.SHORT, DATE_STYLE.MEDIUM, DATE_STYLE.LONG]
    });
    const normalizedDate = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_11__.normalizeISODate)(this._value, this.dateStyle);
    this._displayValue = normalizedDate.displayValue;
  }

  constructor() {
    super();
    this._disabled = false;
    this._readonly = false;
    this._required = false;
    this._value = null;
    this._calendarVisible = false;
    this._displayValue = null;
    this._errorMessage = '';
    this._fieldLevelHelp = void 0;
    this._variant = void 0;
    this._min = void 0;
    this._max = void 0;
    this._displayMin = void 0;
    this._displayMax = void 0;
    this._dateStyle = DATE_STYLE.MEDIUM;
    this.label = void 0;
    this.name = void 0;
    this.placeholder = void 0;
    this.autocomplete = 'off';
    this.messageWhenValueMissing = void 0;
    this._ariaLabelledBy = void 0;
    this._ariaControls = void 0;
    this._ariaDescribedBy = [];
    this.uniqueId = (0,lightning_inputUtils__WEBPACK_IMPORTED_MODULE_15__.generateUniqueId)();
  }

  connectedCallback() {
    this.connected = true;
    this.keyboardInterface = this.datepickerKeyboardInterface();
  }

  disconnectedCallback() {
    this.connected = false;
  }

  get i18n() {
    return i18n;
  }

  get isLabelHidden() {
    return this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_15__.VARIANT.LABEL_HIDDEN;
  }

  get computedLabelClass() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_13__.classSet)('slds-form-element__label').add({
      'slds-assistive-text': this.isLabelHidden
    }).toString();
  }

  get computedUniqueErrorMessageElementId() {
    const el = this.template.querySelector('[data-error-message]');
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_14__.getRealDOMId)(el);
  }

  get computedUniqueRangeMessageElementId() {
    const el = this.template.querySelector('[data-range-message]');
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_14__.getRealDOMId)(el);
  }

  get isRangeMessageVisible() {
    return this.min || this.max;
  }

  get isCalendarVisible() {
    return this._calendarVisible;
  }

  get displayValue() {
    return this._displayValue;
  }

  get computedClass() {
    let displayClass = this.errorMessage ? 'slds-show' : 'slds-hide';
    return 'slds-form-element__help ' + displayClass;
  }

  get errorMessage() {
    return this._errorMessage;
  }

  get computedIconDisabledState() {
    return this.disabled || this.readOnly;
  }

  get computedAriaDescribedby() {
    const ariaValues = [];

    if (this.errorMessage) {
      ariaValues.push(this.computedUniqueErrorMessageElementId);
    } // To inform user of valid date ranges that are set via min/max attributes


    if (this.isRangeMessageVisible) {
      ariaValues.push(this.computedUniqueRangeMessageElementId);
    }

    this._ariaDescribedBy.forEach(item => {
      const id = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_14__.getRealDOMId)(item);

      if (id) {
        ariaValues.push(id);
      }
    });

    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_14__.normalizeAriaAttribute)(ariaValues);
  }

  get computedDatepickerButtonAriaDescribedby() {
    if (this.isRangeMessageVisible) {
      return this.computedUniqueRangeMessageElementId;
    }

    return '';
  }

  get computedSelectDateLabel() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_13__.formatLabel)(this.i18n.selectDateFor, this.label);
  }

  get rangeMessage() {
    if (this.min && !this.max) {
      // If only min is set
      return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_13__.formatLabel)(this.i18n.minRangeMessage, this._displayMin);
    } else if (this.max && !this.min) {
      // If only max is set
      return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_13__.formatLabel)(this.i18n.maxRangeMessage, this._displayMax);
    } else if (this.min && this.max) {
      // If both min and max are set
      return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_13__.formatLabel)(this.i18n.minAndMaxRangeMessage, this._displayMin, this._displayMax);
    }

    return '';
  }

  handleInputChange(event) {
    event.stopPropagation(); // keeping the display value in sync with the element's value

    this._displayValue = event.currentTarget.value;
    this._value = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_11__.parseFormattedDate)(this._displayValue).value;
    this.dispatchChangeEvent();
  }

  handleInput() {
    // keeping the display value in sync with the element's value
    this._displayValue = this.inputElement.value; // IE11 fires an input event along with the click event when the element has a placeholder.
    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/101220/
    // remove this block when we stop support for IE11

    if (lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_14__.isIE11 && this.placeholder !== undefined) {
      return;
    } // Making sure that the focus remains on the input and we're not triggering leave


    this.hideCalendarAndFocusTrigger();
  }

  handleInputBlur() {
    if (this._value !== null) {
      const normalizedDate = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_11__.normalizeISODate)(this._value, this.dateStyle);
      this._displayValue = normalizedDate.displayValue;
    }

    this.onFocusOut();
  }

  handleInputClick(event) {
    if (this.readOnly) {
      return;
    }

    this.calendarTrigger = event.target;
    this.showCalendar();
  }
  /**
   * When the element gains focus this function is called.
   */


  onFocusIn() {
    if (this._pendingFocusOut) {
      this._pendingFocusOut = false;
    }

    if (!this._focused) {
      this.dispatchEvent(new CustomEvent('focus'));
    }

    this._focused = true;
  }
  /**
   * When the element looses its focus this function is called.
   */


  onFocusOut() {
    // This assumes that a focusin will be dispatched after a focusout
    this._pendingFocusOut = true; // eslint-disable-next-line @lwc/lwc/no-async-operation

    requestAnimationFrame(() => {
      if (this._pendingFocusOut) {
        this._focused = false;
        this.hideCalendar();
        this.dispatchEvent(new CustomEvent('blur'));
      }
    });
  }

  handleDatePickerIconClick(event) {
    if (this.readOnly || this.disabled) {
      return;
    }

    this.calendarTrigger = event.target;
    this.showAndFocusCalendar();
  }

  handleInputKeydown(event) {
    this.calendarTrigger = event.target;
    (0,_keyboard__WEBPACK_IMPORTED_MODULE_16__.handleBasicKeyDownBehaviour)(event, this.keyboardInterface);
  }

  handleDatePickerIconKeyDown(event) {
    this.calendarTrigger = event.target;
    (0,_keyboard__WEBPACK_IMPORTED_MODULE_16__.handleKeyDownOnDatePickerIcon)(event, this.keyboardInterface);
  }

  handleCalendarKeyDown(event) {
    (0,_keyboard__WEBPACK_IMPORTED_MODULE_16__.handleBasicKeyDownBehaviour)(event, this.keyboardInterface);
  }

  handleDateSelect(event) {
    event.stopPropagation();
    this._value = event.detail.value;
    this._displayValue = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_11__.normalizeISODate)(this._value, this.dateStyle).displayValue;
    this.hideCalendarAndFocusTrigger();
    this.dispatchChangeEvent();
  }

  showAndFocusCalendar() {
    this.showCalendar(); // eslint-disable-next-line @lwc/lwc/no-async-operation

    requestAnimationFrame(() => {
      this.focusCalendar();
    });
  }

  hideCalendarAndFocusTrigger() {
    this.hideCalendar();

    if (this.calendarTrigger) {
      this.calendarTrigger.focus();
    }
  }

  focusCalendar() {
    const calendar = this.template.querySelector('lightning-calendar');

    if (calendar) {
      calendar.focus();
    }
  }

  startPositioning() {
    if (!this._relationship) {
      this._relationship = (0,lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_12__.startPositioning)(this, {
        target: () => this.template.querySelector('input'),
        element: () => this.template.querySelector('lightning-calendar').shadowRoot.querySelector('div'),
        align: {
          horizontal: lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_12__.Direction.Right,
          vertical: lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_12__.Direction.Top
        },
        targetAlign: {
          horizontal: lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_12__.Direction.Right,
          vertical: lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_12__.Direction.Bottom
        },
        autoFlip: true,
        // Auto flip direction if not have enough space
        leftAsBoundary: true // horizontal flip uses target left as boundary

      });
    } else {
      this._relationship.reposition();
    }
  }

  stopPositioning() {
    if (this._relationship) {
      (0,lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_12__.stopPositioning)(this._relationship);
      this._relationship = null;
    }
  }

  showCalendar() {
    if (!this.isCalendarVisible) {
      this.rootElement.classList.add('slds-is-open');
      this._calendarVisible = true;
    }
  }

  hideCalendar() {
    if (this.isCalendarVisible) {
      this.rootElement.classList.remove('slds-is-open');
      this.stopPositioning();
      this._calendarVisible = false;
    }
  }

  get rootElement() {
    return this.template.querySelector('div');
  }

  get inputElement() {
    return this.template.querySelector('input');
  }

  dispatchChangeEvent() {
    this.dispatchEvent(new CustomEvent('change', {
      composed: true,
      bubbles: true,
      detail: {
        value: this._value
      }
    }));
  }

  datepickerKeyboardInterface() {
    const that = this;
    return {
      showCalendar() {
        that.showAndFocusCalendar();
      },

      hideCalendar() {
        that.hideCalendarAndFocusTrigger();
      },

      isCalendarVisible() {
        return that.isCalendarVisible;
      }

    };
  }

  get hasExternalLabel() {
    return this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_15__.VARIANT.LABEL_HIDDEN && this.ariaLabelledByElement && this.ariaLabelledByElement.length;
  }

  get computedAriaInvalid() {
    const isAriaInvalid = this.template.host.getAttribute('data-aria-invalid') || this._errorMessage;

    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_14__.computeAriaInvalid)(isAriaInvalid, this.value);
  }

  get helptextAlternativeText() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_13__.formatLabel)(i18n.helpTextAlternativeText, this.label);
  }

}

LightningDatePicker.delegatesFocus = true;

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningDatePicker, {
  publicProps: {
    label: {
      config: 0
    },
    name: {
      config: 0
    },
    placeholder: {
      config: 0
    },
    autocomplete: {
      config: 0
    },
    messageWhenValueMissing: {
      config: 0
    },
    min: {
      config: 3
    },
    max: {
      config: 3
    },
    messageWhenBadInput: {
      config: 3
    },
    messageWhenRangeOverflow: {
      config: 3
    },
    messageWhenRangeUnderflow: {
      config: 3
    },
    ariaLabel: {
      config: 3
    },
    ariaLabelledByElement: {
      config: 3
    },
    ariaControlsElement: {
      config: 3
    },
    ariaDescribedByElements: {
      config: 3
    },
    value: {
      config: 3
    },
    disabled: {
      config: 3
    },
    readOnly: {
      config: 3
    },
    required: {
      config: 3
    },
    fieldLevelHelp: {
      config: 3
    },
    variant: {
      config: 3
    },
    dateStyle: {
      config: 3
    }
  },
  publicMethods: ["focus", "blur", "showHelpMessage", "hasBadInput"],
  track: {
    _disabled: 1,
    _readonly: 1,
    _required: 1,
    _value: 1,
    _calendarVisible: 1,
    _displayValue: 1,
    _errorMessage: 1,
    _fieldLevelHelp: 1,
    _variant: 1
  },
  fields: ["_min", "_max", "_displayMin", "_displayMax", "_dateStyle", "_ariaLabelledBy", "_ariaControls", "_ariaDescribedBy"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningDatePicker, {
  tmpl: _datepicker_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/datepicker/keyboard.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/datepicker/keyboard.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "handleKeyDownOnDatePickerIcon": () => (/* binding */ handleKeyDownOnDatePickerIcon),
/* harmony export */   "handleBasicKeyDownBehaviour": () => (/* binding */ handleBasicKeyDownBehaviour)
/* harmony export */ });
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");

function handleKeyDownOnDatePickerIcon(event, datepickerInterface) {
  switch ((0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__.normalizeKeyValue)(event.key)) {
    case 'Enter':
    case ' ':
      preventDefaultAndStopPropagation(event);
      datepickerInterface.showCalendar();
      break;

    case 'Escape':
      preventDefaultAndStopPropagation(event);
      datepickerInterface.hideCalendar();
      break;

    default:
  }
}
function handleBasicKeyDownBehaviour(event, datepickerInterface) {
  if (!datepickerInterface.isCalendarVisible()) {
    return;
  }

  if ((0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__.normalizeKeyValue)(event.key) === 'Escape') {
    preventDefaultAndStopPropagation(event);
    datepickerInterface.hideCalendar();
  }
}

function preventDefaultAndStopPropagation(event) {
  event.preventDefault();
  event.stopPropagation();
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/datetimepicker/datetimepicker.html":
/*!*************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/datetimepicker/datetimepicker.html ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _datetimepicker_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./datetimepicker.css */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var _datetimepicker_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./datetimepicker.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lightning_helptext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/helptext */ "./node_modules/lightning-base-components/src/lightning/helptext/helptext.js");
/* harmony import */ var lightning_datepicker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/datepicker */ "./node_modules/lightning-base-components/src/lightning/datepicker/datepicker.js");
/* harmony import */ var lightning_timepicker__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lightning/timepicker */ "./node_modules/lightning-base-components/src/lightning/timepicker/timepicker.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");








function tmpl($api, $cmp, $slotset, $ctx) {
  const {d: api_dynamic_text, t: api_text, h: api_element, c: api_custom_element, b: api_bind, gid: api_scoped_id} = $api;
  const {_m0, _m1, _m2, _m3, _m4, _m5} = $ctx;
  return [api_element("div", {
    classMap: {
      "slds-form": true
    },
    attrs: {
      "tabindex": "-1"
    },
    key: 0
  }, [api_element("fieldset", {
    classMap: {
      "slds-form-element": true,
      "slds-form-element_compound": true
    },
    key: 1
  }, [!$cmp.hasExternalLabel ? api_element("legend", {
    className: $cmp.computedLabelClass,
    key: 2
  }, [api_text(api_dynamic_text($cmp.label))]) : null, !$cmp.hasExternalLabel ? $cmp.fieldLevelHelp ? api_custom_element("lightning-helptext", lightning_helptext__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "content": $cmp.fieldLevelHelp,
      "alternativeText": $cmp.helptextAlternativeText
    },
    key: 3
  }, []) : null : null, api_element("div", {
    classMap: {
      "slds-form-element__control": true
    },
    key: 4
  }, [api_element("div", {
    classMap: {
      "slds-form-element__group": true
    },
    key: 5
  }, [api_element("div", {
    classMap: {
      "slds-form-element__row": true
    },
    key: 6
  }, [api_custom_element("lightning-datepicker", lightning_datepicker__WEBPACK_IMPORTED_MODULE_3__.default, {
    classMap: {
      "slds-form-element": true
    },
    attrs: {
      "data-aria-invalid": $cmp.computedDateAriaInvalid
    },
    props: {
      "autocomplete": $cmp.autocomplete,
      "min": $cmp.dateMin,
      "max": $cmp.dateMax,
      "label": $cmp.i18n.date,
      "name": $cmp.name,
      "variant": $cmp.variant,
      "placeholder": $cmp.placeholder,
      "readOnly": $cmp.readOnly,
      "disabled": $cmp.disabled,
      "dateStyle": $cmp.dateStyle,
      "required": $cmp.required
    },
    key: 7,
    on: {
      "focus": _m0 || ($ctx._m0 = api_bind($cmp.handleDatepickerFocus)),
      "blur": _m1 || ($ctx._m1 = api_bind($cmp.handleDatepickerBlur)),
      "change": _m2 || ($ctx._m2 = api_bind($cmp.handleDateChange))
    }
  }, []), api_custom_element("lightning-timepicker", lightning_timepicker__WEBPACK_IMPORTED_MODULE_4__.default, {
    classMap: {
      "slds-form-element": true
    },
    attrs: {
      "data-aria-invalid": $cmp.computedTimeAriaInvalid
    },
    props: {
      "autocomplete": $cmp.autocomplete,
      "label": $cmp.i18n.time,
      "name": $cmp.name,
      "variant": $cmp.variant,
      "timeStyle": $cmp.timeStyle,
      "placeholder": $cmp.placeholder,
      "readOnly": $cmp.readOnly,
      "required": $cmp.required,
      "disabled": $cmp.disabled
    },
    key: 8,
    on: {
      "focus": _m3 || ($ctx._m3 = api_bind($cmp.handleTimepickerFocus)),
      "blur": _m4 || ($ctx._m4 = api_bind($cmp.handleTimepickerBlur)),
      "change": _m5 || ($ctx._m5 = api_bind($cmp.handleTimeChange))
    }
  }, [])])])]), api_element("div", {
    className: $cmp.computedClass,
    attrs: {
      "data-error-message": "",
      "id": api_scoped_id("errormessage"),
      "aria-live": "assertive"
    },
    key: 9
  }, [api_text(api_dynamic_text($cmp.customErrorMessage))])])])];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_5__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_datetimepicker_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _datetimepicker_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_datetimepicker_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _datetimepicker_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-datetimepicker_datetimepicker"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/datetimepicker/datetimepicker.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/datetimepicker/datetimepicker.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _datetimepicker_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./datetimepicker.html */ "./node_modules/lightning-base-components/src/lightning/datetimepicker/datetimepicker.html");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_dateLabel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.dateLabel */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.dateLabel.js");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_rangeOverflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.rangeOverflow */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.rangeOverflow.js");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_rangeUnderflow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.rangeUnderflow */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.rangeUnderflow.js");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_timeLabel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.timeLabel */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.timeLabel.js");
/* harmony import */ var _salesforce_label_LightningInput_helptextAlternativeText__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @salesforce/label/LightningInput.helptextAlternativeText */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInput.helptextAlternativeText.js");
/* harmony import */ var _salesforce_i18n_timeZone__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @salesforce/i18n/timeZone */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-timeZone.js");
/* harmony import */ var lightning_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lightning/utils */ "./node_modules/lightning-base-components/src/lightning/utils/utils.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! lightning/internationalizationLibrary */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/internationalizationLibrary.js");
/* harmony import */ var lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lightning/iso8601Utils */ "./node_modules/lightning-base-components/src/lightning/iso8601Utils/iso8601Utils.js");
/* harmony import */ var lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! lightning/inputUtils */ "./node_modules/lightning-base-components/src/lightning/inputUtils/inputUtils.js");













const i18n = {
  date: _salesforce_label_LightningDateTimePicker_dateLabel__WEBPACK_IMPORTED_MODULE_2__.default,
  rangeOverflow: _salesforce_label_LightningDateTimePicker_rangeOverflow__WEBPACK_IMPORTED_MODULE_3__.default,
  rangeUnderflow: _salesforce_label_LightningDateTimePicker_rangeUnderflow__WEBPACK_IMPORTED_MODULE_4__.default,
  time: _salesforce_label_LightningDateTimePicker_timeLabel__WEBPACK_IMPORTED_MODULE_5__.default,
  helpTextAlternativeText: _salesforce_label_LightningInput_helptextAlternativeText__WEBPACK_IMPORTED_MODULE_6__.default
};

class LightningDateTimePicker extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  /**
   * Controls auto-filling of the input. Set the attribute to pass
   * through autocomplete values to be interpreted by the browser.
   * By default autocomplete is off to avoid overlap of dropdowns.
   * @type {string}
   */
  // getters and setters necessary to trigger sync
  set timeAriaControls(val) {
    this._timeAriaControls = val;
    this.synchronizeA11y();
  }

  get timeAriaControls() {
    return this._timeAriaControls;
  }

  set timeAriaLabelledBy(val) {
    this._timeAriaLabelledBy = val;
    this.synchronizeA11y();
  }

  get timeAriaLabelledBy() {
    return this._timeAriaLabelledBy;
  }

  set timeAriaDescribedBy(val) {
    this._timeAriaDescribedBy = val;
    this.synchronizeA11y();
  }

  get timeAriaDescribedBy() {
    return this._timeAriaDescribedBy;
  }

  get messageWhenBadInput() {
    if (this._messageWhenBadInput) {
      return this._messageWhenBadInput;
    } else if (this.hasBadDateInput) {
      return this.getDatepicker().messageWhenBadInput;
    } else if (this.hasBadTimeInput) {
      return this.getTimepicker().messageWhenBadInput;
    }

    return null;
  }

  set messageWhenBadInput(message) {
    this._messageWhenBadInput = message;
  }

  get messageWhenRangeOverflow() {
    return this._messageWhenRangeOverflow || (0,lightning_utils__WEBPACK_IMPORTED_MODULE_8__.formatLabel)(i18n.rangeOverflow, this.formattedMax);
  }

  set messageWhenRangeOverflow(message) {
    this._messageWhenRangeOverflow = message;
  }

  get messageWhenRangeUnderflow() {
    return this._messageWhenRangeUnderflow || (0,lightning_utils__WEBPACK_IMPORTED_MODULE_8__.formatLabel)(i18n.rangeUnderflow, this.formattedMin);
  }

  set messageWhenRangeUnderflow(message) {
    this._messageWhenRangeUnderflow = message;
  }

  get max() {
    return this.maxValue;
  }

  set max(newValue) {
    this.maxValue = newValue;
    this.calculateFormattedMaxValue();
  }

  get min() {
    return this.minValue;
  }

  set min(newValue) {
    this.minValue = newValue;
    this.calculateFormattedMinValue();
  }

  get value() {
    return this._value;
  }

  set value(newValue) {
    if (this.connected) {
      this.setDateAndTimeValues(newValue);
    } else {
      // we set the values in connectedCallback to make sure timezone is available.
      this._initialValue = newValue;
    }
  }

  get timezone() {
    return this._timezone;
  }

  set timezone(newValue) {
    this._timezone = newValue;

    if (this.connected) {
      this.updateValuesForTimezone();
    }
  }
  /**
   * Returns time zone if one is set, otherwise returns
   * the Salesforce time zone when Aura localization is
   * available, and the system's time zone otherwise
   */


  get normalizedTimezone() {
    if (this.timezone) {
      return this.timezone;
    } else if (lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_10__.isAuraL10NAvailable) {
      return _salesforce_i18n_timeZone__WEBPACK_IMPORTED_MODULE_7__.default;
    }

    return Intl.DateTimeFormat().resolvedOptions().timeZone;
  }

  get disabled() {
    return this._disabled;
  }

  set disabled(value) {
    this._disabled = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_9__.normalizeBoolean)(value);
  }

  get readOnly() {
    return this._readonly;
  }

  set readOnly(value) {
    this._readonly = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_9__.normalizeBoolean)(value);
  }

  get required() {
    return this._required;
  }

  set required(value) {
    this._required = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_9__.normalizeBoolean)(value);
  }

  set fieldLevelHelp(value) {
    this._fieldLevelHelp = value;
  }

  get fieldLevelHelp() {
    return this._fieldLevelHelp;
  }

  get variant() {
    return this._variant || lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__.VARIANT.STANDARD;
  }

  set variant(value) {
    this._variant = (0,lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__.normalizeVariant)(value);
  }
  /**
   * Sets focus on the date input element.
   */


  focus() {
    if (this.connected) {
      this.getDatepicker().focus();
    }
  }
  /**
   * Removes keyboard focus from the input elements.
   */


  blur() {
    if (this.connected) {
      this.getDatepicker().blur();
      this.getTimepicker().blur();
    }
  }

  hasBadInput() {
    return this.connected && (this.hasBadDateInput || this.hasBadTimeInput);
  }

  get hasBadDateInput() {
    return this.getDatepicker().hasBadInput();
  }

  get hasBadTimeInput() {
    const timeBadInput = this.getTimepicker().hasBadInput();
    const timeMissing = this.required && this._dateValue && !this._timeValue;
    return timeMissing || timeBadInput;
  }

  showHelpMessage(message) {
    if (!this.connected) {
      return;
    }

    if (!message) {
      this.clearHelpMessage();
      return;
    }

    if (this.hasBadDateInput && !this._messageWhenBadInput) {
      this.clearHelpMessage();
      this.getDatepicker().showHelpMessage(message);
      return;
    }

    if (this.hasBadTimeInput && !this._messageWhenBadInput) {
      this.clearHelpMessage();
      this.getTimepicker().showHelpMessage(message);
      return;
    }

    this.classList.add('slds-has-error');
    this._customErrorMessage = message;
  }

  clearHelpMessage() {
    this.classList.remove('slds-has-error');
    this._customErrorMessage = '';
    this.getDatepicker().showHelpMessage('');
    this.getTimepicker().showHelpMessage('');
  }

  get isLabelHidden() {
    return this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__.VARIANT.LABEL_HIDDEN;
  }

  get computedLabelClass() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_8__.classSet)('slds-form-element__legend slds-form-element__label').add({
      'slds-assistive-text': this.isLabelHidden
    }).toString();
  }

  get i18n() {
    return i18n;
  }

  get customErrorMessage() {
    return this._customErrorMessage;
  }

  get dateMin() {
    return this._dateMin;
  }

  get dateMax() {
    return this._dateMax;
  }

  get computedClass() {
    let displayClass = this._customErrorMessage ? 'slds-show' : 'slds-hide';
    return 'slds-form-element__help ' + displayClass;
  }

  get errorMessageElementId() {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_9__.getRealDOMId)(this.template.querySelector('[data-error-message]'));
  }

  get computedDateAriaDescribedBy() {
    const ariaValues = [];

    if (this.customErrorMessage) {
      ariaValues.push(this.errorMessageElementId);
    }

    if (this.dateAriaDescribedBy) {
      ariaValues.push(this.dateAriaDescribedBy);
    }

    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_9__.normalizeAriaAttribute)(ariaValues);
  }

  get computedTimeAriaDescribedBy() {
    const ariaValues = [];

    if (this.customErrorMessage) {
      ariaValues.push(this.errorMessageElementId);
    }

    if (this.timeAriaDescribedBy) {
      ariaValues.push(this.timeAriaDescribedBy);
    }

    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_9__.normalizeAriaAttribute)(ariaValues);
  }

  get hasExternalLabel() {
    return this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__.VARIANT.LABEL_HIDDEN && this.timeAriaLabelledBy && this.timeAriaLabelledBy.length && this.dateAriaLabelledBy && this.dateAriaLabelledBy.length;
  }

  constructor() {
    super();
    this._disabled = false;
    this._readonly = false;
    this._required = false;
    this._fieldLevelHelp = void 0;
    this._variant = void 0;
    this._value = null;
    this._timezone = null;
    this._customErrorMessage = '';
    this._dateMin = void 0;
    this._dateMax = void 0;
    this.label = void 0;
    this.name = void 0;
    this.placeholder = '';
    this.dateStyle = void 0;
    this.timeStyle = void 0;
    this.timeAriaLabel = void 0;
    this.autocomplete = 'off';
    this.dateAriaControls = void 0;
    this.dateAriaLabel = void 0;
    this.dateAriaLabelledBy = void 0;
    this.dateAriaDescribedBy = void 0;
    this.messageWhenValueMissing = void 0;
    this.uniqueId = (0,lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__.generateUniqueId)();
  }

  synchronizeA11y() {
    const datepicker = this.template.querySelector('lightning-datepicker');
    const timepicker = this.template.querySelector('lightning-timepicker');

    if (datepicker) {
      (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_9__.synchronizeAttrs)(datepicker, {
        ariaLabelledByElement: this.dateAriaLabelledBy,
        ariaDescribedByElements: this.computedDateAriaDescribedBy,
        ariaControlsElement: this.dateAriaControls,
        'aria-label': this.dateAriaLabel
      });
    }

    if (timepicker) {
      (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_9__.synchronizeAttrs)(timepicker, {
        ariaLabelledByElement: this.timeAriaLabelledBy,
        ariaDescribedByElements: this.computedTimeAriaDescribedBy,
        ariaControlsElement: this.timeAriaControls,
        'aria-label': this.timeAriaLabel
      });
    }
  }

  connectedCallback() {
    this.connected = true; // we set the initial values here in order to make sure timezone is available.

    this.updateValuesForTimezone(this._initialValue);
    this.interactingState = new lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__.InteractingState({
      debounceInteraction: true
    });
    this.interactingState.onenter(() => {
      this.dispatchEvent(new CustomEvent('focus'));
    });
    this.interactingState.onleave(() => {
      this.dispatchEvent(new CustomEvent('blur'));
    });
  }

  renderedCallback() {
    this.synchronizeA11y();
  }

  disconnectedCallback() {
    this.connected = false;
  }

  getTimepicker() {
    return this.template.querySelector('lightning-timepicker');
  }

  getDatepicker() {
    return this.template.querySelector('lightning-datepicker');
  }

  handleDatepickerFocus() {
    this._dateFocus = true;
    this.interactingState.enter();
  }

  handleTimepickerFocus() {
    this._timeFocus = true;
    this.interactingState.enter();
  }

  handleDatepickerBlur() {
    this._dateFocus = false; // timepicker fires focus before datepicker fires blur

    if (!this._timeFocus) {
      this.interactingState.leave();
    }
  }

  handleTimepickerBlur() {
    this._timeFocus = false; // datepicker fires focus before timepicker fires blur

    if (!this._dateFocus) {
      this.interactingState.leave();
    }
  }

  handleDateChange(event) {
    event.stopPropagation();

    if (!event.detail) {
      return;
    }

    this._dateValue = event.detail.value;

    if (this._dateValue) {
      this._timeValue = this._timeValue || (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_10__.getCurrentTimeString)(this.normalizedTimezone);
      this.setTimepickerValue(this._timeValue);
    }

    this.updateValue();
  }

  handleTimeChange(event) {
    event.stopPropagation();

    if (!event.detail) {
      return;
    }

    this._timeValue = event.detail.value;
    this.updateValue();
  }

  updateValue() {
    const dateValue = this._dateValue;
    const timeValue = this._timeValue;

    if (dateValue && timeValue) {
      const dateTimeString = dateValue + lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_11__.TIME_SEPARATOR + timeValue;
      this._value = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_10__.normalizeFormattedDateTime)(dateTimeString, this.normalizedTimezone);
      this.dispatchChangeEvent();
    } else if (!dateValue) {
      this._value = null;
      this.dispatchChangeEvent();
    }
  }

  dispatchChangeEvent() {
    this.dispatchEvent(new CustomEvent('change', {
      composed: true,
      bubbles: true,
      detail: {
        value: this._value
      }
    }));
  }

  updateValuesForTimezone(datetimeValue) {
    this.setDateAndTimeValues(datetimeValue || this._value);
    this.calculateFormattedMinValue();
    this.calculateFormattedMaxValue();
  }

  setDateAndTimeValues(value) {
    const normalizedValue = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_10__.normalizeISODateTime)(value, this.normalizedTimezone).isoValue;
    const isDateOnly = normalizedValue && value.indexOf(lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_11__.TIME_SEPARATOR) < 0;

    if (isDateOnly) {
      this._dateValue = value;
      this._value = this._dateValue;
      this.setDatepickerValue(value);
      return;
    }

    const dateAndTime = this.separateDateTime(normalizedValue);
    this._dateValue = dateAndTime && dateAndTime[0];
    this._timeValue = dateAndTime && dateAndTime[1];
    this._value = value;
    this.setDatepickerValue(this._dateValue);
    this.setTimepickerValue(this._timeValue);
  }

  setDatepickerValue(value) {
    const datepicker = this.getDatepicker();

    if (datepicker) {
      datepicker.value = value;
    }
  }

  setTimepickerValue(value) {
    const timepicker = this.getTimepicker();

    if (timepicker) {
      timepicker.value = value;
    }
  }

  calculateFormattedMinValue() {
    if (!this.min) {
      return;
    }

    const normalizedDate = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_10__.normalizeISODateTime)(this.min, this.normalizedTimezone);
    this._dateMin = this.separateDateTime(normalizedDate.isoValue)[0];
    this.formattedMin = normalizedDate.displayValue;
  }

  calculateFormattedMaxValue() {
    if (!this.max) {
      return;
    }

    const normalizedDate = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_10__.normalizeISODateTime)(this.max, this.normalizedTimezone);
    this._dateMax = this.separateDateTime(normalizedDate.isoValue)[0];
    this.formattedMax = normalizedDate.displayValue;
  }

  separateDateTime(isoString) {
    return typeof isoString === 'string' ? isoString.split(lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_11__.TIME_SEPARATOR) : null;
  }

  get computedDateAriaInvalid() {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_9__.computeAriaInvalid)(this._customErrorMessage, this._dateValue);
  }

  get computedTimeAriaInvalid() {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_9__.computeAriaInvalid)(this._customErrorMessage, this._timeValue);
  }

  get helptextAlternativeText() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_8__.formatLabel)(i18n.helpTextAlternativeText, this.label);
  }

}

LightningDateTimePicker.delegatesFocus = true;

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningDateTimePicker, {
  publicProps: {
    label: {
      config: 0
    },
    name: {
      config: 0
    },
    placeholder: {
      config: 0
    },
    dateStyle: {
      config: 0
    },
    timeStyle: {
      config: 0
    },
    timeAriaLabel: {
      config: 0
    },
    autocomplete: {
      config: 0
    },
    timeAriaControls: {
      config: 3
    },
    timeAriaLabelledBy: {
      config: 3
    },
    timeAriaDescribedBy: {
      config: 3
    },
    dateAriaControls: {
      config: 0
    },
    dateAriaLabel: {
      config: 0
    },
    dateAriaLabelledBy: {
      config: 0
    },
    dateAriaDescribedBy: {
      config: 0
    },
    messageWhenValueMissing: {
      config: 0
    },
    messageWhenBadInput: {
      config: 3
    },
    messageWhenRangeOverflow: {
      config: 3
    },
    messageWhenRangeUnderflow: {
      config: 3
    },
    max: {
      config: 3
    },
    min: {
      config: 3
    },
    value: {
      config: 3
    },
    timezone: {
      config: 3
    },
    disabled: {
      config: 3
    },
    readOnly: {
      config: 3
    },
    required: {
      config: 3
    },
    fieldLevelHelp: {
      config: 3
    },
    variant: {
      config: 3
    }
  },
  publicMethods: ["focus", "blur", "hasBadInput", "showHelpMessage"],
  track: {
    _disabled: 1,
    _readonly: 1,
    _required: 1,
    _fieldLevelHelp: 1,
    _variant: 1,
    _value: 1,
    _timezone: 1,
    _customErrorMessage: 1,
    _dateMin: 1,
    _dateMax: 1
  }
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningDateTimePicker, {
  tmpl: _datetimepicker_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/focusTrap/focusTrap.html":
/*!***************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/focusTrap/focusTrap.html ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _focusTrap_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./focusTrap.css */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var _focusTrap_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./focusTrap.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");





function tmpl($api, $cmp, $slotset, $ctx) {
  const {ti: api_tab_index, b: api_bind, h: api_element, s: api_slot} = $api;
  const {_m0, _m1, _m2, _m3} = $ctx;
  return [api_element("div", {
    attrs: {
      "tabindex": api_tab_index($cmp._bookendTabIndex),
      "data-start": ""
    },
    key: 0,
    on: {
      "focus": _m0 || ($ctx._m0 = api_bind($cmp._focusLastElement))
    }
  }, []), api_slot("", {
    key: 1,
    on: {
      "focusin": _m1 || ($ctx._m1 = api_bind($cmp._handleFocusIn)),
      "focusout": _m2 || ($ctx._m2 = api_bind($cmp._handleFocusOut))
    }
  }, [], $slotset), api_element("div", {
    attrs: {
      "tabindex": api_tab_index($cmp._bookendTabIndex),
      "data-end": ""
    },
    key: 2,
    on: {
      "focus": _m3 || ($ctx._m3 = api_bind($cmp._focusFirstElement))
    }
  }, [])];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_2__.registerTemplate)(tmpl));
tmpl.slots = [""];
tmpl.stylesheets = [];


if (_focusTrap_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _focusTrap_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_focusTrap_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _focusTrap_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-focusTrap_focusTrap"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/focusTrap/focusTrap.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/focusTrap/focusTrap.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _focusTrap_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./focusTrap.html */ "./node_modules/lightning-base-components/src/lightning/focusTrap/focusTrap.html");
/* harmony import */ var lightning_focusUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/focusUtils */ "./node_modules/lightning-base-components/src/lightning/focusUtils/focusUtils.js");




class FocusTrap extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  constructor(...args) {
    super(...args);
    this._startNode = void 0;
    this._endNode = void 0;
    this._focused = false;
    this._initialized = false;
    this._pendingFocusOut = false;
  }

  renderedCallback() {
    if (!this._initialized) {
      this._initialized = true;
      this._startNode = this.template.querySelector('[data-start]');
      this._endNode = this.template.querySelector('[data-end]');
    }
  }
  /**
   * Focuses the first focusable element in the focus trap.
   */


  focus() {
    if (!this._focused) {
      // We could potentially add support for focusing the element that has 'autofocus' attribute on it,
      // and if none, then focus on the first element
      this._focusFirstElement();
    }
  }

  get _bookendTabIndex() {
    return this._focused ? '0' : '-1';
  }

  _handleFocusIn() {
    if (this._pendingFocusOut) {
      this._pendingFocusOut = false;
    }

    this._focused = true;
  }

  _handleFocusOut() {
    // This assumes that a focusin will be dispatched after a focusout
    this._pendingFocusOut = true; // eslint-disable-next-line @lwc/lwc/no-async-operation

    requestAnimationFrame(() => {
      if (this._pendingFocusOut) {
        this._focused = false;
      }
    });
  }
  /**
   * Focuses on the specified element location.
   * @param {String} elementLocation Could be 'first or 'last'.
   */


  _moveFocusTo(elementLocation) {
    const focusableElements = this._getFocusableElements();

    if (focusableElements.length > 0) {
      let node;

      if (elementLocation === 'last') {
        node = focusableElements[focusableElements.length - 1];
      } else if (elementLocation === 'first') {
        node = focusableElements[0];
      }

      node.focus();
    }
  }
  /**
   * Focuses the last focusable element in the focus trap.
   */


  _focusFirstElement() {
    this._moveFocusTo('first');
  }
  /**
   * Focuses the last focusable element in the focus trap.
   */


  _focusLastElement() {
    this._moveFocusTo('last');
  }
  /**
   * Returns a list of the focusable children found within the element.
   */


  _getFocusableElements() {
    return (0,lightning_focusUtils__WEBPACK_IMPORTED_MODULE_2__.findAllTabbableElements)(this.template.querySelector('slot'));
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(FocusTrap, {
  publicMethods: ["focus"],
  fields: ["_startNode", "_endNode", "_focused", "_initialized", "_pendingFocusOut"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(FocusTrap, {
  tmpl: _focusTrap_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/focusUtils/focus.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/focusUtils/focus.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "findAllTabbableElements": () => (/* binding */ findAllTabbableElements),
/* harmony export */   "findAllFocusableNodes": () => (/* binding */ findAllFocusableNodes),
/* harmony export */   "getElementWithFocus": () => (/* binding */ getElementWithFocus),
/* harmony export */   "returnFocusToElement": () => (/* binding */ returnFocusToElement),
/* harmony export */   "filterTooltips": () => (/* binding */ filterTooltips)
/* harmony export */ });
/* harmony import */ var lightning_tooltipLibrary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/tooltipLibrary */ "./node_modules/lightning-base-components/src/lightning/tooltipLibrary/tooltipLibrary.js");

const IGNORE_AUTOFOCUS = 'ignore-autofocus';
/**
 *
 * Returns all tabbable elements within a containing element. Tabbable elements are:
 * a visible/non-disabled element that has a tabIndex of 0 and is not within a custom
 * element with tabindex attribute of “-1" on it.
 *
 * @param {Element} container The element to search for tabbable element.
 * @returns {Array} Tabbable elements.
 */

function findAllTabbableElements(container) {
  const result = [];
  traverseActiveTreeRecursively(container, element => {
    // Remove the try/catch once https://github.com/salesforce/lwc/issues/1421 is fixed
    try {
      if (isTabbable({
        element,
        rootContainer: container
      })) {
        result.push(element);
      }
    } catch (e) {
      console.warn(e);
    }
  });
  return result;
}
const FOCUSABLE_NODES = /^input$|^select$|^textarea$|^a$|^button$/;
/**
 * Returns all focusable nodes within a containing element. Focusable nodes are
 * those which have a focus() method specified in the object definition spec:
 * https://www.w3.org/TR/DOM-Level-2-HTML/html.html
 *
 * Exception: button - Browsers today allow setting focus programmatically
 * on button elements + autofocus attribute present on HTMLButtonElement
 *
 * @param {Element} container The element to search for focusable nodes.
 * @returns {Array} Focusable elements.
 */

function findAllFocusableNodes(container) {
  const result = [];
  traverseActiveTreeRecursively(container, element => {
    if (FOCUSABLE_NODES.test(element.tagName.toLowerCase())) {
      result.push(element);
    }
  });
  return result;
}
/**
 * Finds the element that currently has focus, even when the element is part of a shadow root or iframe.
 *
 * @returns {Element} Element that has focus.
 */

function getElementWithFocus() {
  let currentFocusedElement = document.activeElement;

  while (currentFocusedElement) {
    if (currentFocusedElement.shadowRoot) {
      let nextFocusedElement = currentFocusedElement.shadowRoot.activeElement;

      if (nextFocusedElement) {
        currentFocusedElement = nextFocusedElement;
      } else {
        return currentFocusedElement;
      }
    } else if (currentFocusedElement.contentDocument) {
      let nextFocusedElement = currentFocusedElement.contentDocument.activeElement;

      if (nextFocusedElement) {
        currentFocusedElement = nextFocusedElement;
      } else {
        return currentFocusedElement;
      }
    } else {
      return currentFocusedElement;
    }
  }

  return undefined;
}
/**
 * Return the focus to an element if it is still attached to the DOM.
 * @param {Element} element - element which will receive the focus.
 * @returns {boolean} - true if the element is focused.
 */

function returnFocusToElement(element) {
  const isSavedElemInDOM = document.body.contains(element);

  if (element) {
    if (isSavedElemInDOM) {
      element.focus();
      return true;
    }

    const isElementInDOM = isElementInDocument(element);

    if (isElementInDOM) {
      element.focus();
      return true;
    }
  }

  return false;
}
/**
 * Return true if the given element is in document (rather it is in shadow or not)
 * @param {Element} element - element to be inspected
 * @returns {boolean} - true if the element is in document, otherwise false
 */

function isElementInDocument(element) {
  let currentElement = element; // traverse all the way up to the document, to make sure
  // the element is inside of the document.

  while (currentElement && currentElement.parentNode) {
    if (currentElement.parentNode === document) {
      return true;
    } else if (currentElement.parentNode instanceof DocumentFragment) {
      currentElement = currentElement.parentNode.host;
    } else {
      currentElement = currentElement.parentNode;
    }
  }

  return false;
}
/**
 * Recursively traverse an active tree and run callback on each non-inert node element.
 *
 * @param {Node} node The starting node to recursively traverse.
 * @param {Function} callback Function to call on each node element.
 */


function traverseActiveTreeRecursively(node, callback) {
  if (!node) {
    return;
  }

  if (node.nodeType === Node.ELEMENT_NODE) {
    // inert is only supported by Chrome for now (behind a flag)
    if (node.hasAttribute('inert')) {
      return;
    }

    if (isIframe(node)) {
      if (isIframeOfSameOrigin(node)) {
        // for a same-origin iframe, we don't want to include the
        // iframe itself in the list, since we can see any of the
        // frames focusable children. So, skip calling callback on
        // the iframe node, and proceed to traverse it's children.
        traverseActiveTreeRecursively(node.contentDocument, callback);
      } else {
        // a non same-origin iframe is totally opaque, so include the
        // iframe in the results, but do no try to traverse into the
        // iframes children
        if (callback) {
          callback(node);
        }
      }

      return;
    }

    if (callback) {
      callback(node);
    } // If the element has a shadow root, traverse that


    if (node.shadowRoot) {
      traverseActiveTreeRecursively(node.shadowRoot, callback);
      return;
    } // if it's a slot element, get all assigned nodes and traverse them


    if (node.localName === 'slot') {
      const slottedNodes = node.assignedNodes({
        flatten: true
      });

      for (let i = 0; i < slottedNodes.length; i++) {
        traverseActiveTreeRecursively(slottedNodes[i], callback);
      }

      return;
    }
  }

  let child = node.firstChild;

  while (child !== null) {
    traverseActiveTreeRecursively(child, callback);
    child = child.nextSibling;
  }
} // returns true if iframe is same origin, and therefore, can focus its internal elements


function isIframe(node) {
  return node.tagName === 'IFRAME' || node instanceof HTMLIFrameElement;
}

function isIframeOfSameOrigin(iframe) {
  // if we can access contentDocument (is not null) on the iframe, then it is of same origin
  return !!iframe.contentDocument;
}

const ELEMENTS_WITH_DISABLED_ATTRIBUTE = ['button', 'select', 'textarea', 'input']; // https://html.spec.whatwg.org/multipage/interaction.html#dom-tabindex

const ELEMENTS_WITH_TABINDEX_ZERO_BY_DEFAULT = ['a', 'select', 'textarea', 'input', 'button', 'iframe', 'object', 'area', 'frame'];

function isTabbable({
  element,
  rootContainer
}) {
  const elementLocalName = element.localName;

  if (elementLocalName === 'input' && elementLocalName.type === 'hidden') {
    return false;
  }

  const tabIndexAttribute = element.getAttribute('tabindex');

  if (tabIndexAttribute === '-1') {
    return false;
  }

  if (element.disabled && ELEMENTS_WITH_DISABLED_ATTRIBUTE.includes(element.localName)) {
    return false;
  } // Either the attribute was set directly to '0' or it's an element that has tabIndex zero by default


  const hasTabIndexZero = tabIndexAttribute === '0' || element.tabIndex === 0 && ELEMENTS_WITH_TABINDEX_ZERO_BY_DEFAULT.includes(element.localName);
  return hasTabIndexZero && isElementVisible(element) && isParentCustomElementTabbable({
    element,
    rootContainer
  });
}
/**
 * Test if element has role='tooltip'
 * @param {Element} Element that has focus.
 * @returns {boolean} element has role='tooltip'
 */


const elemHasRoleTooltip = elem => {
  return elem.getAttribute('role') === 'tooltip';
};
/**
 * Test if the element has class='ignore-autofocus'
 * @param {Element} Element that has focus.
 * @returns {boolean} element has class='ignore-autofocus'
 */


const elemHasIgnoreAutofocus = elem => {
  return elem.classList.contains(IGNORE_AUTOFOCUS);
};
/**
 * Test if element has unique properties of <lightning-helptext>
 * @param {Element} Element that needs to be tested
 * @returns {boolean} element matches criteria of <lightning-helptext>
 */


const elemIsHelpTextComponent = elem => {
  // properties of <lightning-helptext>
  const tagNameIsButton = elem.tagName.toLowerCase() === 'button';
  const ariaDescValue = elem.getAttribute('aria-describedby'); // ie11 doesn't support .startsWith()

  const ariaValueMatchesPrefix = ariaDescValue ? String(ariaDescValue).indexOf(lightning_tooltipLibrary__WEBPACK_IMPORTED_MODULE_0__.BUBBLE_PREFIX) === 0 : false;
  return tagNameIsButton && ariaValueMatchesPrefix;
};
/**
 * Verify element doesn't have tooltip properties by running tooltip tests
 * Primary use in autofocus feature of LighningModal
 * @param {Element} Element to verify is not a tooltip
 * @returns {boolean} element is not a tooltip
 */


const elemIsNotTooltip = elem => {
  if (!elem) {
    return false;
  } // evaluate whether element has properties of a tooltip
  // if any tooltip test is true, the element is a tooltip


  const elemIsTooltip = [// array of tooltip tests
  elemHasRoleTooltip(elem), elemIsHelpTextComponent(elem), elemHasIgnoreAutofocus(elem)].some(val => val === true);
  return !elemIsTooltip;
};
/**
 *
 * Returns tabbable elements, filtered to remove any tooltips
 * @param {Array} elemsArray Array of elements to filter tooltips from
 * @returns {Array} Filtered tabbable elements with no tooltips
 */


function filterTooltips(elemsArray) {
  // reference SLDS tooltip patterns && global focus in
  // modalBase focusFirstElement() -> used to autofocus first element
  // https://www.lightningdesignsystem.com/accessibility/patterns/tooltip/
  return elemsArray && Array.isArray(elemsArray) && elemsArray.length > 0 ? elemsArray.filter(elemIsNotTooltip) : [];
}

function isElementVisible(element) {
  const {
    width,
    height
  } = element.getBoundingClientRect();
  const nonZeroSize = width > 0 || height > 0;
  return nonZeroSize && getComputedStyle(element).visibility !== 'hidden';
}

function isParentCustomElementTabbable({
  element,
  rootContainer
}) {
  const parentRoot = rootContainer.getRootNode();
  const ownerDocument = element.ownerDocument;
  let root = element.getRootNode();

  while (root !== parentRoot && root !== ownerDocument) {
    const host = root.host;

    if (host.getAttribute('tabindex') === '-1') {
      return false;
    }

    root = host && host.getRootNode();
  }

  return true;
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/focusUtils/focusUtils.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/focusUtils/focusUtils.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "findAllTabbableElements": () => (/* reexport safe */ _focus__WEBPACK_IMPORTED_MODULE_0__.findAllTabbableElements),
/* harmony export */   "findAllFocusableNodes": () => (/* reexport safe */ _focus__WEBPACK_IMPORTED_MODULE_0__.findAllFocusableNodes),
/* harmony export */   "getElementWithFocus": () => (/* reexport safe */ _focus__WEBPACK_IMPORTED_MODULE_0__.getElementWithFocus),
/* harmony export */   "filterTooltips": () => (/* reexport safe */ _focus__WEBPACK_IMPORTED_MODULE_0__.filterTooltips),
/* harmony export */   "returnFocusToElement": () => (/* reexport safe */ _focus__WEBPACK_IMPORTED_MODULE_0__.returnFocusToElement)
/* harmony export */ });
/* harmony import */ var _focus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./focus */ "./node_modules/lightning-base-components/src/lightning/focusUtils/focus.js");


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/helptext/helptext.css":
/*!************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/helptext/helptext.css ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([]);

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/helptext/helptext.html":
/*!*************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/helptext/helptext.html ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _helptext_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helptext.css */ "./node_modules/lightning-base-components/src/lightning/helptext/helptext.css");
/* harmony import */ var _helptext_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helptext.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lightning_buttonIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/buttonIcon */ "./node_modules/lightning-base-components/src/lightning/buttonIcon/buttonIcon.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");






function tmpl($api, $cmp, $slotset, $ctx) {
  const {b: api_bind, c: api_custom_element, h: api_element} = $api;
  const {_m0} = $ctx;
  return [api_element("div", {
    classMap: {
      "slds-form-element__icon": true
    },
    attrs: {
      "part": "help-text"
    },
    key: 0
  }, [api_custom_element("lightning-button-icon", lightning_buttonIcon__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "iconName": $cmp.iconName,
      "iconClass": $cmp.computedIconClass,
      "variant": $cmp.computedButtonVariant,
      "alternativeText": $cmp.alternativeText,
      "tooltip": $cmp.content
    },
    key: 1,
    on: {
      "privatebuttoniconregister": _m0 || ($ctx._m0 = api_bind($cmp.handleButtonIconRegister))
    }
  }, [])])];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_3__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_helptext_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _helptext_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_helptext_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _helptext_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-helptext_helptext"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/helptext/helptext.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/helptext/helptext.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _helptext_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helptext.html */ "./node_modules/lightning-base-components/src/lightning/helptext/helptext.html");
/* harmony import */ var _salesforce_label_LightningHelptext_buttonAlternativeText__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/label/LightningHelptext.buttonAlternativeText */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningHelptext.buttonAlternativeText.js");
/* harmony import */ var lightning_iconUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/iconUtils */ "./node_modules/lightning-base-components/src/lightning/iconUtils/iconUtils.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var lightning_tooltipLibrary__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lightning/tooltipLibrary */ "./node_modules/lightning-base-components/src/lightning/tooltipLibrary/tooltipLibrary.js");






const DEFAULT_BUTTON_ALT_TEXT = _salesforce_label_LightningHelptext_buttonAlternativeText__WEBPACK_IMPORTED_MODULE_2__.default;
const DEFAULT_ICON_NAME = 'utility:info';
const DEFAULT_ICON_VARIANT = 'bare';
/**
 * An icon with a text popover used for tooltips.
 */

class LightningHelptext extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  constructor(...args) {
    super(...args);
    this.state = {
      iconName: DEFAULT_ICON_NAME,
      iconVariant: DEFAULT_ICON_VARIANT,
      alternativeText: DEFAULT_BUTTON_ALT_TEXT
    };
    this.content = void 0;
  }

  set iconName(value) {
    this.state.iconName = value;
  }
  /**
   * The Lightning Design System name of the icon used as the visible element.
   * Names are written in the format 'utility:info' where 'utility' is the category,
   * and 'info' is the specific icon to be displayed.
   * The default is 'utility:info'.
   * @type {string}
   * @param {string} value the icon name to use
   * @default utility:info
   */


  get iconName() {
    if ((0,lightning_iconUtils__WEBPACK_IMPORTED_MODULE_3__.isValidName)(this.state.iconName)) {
      return this.state.iconName;
    }

    return DEFAULT_ICON_NAME;
  }

  set iconVariant(value) {
    this.state.iconVariant = value;
  }
  /**
   * Changes the appearance of the icon.
   * Accepted variants include inverse, warning, error.
   * @type {string}
   * @param {string} value the icon variant to use
   * @default bare
   */


  get iconVariant() {
    // NOTE: Leaving a note here because I just wasted a bunch of time
    // investigating why both 'bare' and 'inverse' are supported in
    // lightning-primitive-icon. lightning-icon also has a deprecated
    // 'bare', but that one is synonymous to 'inverse'. This 'bare' means
    // that no classes should be applied. So this component needs to
    // support both 'bare' and 'inverse' while lightning-icon only needs to
    // support 'inverse'.
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_4__.normalizeString)(this.state.iconVariant, {
      fallbackValue: DEFAULT_ICON_VARIANT,
      validValues: ['bare', 'error', 'inverse', 'warning']
    });
  }
  /**
   * The assistive text for the button icon. The default is "Help".
   * Screen readers announce the assistive text and help text content as {alternativeText} button {content}.
   * If not set, screen readers announce "Help button {content}".
   * The text should describe the function of the icon, for example, "Show help text".
   *
   * @type {string}
   * @param {string} value The assistive text to set
   * @default Help
   */


  get alternativeText() {
    return this.state.alternativeText;
  }

  set alternativeText(value) {
    // typeof 'string' check prevents <lightning-helptext alternative-text>
    //   from setting 'true' as the a11y help text
    // lwc treats above alternative-text as: true (typeof 'boolean')
    //   we want to prevent 'true' or empty string as a11y text, instead default to 'Help'
    if (value && typeof value === 'string' && value.trim() !== '') {
      this.state.alternativeText = value;
    } else {
      // warn why they can't unset the value
      // eslint-disable-next-line no-console
      console.warn(`<lightning-helptext> Invalid alternativeText value: ${value}`);
    }
  }
  /**
   * Sets focus on the button.
   */


  focus() {
    this.template.querySelector('lightning-button-icon').focus();
  } // Get the variant to be applied to button based on the icon variant


  get computedButtonVariant() {
    switch (this.iconVariant) {
      case 'inverse':
        return 'bare-inverse';

      default:
        return 'bare';
    }
  } // Get the class to be applied to icon based on the icon variant


  get computedIconClass() {
    switch (this.iconVariant) {
      case 'error':
        return 'slds-icon-text-error';

      case 'warning':
        return 'slds-icon-text-warning';

      default:
        return '';
    }
  }
  /**
   * Set lightning-button-icon tooltips to be created with toggle events
   *
   * @param {*} event
   */


  handleButtonIconRegister(event) {
    event.stopPropagation();
    event.detail.setTooltipType(lightning_tooltipLibrary__WEBPACK_IMPORTED_MODULE_5__.TooltipType.Toggle);
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningHelptext, {
  publicProps: {
    content: {
      config: 0
    },
    iconName: {
      config: 3
    },
    iconVariant: {
      config: 3
    },
    alternativeText: {
      config: 3
    }
  },
  publicMethods: ["focus"],
  track: {
    state: 1
  }
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningHelptext, {
  tmpl: _helptext_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/i18nCldrOptions/i18nCldrOptions.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/i18nCldrOptions/i18nCldrOptions.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ intlDatetimeformatPattern)
/* harmony export */ });
/**
 * Match datetime components in a CLDR pattern, except those in single quotes.
 * This regexp should match all possible fragments described in:
 * http://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table 
 */
var expDTComponents = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
/**
 * Analayze individual segments of a CLDR pattern and matches it to
 * the corresponding datatime component option.
 */

function analyzeSkeltonSegment($0, formatObj) {
  switch ($0.charAt(0)) {
    // --- Era
    case 'G':
      formatObj.era = ['short', 'short', 'short', 'long', 'narrow'][$0.length - 1];
      break;
    // --- Year

    case 'y':
    case 'Y':
    case 'u':
    case 'U':
    case 'r':
      formatObj.year = $0.length === 2 ? '2-digit' : 'numeric';
      break;
    // --- Quarter (not supported in this polyfill)

    case 'Q':
    case 'q':
      formatObj.quarter = ['numeric', '2-digit', 'short', 'long', 'narrow'][$0.length - 1];
      break;
    // --- Month

    case 'M':
    case 'L':
      formatObj.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][$0.length - 1];
      break;
    // --- Week (not supported in this polyfill)

    case 'w':
      // week of the year
      formatObj.week = $0.length === 2 ? '2-digit' : 'numeric';
      break;

    case 'W':
      // week of the month
      formatObj.week = 'numeric';
      break;
    // --- Day

    case 'd':
      // day of the month
      formatObj.day = $0.length === 2 ? '2-digit' : 'numeric';
      break;

    case 'D': // day of the year

    case 'F': // day of the week

    case 'g':
      // 1..n: Modified Julian day
      formatObj.day = 'numeric';
      break;
    // --- Week Day

    case 'E':
      // day of the week
      formatObj.weekday = ['short', 'short', 'short', 'long', 'narrow', 'short'][$0.length - 1];
      break;

    case 'e':
      // local day of the week
      formatObj.weekday = ['numeric', '2-digit', 'short', 'long', 'narrow', 'short'][$0.length - 1];
      break;

    case 'c':
      // stand alone local day of the week
      formatObj.weekday = ['numeric', undefined, 'short', 'long', 'narrow', 'short'][$0.length - 1];
      break;
    // --- Period

    case 'a': // AM, PM

    case 'b': // am, pm, noon, midnight

    case 'B':
      // flexible day periods
      formatObj.hour12 = true;
      break;
    // --- Hour

    case 'h':
      // 1, 12
      formatObj.hourCycle = "h12";
      formatObj.hour12 = true; // 12-hour-cycle time formats

      formatObj.hour = $0.length === 2 ? '2-digit' : 'numeric';
      break;

    case 'H':
      // 0-23
      formatObj.hourCycle = "h23";
      formatObj.hour12 = false; // 23-hour-cycle time formats

      formatObj.hour = $0.length === 2 ? '2-digit' : 'numeric';
      break;

    case 'k':
      // 1, 24
      formatObj.hourCycle = "h24";
      formatObj.hour12 = false; // 24-hour-cycle time formats

      formatObj.hour = $0.length === 2 ? '2-digit' : 'numeric';
      break;

    case 'K':
      // 0, 11
      formatObj.hourCycle = "h11";
      formatObj.hour12 = true; // 11-hour-cycle time formats

      formatObj.hour = $0.length === 2 ? '2-digit' : 'numeric';
      break;
    // --- Minute

    case 'm':
      formatObj.minute = $0.length === 2 ? '2-digit' : 'numeric';
      break;
    // --- Second

    case 's':
      formatObj.second = $0.length === 2 ? '2-digit' : 'numeric';
      break;

    case 'S':
    case 'A':
      formatObj.second = 'numeric';
      break;
    // --- Timezone

    case 'z': // 1..3, 4: specific non-location format

    case 'Z': // 1..3, 4, 5: The ISO8601 varios formats

    case 'O': // 1, 4: miliseconds in day short, long

    case 'v': // 1, 4: generic non-location format

    case 'V': // 1, 2, 3, 4: time zone ID or city

    case 'X': // 1, 2, 3, 4: The ISO8601 varios formats

    case 'x':
      // 1, 2, 3, 4: The ISO8601 varios formats
      // this polyfill only supports much, for now, we are just doing something dummy
      formatObj.timeZoneName = $0.length < 4 ? 'short' : 'long';
      break;
  }
}

var cache = Object.create(null);
/**
 * Converts CLDR Pattern into a valid Intl.DateTimeFormat options object required by
 * the ECMAScript Internationalization API specification.
 */

var intlDatetimeformatPattern = function getDateTimeFormatOptions(pattern) {
  if (typeof pattern !== 'string') {
    throw new TypeError();
  }

  var formatObj = cache[pattern];

  if (formatObj) {
    return formatObj;
  }

  formatObj = cache[pattern] = {}; // Match the skeleton string with the one required by the specification
  // this implementation is based on the Date Field Symbol Table:
  // http://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table

  pattern.replace(expDTComponents, function ($0) {
    // See which symbol we're dealing with
    analyzeSkeltonSegment($0, formatObj);
    return '';
  });
  return formatObj;
};



/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/i18nService/i18nService.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/i18nService/i18nService.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "clearCache": () => (/* binding */ clearCache),
/* harmony export */   "getDateTimeCLDRParser": () => (/* binding */ getDateTimeCLDRParser),
/* harmony export */   "getDateTimeFormat": () => (/* binding */ getDateTimeFormat),
/* harmony export */   "getDateTimeISO8601Parser": () => (/* binding */ getDateTimeISO8601Parser),
/* harmony export */   "getNumberFormat": () => (/* binding */ getNumberFormat),
/* harmony export */   "getNumberParser": () => (/* binding */ getNumberParser),
/* harmony export */   "getRelativeTimeFormat": () => (/* binding */ getRelativeTimeFormat)
/* harmony export */ });
/* harmony import */ var _salesforce_i18n_common_digits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @salesforce/i18n/common.digits */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-common.digits.js");
/* harmony import */ var _salesforce_i18n_common_calendarData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @salesforce/i18n/common.calendarData */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-common.calendarData.js");
/* harmony import */ var _salesforce_i18n_defaultCalendar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/i18n/defaultCalendar */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-defaultCalendar.js");
/* harmony import */ var _salesforce_i18n_defaultNumberingSystem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @salesforce/i18n/defaultNumberingSystem */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-defaultNumberingSystem.js");
/* harmony import */ var _salesforce_i18n_calendarData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @salesforce/i18n/calendarData */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-calendarData.js");
/* harmony import */ var _salesforce_i18n_number_decimalSeparator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @salesforce/i18n/number.decimalSeparator */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.decimalSeparator.js");
/* harmony import */ var _salesforce_i18n_number_groupingSeparator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @salesforce/i18n/number.groupingSeparator */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.groupingSeparator.js");
/* harmony import */ var _salesforce_i18n_number_percentSign__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @salesforce/i18n/number.percentSign */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.percentSign.js");
/* harmony import */ var _salesforce_i18n_number_plusSign__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @salesforce/i18n/number.plusSign */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.plusSign.js");
/* harmony import */ var _salesforce_i18n_number_minusSign__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @salesforce/i18n/number.minusSign */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.minusSign.js");
/* harmony import */ var _salesforce_i18n_number_exponentialSign__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @salesforce/i18n/number.exponentialSign */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.exponentialSign.js");
/* harmony import */ var _salesforce_i18n_number_superscriptingExponentSign__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @salesforce/i18n/number.superscriptingExponentSign */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.superscriptingExponentSign.js");
/* harmony import */ var _salesforce_i18n_number_perMilleSign__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @salesforce/i18n/number.perMilleSign */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.perMilleSign.js");
/* harmony import */ var _salesforce_i18n_number_infinity__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @salesforce/i18n/number.infinity */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.infinity.js");
/* harmony import */ var _salesforce_i18n_number_nan__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @salesforce/i18n/number.nan */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.nan.js");
/* harmony import */ var _salesforce_i18n_number_currencySymbol__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @salesforce/i18n/number.currencySymbol */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.currencySymbol.js");
















/**
 * Given an object instance, generate an object with the same properties, with property name ordered alphabetically, and undefined properties removed.
 *
 * @param value Object to process
 * @returns Generated object with properties only
 */

function extractProperties(value) {
  // Return primitive value as is
  const valueType = typeof value;

  if (valueType === 'string' || valueType === 'number' || valueType === 'boolean' || valueType === 'undefined') {
    return value;
  }

  if (valueType === 'object') {
    // Array is an object
    if (Array.isArray(value)) {
      const newValue = []; // Keep sort order

      for (const arrayValue of value) {
        newValue.push(extractProperties(arrayValue));
      }

      return newValue;
    } else {
      const newValue = {}; // Normalize property order by sorting it before assignment

      const propNames = Object.getOwnPropertyNames(value).sort();

      for (const propName of propNames) {
        const propValue = extractProperties(value[propName]); // Normalize property value by assigning only defined values to properties

        if (propValue !== undefined) {
          newValue[propName] = propValue;
        }
      }

      return newValue;
    }
  }

  return undefined;
}
/**
 * A Map-like object with normalized key
 */


class Cache {
  /**
   * Constructs an empty instance.
   *
   * @constructor
   */
  constructor() {
    /** Internal map object */
    this.map = new Map();
  }
  /**
   * Checks whether this cache contains provided key.
   *
   * @param key Cache key
   * @returns 'true' if cache has this key
   */


  has(key) {
    const newKey = this.normalize(key);
    return this.map.has(newKey);
  }
  /**
   * Returns the cached value for provided key, or undefined if key is unavailable
   *
   * @param key Cache key
   * @returns Cache value
   */


  get(key) {
    const newKey = this.normalize(key);
    return this.map.get(newKey);
  }
  /**
   * Sets provided value to provided cache key. Current cached value will be overwritten if cache key exists.
   *
   * @param key Cache key. Examples: {prop: 'prop value', nested: { nestedProp: 'nestedProp value' }}
   * @param value Cache value
   * @returns Current cache instance
   */


  set(key, value) {
    const newKey = this.normalize(key);
    this.map.set(newKey, value);
    return this;
  }
  /**
   * Removes all cached values.
   *
   * @returns void
   */


  clear() {
    return this.map.clear();
  }
  /**
   * Given a cache key, normalize the key to a string.
   *
   * @param key Cache key
   * @returns Normalized cached key string
   */


  normalize(key) {
    const newKey = extractProperties(key);
    return JSON.stringify(newKey);
  }

}

const dateTimeFormatCache = new Map();
/**
 * Clears the cache
 */

function clearDateTimeFormatCache() {
  dateTimeFormatCache.clear();
}
/**
 * Instantiate or returns a cached value of {@link Intl.DateTimeFormat}, instantiated with given options.
 *
 * @param locale {string} Locale
 * @param options {Intl.DateTimeFormatOptions} Formatter options
 * @returns {Intl.DateTimeFormat} Formatter instance
 */


function getDateTimeFormat(locale = 'en-US', options = {}) {
  if (!dateTimeFormatCache.has(locale)) {
    dateTimeFormatCache.set(locale, new Cache());
  }

  if (!dateTimeFormatCache.get(locale).has(options)) {
    const instance = new Intl.DateTimeFormat(locale, options);
    dateTimeFormatCache.get(locale).set(options, instance);
  }

  return dateTimeFormatCache.get(locale).get(options);
}
/**
 * Escapes a string to use in Javascript regular expression
 *
 * @param value String value to include in a regex
 * @returns {string} Escaped value
 */


function escapeRegex(value) {
  return value.replace(/[-/\\^$*+?.()|[\]{}]/g, '\\$&');
}
/** Map of calendar name used on Intl to its CLDR counterpart */


const intlCalendarMap = {
  gregory: 'gregorian'
};
/**
 * Resolves Intl calendar name to CLDR calendar name
 *
 * @param calendar {string} Calendar name for Intl
 * @returns {string} Calendar name for CLDR
 */

function intlCalendarToCldr(calendar) {
  return Object.prototype.hasOwnProperty.call(intlCalendarMap, calendar) ? intlCalendarMap[calendar] : calendar;
}

const eraDateRegex = /^([-]?[0-9]+)-([0-9]{1,2})-([0-9]{1,2})$/;
/**
 * Parses the date string on CLDR era start/end data to year/month/day property object.
 *
 * @private
 * @param value {string} Era date value to parse
 * @returns Resolved date value
 */

function parseEraDate(value) {
  if (value && eraDateRegex.test(value)) {
    const matches = value.match(eraDateRegex);
    return {
      year: parseInt(matches[0], 10),
      month: parseInt(matches[0], 10),
      day: parseInt(matches[0], 10)
    };
  }

  return undefined;
} // function compareDate(l: { year: number, month: number, day: number }, r: { year: number, month: number, day: number }): number {
//     if (l.year < r.year || (l.year === r.year && l.month < r.month) || (l.year === r.year && l.month === r.month && l.day < r.day)) return -1;
//     if (l.year > r.year || (l.year === r.year && l.month > r.month) || (l.year === r.year && l.month === r.month && l.day > r.day)) return 1;
//     return 0;
// }

/**
 * Resolves a date with year that is indexed to a specific era to its gregorian year value. e.g. Reiwa 3, January 1st for Japanese imperial calendar will resolve to 2021
 *
 * @param eraIndex {number} Era index
 * @param year {number} Year in era
 * @param month {number} Month in era
 * @param day {number} Day in era
 * @param calendarType {string} Calendar type. e.g. "gregorian"
 * @param common {LocaleCommonDataCalendarData} Locale common calendar data
 * @returns {number} Positive gregorian year for AD, negative gregorian year for BC
 */


function getGregorianYear(eraIndex, year, month, day, calendarType = 'gregorian', calendarData) {
  if (calendarType === 'gregorian') {
    // Fast path for gregorian
    // eraIndex === 0 if BC. A negative BC is a positive AD, vice versa
    return eraIndex === 0 ? -year : year;
  } else if (calendarData && calendarData.calendarSystem === 'solar' && calendarData.eras) {
    // non-gregorian solar calendars
    const eras = Object.keys(calendarData.eras).sort().map(k => calendarData.eras[k]);

    if (eraIndex >= eras.length || eraIndex < 0) {
      // NOTE: Should we start with era that match today, rather than last era if invalid?
      eraIndex = eras.length - 1;
    }

    const era = eras[eraIndex];
    const yearAdjusted = year > 0 ? year - 1 : year < 0 ? year + 1 : 0; // We can only have either _start or _end on era

    if (era._end) {
      // This can only be the first era (eras[0]) that counts down (gregorian, coptic, ethiopic)
      const eraEnd = parseEraDate(era._end);
      if (!eraEnd) return undefined; // Report to Unicode

      return eraEnd.year - yearAdjusted;
    } else if (era._start) {
      const eraStart = parseEraDate(era._start);
      if (!eraStart) return undefined; // Report to Unicode

      return eraStart.year + yearAdjusted;
    }
  } else if (calendarData && calendarData.calendarSystem !== 'solar' && calendarData.eras) {
    // TODO: non-gregorian non-solar calendars
    return year;
  }

  return undefined;
}
/**
 * Extracts localized digits on a string and convert it to an array of integers
 *
 * @param value {string} String value
 * @param localeDigits {string[]} Array of localized digits. e.g. ["0",...,"9"] for "latn"
 * @returns {number[]} Array of integers from string. e.g. [1,2,3] for "123" for "latn"
 */


function stringToDigits(value, localeDigits) {
  const digits = [];
  [...value].forEach(char => {
    const digit = localeDigits.indexOf(char);

    if (digit >= 0) {
      digits.push(digit);
    }
  });
  return digits.reverse();
}
/**
 * Extracts localized digits on a string and convert it to an integer
 *
 * @param value {string} String value
 * @param digits {string} Localized digits. e.g. "0123456789" for "latn"
 * @returns {number} Integer value. e.g. 123 for "123" for "latn"
 */


function parseDigits(value, digits) {
  return stringToDigits(value, Array.from(digits)).reduce((int, cur, idx) => int += cur * 10 ** idx, 0);
}
/**
 * @private
 */


function getDigitsRegexPatternInternal(digits, extras = '') {
  // Optimze for sequential codepoints
  if (digits.length > 1 && digits.reduce((sum, digit, idx, arr) => idx === 0 ? true : sum && digit.codePointAt(0) - arr[idx - 1].codePointAt(0) === 1, false)) {
    return '[' + [digits[0], digits[digits.length - 1]].join('-') + escapeRegex(extras) + ']';
  }

  return '[' + digits.join('') + escapeRegex(extras) + ']';
}
/**
 * Generates an optimized regular expression for given localized digits.
 * We would want a regular expression of [0-9] instead of [0123456789],
 * or [\u{660}-\u{669}] instead of [\u{660}\u{661}\u{662}\u{663}\u{664}\u{665}\u{666}\u{667}\u{668}\u{669}] for arabic.
 *
 * @param digits {string} Localized digit string. e.g. "0123456789" for "latn"
 * @param extras {string} Extra characters to include in regular expression range
 * @returns {string} Optimized regular expression for given digits
 */


function getDigitsRegexPattern(digits, extras = '') {
  return getDigitsRegexPatternInternal(Array.from(digits), extras);
}

let utcFormat;
/**
 * This formats to "MM/dd/yyyy, hh:mm" in English (United States) specifically
 */

function getUtcFormat() {
  if (!utcFormat) {
    utcFormat = new Intl.DateTimeFormat('en-US', {
      timeZone: 'UTC',
      hourCycle: 'h23',
      year: 'numeric',
      month: 'numeric',
      day: 'numeric',
      hour: 'numeric',
      minute: 'numeric'
    });
  }

  return utcFormat;
}
/**
 * This matches for "MM/dd/yyyy, hh:mm"
 * Group 0: month
 * Group 1: date
 * Group 2: year
 * Group 3: hour
 * Group 4: minutes
 */


const EN_US_DATE_REGEXP = /(\d+).(\d+).(\d+),?\s+(\d+).(\d+)(.(\d+))?/;
const EN_US_DATE_INDEX_DAY = 1;
const EN_US_DATE_INDEX_HOUR = 3;
const EN_US_DATE_INDEX_MINUTE = 4;
const TIMEZONE_DATEFORMATS = new Map();
/**
 * Parses date string in specific "MM/dd/yyyy, hh:mm" format to its respected parts.
 *
 * @param value Date string value in "MM/dd/yyyy, hh:mm" format
 * @returns Array of parsed strings based on groups defined at EN_US_DATE_REGEXP
 */

function parseEnUsDate(value) {
  const dateString = value.replace(/[\u200E\u200F]/g, ''); // Cleanse

  return [].slice.call(EN_US_DATE_REGEXP.exec(dateString), 1).map(Math.floor);
}
/**
 * Given two date parts parsed by parseEnUsDate, return the difference in minutes.
 *
 * @param date1 Date parts
 * @param date2 Date parts
 * @returns Difference in minutes
 */


function diffMinutes(date1, date2) {
  let day = date1[EN_US_DATE_INDEX_DAY] - date2[EN_US_DATE_INDEX_DAY];
  const hour = date1[EN_US_DATE_INDEX_HOUR] - date2[EN_US_DATE_INDEX_HOUR];
  const min = date1[EN_US_DATE_INDEX_MINUTE] - date2[EN_US_DATE_INDEX_MINUTE];

  if (day > 15) {
    day = -1;
  }

  if (day < -15) {
    day = 1;
  }

  return 60 * (24 * day + hour) + min;
}
/**
 * Return timezone offset of given date in minutes
 *
 * @param timeZoneId Time zone
 * @param date Date object
 * @returns Number of time offset in minutes
 */


function getTimeZoneOffset(timeZone, date) {
  if (!TIMEZONE_DATEFORMATS.has(timeZone)) {
    // This must be the same locale (English (United States)) and options as getUtcFormat, minus the timeZone difference
    TIMEZONE_DATEFORMATS.set(timeZone, new Intl.DateTimeFormat('en-US', {
      timeZone: timeZone,
      hourCycle: 'h23',
      year: 'numeric',
      month: 'numeric',
      day: 'numeric',
      hour: 'numeric',
      minute: 'numeric'
    }));
  }

  const dateFormat = TIMEZONE_DATEFORMATS.get(timeZone);
  return diffMinutes(parseEnUsDate(getUtcFormat().format(date)), parseEnUsDate(dateFormat.format(date)));
}
/**
 * Validates week
 *
 * @param week {Number} Week number
 * @returns {boolean} true if the week is valid
 */


function isValidWeek(week) {
  return Number.isInteger(week) && week >= 1
  /*week starts at 1 */
  && week <= 53;
  /* at most we only have 53 weeks */
}
/**
 * Validates day of week
 *
 * @param dayOfWeek {Number} dayOfWeek number
 * @returns {boolean} true if the day of week is valid
 */


function isValidDayOfWeek(dayOfWeek) {
  return Number.isInteger(dayOfWeek) && dayOfWeek >= 1
  /* day of week starts at 1 */
  && dayOfWeek <= 7;
  /* day of week ends at 7 */
}
/**
 * Validates month
 *
 * @param month {Number} Month number
 * @returns {boolean} true if the month is valid
 */


function isValidMonth(month) {
  return is31DayMonth(month) || is30DayMonth(month) || month === 2;
}
/**
 * Check if the month has 31 days
 *
 * @param month {Number} Month number
 * @returns {boolean} true if the month has 31 days
 */


function is31DayMonth(month) {
  return month === 1 || month === 3 || month === 5 || month === 7 || month === 8 || month === 10 || month === 12;
}
/**
 * Check if the month has 30 days
 *
 * @param month {Number} Month number
 * @returns {boolean} true if the month has 30 days
 */


function is30DayMonth(month) {
  return month === 4 || month === 6 || month === 9 || month === 11;
}
/**
 * Check if ordinal is valid
 *
 * @param ordinal {Number} Ordinal number
 * @param isLeapYear {boolean}
 * @returns {boolean} true if the ordinal is valid
 */


function isValidOrdinal(ordinal, isLeapYear) {
  return Number.isInteger(ordinal) && ordinal >= 1
  /* ordinal day starts at 1 */
  && (isLeapYear && ordinal <= 366
  /* at most we only have 366 days for leap year */
  || !isLeapYear && ordinal <= 365);
  /* at most we only have 366 days for leap year */
}
/**
 * Validate date
 *
 * @param month {Number} Month number
 * @param day {Number} Day number
 * @param isLeapYear {boolean} Indicates whether its a leap year
 * @returns {boolean} true if the date is valid
 */


function isValidDate(month, day, isLeapYear) {
  return isValidMonth(month) && Number.isInteger(day) && day >= 1
  /* 0 is not a date */
  && (day <= 30 && is30DayMonth(month)
  /* validation for 30 day months */
  || day <= 31 && is31DayMonth(month)
  /* validation for 31 day months */
  || isLeapYear && month === 2 && day <= 29
  /* february, leap year */
  || !isLeapYear && month === 2 && day <= 28);
  /* february, non leap year */
}
/**
 * Calendar holds broken down data of an instance in time to calendar parts (year, month, day, etc). This helps in calendar arithmetic (e.g. change time zones, add days, etc)
 */


class Calendar {
  /**
   * @constructor
   * @param timeZone {string} Time zone of this instance
   */
  constructor(timeZone) {
    this.year = 0;
    this.month = 1;
    this.day = 1;
    this.hour = 0;
    this.minute = 0;
    this.second = 0;
    this.millisecond = 0;
    this.timeZone = timeZone;
  }
  /**
   * Clears the data on this calendar instance
   */


  clear() {
    this.year = 0;
    this.month = 1;
    this.day = 1;
    this.hour = 0;
    this.minute = 0;
    this.second = 0;
    this.millisecond = 0;
  }
  /**
   * Converts this calendar instance to an equivalent Javascript Date instance
   *
   * @param smallYearOffset {number} Offset year to use if this calendar year is a two-digit year
   * @returns {Date} Date instance
   */


  getDate(smallYearOffset = 2000) {
    // Adjust year if two digits and below
    if (this.year < 100 && this.year >= 0) {
      this.year += smallYearOffset;
    } // Date is constructed with date & time in local (browser) time zone


    const localDate = new Date(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond);

    if (this.timeZone) {
      const localOffset = localDate.getTimezoneOffset();
      const timeZoneOffset = getTimeZoneOffset(this.timeZone, localDate);
      const offset = localOffset - timeZoneOffset; // Return local date if offset equals, else adjust millisecond and return adjusted date

      if (Math.floor(offset) !== 0) {
        const adjustedDate = new Date(localDate.getTime() - offset * 60 * 1000);
        return adjustedDate;
      }
    }

    return localDate;
  }

}
/**
 * Tokenize string value of CLDR date time format string to array of tokens.
 *
 * Ref: https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Format_Patterns
 *
 * @param value CLDR date time format pattern
 * @returns Array of tokens
 */


function tokenizeDateTimePattern(value) {
  // Notes regarding single quote escape:
  // <quote>
  // Literal text, which is output as-is when formatting, and must closely match when parsing. Literal text can include:
  // * Any characters other than A..Z and a..z, including spaces and punctuation.
  // * Any text between single vertical quotes ('xxxx'), which may include A..Z and a..z as literal text.
  // * Two adjacent single vertical quotes (''), which represent a literal single quote, either inside or outside quoted text.
  // </quote>
  // Ref: https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Format_Patterns
  // e.g.
  // '' -> [text(')]
  // 'a' -> [text(a)]
  // 'ymd' -> [text(ymd)]
  // ''a -> [text('), token(a)]
  // ''' -> [text(')]
  // '''' -> [text('')]
  // 'a''b' -> [text(a'b)]
  // ' '' ' -> [text( ' )]
  const tokenValues = [...'GyYQqM<wWdDFEecabBhHKkmsSAxXOvVXxZz']; // DateTimePatternToken.type

  const tokens = [];
  let isEscapedText = false;
  let isPrevSingleQuote = false;
  [...value].forEach(char => {
    // tokenValue is defined if it is a known token character.
    const tokenValue = tokenValues.indexOf(char) >= 0 ? char : undefined;
    let isCharText = false; // Set single quoted mode

    if ((tokenValue !== undefined || char !== "'") && isPrevSingleQuote) {
      isEscapedText = !isEscapedText;
    } // Process


    if (tokenValue !== undefined && !isEscapedText) {
      if (tokens.length > 0 && tokens[tokens.length - 1].type === tokenValue) {
        // Current character is same as previous token. extending token length
        let tokenLength = tokens[tokens.length - 1].length;
        tokenLength = tokenLength === undefined ? 1 : tokenLength + 1;
        tokens[tokens.length - 1].length = tokenLength;
      } else if (tokenValue !== undefined) {
        // Current character is a known token
        tokens.push({
          // @ts-ignore
          type: tokenValue,
          length: 1
        });
      }

      isPrevSingleQuote = false;
    } else if (char === "'" && !isPrevSingleQuote) {
      isPrevSingleQuote = true;
    } else if (char === "'" && isPrevSingleQuote) {
      // Treat two single quotes as one single quote text
      isCharText = true;
      isPrevSingleQuote = false; // Consume current single quote
    } else {
      // Treat others as text
      isCharText = true;
      isPrevSingleQuote = false; // Consumed current single quote
    }

    if (isCharText) {
      // Add as text token
      // Extend last token if it is a text token
      if (tokens.length > 0 && tokens[tokens.length - 1].type === undefined) {
        // Previous token is text, extending token text
        let tokenText = tokens[tokens.length - 1].text;
        tokenText = tokenText === undefined ? char : tokenText + char;
        tokens[tokens.length - 1].text = tokenText;
      } else {
        // Previous token is not text, creating new text token
        tokens.push({
          text: char
        });
      }
    }
  });
  return tokens;
}
/**
 * Gets symbols for given CLDR date time format token from CLDR locale data.
 *
 * @param token CLDR date time format token
 * @param calendarData Locale data for calendar
 * @returns Map of symbols from locale data for given token. e.g. {'0':'january','1':'february',...}
 */


function getSymbols(token, calendarData) {
  switch (token) {
    case 'a':
    case 'aa':
    case 'aaa':
      return calendarData.dayPeriods.format.abbreviated;

    case 'aaaa':
      return calendarData.dayPeriods.format.wide;

    case 'aaaaa':
      return calendarData.dayPeriods.format.narrow;

    case 'G':
      return calendarData.eras.eraAbbr;

    case 'GGGG':
      return calendarData.eras.eraNames;

    case 'GGGGG':
      return calendarData.eras.eraNarrow;

    case 'MMM':
      return calendarData.months.format.abbreviated;

    case 'MMMM':
      return calendarData.months.format.wide;

    case 'MMMMM':
      return calendarData.months.format.narrow;

    case 'EEEE':
      return calendarData.days.format.wide;

    case 'EEEEE':
      return calendarData.days.format.narrow;

    case 'EEEEEE':
      return calendarData.days.format.abbreviated;

    default:
      return {};
  }
}
/**
 * Gets the token type for CLDR date time format token, whether it is numeric, specific digit numeric, or string
 *
 * @param value CLDR date time format token
 * @returns -1 if token is not numeric, 0 if token is of arbitrary digits, >= 1 if token is of specific digit
 */


function getTokenDigits(token) {
  switch (token.type) {
    case 'y': // Year

    case 'd': // DayOfMonth

    case 'K': // Hour0011

    case 'H': // Hour0023

    case 'h': // Hour0112

    case 'k': // Hour0124

    case 'm': // Minute

    case 's': // Second

    case 'S': // SecondFractional

    case 'A': // MilliSecond
    // eslint-disable-next-line no-fallthrough

    case 'Q':
      // Quarter
      return token.length === 2 ? 2 : 0;

    case 'M': // Month

    case 'e': // WeekDayLocal

    case 'c':
      // WeekDayLocalStandalone
      switch (token.length) {
        case 1:
          return 0;

        case 2:
          return 2;

        default:
          return -1;
      }

  }

  return -1;
}
/** Cache regex */


const regexps = new Map();
/**
 * Generates the expression object that contains regex and tokens used on the regex groups based on given pattern and locale data.
 *
 * @param pattern CLDR date time format pattern
 * @param digits Used digits
 * @param calData Locale data for calendar
 * @returns DateTimePattenExpression
 */

function getExpression$1(pattern, digits, calData) {
  const tokens = tokenizeDateTimePattern(pattern);
  const groups = [];
  const digitsRange = getDigitsRegexPattern(digits);
  let exprValue = '^[\\s]*'; // trim leading whitespace

  for (let i = 0; i < tokens.length; i++) {
    const token = tokens[i];

    if (token.text !== undefined && token.text !== '') {
      // text
      exprValue += '(' + escapeRegex(token.text) + ')';
      groups.push(token);
    } else if (token.type !== undefined) {
      const tokenString = token.type.repeat(token.length);
      const digits = getTokenDigits(token);

      if (digits === -1) {
        if (tokenString === 'z') {
          // time zone is free text w/o whitespace
          exprValue += '([^\\s]+)';
        } else {
          // non-numeric symbols
          const symbols = getSymbols(tokenString, calData);
          exprValue += '(' + Object.keys(symbols).map(k => escapeRegex(symbols[k])).join('|') + ')';
        }

        groups.push(token);
      } else if (digits === 0) {
        // arbitrary digits
        exprValue += '(' + digitsRange + '+)';
        groups.push(token);
      } else if (digits > 0) {
        // exact digits
        exprValue += '(' + digitsRange + '{1,' + digits + '})';
        groups.push(token);
      }
    }
  }

  exprValue += '[\\s]*$'; // trim trailing whitespace

  if (!regexps.has(exprValue)) {
    regexps.set(exprValue, new RegExp(exprValue));
  }

  return {
    regexp: regexps.get(exprValue),
    groups
  };
}
/**
 * Utility to return the first key of object property by its value.
 *
 * @param parent Target object
 * @param value Property value to find
 * @returns Property key
 */


function getKeyByValue(parent, value) {
  for (const key in parent) {
    if (Object.prototype.hasOwnProperty.call(parent, key) && parent[key] === value) {
      return key;
    }
  }

  return undefined;
}
/**
 * Utility to return the CLDR locale data key from locale data by its value.
 * e.g. symbol='February', token={type:'M',length:'MMM'} returns '1'
 *
 * @param symbol Value to search
 * @param token CLDR date time format token to search
 * @param data Locale data for calendar
 * @returns CLDR key name
 */


function getKeyFromSymbol(symbol, token, data) {
  const tokenString = token.type.repeat(token.length);

  switch (token.type) {
    case 'G':
      // Era
      switch (tokenString) {
        case 'G':
          return getKeyByValue(data.eras.eraNames, symbol);

        case 'GGGG':
          return getKeyByValue(data.eras.eraNarrow, symbol);

        case 'GGGGG':
          return getKeyByValue(data.eras.eraAbbr, symbol);
      }

      break;

    case 'M': // Month

    case 'L':
      // MonthStandalone
      switch (tokenString) {
        case 'MMM':
          // abbreviated/short
          return getKeyByValue(data.months.format.abbreviated, symbol);

        case 'MMMM':
          // wide/long
          return getKeyByValue(data.months.format.wide, symbol);

        case 'MMMMM':
          // narrow
          return getKeyByValue(data.months.format.narrow, symbol);

        case 'LLL':
          // abbreviated/short
          return getKeyByValue(data.months['stand-alone'].short, symbol);

        case 'LLLL':
          // wide/long
          return getKeyByValue(data.months['stand-alone'].wide, symbol);

        case 'LLLLL':
          // narrow
          return getKeyByValue(data.months['stand-alone'].narrow, symbol);
      }

      break;

    case 'a': // PeriodAmPm

    case 'b': // PeriodAmPmNoonMidnight

    case 'B':
      // PeriodFlexible
      if (token.length >= 1 && token.length <= 3) return getKeyByValue(data.dayPeriods.format.abbreviated, symbol);
      if (token.length === 4) return getKeyByValue(data.dayPeriods.format.wide, symbol);
      if (token.length === 5) return getKeyByValue(data.dayPeriods.format.narrow, symbol);
      break;

    case 'E': // WeekDay:

    case 'e': // WeekDayLocal // Same keys as WeekDay. But index of monday changes per locale

    case 'c':
      // WeekDayLocalStandalone: // Same keys as WeekDay. But index of monday changes per locale
      switch (tokenString) {
        // abbreviated
        case 'E':
        case 'EE':
        case 'EEE':
        case 'eee':
        case 'ccc':
          return getKeyByValue(data.days.format.abbreviated, symbol);
        // wide/long

        case 'EEEE':
        case 'eeee':
        case 'cccc':
          return getKeyByValue(data.days.format.wide, symbol);
        // narrow

        case 'EEEEE':
        case 'eeeee':
        case 'ccccc':
          return getKeyByValue(data.days.format.abbreviated, symbol);
        // short

        case 'EEEEEE':
        case 'eeeeee':
        case 'cccccc':
          return getKeyByValue(data.days.format.short, symbol);
      }

      break;
  }

  return undefined;
}
/*
 * CLDR locale specific types
 */

/**
 * Keys used on LocaleDataDatesCalendar for months
 */


const MONTHS_KEYS = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];
/**
 * Date/time parser implementation based on CLDR locale data
 *
 * @author aazizy
 */

class DateTimeParseImpl {
  /**
   * @constructor
   * @param options {DateTimeParseOptions} Options
   */
  constructor(options) {
    // Build data
    const data = {
      commonDigits: _salesforce_i18n_common_digits__WEBPACK_IMPORTED_MODULE_0__.default,
      commonCalendarData: _salesforce_i18n_common_calendarData__WEBPACK_IMPORTED_MODULE_1__.default,
      defaultCalendar: _salesforce_i18n_defaultCalendar__WEBPACK_IMPORTED_MODULE_2__.default,
      defaultNumberingSystem: _salesforce_i18n_defaultNumberingSystem__WEBPACK_IMPORTED_MODULE_3__.default,
      calendarData: _salesforce_i18n_calendarData__WEBPACK_IMPORTED_MODULE_4__.default
    }; // Resolve options

    this.calendarType = options.calendar ? intlCalendarToCldr(options.calendar) : data.defaultCalendar;
    const numSys = options.numberingSystem ? options.numberingSystem : data.defaultNumberingSystem;
    const timeZone = options.timeZone ? options.timeZone : undefined;
    options.numberingSystem = numSys;
    options.timeZone = timeZone;
    this.options = options;
    this.digits = data.commonDigits[numSys];
    this.commonCalendarData = data.commonCalendarData[this.calendarType];
    this.calendarData = data.calendarData[this.calendarType]; // Generating expression here becuse we want to do this only once.

    this.expr = getExpression$1(this.options.pattern, this.digits, this.calendarData);
  }
  /**
   * {@inheritdoc}
   */


  parse(value) {
    const matches = value.match(this.expr.regexp);

    if (!matches || matches.length <= this.expr.groups.length) {
      throw new Error("Invalid date: '" + value + "' for pattern: '" + this.options.pattern + "'");
    }

    const cal = new Calendar(this.options.timeZone);
    cal.clear();
    let era;
    let dayPeriod;
    this.expr.groups.forEach((group, groupIndex) => {
      if (group.type === undefined) {
        // Skip text (separators, space etc)
        return;
      }

      const match = matches[groupIndex + 1];

      if (getTokenDigits(group) >= 0) {
        // Parse digits
        // This is lenient parsing right now.
        // We should throw exception for strict parsing, if digits are not in range.
        // e.g.
        // 'K' should validate against 0 <= cal.hour && cal.hour <= 11
        // 'h' should validate against 1 <= cal.hour && cal.hour <= 12
        switch (group.type) {
          case 'y':
            // Year
            cal.year = parseDigits(match, this.digits);
            break;

          case 'M':
            // Month
            cal.month = parseDigits(match, this.digits);
            break;

          case 'd':
            // DayOfMonth
            cal.day = parseDigits(match, this.digits);
            break;

          case 'K':
            // Hour0011
            cal.hour = parseDigits(match, this.digits);
            break;

          case 'H':
            // Hour0023
            cal.hour = parseDigits(match, this.digits);
            break;

          case 'h':
            // Hour0112
            cal.hour = parseDigits(match, this.digits);
            break;

          case 'k':
            // Hour0124
            cal.hour = parseDigits(match, this.digits);
            break;

          case 'm':
            // Minute
            cal.minute = parseDigits(match, this.digits);
            break;

          case 's':
            // Second
            cal.second = parseDigits(match, this.digits);
            break;

          case 'A':
            // MilliSecond
            cal.millisecond = parseDigits(match, this.digits);
            break;
        }
      } else {
        // Parse symbols
        const key = getKeyFromSymbol(match, group, this.calendarData);

        if (key) {
          switch (group.type) {
            case 'G':
              // Era
              era = parseInt(key, 10);
              break;

            case 'M': // Month

            case 'L':
              // MonthStandalone
              cal.month = MONTHS_KEYS.indexOf(key) + 1; // Calendar month is one indexed

              break;

            case 'a': // PeriodAmPm

            case 'b': // PeriodAmPmNoonMidnight

            case 'B':
              // PeriodFlexible
              dayPeriod = key;
              break;
          }
        }
      }
    }); // Adjust year

    if (era !== undefined && era >= 0) {
      const adjustedYear = getGregorianYear(era, cal.year, cal.month, cal.day, this.calendarType, this.commonCalendarData);
      if (adjustedYear !== undefined) cal.year = adjustedYear;
    } // Adjust hours based period


    if (dayPeriod !== undefined) {
      switch (dayPeriod) {
        case 'am':
        case 'morning1':
        case 'morning2':
          // NOOP
          break;

        case 'pm':
        case 'afternoon1':
        case 'afternoon2':
        case 'evening1':
        case 'night1':
          if (cal.hour >= 0 && cal.hour < 12) cal.hour += 12;
          break;

        case 'midnight':
          if (cal.hour === 12) cal.hour = 0;
          break;
      }
    }

    return cal.getDate();
  }

}

const cldrParserCache = new Cache();
/**
 * Clears the cache
 */

function clearDateTimeCLDRParserCache() {
  cldrParserCache.clear();
}
/**
 * Instantiate or returns a cached value of a CLDR-based date time parser, instantiated with given a parser options.
 *
 * @param options {DateTimeParseOptions} Parser options
 * @returns {DateTimeParse} Parser instance
 */


function getDateTimeCLDRParser(options) {
  if (!cldrParserCache.has(options)) {
    cldrParserCache.set(options, new DateTimeParseImpl(options));
  }

  return cldrParserCache.get(options);
}

const intlRelativeTimeFormatCache = new Map();
/**
 * Clears the cache
 */

function clearRelativeTimeFormatCache() {
  intlRelativeTimeFormatCache.clear();
}
/**
 * Instantiate or returns a cached value of {@see Intl.RelativeTimeFormat}, instantiated with given options.
 *
 * @param options {Intl.RelativeTimeFormatOptions} Formatter options
 * @returns {Intl.RelativeTimeFormat} Formatter instance
 */


function getRelativeTimeFormat(locale = 'en-US', options = {}) {
  if (!intlRelativeTimeFormatCache.has(locale)) {
    intlRelativeTimeFormatCache.set(locale, new Cache());
  }

  if (!intlRelativeTimeFormatCache.get(locale).has(options)) {
    intlRelativeTimeFormatCache.get(locale).set(options, new Intl.RelativeTimeFormat(locale, options));
  }

  return intlRelativeTimeFormatCache.get(locale).get(options);
}

const numberFormatCache = new Map();
/**
 * Clears the cache
 */

function clearNumberFormatCache() {
  numberFormatCache.clear();
}
/**
 * Instantiate or returns a cached value of {@see Intl.NumberFormat}, instantiated with given options.
 *
 * @param locale {string} Locale
 * @param options {Intl.NumberFornatOptions} Formatter options
 * @returns {Intl.NumberFormat} Formatter instance
 */


function getNumberFormat(locale = 'en-US', options = {}) {
  if (!numberFormatCache.has(locale)) {
    numberFormatCache.set(locale, new Cache());
  }

  if (!numberFormatCache.get(locale).has(options)) {
    numberFormatCache.get(locale).set(options, new Intl.NumberFormat(locale, options));
  }

  return numberFormatCache.get(locale).get(options);
}
/**
 * Calls getExpression and returns either only a positive expression, or a positive and negative expression if the pattern specifies different patterns for negative values
 *
 * @param pattern {string} Number pattern as used on CLDR
 * @param isNegative {boolean} If this pattern is for negative value. Defaults to false
 * @param digits {string} String of 10 characters used as digits. e.g. "0123456789" for latm numbering system
 * @param symbols {LocaleDataNumberSymbol} Symbols used in number pattern. See LocaleDataNumberSymbol
 * @param currencySymbol {string} Currency symbol used. e.g. "$"
 * @returns {NumberParseExpressions} A map value of positive and/or negative expression
 */


function getExpressions(pattern, digits, symbols, currencySymbol, lenient) {
  const patterns = pattern.split(';');

  if (patterns.length >= 2) {
    return {
      positive: getExpression(patterns[0], false, digits, symbols, currencySymbol, lenient),
      negative: getExpression(patterns[1], true, digits, symbols, currencySymbol, lenient)
    };
  }

  return {
    positive: getExpression(pattern, false, digits, symbols, currencySymbol, lenient)
  };
}
/**
 * Given a pattern and locale data, generates the regular expression and its matching group definitions, to be used when parsing a number string value.
 *
 * @param pattern {string} Number pattern as used on CLDR
 * @param isNegative {boolean} If this pattern is for negative value. Defaults to false
 * @param digits {string} String of 10 characters used as digits. e.g. "0123456789" for latm numbering system
 * @param symbols {LocaleDataNumberSymbol} Symbols used in number pattern. See LocaleDataNumberSymbol
 * @param currencySymbol {string} Currency symbol used. e.g. "$"
 * @returns {NumberParseExpression} Generate expression and its matching group definition for parsing given number pattern
 */


function getExpression(pattern, isNegative = false, digits, symbols, currencySymbol, lenient) {
  const groups = []; // Parse pattern

  let fractionalZeros = 0; // TODO: Used when min/max digits is implemented

  let integerZeros = 0; // TODO: Used when min/max digits is implemented
  // const exponentialDigits = 0; // TODO: support exponential
  // const exponentialLeadingZeros = 0; // TODO: support exponential

  const integerSeparatorIntervals = []; // Normal: [3], lakh/crore: [3,2]
  // let fractionalSeparatorRepeat = -1; // Normal: 0 // NOTE: This is used for parsing

  const exponentialPosition = pattern.indexOf('E'); // TODO: parse exponent

  const decimalPattern = exponentialPosition > 0 ? pattern.slice(0, exponentialPosition) : pattern.slice(0);
  const decimalPosition = decimalPattern.indexOf('.');
  const integerPattern = decimalPosition >= 0 ? decimalPattern.slice(0, decimalPosition) : decimalPattern.slice(0);
  let integerSeparatorInterval = 0;
  let integerDigitsStarted = false;
  let hasPlusSign = false;
  let hasMinusSign = false; // Read right to left

  const integerPatternChars = [];
  [...integerPattern].forEach(char => integerPatternChars.push(char));
  integerPatternChars.reverse();
  [...integerPatternChars].forEach(char => {
    switch (char) {
      case '.':
        // Ignore decimal sign
        break;

      case '+':
        hasPlusSign = true;
        groups.push({
          token: 'plusSign'
        });
        break;

      case '-':
        hasMinusSign = true;
        groups.push({
          token: 'minusSign'
        });
        break;

      case '%':
        groups.push({
          token: 'percentSign'
        });
        break;

      case '¤':
        groups.push({
          token: 'currencySign'
        });
        break;

      case '0':
        integerZeros++;
      // Continue as digits (#)
      // eslint-disable-next-line no-fallthrough

      case '#':
        // this.integerDigits++;
        integerSeparatorInterval++;

        if (!integerDigitsStarted) {
          groups.push({
            token: 'integer'
          });
          integerDigitsStarted = true;
        }

        break;

      case ',':
        integerSeparatorIntervals.push(integerSeparatorInterval); // integerSeparatorRepeat = integerSeparatorIntervals.length - 1; // repeat the last interval

        integerSeparatorInterval = 0;
        break;

      default:
        groups.push({
          token: 'string',
          value: char
        });
    }
  });
  groups.reverse();

  if (decimalPosition >= 0) {
    groups.push({
      token: 'decimalSign'
    });
    const fractionalPattern = decimalPattern.slice(decimalPosition);
    let fractionalDigitsStarted = false; // Read left to right

    [...fractionalPattern].forEach(char => {
      switch (char) {
        case '.':
          // Ignore decimal sign
          break;

        case '+':
          hasPlusSign = true;
          groups.push({
            token: 'plusSign'
          });
          break;

        case '-':
          hasMinusSign = true;
          groups.push({
            token: 'minusSign'
          });
          break;

        case '%':
          groups.push({
            token: 'percentSign'
          });
          break;

        case '¤':
          groups.push({
            token: 'currencySign'
          });
          break;

        case '0':
          fractionalZeros++;
        // Continue as digits (#)
        // eslint-disable-next-line no-fallthrough

        case '#':
          if (!fractionalDigitsStarted) {
            groups.push({
              token: 'fraction'
            });
            fractionalDigitsStarted = true;
          }

          break;

        case ',':
          break;

        default:
          groups.push({
            token: 'string',
            value: char
          });
      }
    });
  } // Generate expression


  let exprValue = '';

  for (let i = 0; i < groups.length; i++) {
    const group = groups[i];

    switch (group.token) {
      case 'integer':
        // Integer part must always has at least one digit (The least is 0)
        exprValue += '(' + getDigitsRegexPattern(digits, integerSeparatorIntervals.length > 0 ? symbols.group : '') + '+)';
        break;

      case 'fraction':
        // Fractional part is optional if lenient, or min fractional digits is 0
        exprValue += '(' + getDigitsRegexPattern(digits, integerSeparatorIntervals.length > 0 ? symbols.group : '') + '+)';

        if (lenient || decimalPosition > 0 && fractionalZeros <= 0) {
          exprValue += '?';
        }

        break;

      case 'decimalSign':
        // Decimal sign is optional if lenient, or if min fractional digits is 0 (fractional is optional)
        exprValue += '(' + escapeRegex(symbols.decimal) + ')';

        if (lenient || decimalPosition > 0 && fractionalZeros <= 0) {
          exprValue += '?';
        }

        break;

      case 'plusSign':
        // Optional
        exprValue += '(' + escapeRegex(symbols.plusSign) + ')?';
        break;

      case 'minusSign':
        // Optional
        exprValue += '(' + escapeRegex(symbols.minusSign) + ')?';
        break;

      case 'percentSign':
        // Optional
        exprValue += '(' + escapeRegex(symbols.percentSign) + ')?';
        break;

      case 'currencySign':
        // Optional
        exprValue += '(' + escapeRegex(currencySymbol) + ')?';
        break;

      case 'string':
        if (group.value !== undefined) {
          // Group to \s if value is all whitespace
          if (/^\s+$/.test(group.value)) {
            exprValue += '(\\s+)' + (lenient ? '?' : '');
          } else {
            exprValue += '(' + escapeRegex(group.value) + ')';
          }
        }

        break;
    }
  } // Prepend optional plus/minus sign if not available in pattern


  if (!isNegative) {
    if (!hasPlusSign && !hasMinusSign) {
      exprValue = '(' + escapeRegex(symbols.plusSign) + '|' + escapeRegex(symbols.minusSign) + ')?' + exprValue;
      groups.unshift({
        token: 'plusOrMinusSign'
      });
    } else if (!hasPlusSign) {
      exprValue = '(' + escapeRegex(symbols.plusSign) + ')?' + exprValue;
      groups.unshift({
        token: 'plusSign'
      });
    } else if (!hasMinusSign) {
      exprValue = '(' + escapeRegex(symbols.minusSign) + ')?' + exprValue;
      groups.unshift({
        token: 'minusSign'
      });
    }
  }

  const expr = new RegExp(exprValue);
  return {
    expr,
    groups,
    isNegative,
    minIntegerDigits: integerZeros,
    minFractionalDigits: fractionalZeros
  };
}
/**
 *
 * @param value {string} String value to parse
 * @param useNegativeExpr {boolean} Use negativeExpr to parse this value instead of the default positiveExpr
 * @param positiveExpr {NumberParseExpression} Expression to use to parse this value for positive values
 * @param negativeExpr {NumberParseExpression} Expression to use to parse this value for negative values
 * @param digits {string} String of 10 characters used as digits. e.g. "0123456789" for latm numbering system
 * @param symbols {LocaleDataNumberSymbol} Symbols used in number pattern
 */


function parseNumber(value, useNegativeExpr = false, positiveExpr, negativeExpr, digits, symbols) {
  // Parse with negative expression first if available and return if value is valid
  if (!useNegativeExpr && negativeExpr) {
    const result = parseNumber(value, true, positiveExpr, negativeExpr, digits, symbols);
    if (!isNaN(result)) return result;
  } // Parse using provided negative expression if requested


  const expr = useNegativeExpr && negativeExpr ? negativeExpr : positiveExpr;
  const matches = value.match(expr.expr);

  if (!matches) {
    return NaN;
  }

  let hasMinusSign = false;
  let hasPlusSign = false;
  let isPercentPattern = false;
  let integerPart = '';
  let fractionPart = '';
  const groupRegex = new RegExp(escapeRegex(symbols.group), 'g');

  for (let i = 0; i < expr.groups.length; i++) {
    const group = expr.groups[i];
    isPercentPattern = isPercentPattern || group.token === 'percentSign';
    const match = matches[i + 1];
    if (!match) continue;

    switch (group.token) {
      case 'integer':
        integerPart += parseDigits(match.replace(groupRegex, ''), digits);
        break;

      case 'fraction':
        fractionPart += parseDigits(match.replace(groupRegex, ''), digits);
        break;

      case 'plusSign':
        hasPlusSign = true;
        break;

      case 'minusSign':
        hasMinusSign = true;
        break;

      case 'plusOrMinusSign':
        switch (match) {
          case symbols.plusSign:
            hasPlusSign = true;
            break;

          case symbols.minusSign:
            hasMinusSign = true;
            break;
        }

        break;
    }
  } // Build number


  if (hasMinusSign && hasPlusSign) {
    throw new Error('String has both plus and minus sign');
  }

  let result = NaN; // Remove leading zeros on integer

  integerPart.replace(/\b0+\B/, '');

  if (isPercentPattern) {
    // Shift 2 digits to the right (divide by 100) if pattern contains percent sign
    fractionPart = integerPart.slice(-2).padStart(2, '0') + fractionPart;
    integerPart = integerPart.slice(0, -2).padStart(1, '0');
    let num = (hasMinusSign ? '-' : '') + integerPart;

    if (fractionPart !== '') {
      num += '.' + fractionPart;
    }

    result = Number.parseFloat(num);
  } else {
    let num = (hasMinusSign ? '-' : '') + integerPart;

    if (expr.minFractionalDigits === undefined || expr.minFractionalDigits !== undefined && expr.minFractionalDigits <= 0 && fractionPart === '') {
      // Treat as integer if fraction is optional
      result = Number.parseInt(num);
    } else {
      if (fractionPart !== '') {
        num += '.' + fractionPart;
      }

      result = Number.parseFloat(num);
    }
  } // Negate result if negative expression is used


  return useNegativeExpr && negativeExpr ? -result : result;
}
/**
 * Number parser implementation
 *
 * @author aazizy
 */


class NumberParseImpl {
  /**
   * @constructor
   * @param options {NumberParseOptions} Options used for this parser instance
   */
  constructor(options) {
    // Build data
    const data = {
      commonDigits: _salesforce_i18n_common_digits__WEBPACK_IMPORTED_MODULE_0__.default,
      defaultNumberingSystem: _salesforce_i18n_defaultNumberingSystem__WEBPACK_IMPORTED_MODULE_3__.default,
      currencySymbol: _salesforce_i18n_number_currencySymbol__WEBPACK_IMPORTED_MODULE_15__.default,
      symbols: {
        decimal: _salesforce_i18n_number_decimalSeparator__WEBPACK_IMPORTED_MODULE_5__.default,
        group: _salesforce_i18n_number_groupingSeparator__WEBPACK_IMPORTED_MODULE_6__.default,
        percentSign: _salesforce_i18n_number_percentSign__WEBPACK_IMPORTED_MODULE_7__.default,
        plusSign: _salesforce_i18n_number_plusSign__WEBPACK_IMPORTED_MODULE_8__.default,
        minusSign: _salesforce_i18n_number_minusSign__WEBPACK_IMPORTED_MODULE_9__.default,
        exponential: _salesforce_i18n_number_exponentialSign__WEBPACK_IMPORTED_MODULE_10__.default,
        superScriptingExponent: _salesforce_i18n_number_superscriptingExponentSign__WEBPACK_IMPORTED_MODULE_11__.default,
        perMille: _salesforce_i18n_number_perMilleSign__WEBPACK_IMPORTED_MODULE_12__.default,
        infinity: _salesforce_i18n_number_infinity__WEBPACK_IMPORTED_MODULE_13__.default,
        nan: _salesforce_i18n_number_nan__WEBPACK_IMPORTED_MODULE_14__.default
      }
    }; // Resolve options

    options.numberingSystem = options.numberingSystem ? options.numberingSystem : data.defaultNumberingSystem;
    this.options = options;
    this.digits = data.commonDigits[options.numberingSystem];
    this.symbols = data.symbols;
    this.currencySymbol = data.currencySymbol;
    this.lenient = !(options.lenient === false); // Default is true
    // Generating expression here becuse we want to do this only once.

    const exprs = getExpressions(this.options.pattern, this.digits, this.symbols, this.currencySymbol, this.lenient);
    this.positiveExpr = exprs.positive;
    this.negativeExpr = exprs.negative;
  }
  /**
   * @inheritdoc
   */


  parse(value) {
    return parseNumber(value, true, this.positiveExpr, this.negativeExpr, this.digits, this.symbols);
  }

}

const NumberParseCache = new Cache();
/**
 * Clears the cache
 */

function clearNumberParserCache() {
  NumberParseCache.clear();
}
/**
 * Instantiate or returns a cached value of {@see NumberParse}, instantiated with given options.
 *
 * @param options {NumberParseOptions} Parser options
 * @returns {NumberParse} Parser instance
 */


function getNumberParser(options) {
  if (!NumberParseCache.has(options)) {
    NumberParseCache.set(options, new NumberParseImpl(options));
  }

  return NumberParseCache.get(options);
}
/**
 * Regular expression for parsing ISO-8601 datetime string.
 *
 * RegExp is thread safe so we can reuse this to match across instances.
 *
 * Please group indices accordingly if expression is updated.
 *
 * Ref https://en.wikipedia.org/wiki/ISO_8601
 */


const EXPR = /^[\s]*(((-|\+)?([0-9]{4})[-]?|--)(([0-9]{2})|([0-9]{2})[-]?([0-9]{2})|(W([0-9]{2})([-]?([0-9]))?)|[-]?([0-9]{3})))(T([0-9]{2})([:]?([0-9]{2})([:]?([0-9]{2})(\.([0-9]{3}))?)?)?(Z|(-|\+)([0-9]{2})([:]?([0-9]{2})?)?)?)?[\s]*$/;
/** (full string) ((-|+)yyyy-|--)(MM|MM-dd|Www-E|DDD)'T'hh:mm:ss.SSS('Z'|(-|+)xx:yy) */

/** (date part) ((-|+)yyyy-|--)(MM|MM-dd|Www-E|DDD) */

const INDEX_DATE = 1;
/** (year part) (-|+)yyyy-|--) */

const INDEX_YEAR_OR_NONE = INDEX_DATE + 1;
/** (-|+)? */

const INDEX_YEAR_SIGN = INDEX_YEAR_OR_NONE + 1;
/** yyyy */

const INDEX_YEAR = INDEX_YEAR_OR_NONE + 2;
/** (MM|MM-dd|Www-E|MM-dd) */

const INDEX_MONTH_MONTHDATE_WEEK_ORDINAL = INDEX_YEAR + 1;
/** MM */

const INDEX_MONTH = INDEX_MONTH_MONTHDATE_WEEK_ORDINAL + 1;
/** MM-dd */

const INDEX_MONTHDATE = INDEX_MONTH_MONTHDATE_WEEK_ORDINAL + 2;
/** (week part) Www-E */

const INDEX_WEEK = INDEX_MONTH_MONTHDATE_WEEK_ORDINAL + 4;
/** (ordinal) DDD */

const INDEX_ORDINAL = INDEX_MONTH_MONTHDATE_WEEK_ORDINAL + 8;
/** (time part) 'T'hh:mm:ss.SSS('Z'|(-|+)xx:yy) */

const INDEX_TIME = INDEX_MONTH_MONTHDATE_WEEK_ORDINAL + 9;
/** :mm:ss.SSS */

const INDEX_MINUTE = INDEX_TIME + 2;
/** :ss.SSS */

const INDEX_SECOND = INDEX_TIME + 4;
/** .SSS, (millisecond must be prefixed by a period, even on abbreviated version) */

const INDEX_MILLISECOND = INDEX_TIME + 6;
/** (timezone part) 'Z'|(-|+)xx:yy */

const INDEX_TZ = INDEX_TIME + 8;
/** :yy */

const INDEX_TZ_MINUTE = INDEX_TIME + 11;
const TIME_ONLY_EXPR = /^[\s]*(([0-9]{2})([:]?([0-9]{2})([:]?([0-9]{2})(\.([0-9]{3}))?)?)?(Z|(-|\+)([0-9]{2})([:]?([0-9]{2})?)?)?)[\s]*$/;
const TIME_ONLY_INDEX_TIME = 1;
const TIME_ONLY_INDEX_MINUTE = TIME_ONLY_INDEX_TIME + 2;
const TIME_ONLY_INDEX_SECOND = TIME_ONLY_INDEX_TIME + 4;
const TIME_ONLY_INDEX_MILLISECOND = TIME_ONLY_INDEX_TIME + 6;
const TIME_ONLY_INDEX_TZ = TIME_ONLY_INDEX_TIME + 8;
const TIME_ONLY_INDEX_TZ_MINUTE = TIME_ONLY_INDEX_TIME + 11;
/**
 * Parse an ISO-8601 datetime string representation to a Date object, or throw on unparseable value.
 *
 * This parser adheres to ISO-8601:2019, where the time separator 'T' is required, and full date part is required, and minute/second/millisecond is optional.
 *
 * Time defaults to 00:00:00.000Z if not specified.
 *
 * Timezone defaults to UTC if not specified.
 *
 * This parser tries to comply with ISO 8601:2004, which implies not supporting some of previously defined representations, such as YYMMDD, --MMDD
 *
 * Provides a more consistent cross-platform parsing for ISO-8601 (only) date strings
 * but behavior is different on each implementation and not recommended, as noted here:
 *
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date#Timestamp_string
 *
 * @param value {string} Value to parse
 * @returns {Date} Date instance
 */

function parseDateTimeIsoString(value) {
  if (value && EXPR.test(value)) {
    return parseDateTimeString(value);
  } else if (value && TIME_ONLY_EXPR.test(value)) {
    return parseTimeOnlyString(value);
  }

  throw new Error("Unparseable date '" + value + "'");
}

function parseTimeOnlyString(value) {
  const matches = value.match(TIME_ONLY_EXPR);

  if (matches) {
    // Time parts
    let hour = 0;
    let minute = 0;
    let second = 0;
    let millisecond = 0;

    if (matches[TIME_ONLY_INDEX_TIME] !== undefined) {
      hour = Number(matches[TIME_ONLY_INDEX_TIME + 1]); // hh : hour part is required

      if (matches[TIME_ONLY_INDEX_MINUTE]) {
        minute = Number(matches[TIME_ONLY_INDEX_MINUTE + 1]); // mm : minute part is optional
      }

      if (matches[TIME_ONLY_INDEX_SECOND] !== undefined) {
        second = Number(matches[TIME_ONLY_INDEX_SECOND + 1]); // ss : second part is optional
      }

      if (matches[TIME_ONLY_INDEX_MILLISECOND] !== undefined) {
        millisecond = Number(matches[TIME_ONLY_INDEX_MILLISECOND + 1]); // SSS : millisecond part is optional
        // period on millisecond is required on both basic and extended format
      } // matches[INDEX_TZ] examples: 'Z', '+09:00', '-1100', '+09', '-11'


      if (matches[TIME_ONLY_INDEX_TZ] !== undefined) {
        // Only adjust offset if this is not UTC
        if (matches[TIME_ONLY_INDEX_TZ] !== 'Z') {
          let offset = Number(matches[TIME_ONLY_INDEX_TZ + 2]) * 60; // offset hour part is required for non 'Z' offset

          if (matches[TIME_ONLY_INDEX_TZ_MINUTE] !== undefined) {
            // offset minute part is optional
            offset += Number(matches[TIME_ONLY_INDEX_TZ_MINUTE + 1]);
          }

          if (matches[TIME_ONLY_INDEX_TZ + 1] === '+') {
            // plus/minus is required for non 'Z' offset
            // If offset is positive, substract offset from minutes
            // e.g. 11am in +09:00 is 2am in UTC (11:00 - 09:00)
            offset = -offset;
          }

          minute += offset;
        }
      }
    }

    const date = new Date(); // Date is instantiated with runtime timezone offset.
    // We use Date.UTC to generate a timestamp and use that to instantiate the Date instance.

    const timestamp = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), hour, minute, second, millisecond);
    const parsedDate = new Date(timestamp);
    return parsedDate;
  }

  throw new Error("Unparseable date '" + value + "'");
}

function parseDateTimeString(value) {
  const matches = value.match(EXPR);

  if (matches) {
    // Date/time parts in UTC

    /** This will stay undefined for  --MM-dd and --MMdd representation */
    let year;
    let isLeapYear;
    /** Only a full date can be combined with time */

    let isFullDate = true;
    let isDateExtendedFormat = false;

    if (matches[INDEX_YEAR]) {
      year = Number(matches[INDEX_YEAR]); // yyyy : year part

      if (matches[INDEX_YEAR_SIGN] && matches[INDEX_YEAR_SIGN] === '-') {
        year = -year;
      }

      isDateExtendedFormat = isDateExtendedFormat || matches[INDEX_YEAR_OR_NONE].endsWith('-');
    }

    let month = 1; // Defaults to Jan 1

    let day = 1; // Defaults to Jan 1

    if (year !== undefined && matches[INDEX_MONTH_MONTHDATE_WEEK_ORDINAL]) {
      isLeapYear = new Date(Date.UTC(year, 1, 29, 0, 0, 0, 0)).getUTCDate() === 29;
      isDateExtendedFormat = isDateExtendedFormat || matches[INDEX_MONTH_MONTHDATE_WEEK_ORDINAL].indexOf('-') >= 0;

      if (matches[INDEX_MONTH]) {
        // Only extended form YYYY-MM is allowed, not YYYYMM
        if (!matches[INDEX_YEAR_OR_NONE].endsWith('-')) {
          throw new Error("Unparseable date '" + value + "'");
        } // Calendar date, with date omitted


        month = Number(matches[INDEX_MONTH]); // MM : month part

        day = 1;
        isFullDate = false;
      } else if (matches[INDEX_MONTHDATE]) {
        // Calendar date
        month = Number(matches[INDEX_MONTHDATE]); // MM : month part

        day = Number(matches[INDEX_MONTHDATE + 1]); // dd : date part
      } else if (matches[INDEX_WEEK]) {
        const week = Number(matches[INDEX_WEEK + 1]); // ww : week part

        let dayOfWeek = 1; // 1: monday, 7: sunday

        if (matches[INDEX_WEEK + 2]) {
          dayOfWeek = Number(matches[INDEX_WEEK + 3]); // E : day of week part is optional
        } else {
          isFullDate = false;
        } // Validate week/dayOfWeek


        if (!isValidWeek(week) || !isValidDayOfWeek(dayOfWeek)) {
          throw new Error("Unparseable date '" + value + "'");
        } // Calculate month and date from Www-E


        const jan1 = new Date(Date.UTC(year, 0, 1, 0, 0, 0, 0)); // Date#getDay|getUTCDay returns 0: sunday, 6: saturday

        const jan1Day = jan1.getUTCDay(); // If 1 January is on a Monday, Tuesday, Wednesday or Thursday, it is in week 01.
        // Else 1 January is on last week of previous year (week 52 or 53)
        // So, to summarize (jan1Day: W01-1 date) is:
        // 1: Jan 1
        // 2: Dec 31
        // 3: Dec 30
        // 4: Dec 29
        // 5: Jan 4
        // 6: Jan 3
        // 0: Jan 2
        // Date constructor allows overflow of date and correctly recalculate the upper parts (month, year)
        // Source is kept verbose. This is basically doing this:
        // const weekDate = (jan1Day === 2 || jan1Day === 3 || jan1Day === 4) ? //
        //     new Date(Date.UTC(year - 1, 11, 7 * (week - 1) + (33 - jan1Day) + (dayOfWeek - 1), 0, 0, 0, 0)) : //
        //     new Date(Date.UTC(year, 0, 7 * (week - 1) + ((9 - jan1Day) % 7) + (dayOfWeek - 1), 0, 0, 0, 0));

        const week1Day1Year = jan1Day === 2 || jan1Day === 3 || jan1Day === 4 ? year - 1 : year;
        const week1Day1Month = jan1Day === 2 || jan1Day === 3 || jan1Day === 4 ? 12 : 1;
        const week1Day1Date = jan1Day === 2 || jan1Day === 3 || jan1Day === 4 ? 33 - jan1Day : (9 - jan1Day) % 7; // Date constructor allows overflow of date and correctly recalculate the upper parts (month, year)

        const weekDate = new Date(Date.UTC(week1Day1Year, week1Day1Month - 1, week1Day1Date + 7 * (week - 1) + (dayOfWeek - 1), 0, 0, 0, 0)); // Override year, month and date

        year = weekDate.getUTCFullYear();
        month = weekDate.getUTCMonth() + 1;
        day = weekDate.getUTCDate();
      } else if (matches[INDEX_ORDINAL]) {
        // Ordinal dates
        // 1: Jan 1, 365|366: Dec 31
        const ordinal = Number(matches[INDEX_ORDINAL]); // DDD : ordinal day part
        // Validate ordinal

        if (!isValidOrdinal(ordinal, isLeapYear)) {
          throw new Error("Unparseable date '" + value + "'");
        } // Date constructor allows overflow of date and correctly recalculate the upper parts (month, year)


        const ordinalDate = new Date(Date.UTC(year, 0, ordinal, 0, 0, 0, 0)); // Override month and date

        month = ordinalDate.getUTCMonth() + 1;
        day = ordinalDate.getUTCDate();
      }
    } else if (year === undefined && matches[INDEX_MONTH_MONTHDATE_WEEK_ORDINAL] && matches[INDEX_MONTHDATE]) {
      // Only --MM-dd and --MMdd representation do not have year defined.
      // We support this pattern by using 2000 as year since it is a leap year (to allow --02-29).
      // We can default lesser significant part (e.g. month, date, hours) and have a sensibly usable value,
      // but, this representation is not suitable for JS Date since the significant part (year) of a calendar date is missing.
      // Calendar date
      year = 2000; // year defaults 2000

      month = Number(matches[INDEX_MONTHDATE]); // MM : month part

      day = Number(matches[INDEX_MONTHDATE + 1]); // dd : date part

      isLeapYear = new Date(Date.UTC(year, 1, 29, 0, 0, 0, 0)).getUTCDate() === 29;
      isFullDate = false;
      isDateExtendedFormat = isDateExtendedFormat || matches[INDEX_MONTH_MONTHDATE_WEEK_ORDINAL].indexOf('-') >= 0;
    } else {
      throw new Error("Unparseable date '" + value + "'");
    }

    if (!isValidDate(month, day, isLeapYear)) {
      throw new Error("Unparseable date '" + value + "'");
    } // Time parts


    let hour = 0;
    let minute = 0;
    let second = 0;
    let millisecond = 0;
    let isTimeExtendedFormat = false;
    let isHourOnly = true; // matches[INDEX_TIME] examples: 'T12:34:56.789+10:00', 'T00:00Z'

    if (matches[INDEX_TIME] !== undefined) {
      if (!isFullDate) {
        throw new Error("Unparseable date '" + value + "'");
      }

      hour = Number(matches[INDEX_TIME + 1]); // hh : hour part is required

      if (matches[INDEX_MINUTE]) {
        minute = Number(matches[INDEX_MINUTE + 1]); // mm : minute part is optional

        isTimeExtendedFormat = isTimeExtendedFormat || matches[INDEX_MINUTE].startsWith(':');
        isHourOnly = false;
      }

      if (matches[INDEX_SECOND] !== undefined) {
        second = Number(matches[INDEX_SECOND + 1]); // ss : second part is optional

        isTimeExtendedFormat = isTimeExtendedFormat || matches[INDEX_SECOND].startsWith(':');
        isHourOnly = false;
      }

      if (matches[INDEX_MILLISECOND] !== undefined) {
        millisecond = Number(matches[INDEX_MILLISECOND + 1]); // SSS : millisecond part is optional
        // period on millisecond is required on both basic and extended format
      } // matches[INDEX_TZ] examples: 'Z', '+09:00', '-1100', '+09', '-11'


      if (matches[INDEX_TZ] !== undefined) {
        // Only adjust offset if this is not UTC
        if (matches[INDEX_TZ] !== 'Z') {
          let offset = Number(matches[INDEX_TZ + 2]) * 60; // offset hour part is required for non 'Z' offset

          if (matches[INDEX_TZ_MINUTE] !== undefined) {
            // offset minute part is optional
            offset += Number(matches[INDEX_TZ_MINUTE + 1]);
          }

          if (matches[INDEX_TZ + 1] === '+') {
            // plus/minus is required for non 'Z' offset
            // If offset is positive, substract offset from minutes
            // e.g. 11am in +09:00 is 2am in UTC (11:00 - 09:00)
            offset = -offset;
          }

          minute += offset;
        }
      } // Combined date and time must have the same format
      // Hour only is valid, and the same for both basic and extended format


      if (isDateExtendedFormat !== isTimeExtendedFormat && !isHourOnly) {
        throw new Error("Unparseable date '" + value + "'");
      }
    } // Date is instantiated with runtime timezone offset.
    // We use Date.UTC to generate a timestamp and use that to instantiate the Date instance.


    const timestamp = Date.UTC(year, month - 1, day, hour, minute, second, millisecond);
    return new Date(timestamp);
  }

  throw new Error("Unparseable date '" + value + "'");
}
/**
 * Parse an ISO-8601 datetime string representation to a Date object, or throw on unparseable value.
 *
 * This parser adheres to ISO-8601:2019, where the time separator 'T' is required, and full date part is required, and minute/second/millisecond is optional.
 *
 * Time defaults to 00:00:00.000Z if not specified.
 *
 * Timezone defaults to UTC if not specified.
 *
 * Only calendar (e.g. 2021-01-07) representation is supported for date part.
 * Week (e.g. 2021-W01-5 for 2021-01-07) or ordinal (e.g. 2021-007 for 2021-01-07) representations are not supported.
 */


class DateTimeIso8601Parse {
  /**
   * Constructor
   *
   * @constructor
   * @param options Options
   */
  constructor() {}
  /**
   * Parse an ISO-8601 datetime string representation to a Date object, or throw on unparseable value.
   * If parser instance constructed with a timeZone option, returned Date instance will be offsetted to that time zone.
   *
   * @param value {string} Value to parse
   * @returns {Date} Date instance
   */


  parse(value) {
    return parseDateTimeIsoString(value);
  }

}

const iso8601Parser = new DateTimeIso8601Parse();
/**
 * Instantiate or returns a cached value of a CLDR-based date time parser, instantiated with given a parser options.
 *
 * @param options {DateTimeIso8601ParseOptions} Parser options
 * @returns {DateTimeParse} Parser instance
 */

function getDateTimeISO8601Parser() {
  return iso8601Parser;
}
/**
 * Localizer
 *
 * @author aazizy
 */


function clearCache() {
  clearDateTimeFormatCache();
  clearDateTimeCLDRParserCache();
  clearRelativeTimeFormatCache();
  clearNumberFormatCache();
  clearNumberParserCache();
}



/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/icon/icon.css":
/*!****************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/icon/icon.css ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([]);

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/icon/icon.html":
/*!*****************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/icon/icon.html ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _icon_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icon.css */ "./node_modules/lightning-base-components/src/lightning/icon/icon.css");
/* harmony import */ var _icon_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./icon.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lightning_primitiveIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/primitiveIcon */ "./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");






function tmpl($api, $cmp, $slotset, $ctx) {
  const {c: api_custom_element, d: api_dynamic_text, t: api_text, h: api_element} = $api;
  return [api_element("span", {
    attrs: {
      "part": "boundary"
    },
    key: 0
  }, [api_custom_element("lightning-primitive-icon", lightning_primitiveIcon__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "iconName": $cmp._iconName,
      "size": $cmp.size,
      "variant": $cmp.variant,
      "src": $cmp._src
    },
    key: 1
  }, []), $cmp.alternativeText ? api_element("span", {
    classMap: {
      "slds-assistive-text": true
    },
    key: 2
  }, [api_text(api_dynamic_text($cmp.alternativeText))]) : null])];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_3__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_icon_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _icon_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_icon_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _icon_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-icon_icon"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/icon/icon.js":
/*!***************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/icon/icon.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _icon_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./icon.html */ "./node_modules/lightning-base-components/src/lightning/icon/icon.html");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var lightning_iconUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/iconUtils */ "./node_modules/lightning-base-components/src/lightning/iconUtils/iconUtils.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util */ "./node_modules/lightning-base-components/src/lightning/icon/util.js");





/**
 * Represents a visual element that provides context and enhances usability.
 */

class LightningIcon extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  constructor(...args) {
    super(...args);
    this._src = void 0;
    this._privateIconName = void 0;
    this._iconName = void 0;
    this._size = void 0;
    this._variant = void 0;
    this.alternativeText = void 0;
  }

  /**
   * A uri path to a custom svg sprite, including the name of the resouce,
   * for example: /assets/icons/standard-sprite/svg/test.svg#icon-heart
   * @type {string}
   */
  get src() {
    return this.privateSrc;
  }

  set src(value) {
    this.privateSrc = value; // if value is not present, then we set the state back
    // to the original iconName that was passed
    // this might happen if the user sets a custom icon, then
    // decides to revert back to SLDS by removing the src attribute

    if (!value) {
      this.updateIconName(this.iconName);
    } // if isIE11 and the src is set
    // we'd like to show the 'standard:default' icon instead
    // for performance reasons.


    if (value && lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.isIE11) {
      this.setDefault();
      return;
    }

    this._src = value;
  }
  /**
   * The Lightning Design System name of the icon.
   * Names are written in the format 'utility:down' where 'utility' is the category,
   * and 'down' is the specific icon to be displayed.
   * @type {string}
   * @required
   */


  get iconName() {
    return this._privateIconName;
  }

  set iconName(value) {
    this._privateIconName = value; // if src is set, we don't need to validate iconName

    if (this.src) {
      return;
    }

    this.updateIconName(value);
  }
  /**
   * Update the attributes and css classes on the host element, based on the given icon name
   */


  updateIconName(iconName) {
    if (iconName === this._iconName) {
      return;
    }

    const classes = {};

    if (typeof this._iconName !== 'undefined') {
      const oldIconClass = (0,lightning_iconUtils__WEBPACK_IMPORTED_MODULE_3__.computeSldsClass)(this._iconName);
      Object.assign(classes, {
        [oldIconClass]: false
      });
    }

    if ((0,lightning_iconUtils__WEBPACK_IMPORTED_MODULE_3__.isValidName)(iconName)) {
      const isAction = (0,lightning_iconUtils__WEBPACK_IMPORTED_MODULE_3__.getCategory)(iconName) === 'action';
      const iconClass = (0,lightning_iconUtils__WEBPACK_IMPORTED_MODULE_3__.computeSldsClass)(iconName);
      Object.assign(classes, {
        // action icons have circle background
        'slds-icon_container_circle': isAction,
        [iconClass]: true
      });
      this._iconName = iconName;
      this.setAttribute('icon-name', iconName);
    } else {
      console.warn(`<lightning-icon> Invalid icon name ${iconName}`); // eslint-disable-line no-console
      // Invalid icon names should render a blank icon. Remove any
      // classes that might have been previously added.

      Object.assign(classes, {
        'slds-icon_container_circle': false
      });
      this._iconName = undefined;
      this.removeAttribute('icon-name');
    }

    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.classListMutation)(this.classList, classes);
  }
  /**
   * The size of the icon. Options include xx-small, x-small, small, medium, or large.
   * The default is medium.
   * @type {string}
   * @default medium
   */


  get size() {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.normalizeString)(this._size, {
      fallbackValue: 'medium',
      validValues: ['xx-small', 'x-small', 'small', 'medium', 'large']
    });
  }

  set size(value) {
    this._size = value;
  }
  /**
   * The variant changes the appearance of a utility icon.
   * Accepted variants include inverse, success, warning, and error.
   * Use the inverse variant to implement a white fill in utility icons on dark backgrounds.
   * @type {string}
   */


  get variant() {
    return (0,_util__WEBPACK_IMPORTED_MODULE_4__.normalizeVariant)(this._variant, this._iconName);
  }

  set variant(value) {
    this._variant = value;
  }

  connectedCallback() {
    this.classList.add('slds-icon_container');
  }

  setDefault() {
    this._src = undefined;
    this.updateIconName('standard:default');
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningIcon, {
  publicProps: {
    alternativeText: {
      config: 0
    },
    src: {
      config: 3
    },
    iconName: {
      config: 3
    },
    size: {
      config: 3
    },
    variant: {
      config: 3
    }
  },
  fields: ["_src", "_privateIconName", "_iconName", "_size", "_variant"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningIcon, {
  tmpl: _icon_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/icon/util.js":
/*!***************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/icon/util.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "normalizeVariant": () => (/* binding */ normalizeVariant)
/* harmony export */ });
/* harmony import */ var lightning_iconUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/iconUtils */ "./node_modules/lightning-base-components/src/lightning/iconUtils/iconUtils.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");


function normalizeVariant(variant, iconName) {
  // Unfortunately, the `bare` variant was implemented to do what the
  // `inverse` variant should have done. Keep this logic for as long as
  // we support the `bare` variant.
  if (variant === 'bare') {
    // TODO: Deprecation warning using strippable assertion
    variant = 'inverse';
  }

  if ((0,lightning_iconUtils__WEBPACK_IMPORTED_MODULE_0__.getCategory)(iconName) === 'utility') {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_1__.normalizeString)(variant, {
      fallbackValue: '',
      validValues: ['error', 'inverse', 'warning', 'success']
    });
  }

  return 'inverse';
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/iconUtils/fetchSvg.js":
/*!************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/iconUtils/fetchSvg.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ fetchSvg)
/* harmony export */ });
// Taken from https://git.soma.salesforce.com/aura/lightning-global/blob/999dc35f948246181510df6e56f45ad4955032c2/src/main/components/lightning/SVGLibrary/stamper.js#L38-L60
function fetchSvg(url) {
  return new Promise((resolve, reject) => {
    const xhr = new XMLHttpRequest();
    xhr.open('GET', url);
    xhr.send();

    xhr.onreadystatechange = () => {
      if (xhr.readyState === 4) {
        if (xhr.status === 200) {
          resolve(xhr.responseText);
        } else {
          reject(xhr);
        }
      }
    };
  });
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/iconUtils/iconUtils.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/iconUtils/iconUtils.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getCategory": () => (/* binding */ getCategory),
/* harmony export */   "getName": () => (/* binding */ getName),
/* harmony export */   "isValidName": () => (/* binding */ isValidName),
/* harmony export */   "getIconPath": () => (/* binding */ getIconPath),
/* harmony export */   "computeSldsClass": () => (/* binding */ computeSldsClass),
/* harmony export */   "polyfill": () => (/* reexport safe */ _polyfill__WEBPACK_IMPORTED_MODULE_2__.polyfill)
/* harmony export */ });
/* harmony import */ var lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/configProvider */ "./node_modules/lightning-base-components/src/lightning/configProvider/configProvider.js");
/* harmony import */ var _isIframeInEdge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isIframeInEdge */ "./node_modules/lightning-base-components/src/lightning/iconUtils/isIframeInEdge.js");
/* harmony import */ var _polyfill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./polyfill */ "./node_modules/lightning-base-components/src/lightning/iconUtils/polyfill.js");


const validNameRe = /^([a-zA-Z]+):([a-zA-Z]\w*)$/;
const underscoreRe = /_/g;
let pathPrefix;
const tokenNameMap = Object.assign(Object.create(null), {
  action: 'lightning.actionSprite',
  custom: 'lightning.customSprite',
  doctype: 'lightning.doctypeSprite',
  standard: 'lightning.standardSprite',
  utility: 'lightning.utilitySprite'
});
const tokenNameMapRtl = Object.assign(Object.create(null), {
  action: 'lightning.actionSpriteRtl',
  custom: 'lightning.customSpriteRtl',
  doctype: 'lightning.doctypeSpriteRtl',
  standard: 'lightning.standardSpriteRtl',
  utility: 'lightning.utilitySpriteRtl'
});
const defaultTokenValueMap = Object.assign(Object.create(null), {
  'lightning.actionSprite': '/assets/icons/action-sprite/svg/symbols.svg',
  'lightning.actionSpriteRtl': '/assets/icons/action-sprite/svg/symbols.svg',
  'lightning.customSprite': '/assets/icons/custom-sprite/svg/symbols.svg',
  'lightning.customSpriteRtl': '/assets/icons/custom-sprite/svg/symbols.svg',
  'lightning.doctypeSprite': '/assets/icons/doctype-sprite/svg/symbols.svg',
  'lightning.doctypeSpriteRtl': '/assets/icons/doctype-sprite/svg/symbols.svg',
  'lightning.standardSprite': '/assets/icons/standard-sprite/svg/symbols.svg',
  'lightning.standardSpriteRtl': '/assets/icons/standard-sprite/svg/symbols.svg',
  'lightning.utilitySprite': '/assets/icons/utility-sprite/svg/symbols.svg',
  'lightning.utilitySpriteRtl': '/assets/icons/utility-sprite/svg/symbols.svg'
});

const getDefaultBaseIconPath = (category, nameMap) => defaultTokenValueMap[nameMap[category]];

const getBaseIconPath = (category, direction) => {
  const nameMap = direction === 'rtl' ? tokenNameMapRtl : tokenNameMap;
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getToken)(nameMap[category]) || getDefaultBaseIconPath(category, nameMap);
};

const getMatchAtIndex = index => iconName => {
  const result = validNameRe.exec(iconName);
  return result ? result[index] : '';
};

const getCategory = getMatchAtIndex(1);
const getName = getMatchAtIndex(2);

const isValidName = iconName => validNameRe.test(iconName);
const getIconPath = (iconName, direction = 'ltr') => {
  pathPrefix = pathPrefix !== undefined ? pathPrefix : (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getPathPrefix)();

  if (isValidName(iconName)) {
    const baseIconPath = getBaseIconPath(getCategory(iconName), direction);

    if (baseIconPath) {
      // This check was introduced the following MS-Edge issue:
      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/9655192/
      // If and when this get fixed, we can safely remove this block of code.
      if (_isIframeInEdge__WEBPACK_IMPORTED_MODULE_1__.default) {
        // protocol => 'https:' or 'http:'
        // host => hostname + port
        const origin = `${window.location.protocol}//${window.location.host}`;
        return `${origin}${pathPrefix}${baseIconPath}#${getName(iconName)}`;
      }

      return `${pathPrefix}${baseIconPath}#${getName(iconName)}`;
    }
  }

  return '';
};
const computeSldsClass = iconName => {
  if (isValidName(iconName)) {
    const category = getCategory(iconName);
    const name = getName(iconName).replace(underscoreRe, '-');
    return `slds-icon-${category}-${name}`;
  }

  return '';
};


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/iconUtils/isIframeInEdge.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/iconUtils/isIframeInEdge.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _isIframeInEdge_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isIframeInEdge.html */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");


// Taken from https://github.com/jonathantneal/svg4everybody/pull/139
// Remove this iframe-in-edge check once the following is resolved https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8323875/
const isEdgeUA = /\bEdge\/.(\d+)\b/.test(navigator.userAgent);
const inIframe = window.top !== window.self;
const isIframeInEdge = isEdgeUA && inIframe;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_1__.registerComponent)(isIframeInEdge, {
  tmpl: _isIframeInEdge_html__WEBPACK_IMPORTED_MODULE_0__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/iconUtils/polyfill.js":
/*!************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/iconUtils/polyfill.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "polyfill": () => (/* binding */ polyfill)
/* harmony export */ });
/* harmony import */ var _fetchSvg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fetchSvg */ "./node_modules/lightning-base-components/src/lightning/iconUtils/fetchSvg.js");
/* harmony import */ var _supportsSvg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./supportsSvg */ "./node_modules/lightning-base-components/src/lightning/iconUtils/supportsSvg.js");
/**
This polyfill injects SVG sprites into the document for clients that don't
fully support SVG. We do this globally at the document level for performance
reasons. This causes us to lose namespacing of IDs across sprites. For example,
if both #image from utility sprite and #image from doctype sprite need to be
rendered on the page, both end up as #image from the doctype sprite (last one
wins). SLDS cannot change their image IDs due to backwards-compatibility
reasons so we take care of this issue at runtime by adding namespacing as we
polyfill SVG elements.

For example, given "/assets/icons/action-sprite/svg/symbols.svg#approval", we
replace the "#approval" id with "#${namespace}-approval" and a similar
operation is done on the corresponding symbol element.
**/


const svgTagName = /svg/i;

const isSvgElement = el => el && svgTagName.test(el.nodeName);

const requestCache = {};
const symbolEls = {};
const svgFragments = {};
const spritesContainerId = 'slds-svg-sprites';
let spritesEl;
function polyfill(el) {
  if (!_supportsSvg__WEBPACK_IMPORTED_MODULE_1__.default && isSvgElement(el)) {
    if (!spritesEl) {
      spritesEl = document.createElement('svg');
      spritesEl.xmlns = 'http://www.w3.org/2000/svg';
      spritesEl['xmlns:xlink'] = 'http://www.w3.org/1999/xlink';
      spritesEl.style.display = 'none';
      spritesEl.id = spritesContainerId;
      document.body.insertBefore(spritesEl, document.body.childNodes[0]);
    }

    Array.from(el.getElementsByTagName('use')).forEach(use => {
      // We access the href differently in raptor and in aura, probably
      // due to difference in the way the svg is constructed.
      const src = use.getAttribute('xlink:href') || use.getAttribute('href');

      if (src) {
        // "/assets/icons/action-sprite/svg/symbols.svg#approval" =>
        // ["/assets/icons/action-sprite/svg/symbols.svg", "approval"]
        const parts = src.split('#');
        const url = parts[0];
        const id = parts[1];
        const namespace = url.replace(/[^\w]/g, '-');
        const href = `#${namespace}-${id}`;

        if (url.length) {
          // set the HREF value to no longer be an external reference
          if (use.getAttribute('xlink:href')) {
            use.setAttribute('xlink:href', href);
          } else {
            use.setAttribute('href', href);
          } // only insert SVG content if it hasn't already been retrieved


          if (!requestCache[url]) {
            requestCache[url] = (0,_fetchSvg__WEBPACK_IMPORTED_MODULE_0__.default)(url);
          }

          requestCache[url].then(svgContent => {
            // create a document fragment from the svgContent returned (is parsed by HTML parser)
            if (!svgFragments[url]) {
              const svgFragment = document.createRange().createContextualFragment(svgContent);
              svgFragments[url] = svgFragment;
            }

            if (!symbolEls[href]) {
              const svgFragment = svgFragments[url];
              const symbolEl = svgFragment.querySelector(`#${id}`);
              symbolEls[href] = true;
              symbolEl.id = `${namespace}-${id}`;
              spritesEl.appendChild(symbolEl);
            }
          });
        }
      }
    });
  }
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/iconUtils/supportsSvg.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/iconUtils/supportsSvg.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _supportsSvg_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supportsSvg.html */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _isIframeInEdge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isIframeInEdge */ "./node_modules/lightning-base-components/src/lightning/iconUtils/isIframeInEdge.js");


 // Taken from https://git.soma.salesforce.com/aura/lightning-global/blob/999dc35f948246181510df6e56f45ad4955032c2/src/main/components/lightning/SVGLibrary/stamper.js#L89-L98
// Which looks like it was inspired by https://github.com/jonathantneal/svg4everybody/blob/377d27208fcad3671ed466e9511556cb9c8b5bd8/lib/svg4everybody.js#L92-L107
// Modify at your own risk!

const newerIEUA = /\bTrident\/[567]\b|\bMSIE (?:9|10)\.0\b/;
const webkitUA = /\bAppleWebKit\/(\d+)\b/;
const olderEdgeUA = /\bEdge\/12\.(\d+)\b/;
const isIE = newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537;
const supportsSvg = !isIE && !_isIframeInEdge__WEBPACK_IMPORTED_MODULE_2__.default;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_1__.registerComponent)(supportsSvg, {
  tmpl: _supportsSvg_html__WEBPACK_IMPORTED_MODULE_0__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/input/dateTimeUtil.js":
/*!************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/input/dateTimeUtil.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "normalizeDate": () => (/* binding */ normalizeDate),
/* harmony export */   "normalizeUTCDateTime": () => (/* binding */ normalizeUTCDateTime),
/* harmony export */   "normalizeTime": () => (/* binding */ normalizeTime),
/* harmony export */   "normalizeDateTimeToUTC": () => (/* binding */ normalizeDateTimeToUTC)
/* harmony export */ });
/* harmony import */ var lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/internationalizationLibrary */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/internationalizationLibrary.js");

function normalizeDate(value) {
  return (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_0__.normalizeISODate)(value, 'medium').isoValue || '';
} // Converts value to the user's timezone and formats it in a way that will be accepted by the input

function normalizeUTCDateTime(value, timezone) {
  return (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_0__.normalizeISODateTime)(value, timezone).isoValue || '';
}
function normalizeTime(value) {
  return (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_0__.normalizeISOTime)(value, 'short').isoValue || '';
} // parses the input value and converts it back to UTC from the user's timezone

function normalizeDateTimeToUTC(value, timezone) {
  return (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_0__.normalizeFormattedDateTime)(value, timezone) || '';
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/input/emailUtil.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/input/emailUtil.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isValidEmail": () => (/* binding */ isValidEmail),
/* harmony export */   "isValidMultipleEmails": () => (/* binding */ isValidMultipleEmails)
/* harmony export */ });
/**
 * Validate email with loose standards.
 * @param {string} value Value must be a string.
 */
function isValidEmail(value) {
  // Input treats all data types as string
  const normalized = `${value}`; // Empty is not a typeMismatch

  if (normalized === '') {
    return true;
  } // Only one @ symbol allowed as delimitator


  if (normalized.match(/@\S*@/) !== null) {
    return false;
  } // Spaces and Commas are not allowed


  if (normalized.match(/[\s,]+/) !== null) {
    return false;
  } // Basic let anything with content before/after an @


  return normalized.match(/^\S+@\S+$/) !== null;
}
/**
 * Validate comma deliminated emails with loose standards.
 * @param {string} value Value must be a string.
 */

function isValidMultipleEmails(value) {
  // Input treats all data types as string
  const normalized = `${value}`; // Empty is not a typeMismatch

  if (normalized === '') {
    return true;
  } // Invalid early on multiple commas / empty


  if (normalized.match(/,\s*,/) !== null) {
    return false;
  } // Validate each email individually


  const emails = normalized.split(/\s*,\s*/g);

  for (let i = 0; i < emails.length; i++) {
    if (!isValidEmail(emails[i])) {
      return false;
    }
  }

  return true;
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/input/input.css":
/*!******************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/input/input.css ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function stylesheet(useActualHostSelector, token) {
  var shadowSelector = token ? ("[" + token + "]") : "";
  var hostSelector = token ? ("[" + token + "-host]") : "";
  return [(useActualHostSelector ? ":host {display: block;}" : [hostSelector, " {display: block;}"].join('')), "[dir=\"rtl\"] input[type=\"tel\"]", shadowSelector, " {direction: ltr;text-align: right;unicode-bidi: embed;}"].join('');
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([stylesheet]);

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/input/input.html":
/*!*******************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/input/input.html ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _input_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input.css */ "./node_modules/lightning-base-components/src/lightning/input/input.css");
/* harmony import */ var _input_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./input.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lightning_helptext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/helptext */ "./node_modules/lightning-base-components/src/lightning/helptext/helptext.js");
/* harmony import */ var lightning_primitiveIcon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/primitiveIcon */ "./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.js");
/* harmony import */ var lightning_primitiveFileDroppableZone__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lightning/primitiveFileDroppableZone */ "./node_modules/lightning-base-components/src/lightning/primitiveFileDroppableZone/primitiveFileDroppableZone.js");
/* harmony import */ var lightning_primitiveColorpickerButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lightning/primitiveColorpickerButton */ "./node_modules/lightning-base-components/src/lightning/primitiveColorpickerButton/primitiveColorpickerButton.js");
/* harmony import */ var lightning_datepicker__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lightning/datepicker */ "./node_modules/lightning-base-components/src/lightning/datepicker/datepicker.js");
/* harmony import */ var lightning_timepicker__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lightning/timepicker */ "./node_modules/lightning-base-components/src/lightning/timepicker/timepicker.js");
/* harmony import */ var lightning_datetimepicker__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lightning/datetimepicker */ "./node_modules/lightning-base-components/src/lightning/datetimepicker/datetimepicker.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");












function tmpl($api, $cmp, $slotset, $ctx) {
  const {gid: api_scoped_id, t: api_text, h: api_element, d: api_dynamic_text, c: api_custom_element, b: api_bind} = $api;
  const {_m0, _m1, _m2, _m3, _m4, _m5, _m6, _m7, _m8, _m9, _m10, _m11, _m12, _m13, _m14, _m15, _m16, _m17, _m18, _m19, _m20, _m21, _m22, _m23, _m24, _m25, _m26, _m27, _m28, _m29, _m30, _m31, _m32, _m33, _m34, _m35, _m36, _m37, _m38, _m39, _m40, _m41, _m42} = $ctx;
  return [$cmp.isTypeSimple ? api_element("div", {
    attrs: {
      "part": "input-text"
    },
    key: 0
  }, [!$cmp.hasExternalLabel ? api_element("label", {
    className: $cmp.computedLabelClass,
    attrs: {
      "for": api_scoped_id("input"),
      "part": "label"
    },
    key: 1
  }, [$cmp.required ? api_element("abbr", {
    classMap: {
      "slds-required": true
    },
    attrs: {
      "title": $cmp.i18n.required
    },
    key: 2
  }, [api_text("*")]) : null, api_text(api_dynamic_text($cmp.label))]) : null, !$cmp.hasExternalLabel ? $cmp.fieldLevelHelp ? api_custom_element("lightning-helptext", lightning_helptext__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "content": $cmp.fieldLevelHelp,
      "alternativeText": $cmp.helptextAlternativeText
    },
    key: 3
  }, []) : null : null, api_element("div", {
    className: $cmp.computedFormElementClass,
    attrs: {
      "part": "input-container"
    },
    key: 4
  }, [api_element("input", {
    classMap: {
      "slds-input": true
    },
    attrs: {
      "type": $cmp._internalType,
      "id": api_scoped_id("input"),
      "part": "input",
      "aria-label": $cmp.computedAriaLabel,
      "aria-invalid": $cmp.computedAriaInvalid,
      "aria-errormessage": api_scoped_id("help-message"),
      "aria-haspopup": $cmp.ariaHasPopup,
      "accesskey": $cmp.accesskey,
      "autocomplete": $cmp.autocomplete,
      "max": $cmp.normalizedMax,
      "min": $cmp.normalizedMin,
      "inputmode": $cmp._inputMode,
      "step": $cmp.step,
      "maxlength": $cmp.maxLength,
      "minlength": $cmp.minLength,
      "pattern": $cmp.pattern,
      "placeholder": $cmp.placeholder,
      "name": $cmp.name,
      "required": $cmp.required ? "" : null,
      "readonly": $cmp.readOnly ? "" : null,
      "disabled": $cmp.disabled ? "" : null
    },
    key: 5,
    on: {
      "blur": _m0 || ($ctx._m0 = api_bind($cmp.handleBlur)),
      "focus": _m1 || ($ctx._m1 = api_bind($cmp.handleFocus)),
      "change": _m2 || ($ctx._m2 = api_bind($cmp.handleChange)),
      "input": _m3 || ($ctx._m3 = api_bind($cmp.handleInput)),
      "keydown": _m4 || ($ctx._m4 = api_bind($cmp.handleKeyDown))
    }
  }, []), $cmp.isTypeSearch ? api_custom_element("lightning-primitive-icon", lightning_primitiveIcon__WEBPACK_IMPORTED_MODULE_3__.default, {
    props: {
      "iconName": "utility:search",
      "variant": "bare",
      "svgClass": "slds-input__icon slds-input__icon_left slds-icon-text-default"
    },
    key: 6
  }, []) : null, $cmp.isTypeSearch ? api_element("div", {
    classMap: {
      "slds-input__icon-group": true,
      "slds-input__icon-group_right": true
    },
    key: 7
  }, [$cmp.isLoading ? api_element("div", {
    classMap: {
      "slds-spinner": true,
      "slds-spinner_brand": true,
      "slds-spinner_x-small": true,
      "slds-input__spinner": true
    },
    attrs: {
      "role": "status"
    },
    key: 8
  }, [api_element("span", {
    classMap: {
      "slds-assistive-text": true
    },
    key: 9
  }, [api_text(api_dynamic_text($cmp.i18n.loading))]), api_element("div", {
    classMap: {
      "slds-spinner__dot-a": true
    },
    key: 10
  }, []), api_element("div", {
    classMap: {
      "slds-spinner__dot-b": true
    },
    key: 11
  }, [])]) : null, $cmp._showClearButton ? api_element("button", {
    classMap: {
      "slds-input__icon": true,
      "slds-input__icon_right": true,
      "slds-button": true,
      "slds-button_icon": true
    },
    attrs: {
      "data-element-id": "searchClear"
    },
    key: 12,
    on: {
      "blur": _m5 || ($ctx._m5 = api_bind($cmp.handleBlur)),
      "click": _m6 || ($ctx._m6 = api_bind($cmp._clearAndSetFocusOnInput))
    }
  }, [api_custom_element("lightning-primitive-icon", lightning_primitiveIcon__WEBPACK_IMPORTED_MODULE_3__.default, {
    props: {
      "iconName": "utility:clear",
      "variant": "bare",
      "svgClass": "slds-button__icon"
    },
    key: 13
  }, []), api_element("span", {
    classMap: {
      "slds-assistive-text": true
    },
    key: 14
  }, [api_text(api_dynamic_text($cmp.i18n.clear))])]) : null]) : null])]) : null, $cmp.isTypeToggle ? api_element("div", {
    classMap: {
      "slds-form-element__control": true
    },
    key: 15
  }, [api_element("label", {
    classMap: {
      "slds-checkbox_toggle": true,
      "slds-grid": true
    },
    attrs: {
      "for": api_scoped_id("checkbox-toggle")
    },
    key: 16
  }, [$cmp.required ? api_element("abbr", {
    classMap: {
      "slds-required": true
    },
    attrs: {
      "title": $cmp.i18n.required
    },
    key: 17
  }, [api_text("*")]) : null, api_element("span", {
    className: $cmp.computedLabelClass,
    key: 18
  }, [api_text(api_dynamic_text($cmp.label))]), api_element("input", {
    attrs: {
      "type": "checkbox",
      "id": api_scoped_id("checkbox-toggle"),
      "aria-label": $cmp.computedAriaLabel,
      "aria-invalid": $cmp.computedAriaInvalid,
      "accesskey": $cmp.accesskey,
      "name": $cmp.name,
      "required": $cmp.required ? "" : null,
      "readonly": $cmp.readOnly ? "" : null,
      "disabled": $cmp.disabled ? "" : null
    },
    key: 19,
    on: {
      "blur": _m7 || ($ctx._m7 = api_bind($cmp.handleBlur)),
      "focus": _m8 || ($ctx._m8 = api_bind($cmp.handleFocus)),
      "change": _m9 || ($ctx._m9 = api_bind($cmp.handleChange)),
      "click": _m10 || ($ctx._m10 = api_bind($cmp.handleCheckboxClick))
    }
  }, []), api_element("span", {
    classMap: {
      "slds-checkbox_faux_container": true
    },
    attrs: {
      "id": api_scoped_id("toggle-description"),
      "data-toggle-description": "",
      "aria-live": "assertive"
    },
    key: 20
  }, [api_element("span", {
    classMap: {
      "slds-checkbox_faux": true
    },
    key: 21
  }, []), api_element("span", {
    classMap: {
      "slds-checkbox_on": true
    },
    key: 22
  }, [api_text(api_dynamic_text($cmp.messageToggleActive))]), api_element("span", {
    classMap: {
      "slds-checkbox_off": true
    },
    key: 23
  }, [api_text(api_dynamic_text($cmp.messageToggleInactive))])])])]) : null, $cmp.isTypeCheckbox ? !$cmp.isStandardVariant ? api_element("label", {
    classMap: {
      "slds-checkbox__label": true
    },
    attrs: {
      "for": api_scoped_id("checkbox"),
      "part": "label-container"
    },
    key: 24
  }, [$cmp.required ? api_element("abbr", {
    classMap: {
      "slds-required": true
    },
    attrs: {
      "title": $cmp.i18n.required
    },
    key: 25
  }, [api_text("*")]) : null, api_element("span", {
    className: $cmp.computedLabelClass,
    key: 26
  }, [api_text(api_dynamic_text($cmp.label))])]) : null : null, $cmp.isTypeCheckbox ? !$cmp.isStandardVariant ? $cmp.fieldLevelHelp ? api_custom_element("lightning-helptext", lightning_helptext__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "content": $cmp.fieldLevelHelp,
      "alternativeText": $cmp.helptextAlternativeText
    },
    key: 27
  }, []) : null : null : null, $cmp.isTypeCheckbox ? api_element("div", {
    className: $cmp.computedFormElementClass,
    key: 28
  }, [api_element("span", {
    className: $cmp.computedCheckboxClass,
    attrs: {
      "part": "input-checkbox"
    },
    key: 29
  }, [$cmp.isStandardVariant ? $cmp.required ? api_element("abbr", {
    classMap: {
      "slds-required": true
    },
    attrs: {
      "title": $cmp.i18n.required
    },
    key: 30
  }, [api_text("*")]) : null : null, api_element("input", {
    attrs: {
      "type": "checkbox",
      "part": "checkbox",
      "id": api_scoped_id("checkbox"),
      "aria-label": $cmp.computedAriaLabel,
      "aria-invalid": $cmp.computedAriaInvalid,
      "accesskey": $cmp.accesskey,
      "name": $cmp.name,
      "required": $cmp.required ? "" : null,
      "readonly": $cmp.readOnly ? "" : null,
      "disabled": $cmp.disabled ? "" : null
    },
    key: 31,
    on: {
      "blur": _m11 || ($ctx._m11 = api_bind($cmp.handleBlur)),
      "focus": _m12 || ($ctx._m12 = api_bind($cmp.handleFocus)),
      "change": _m13 || ($ctx._m13 = api_bind($cmp.handleChange)),
      "click": _m14 || ($ctx._m14 = api_bind($cmp.handleCheckboxClick))
    }
  }, []), !$cmp.isStandardVariant ? api_element("span", {
    classMap: {
      "slds-checkbox_faux": true
    },
    attrs: {
      "part": "indicator"
    },
    key: 32
  }, []) : null, $cmp.isStandardVariant ? api_element("label", {
    classMap: {
      "slds-checkbox__label": true
    },
    attrs: {
      "for": api_scoped_id("checkbox"),
      "part": "label-container"
    },
    key: 33
  }, [api_element("span", {
    classMap: {
      "slds-checkbox_faux": true
    },
    attrs: {
      "part": "indicator"
    },
    key: 34
  }, []), api_element("span", {
    className: $cmp.computedLabelClass,
    attrs: {
      "part": "label"
    },
    key: 35
  }, [api_text(api_dynamic_text($cmp.label))])]) : null, $cmp.isStandardVariant ? $cmp.fieldLevelHelp ? api_custom_element("lightning-helptext", lightning_helptext__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "content": $cmp.fieldLevelHelp,
      "alternativeText": $cmp.helptextAlternativeText
    },
    key: 36
  }, []) : null : null])]) : null, $cmp.isTypeCheckboxButton ? api_element("div", {
    classMap: {
      "slds-checkbox_add-button": true
    },
    key: 37
  }, [api_element("input", {
    classMap: {
      "slds-assistive-text": true
    },
    attrs: {
      "type": "checkbox",
      "id": api_scoped_id("checkbox-button"),
      "aria-label": $cmp.computedAriaLabel,
      "aria-invalid": $cmp.computedAriaInvalid,
      "accesskey": $cmp.accesskey,
      "name": $cmp.name,
      "required": $cmp.required ? "" : null,
      "readonly": $cmp.readOnly ? "" : null,
      "disabled": $cmp.disabled ? "" : null
    },
    key: 38,
    on: {
      "blur": _m15 || ($ctx._m15 = api_bind($cmp.handleBlur)),
      "focus": _m16 || ($ctx._m16 = api_bind($cmp.handleFocus)),
      "change": _m17 || ($ctx._m17 = api_bind($cmp.handleChange)),
      "click": _m18 || ($ctx._m18 = api_bind($cmp.handleCheckboxClick))
    }
  }, []), api_element("label", {
    classMap: {
      "slds-checkbox_faux": true
    },
    attrs: {
      "for": api_scoped_id("checkbox-button")
    },
    key: 39
  }, [api_element("span", {
    classMap: {
      "slds-assistive-text": true
    },
    key: 40
  }, [api_text(api_dynamic_text($cmp.label))])])]) : null, $cmp.isTypeRadio ? api_element("div", {
    classMap: {
      "slds-form-element__control": true
    },
    key: 41
  }, [api_element("span", {
    classMap: {
      "slds-radio": true
    },
    key: 42
  }, [api_element("input", {
    attrs: {
      "type": "radio",
      "id": api_scoped_id("radio"),
      "aria-invalid": $cmp.computedAriaInvalid,
      "accesskey": $cmp.accesskey,
      "name": $cmp.name,
      "required": $cmp.required ? "" : null,
      "readonly": $cmp.readOnly ? "" : null,
      "disabled": $cmp.disabled ? "" : null
    },
    key: 43,
    on: {
      "blur": _m19 || ($ctx._m19 = api_bind($cmp.handleBlur)),
      "focus": _m20 || ($ctx._m20 = api_bind($cmp.handleFocus)),
      "change": _m21 || ($ctx._m21 = api_bind($cmp.handleChange))
    }
  }, []), api_element("label", {
    classMap: {
      "slds-radio__label": true
    },
    attrs: {
      "for": api_scoped_id("radio")
    },
    key: 44
  }, [api_element("span", {
    classMap: {
      "slds-radio_faux": true
    },
    key: 45
  }, []), api_element("span", {
    className: $cmp.computedLabelClass,
    key: 46
  }, [api_text(api_dynamic_text($cmp.label))])])])]) : null, $cmp.isTypeFile ? api_element("span", {
    className: $cmp.computedLabelClass,
    attrs: {
      "id": api_scoped_id("form-label"),
      "data-form-label": ""
    },
    key: 47
  }, [$cmp.required ? api_element("abbr", {
    classMap: {
      "slds-required": true
    },
    attrs: {
      "title": $cmp.i18n.required
    },
    key: 48
  }, [api_text("*")]) : null, api_text(api_dynamic_text($cmp.label))]) : null, $cmp.isTypeFile ? api_element("div", {
    classMap: {
      "slds-form-element__control": true
    },
    key: 49
  }, [api_element("div", {
    classMap: {
      "slds-file-selector": true,
      "slds-file-selector_files": true
    },
    key: 50,
    on: {
      "drop": _m22 || ($ctx._m22 = api_bind($cmp.handleDropFiles))
    }
  }, [api_custom_element("lightning-primitive-file-droppable-zone", lightning_primitiveFileDroppableZone__WEBPACK_IMPORTED_MODULE_4__.default, {
    props: {
      "multiple": $cmp.multiple,
      "disabled": $cmp.disabled
    },
    key: 51
  }, [api_element("input", {
    classMap: {
      "slds-file-selector__input": true,
      "slds-assistive-text": true
    },
    attrs: {
      "type": "file",
      "id": api_scoped_id("input-file"),
      "aria-label": $cmp.computedAriaLabel,
      "aria-invalid": $cmp.computedAriaInvalid,
      "accesskey": $cmp.accesskey,
      "accept": $cmp.accept,
      "multiple": $cmp.multiple ? "" : null,
      "name": $cmp.name,
      "required": $cmp.required ? "" : null,
      "readonly": $cmp.readOnly ? "" : null,
      "disabled": $cmp.disabled ? "" : null
    },
    key: 52,
    on: {
      "blur": _m23 || ($ctx._m23 = api_bind($cmp.handleBlur)),
      "click": _m24 || ($ctx._m24 = api_bind($cmp.handleFileClick)),
      "focus": _m25 || ($ctx._m25 = api_bind($cmp.handleFocus)),
      "change": _m26 || ($ctx._m26 = api_bind($cmp.handleChange))
    }
  }, []), api_element("label", {
    classMap: {
      "slds-file-selector__body": true
    },
    attrs: {
      "id": api_scoped_id("file-selector-label"),
      "data-file-selector-label": "",
      "for": api_scoped_id("input-file"),
      "aria-hidden": "true"
    },
    key: 53
  }, [api_element("span", {
    classMap: {
      "slds-file-selector__button": true,
      "slds-button": true,
      "slds-button_neutral": true
    },
    key: 54
  }, [api_custom_element("lightning-primitive-icon", lightning_primitiveIcon__WEBPACK_IMPORTED_MODULE_3__.default, {
    props: {
      "iconName": "utility:upload",
      "variant": "bare",
      "svgClass": "slds-button__icon slds-button__icon_left"
    },
    key: 55
  }, []), api_text(api_dynamic_text($cmp.i18n.inputFileButtonLabel))]), api_element("span", {
    classMap: {
      "slds-file-selector__text": true,
      "slds-medium-show": true
    },
    key: 56
  }, [api_text(api_dynamic_text($cmp.i18n.inputFileBodyText))])])])])]) : null, $cmp.isTypeColor ? api_element("div", {
    classMap: {
      "slds-color-picker": true
    },
    key: 57
  }, [api_element("div", {
    classMap: {
      "slds-form-element": true,
      "slds-color-picker__summary": true
    },
    key: 58
  }, [!$cmp.hasExternalLabel ? api_element("label", {
    className: $cmp.computedColorLabelClass,
    attrs: {
      "for": api_scoped_id("color")
    },
    key: 59
  }, [$cmp.required ? api_element("abbr", {
    classMap: {
      "slds-required": true
    },
    attrs: {
      "title": $cmp.i18n.required
    },
    key: 60
  }, [api_text("*")]) : null, api_text(api_dynamic_text($cmp.label))]) : null, !$cmp.hasExternalLabel ? $cmp.fieldLevelHelp ? api_custom_element("lightning-helptext", lightning_helptext__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "content": $cmp.fieldLevelHelp,
      "alternativeText": $cmp.helptextAlternativeText
    },
    key: 61
  }, []) : null : null, api_element("div", {
    classMap: {
      "slds-form-element__control": true
    },
    key: 62
  }, [api_custom_element("lightning-primitive-colorpicker-button", lightning_primitiveColorpickerButton__WEBPACK_IMPORTED_MODULE_5__.default, {
    props: {
      "value": $cmp.value,
      "disabled": $cmp.disabled
    },
    key: 63,
    on: {
      "blur": _m27 || ($ctx._m27 = api_bind($cmp.handleBlur)),
      "focus": _m28 || ($ctx._m28 = api_bind($cmp.handleFocus)),
      "change": _m29 || ($ctx._m29 = api_bind($cmp.handleColorChange))
    }
  }, []), api_element("div", {
    classMap: {
      "slds-color-picker__summary-input": true
    },
    key: 64
  }, [api_element("input", {
    classMap: {
      "slds-input": true,
      "slds-m-right_x-small": true
    },
    attrs: {
      "type": "text",
      "id": api_scoped_id("color"),
      "name": $cmp.name,
      "autocomplete": $cmp.autocomplete,
      "accesskey": $cmp.accesskey,
      "aria-label": $cmp.computedAriaLabel,
      "aria-invalid": $cmp.computedAriaInvalid,
      "disabled": $cmp.disabled ? "" : null,
      "minlength": "4",
      "maxlength": "7",
      "placeholder": $cmp.placeholder,
      "pattern": $cmp.pattern
    },
    key: 65,
    on: {
      "blur": _m30 || ($ctx._m30 = api_bind($cmp.handleBlur)),
      "focus": _m31 || ($ctx._m31 = api_bind($cmp.handleFocus)),
      "change": _m32 || ($ctx._m32 = api_bind($cmp.handleChange)),
      "input": _m33 || ($ctx._m33 = api_bind($cmp.handleInput))
    }
  }, [])])])])]) : null, $cmp.isTypeDesktopDate ? api_custom_element("lightning-datepicker", lightning_datepicker__WEBPACK_IMPORTED_MODULE_6__.default, {
    props: {
      "max": $cmp.max,
      "min": $cmp.min,
      "label": $cmp.label,
      "name": $cmp.name,
      "variant": $cmp.variant,
      "ariaLabel": $cmp.ariaLabel,
      "dateStyle": $cmp.dateStyle,
      "placeholder": $cmp.placeholder,
      "required": $cmp.required,
      "readOnly": $cmp.readOnly,
      "fieldLevelHelp": $cmp.fieldLevelHelp,
      "autocomplete": "off",
      "messageWhenBadInput": $cmp.messageWhenBadInput,
      "messageWhenValueMissing": $cmp.messageWhenValueMissing,
      "messageWhenRangeOverflow": $cmp.messageWhenRangeOverflow,
      "messageWhenRangeUnderflow": $cmp.messageWhenRangeUnderflow,
      "disabled": $cmp.disabled
    },
    key: 66,
    on: {
      "change": _m34 || ($ctx._m34 = api_bind($cmp.handleChange)),
      "blur": _m35 || ($ctx._m35 = api_bind($cmp.handleBlur)),
      "focus": _m36 || ($ctx._m36 = api_bind($cmp.handleFocus))
    }
  }, []) : null, $cmp.isTypeDesktopTime ? api_custom_element("lightning-timepicker", lightning_timepicker__WEBPACK_IMPORTED_MODULE_7__.default, {
    props: {
      "max": $cmp.max,
      "min": $cmp.min,
      "label": $cmp.label,
      "name": $cmp.name,
      "ariaLabel": $cmp.ariaLabel,
      "variant": $cmp.variant,
      "timeStyle": $cmp.timeStyle,
      "placeholder": $cmp.placeholder,
      "required": $cmp.required,
      "readOnly": $cmp.readOnly,
      "autocomplete": "off",
      "fieldLevelHelp": $cmp.fieldLevelHelp,
      "messageWhenBadInput": $cmp.messageWhenBadInput,
      "messageWhenValueMissing": $cmp.messageWhenValueMissing,
      "messageWhenRangeOverflow": $cmp.messageWhenRangeOverflow,
      "messageWhenRangeUnderflow": $cmp.messageWhenRangeUnderflow,
      "disabled": $cmp.disabled
    },
    key: 67,
    on: {
      "change": _m37 || ($ctx._m37 = api_bind($cmp.handleChange)),
      "blur": _m38 || ($ctx._m38 = api_bind($cmp.handleBlur)),
      "focus": _m39 || ($ctx._m39 = api_bind($cmp.handleFocus))
    }
  }, []) : null, $cmp.isTypeDesktopDateTime ? api_custom_element("lightning-datetimepicker", lightning_datetimepicker__WEBPACK_IMPORTED_MODULE_8__.default, {
    props: {
      "dateAriaControls": $cmp.dateAriaControls,
      "dateAriaLabel": $cmp.dateAriaLabel,
      "dateAriaLabelledBy": $cmp.dateAriaLabelledBy,
      "dateAriaDescribedBy": $cmp.dateAriaDescribedBy,
      "dateStyle": $cmp.dateStyle,
      "timeStyle": $cmp.timeStyle,
      "timeAriaControls": $cmp.timeAriaControls,
      "timeAriaLabel": $cmp.timeAriaLabel,
      "timeAriaLabelledBy": $cmp.timeAriaLabelledBy,
      "timeAriaDescribedBy": $cmp.timeAriaDescribedBy,
      "max": $cmp.max,
      "min": $cmp.min,
      "timezone": $cmp.timezone,
      "label": $cmp.label,
      "name": $cmp.name,
      "variant": $cmp.variant,
      "placeholder": $cmp.placeholder,
      "required": $cmp.required,
      "readOnly": $cmp.readOnly,
      "fieldLevelHelp": $cmp.fieldLevelHelp,
      "autocomplete": "off",
      "messageWhenBadInput": $cmp.messageWhenBadInput,
      "messageWhenValueMissing": $cmp.messageWhenValueMissing,
      "messageWhenRangeOverflow": $cmp.messageWhenRangeOverflow,
      "messageWhenRangeUnderflow": $cmp.messageWhenRangeUnderflow,
      "disabled": $cmp.disabled
    },
    key: 68,
    on: {
      "change": _m40 || ($ctx._m40 = api_bind($cmp.handleChange)),
      "blur": _m41 || ($ctx._m41 = api_bind($cmp.handleBlur)),
      "focus": _m42 || ($ctx._m42 = api_bind($cmp.handleFocus))
    }
  }, []) : null, $cmp._helpMessage ? api_element("div", {
    className: $cmp.computedHelpMessageClass,
    attrs: {
      "id": api_scoped_id("help-message"),
      "data-help-message": "",
      "role": "alert",
      "part": "help-text"
    },
    key: 69
  }, [api_text(api_dynamic_text($cmp._helpMessage))]) : null];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_9__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_input_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _input_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_input_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _input_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-input_input"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/input/input.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/input/input.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _input_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./input.html */ "./node_modules/lightning-base-components/src/lightning/input/input.html");
/* harmony import */ var _salesforce_label_LightningColorPicker_a11yTriggerText__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/label/LightningColorPicker.a11yTriggerText */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.a11yTriggerText.js");
/* harmony import */ var _salesforce_label_LightningInputFile_bodyText__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @salesforce/label/LightningInputFile.bodyText */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInputFile.bodyText.js");
/* harmony import */ var _salesforce_label_LightningInputFile_buttonLabel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @salesforce/label/LightningInputFile.buttonLabel */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInputFile.buttonLabel.js");
/* harmony import */ var _salesforce_label_LightningControl_activeCapitalized__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @salesforce/label/LightningControl.activeCapitalized */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.activeCapitalized.js");
/* harmony import */ var _salesforce_label_LightningControl_inactiveCapitalized__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @salesforce/label/LightningControl.inactiveCapitalized */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.inactiveCapitalized.js");
/* harmony import */ var _salesforce_label_LightningControl_required__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @salesforce/label/LightningControl.required */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.required.js");
/* harmony import */ var _salesforce_label_LightningControl_clear__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @salesforce/label/LightningControl.clear */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.clear.js");
/* harmony import */ var _salesforce_label_LightningControl_loading__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @salesforce/label/LightningControl.loading */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.loading.js");
/* harmony import */ var _salesforce_label_LightningInputNumber_incrementCounter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @salesforce/label/LightningInputNumber.incrementCounter */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInputNumber.incrementCounter.js");
/* harmony import */ var _salesforce_label_LightningInputNumber_decrementCounter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @salesforce/label/LightningInputNumber.decrementCounter */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInputNumber.decrementCounter.js");
/* harmony import */ var _salesforce_label_LightningInput_helptextAlternativeText__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @salesforce/label/LightningInput.helptextAlternativeText */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInput.helptextAlternativeText.js");
/* harmony import */ var _salesforce_i18n_timeZone__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @salesforce/i18n/timeZone */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-timeZone.js");
/* harmony import */ var _salesforce_client_formFactor__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @salesforce/client/formFactor */ "./node_modules/lightning-base-components/scopedImports/@salesforce-client-formFactor.js");
/* harmony import */ var lightning_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! lightning/utils */ "./node_modules/lightning-base-components/src/lightning/utils/utils.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var lightning_ariaObserver__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! lightning/ariaObserver */ "./node_modules/lightning-base-components/src/lightning/ariaObserver/ariaObserver.js");
/* harmony import */ var _normalize__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./normalize */ "./node_modules/lightning-base-components/src/lightning/input/normalize.js");
/* harmony import */ var _dateTimeUtil__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./dateTimeUtil */ "./node_modules/lightning-base-components/src/lightning/input/dateTimeUtil.js");
/* harmony import */ var lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! lightning/internationalizationLibrary */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/internationalizationLibrary.js");
/* harmony import */ var lightning_inputUtils__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! lightning/inputUtils */ "./node_modules/lightning-base-components/src/lightning/inputUtils/inputUtils.js");
/* harmony import */ var _numberUtil__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./numberUtil */ "./node_modules/lightning-base-components/src/lightning/input/numberUtil.js");
/* harmony import */ var _emailUtil__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./emailUtil */ "./node_modules/lightning-base-components/src/lightning/input/emailUtil.js");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./selection */ "./node_modules/lightning-base-components/src/lightning/input/selection.js");

























const i18n = {
  a11yTriggerText: _salesforce_label_LightningColorPicker_a11yTriggerText__WEBPACK_IMPORTED_MODULE_2__.default,
  inputFileBodyText: _salesforce_label_LightningInputFile_bodyText__WEBPACK_IMPORTED_MODULE_3__.default,
  inputFileButtonLabel: _salesforce_label_LightningInputFile_buttonLabel__WEBPACK_IMPORTED_MODULE_4__.default,
  messageToggleActive: _salesforce_label_LightningControl_activeCapitalized__WEBPACK_IMPORTED_MODULE_5__.default,
  messageToggleInactive: _salesforce_label_LightningControl_inactiveCapitalized__WEBPACK_IMPORTED_MODULE_6__.default,
  numberIncrementCounter: _salesforce_label_LightningInputNumber_incrementCounter__WEBPACK_IMPORTED_MODULE_10__.default,
  numberDecrementCounter: _salesforce_label_LightningInputNumber_decrementCounter__WEBPACK_IMPORTED_MODULE_11__.default,
  required: _salesforce_label_LightningControl_required__WEBPACK_IMPORTED_MODULE_7__.default,
  clear: _salesforce_label_LightningControl_clear__WEBPACK_IMPORTED_MODULE_8__.default,
  loading: _salesforce_label_LightningControl_loading__WEBPACK_IMPORTED_MODULE_9__.default,
  helpTextAlternativeText: _salesforce_label_LightningInput_helptextAlternativeText__WEBPACK_IMPORTED_MODULE_12__.default
};
const ARIA_CONTROLS = 'aria-controls';
const ARIA_LABEL = 'aria-label';
const ARIA_LABELLEDBY = 'aria-labelledby';
const ARIA_DESCRIBEDBY = 'aria-describedby';
/*
 * This component supports the regular native input types, with the addition of toggle, checkbox-button and color.
 * Furthermore the file type supports a droppable zone, search has a clear button, number has formatting.
 * Input changes (native oninput event) triggers an onchange event,
 *     the native even is stopped, the dispatched custom event has a value that points to the state of the component
 *     in case of files it's the files uploaded (via droppable zone or through the upload button),
 *     checked for radio and checkbox, checkbox-button, and just straight input's value for everything else
 *
 *
 * _Toggle_ (always has an aria-describedby, on error has an additional one, default label text for active and inactive
 * states)
 * _File_ (as it has a droppable zone, the validity returned would have to be valid - unless a custom error message was
 *    passed)
 * _Search_ (it has the clear button and the icon)
 * _Number_ (formatting when not in focus, when in focus shows raw value)
 *
 * */

const VALID_NUMBER_FORMATTERS = ['decimal', 'percent', 'percent-fixed', 'currency'];
const DEFAULT_COLOR = '#000000';
const DEFAULT_FORMATTER = VALID_NUMBER_FORMATTERS[0];
/**
 * Returns an aria string with all the non-autolinked values removed
 * @param {String} values space sperated list of ids
 * @returns {String} The aria values with the non-auto linked ones removed
 */

function filterNonAutoLink(values) {
  const ariaValues = values && values.split(/\s+/);
  return ariaValues && ariaValues.filter(value => {
    return !!value.match(/^auto-link/);
  }).join(' ');
}
/**
 * Represents interactive controls that accept user input depending on the type attribute.
 */


class LightningInput extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  /**
   * Text that is displayed when the field is empty, to prompt the user for a valid entry. Use this attribute with date, email, number, password, search, tel, text, time, and url input types only.
   * @type {string}
   *
   */

  /**
   * Specifies the name of an input element.
   * @type {string}
   *
   */

  /**
   * Text label for the input.
   * @type {string}
   * @required
   *
   */

  /**
   * Error message to be displayed when a bad input is detected. The badInput error can be returned for invalid input for any input type.
   * @type {string}
   *
   */

  /**
   * Error message to be displayed when a pattern mismatch is detected. The patternMismatch error can be returned when you specify a pattern for email, password, search, tel, text, or url input types.
   * @type {string}
   *
   */

  /**
   * Error message to be displayed when a range overflow is detected. The rangeOverflow error can be returned when you specify a max value for number or range input types.
   * @type {string}
   *
   */

  /**
   * Error message to be displayed when a range underflow is detected. The rangeUnderflow error can be returned when you specify a min value for number or range input types.
   * @type {string}
   *
   */

  /**
   * Error message to be displayed when a step mismatch is detected. The stepMismatch error can be returned when you specify a step value for number and range input types.
   * @type {string}
   *
   */

  /**
   * Error message to be displayed when the value is too short. The tooShort error can be returned when you specify a min-length value for email, password, search, tel, text, and url input types.
   * @type {string}
   *
   */

  /**
   * Error message to be displayed when the value is too long. The tooLong error can be returned when you specify a max-length value for email, password, search, tel, text, and url input types.
   * @type {string}
   *
   */

  /**
   * Error message to be displayed when a type mismatch is detected. The typeMismatch error can be returned for the email and url input types.
   * @type {string}
   *
   */

  /**
   * Error message to be displayed when the value is missing. The valueMissing error can be returned when you specify the required attribute for any input type.
   * @type {string}
   *
   */

  /**
   * Text shown for the active state of a toggle. The default is "Active".
   * @type {string}
   */

  /**
   * Text shown for the inactive state of a toggle. The default is "Inactive".
   * @type {string}
   */

  /**
   * Describes the input to assistive technologies.
   * @type {string}
   */

  /**
   * Controls auto-filling of the field. Use this attribute with
   * email, search, tel, text, and url input types only. Set the attribute to pass
   * through autocomplete values to be interpreted by the browser.
   * @type {string}
   */

  /**
   * The display style of the date when type='date' or type='datetime'. Valid values are
   * short, medium (default), and long. The format of each style is specific to the locale.
   * On mobile devices this attribute has no effect.
   * @type {string}
   * @default medium
   */

  /**
   * The display style of the time when type='time' or type='datetime'. Valid values are
   * short (default), medium, and long. Currently, medium and long styles look the same.
   * On mobile devices this attribute has no effect.
   * @type {string}
   * @default short
   *
   */

  /**
   * Describes the date input to assistive technologies when type='datetime'. On mobile devices,
   * this label is merged with aria-label and time-aria-label to describe the native date time input.
   * @type {string}
   *
   */
  constructor() {
    super();
    this.placeholder = void 0;
    this.name = void 0;
    this.label = void 0;
    this.messageWhenBadInput = void 0;
    this.messageWhenPatternMismatch = void 0;
    this.messageWhenRangeOverflow = void 0;
    this.messageWhenRangeUnderflow = void 0;
    this.messageWhenStepMismatch = void 0;
    this.messageWhenTooShort = void 0;
    this.messageWhenTooLong = void 0;
    this.messageWhenTypeMismatch = void 0;
    this.messageWhenValueMissing = void 0;
    this.messageToggleActive = i18n.messageToggleActive;
    this.messageToggleInactive = i18n.messageToggleInactive;
    this.ariaLabel = void 0;
    this.autocomplete = void 0;
    this.dateStyle = void 0;
    this.timeStyle = void 0;
    this.dateAriaLabel = void 0;
    this._timeAriaDescribedBy = void 0;
    this._timeAriaLabelledBy = void 0;
    this._timeAriaControls = void 0;
    this._dateAriaControls = void 0;
    this._dateAriaDescribedBy = void 0;
    this._dateAriaLabelledBy = void 0;
    this._value = '';
    this._type = 'text';
    this._pattern = void 0;
    this._max = void 0;
    this._min = void 0;
    this._step = void 0;
    this._disabled = false;
    this._readOnly = false;
    this._required = false;
    this._checked = false;
    this._isLoading = false;
    this._multiple = false;
    this._timezone = false;
    this._helpMessage = null;
    this._isColorPickerPanelOpen = false;
    this._fieldLevelHelp = void 0;
    this._accesskey = void 0;
    this._maxLength = void 0;
    this._minLength = void 0;
    this._accept = void 0;
    this._variant = void 0;
    this._numberRawValue = '';
    this._ariaInvalid = void 0;
    this._formatter = DEFAULT_FORMATTER;
    this._showRawNumber = false;
    this._initialValueSet = false;
    this._files = null;
    this._rendered = void 0;
    this._selectionCache = void 0;
    this.ariaHasPopup = void 0;
    this.ariaObserver = new lightning_ariaObserver__WEBPACK_IMPORTED_MODULE_17__.default(this); // Native Shadow Root will return [native code].
    // Our synthetic method will return the function source.

    this.isNative = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.isNativeComponent)(this); // The selection cache allows us an input to remember what text was selected
    // in cases where we change the text on blur or in browsers (Safari) that
    // don't track it properly.

    this._selectionCache = new _selection__WEBPACK_IMPORTED_MODULE_24__.InputSelectionCache();
  }

  connectedCallback() {
    if (!this.ariaObserver) {
      this.ariaObserver = new lightning_ariaObserver__WEBPACK_IMPORTED_MODULE_17__.default(this);
    } // Manually track connected state because this.template.isConnected can be false
    // when input is created using createElement and inserted into dom manually.
    // i.e. create an input element and pass it to showCustomOverlay
    // Remove this state and the one in AriaObserver once the issue is fixed.
    // PR: https://github.com/salesforce/lwc/pull/1798


    this.classList.add('slds-form-element');

    this._updateClassList();

    this._validateRequiredAttributes();

    this.interactingState = new lightning_inputUtils__WEBPACK_IMPORTED_MODULE_21__.InteractingState();
    this.interactingState.onleave(() => this.reportValidity());

    if (this.isTypeNumber) {
      this._updateNumberValue(this._value);
    }
  }

  disconnectedCallback() {
    this._rendered = false;
    this._initialValueSet = false;
    this._cachedInputElement = undefined;

    if (this.ariaObserver) {
      this.ariaObserver.disconnect();
      this.ariaObserver = undefined;
    }
  }

  renderedCallback() {
    // For W-7962838: In Safari, focus doesn't scroll input into view.
    // Attach the event listener used to cache the selected text when selection changes.
    if (lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.isSafari) {
      this._inputElement.addEventListener('select', this.handleSelect.bind(this));
    }

    if (!this._initialValueSet && this._inputElement) {
      this._rendered = true;

      if (this.isTypeNumber) {
        this._numberRawValue = (0,_numberUtil__WEBPACK_IMPORTED_MODULE_22__.fromIsoDecimal)(this._value);
      }

      this._setInputValue(this._displayedValue);

      if (this.isTypeCheckable) {
        this._inputElement.checked = this._checked;
      }

      this._initialValueSet = true;
    }

    if (this.isConnected) {
      this.ariaObserver.sync();
    }

    this._synchronizeA11y();
  }
  /**
   * Reserved for internal use.
   * @type {number}
   *
   */


  get formatFractionDigits() {
    return this._formatFractionDigits;
  }

  set formatFractionDigits(value) {
    this._formatFractionDigits = value;

    if (this._rendered && this.isTypeNumber) {
      this._setInputValue(this._displayedValue);
    }
  }
  /**
   * A space-separated list of element IDs whose presence or content is controlled by the
   * time input when type='datetime'. On mobile devices, this is merged with aria-controls
   * and date-aria-controls to describe the native date time input.
   * @type {string}
   */


  get timeAriaControls() {
    return this._timeAriaControls;
  }

  set timeAriaControls(references) {
    this._timeAriaControls = references;
    this.ariaObserver.connectLiveIdRef(references, reference => {
      this._timeAriaControls = reference;
    });
  }
  /**
   * A space-separated list of element IDs that provide labels for the date input when type='datetime'.
   * On mobile devices, this is merged with aria-labelled-by and time-aria-labelled-by to describe
   * the native date time input.
   * @type {string}
   */


  get dateAriaLabelledBy() {
    return this._dateAriaLabelledBy;
  }

  set dateAriaLabelledBy(references) {
    this._dateAriaLabelledBy = references;
    this.ariaObserver.connectLiveIdRef(references, reference => {
      this._dateAriaLabelledBy = reference;
    });
  }
  /**
   * A space-separated list of element IDs that provide labels for the time input when type='datetime'.
   * On mobile devices, this is merged with aria-labelled-by and date-aria-labelled-by to describe
   * the native date time input.
   * @type {string}
   *
   */


  get timeAriaLabelledBy() {
    return this._timeAriaLabelledBy;
  }

  set timeAriaLabelledBy(references) {
    this._timeAriaLabelledBy = references;
    this.ariaObserver.connectLiveIdRef(references, reference => {
      this._timeAriaLabelledBy = reference;
    });
  }
  /**
   * A space-separated list of element IDs that provide descriptive labels for the time input when
   * type='datetime'. On mobile devices, this is merged with aria-described-by and date-aria-described-by
   * to describe the native date time input.
   *  @type {string}
   *
   */


  get timeAriaDescribedBy() {
    return this._timeAriaDescribedBy;
  }

  set timeAriaDescribedBy(references) {
    this._timeAriaDescribedBy = references;
    this.ariaObserver.connectLiveIdRef(references, reference => {
      this._timeAriaDescribedBy = reference;
    });
  }
  /**
   * A space-separated list of element IDs whose presence or content is controlled by the
   * date input when type='datetime'. On mobile devices, this is merged with aria-controls
   * and time-aria-controls to describe the native date time input.
   * @type {string}
   *
   */


  get dateAriaControls() {
    return this._dateAriaControls;
  }

  set dateAriaControls(references) {
    this._dateAriaControls = references;
    this.ariaObserver.connectLiveIdRef(references, reference => {
      this._dateAriaControls = reference;
    });
  }
  /**
   * A space-separated list of element IDs that provide descriptive labels for the date input when
   * type='datetime'. On mobile devices, this is merged with aria-described-by and time-aria-described-by
   * to describe the native date time input.
   * @type {string}
   */


  get dateAriaDescribedBy() {
    return this._dateAriaDescribedBy;
  }

  set dateAriaDescribedBy(references) {
    this._dateAriaDescribedBy = references;
    this.ariaObserver.connectLiveIdRef(references, reference => {
      this._dateAriaDescribedBy = reference;
    });
  }
  /**
   * A space-separated list of element IDs whose presence or content is controlled by the input.
   * @type {string}
   */


  get ariaControls() {
    return this._ariaControls;
  }

  set ariaControls(references) {
    this._ariaControls = references;
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.reflectAttribute)(this, ARIA_CONTROLS, references);
  }
  /**
   * A space-separated list of element IDs that provide labels for the input.
   * @type {string}
   */


  get ariaLabelledBy() {
    // native version returns the auto linked value
    if (this.isNative && this._rendered) {
      const ariaValues = this._inputElement.getAttribute(ARIA_LABELLEDBY);

      return filterNonAutoLink(ariaValues);
    }

    return this._ariaLabelledBy;
  }

  set ariaLabelledBy(references) {
    this._ariaLabelledBy = references;
    this.ariaObserver.connect({
      targetSelector: 'input',
      attribute: ARIA_LABELLEDBY,
      ids: references
    });
  }
  /**
   * A space-separated list of element IDs that provide descriptive labels for the input.
   * @type {string}
   */


  get ariaDescribedBy() {
    if (this.isNative) {
      // in native case return the linked value
      const ariaValues = this._inputElement.getAttribute(ARIA_DESCRIBEDBY);

      return filterNonAutoLink(ariaValues);
    }

    return this._ariaDescribedBy;
  }

  set ariaDescribedBy(references) {
    this._ariaDescribedBy = references;
    this.ariaObserver.connect({
      targetSelector: 'input',
      attribute: ARIA_DESCRIBEDBY,
      ids: references
    });
  }
  /**
   * A boolean value that controls whether accessibility tools read empty required textboxes as invalid. Default value is false.
   * @type {boolean}
   */


  get ariaInvalid() {
    return this._ariaInvalid;
  }

  set ariaInvalid(value) {
    let _value = typeof value == 'undefined' ? undefined : (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.normalizeBoolean)(value);
    /* Preserving Backward compatibility donot set any aria-invalid when not specified by user */


    this._ariaInvalid = _value;
  }
  /**
   * Specifies the value of the aria-haspopup attribute
   */


  /**
   * String value with the formatter to be used for number input. Valid values include
   * decimal, percent, percent-fixed, and currency.
   * @type {string}
   */
  get formatter() {
    return this._formatter;
  }

  set formatter(value) {
    this._formatter = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.normalizeString)(value, {
      fallbackValue: DEFAULT_FORMATTER,
      validValues: VALID_NUMBER_FORMATTERS
    });

    this._updateInputDisplayValueIfTypeNumber();
  }
  /**
   * The type of the input. Valid values are checkbox, checkbox-button,
   * color, date, datetime, time, email, file, password, range, search,
   * tel, url, number, and toggle. This value defaults to text.
   * @type {string}
   * @default text
   */


  get type() {
    return this._type;
  }

  set type(value) {
    const normalizedValue = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.normalizeString)(value);
    this._type = normalizedValue === 'datetime' ? 'datetime-local' : normalizedValue;

    this._validateType(normalizedValue);

    this._inputElementRefreshNeeded = true;

    if (this._rendered) {
      // The type is being changed after render, which means the input element may be different (eg. changing
      // from text to 'checkbox', so we need to set the initial value again
      this._initialValueSet = false;

      if (this.isTypeNumber) {
        // If the type has changed, we need to re-parse the value as a number
        this._updateNumberValue(this._value);
      }
    }

    this._updateProxyInputAttributes(['type', 'value', 'max', 'min', 'required', 'pattern']);
  }
  /**
   * For the search type only. If present, a spinner is displayed to indicate that data is loading.
   * @type {boolean}
   * @default false
   */


  get isLoading() {
    return this._isLoading;
  }

  set isLoading(value) {
    this._isLoading = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.normalizeBoolean)(value);
  }
  /**
   * Specifies the regular expression that the input's value is checked against.
   * This attribute is supported for email, password, search, tel, text, and url types.
   * @type {string}
   *
   */


  get pattern() {
    if (this.isTypeColor) {
      return '^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$';
    }

    return this._pattern;
  }

  set pattern(value) {
    this._pattern = value;

    this._updateProxyInputAttributes('pattern');
  }
  /**
   * The maximum number of characters allowed in the field.
   * Use this attribute with email, password, search, tel, text, and url input types only.
   * @type {number}
   */


  get maxLength() {
    return this._maxLength;
  }

  set maxLength(value) {
    this._maxLength = value;

    this._updateProxyInputAttributes('maxlength');
  }
  /**
   * Specifies the types of files that the server accepts. Use this attribute with file input type only.
   * @type {string}
   */


  get accept() {
    return this._accept;
  }

  set accept(value) {
    this._accept = value;

    this._updateProxyInputAttributes('accept');
  }
  /**
   * The minimum number of characters allowed in the field.
   * Use this attribute with email, password, search, tel, text, and url input types only.
   * @type {number}
   */


  get minLength() {
    return this._minLength;
  }

  set minLength(value) {
    this._minLength = value;

    this._updateProxyInputAttributes('minlength');
  } // number and date/time

  /**
   * The maximum acceptable value for the input.  Use this attribute with number,
   * range, date, time, and datetime input types only. For number and range type, the max value is a
   * decimal number. For the date, time, and datetime types, the max value must use a valid string for the type.
   * @type {decimal|string}
   */


  get max() {
    return this._max;
  }

  set max(value) {
    this._max = value;

    this._updateProxyInputAttributes('max');
  }
  /**
   * The minimum acceptable value for the input. Use this attribute with number,
   * range, date, time, and datetime input types only. For number and range types, the min value
   * is a decimal number. For the date, time, and datetime types, the min value must use a valid string for the type.
   * @type {decimal|string}
   */


  get min() {
    return this._min;
  }

  set min(value) {
    this._min = value;

    this._updateProxyInputAttributes('min');
  }
  /**
   * Granularity of the value, specified as a positive floating point number.
   * Use this attribute with number and range input types only.
   * Use 'any' when granularity is not a concern. This value defaults to 1.
   * @type {decimal|string}
   * @default 1
   */


  get step() {
    // This should be reconsidered as it in effect disabled any step support for datetime/time types on mobile
    if (this.isTypeDateTime || this.isTypeTime) {
      return 'any';
    } // It should probably default to '1' instead, but this means that we'd be explicitly passing step='1' to the
    // native input


    return this._step;
  }

  set step(value) {
    if (typeof value === 'string' && value.toLowerCase() === 'any') {
      this._step = 'any';
    } else {
      this._step = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.isUndefinedOrNull)(value) || isNaN(value) ? undefined : String(value);
    }

    this._updateProxyInputAttributes('step');

    this._updateInputDisplayValueIfTypeNumber();
  }
  /**
   * If present, the checkbox is selected.
   * @type {boolean}
   * @default false
   */


  get checked() {
    // checkable inputs can be part of a named group, in that case there won't be a change event thrown and so
    // the internal tracking _checked would be out of sync with the actual input value.
    if (this.isTypeCheckable && this._initialValueSet) {
      return this._inputElement.checked;
    }

    return this._checked;
  }

  set checked(value) {
    this._checked = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.normalizeBoolean)(value);

    if (this._rendered) {
      this._inputElement.checked = this._checked;
    } // Update proxy input should be set after _inputElement is updated.
    // because when update proxy input, it will use this.checked.
    // if not update this._inputElement, will lead to inconsistent state.


    this._updateProxyInputAttributes('checked');

    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.reflectAttribute)(this, 'checked', this._checked);
  }
  /**
   * Specifies that a user can enter more than one value. Use this attribute with file and email input types only.
   * @type {boolean}
   * @default false
   */


  get multiple() {
    return this._multiple;
  }

  set multiple(value) {
    this._multiple = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.normalizeBoolean)(value);

    this._updateProxyInputAttributes('multiple');
  }
  /**
   * Specifies the value of an input element.
   * @type {object}
   */


  get value() {
    return this._value;
  }

  set value(value) {
    const previousValue = this._value;
    this._value = (0,_normalize__WEBPACK_IMPORTED_MODULE_18__.normalizeInput)(value);

    if (this._rendered && this.isTypeNumber) {
      this._value = (0,_numberUtil__WEBPACK_IMPORTED_MODULE_22__.stringifyNumber)(value); // the extra check for whether the value has changed is done for cases
      // when the same value is set back in a change handler, this is to avoid
      // the raw number from changing formatting under the user
      // (eg. if the user typed 1,000 we want to preserve that formatting as the user
      // types the value)

      if (this.validity.badInput || this._value !== previousValue) {
        this._updateNumberValue(value);
      }
    }

    this._updateProxyInputAttributes('value'); // Setting value of a type='file' isn't allowed


    if (!this.isTypeFile) {
      // Again, due to the interop layer we need to check whether the value being set
      // is different, otherwise we're duplicating the sets on the input, which result
      // in different bugs like Japanese IME duplication of characters in Safari (likely a browser bug) or
      // character position re-set in IE11.
      if (this._rendered && this._inputElement.value !== this._displayedValue) {
        this._setInputValue(this._displayedValue);
      }
    }
  }
  /**
   * The variant changes the appearance of an input field.
   * Accepted variants include standard, label-inline, label-hidden, and label-stacked.
   * This value defaults to standard, which displays the label above the field.
   * Use label-hidden to hide the label but make it available to assistive technology.
   * Use label-inline to horizontally align the label and input field.
   * Use label-stacked to place the label above the input field.
   * @type {string}
   * @default standard
   */


  get variant() {
    return this._variant || lightning_inputUtils__WEBPACK_IMPORTED_MODULE_21__.VARIANT.STANDARD;
  }

  set variant(value) {
    this._variant = (0,lightning_inputUtils__WEBPACK_IMPORTED_MODULE_21__.normalizeVariant)(value);

    this._updateClassList();

    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.reflectAttribute)(this, 'variant', this._variant);
  }
  /**
   * If present, the input field is disabled and users cannot interact with it.
   * @type {boolean}
   * @default false
   */


  get disabled() {
    return this._disabled;
  }

  set disabled(value) {
    this._disabled = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.normalizeBoolean)(value);

    this._updateProxyInputAttributes('disabled');

    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.reflectAttribute)(this, 'disabled', this.disabled);
  }
  /**
   * If present, the input field is read-only and cannot be edited by users.
   * @type {boolean}
   * @default false
   */


  get readOnly() {
    return this._readOnly;
  }

  set readOnly(value) {
    this._readOnly = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.normalizeBoolean)(value);

    this._updateProxyInputAttributes('readonly');

    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.reflectAttribute)(this, 'readonly', this.readOnly);
  }
  /**
   * If present, the input field must be filled out before the form is submitted.
   * @type {boolean}
   * @default false
   */


  get required() {
    return this._required;
  }

  set required(value) {
    this._required = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.normalizeBoolean)(value);

    this._updateProxyInputAttributes('required');
  }
  /**
   * Specifies the time zone used when type='datetime' only. This value defaults to the user's Salesforce time zone setting.
   * @type {string}
   *
   */


  get timezone() {
    return this._timezone || _salesforce_i18n_timeZone__WEBPACK_IMPORTED_MODULE_13__.default;
  }

  set timezone(value) {
    this._timezone = value; // mobile date/time normalization of value/max/min depends on timezone, so we need to update here as well

    this._updateProxyInputAttributes(['value', 'max', 'min']);
  }
  /**
   * Help text detailing the purpose and function of the input.
   * This attribute isn't supported for file, toggle, and checkbox-button types.
   * @type {string}
   *
   */


  get fieldLevelHelp() {
    return this._fieldLevelHelp;
  }

  set fieldLevelHelp(value) {
    this._fieldLevelHelp = value;
  }
  /**
   * Specifies a shortcut key to activate or focus an element.
   * @type {string}
   *
   */


  get accessKey() {
    return this._accesskey;
  }

  set accessKey(newValue) {
    this._accesskey = newValue;
  }
  /**
   * A FileList that contains selected files. Use this attribute with the file input type only.
   * @type {object}
   *
   */


  get files() {
    if (this.isTypeFile) {
      return this._files;
    }

    return null;
  }
  /**
   * Represents the validity states that an element can be in, with respect to constraint validation.
   * @type {object}
   *
   */


  get validity() {
    return this._constraint.validity;
  }
  /**
   * Specifies the index of the first character to select in the input element.
   * This attribute is supported only for text type.
   * Use with selection-end to programmatically set or read the position of
   * selected text.
   */


  get selectionStart() {
    if (this._inputElement && 'selectionStart' in this._inputElement) {
      return this._inputElement.selectionStart;
    }

    return undefined;
  }

  set selectionStart(index) {
    if (this._inputElement && 'selectionStart' in this._inputElement) {
      this._inputElement.selectionStart = index;
    }
  }
  /**
   * Specifies the index of the last character to select in the input element.
   * This attribute is supported only for text type.
   * Use with selection-start to programmatically set or read the position of
   * selected text.
   */


  get selectionEnd() {
    if (this._inputElement && 'selectionEnd' in this._inputElement) {
      return this._inputElement.selectionEnd;
    }

    return undefined;
  }

  set selectionEnd(index) {
    if (this._inputElement && 'selectionEnd' in this._inputElement) {
      this._inputElement.selectionEnd = index;
    }
  }
  /**
   * Checks if the input is valid.
   * @returns {boolean} Indicates whether the element meets all constraint validations.
   */


  checkValidity() {
    return this._constraint.checkValidity();
  }
  /**
   * Sets a custom error message to be displayed when a form is submitted.
   * @param {string} message - The string that describes the error. If message is an empty string, the error message is reset.
   */


  setCustomValidity(message) {
    this._constraint.setCustomValidity(message);
  }
  /**
   * Displays the error messages and returns false if the input is invalid.
   * If the input is valid, reportValidity() clears displayed error messages and returns true.
   * @returns {boolean} - The validity status of the input fields.
   */


  reportValidity() {
    return this._constraint.reportValidity(message => {
      if (this._rendered && !this.isNativeInput) {
        this._inputElement.showHelpMessage(message);
      } else {
        this._helpMessage = message;
      }
    });
  }
  /**
   * Displays error messages on invalid fields.
   * An invalid field fails at least one constraint validation and returns false when checkValidity() is called.
   */


  showHelpMessageIfInvalid() {
    this.reportValidity();
  }
  /**
   * Sets focus on the input element.
   */


  focus() {
    if (this._rendered) {
      this._inputElement.focus();
    }
  }
  /**
   * Removes keyboard focus from the input element.
   */


  blur() {
    if (this._rendered) {
      this._inputElement.blur();
    }
  }

  get isNativeInput() {
    return !(this.isTypeDesktopDate || this.isTypeDesktopDateTime || this.isTypeDesktopTime);
  }

  get computedAriaLabel() {
    const ariaValues = []; // merge all date & time arias on mobile since it's displayed as a single field

    if (this.isTypeMobileDateTime) {
      ariaValues.push(this.dateAriaLabel);
      ariaValues.push(this.timeAriaLabel);
    }

    if (this.ariaLabel) {
      ariaValues.push(this.ariaLabel);
    }

    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.normalizeAriaAttribute)(ariaValues);
  }

  get computedAriaLabelledBy() {
    const ariaValues = [];

    if (this.isTypeFile) {
      ariaValues.push(this.computedUniqueFileElementLabelledById);
    } // merge all date & time arias on mobile since it's displayed as a single field


    if (this.isTypeMobileDateTime) {
      ariaValues.push(this.dateAriaLabelledBy);
      ariaValues.push(this.timeAriaLabelledBy);
    }

    if (this.ariaLabelledBy) {
      ariaValues.push(this.ariaLabelledBy);
    }

    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.normalizeAriaAttribute)(ariaValues);
  }

  get computedAriaDescribedBy() {
    const ariaValues = [];

    if (this._helpMessage) {
      ariaValues.push(this.computedUniqueHelpElementId);
    } // The toggle type is described by a secondary element


    if (this.isTypeToggle) {
      ariaValues.push(this.computedUniqueToggleElementDescribedById);
    } // merge all date & time arias on mobile since it's displayed as a single field


    if (this.isTypeMobileDateTime) {
      ariaValues.push(this.dateAriaDescribedBy);
      ariaValues.push(this.timeAriaDescribedBy);
    }

    if (this.ariaDescribedBy) {
      ariaValues.push(this.ariaDescribedBy);
    }

    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.normalizeAriaAttribute)(ariaValues);
  }

  get computedAriaInvalid() {
    // W-8796658: aria-invalid should always follow the visual indication of errors
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.computeAriaInvalid)(this._helpMessage, this.value, this.ariaInvalid);
  }

  get isLabelHidden() {
    return this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_21__.VARIANT.LABEL_HIDDEN;
  }

  get isLabelStacked() {
    return this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_21__.VARIANT.LABEL_STACKED;
  }

  get accesskey() {
    return this._accesskey;
  }

  get colorInputElementValue() {
    return this.validity.valid && this.value ? this.value : DEFAULT_COLOR;
  }

  get colorInputStyle() {
    return `background: ${this.value || '#5679C0'};`;
  }

  get computedUniqueHelpElementId() {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.getRealDOMId)(this.template.querySelector('[data-help-message]'));
  }

  get computedUniqueToggleElementDescribedById() {
    if (this.isTypeToggle) {
      const toggle = this.template.querySelector('[data-toggle-description]');
      return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.getRealDOMId)(toggle);
    }

    return null;
  }

  get computedUniqueFormLabelId() {
    if (this.isTypeFile) {
      const formLabel = this.template.querySelector('[data-form-label]');
      return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.getRealDOMId)(formLabel);
    }

    return null;
  }

  get computedUniqueFileSelectorLabelId() {
    if (this.isTypeFile) {
      const fileBodyLabel = this.template.querySelector('[data-file-selector-label]');
      return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.getRealDOMId)(fileBodyLabel);
    }

    return null;
  }

  get computedUniqueFileElementLabelledById() {
    if (this.isTypeFile) {
      const labelIds = [this.computedUniqueFormLabelId, this.computedUniqueFileSelectorLabelId];
      return labelIds.join(' ');
    }

    return null;
  }

  get computedFormElementClass() {
    const classes = (0,lightning_utils__WEBPACK_IMPORTED_MODULE_15__.classSet)('slds-form-element__control slds-grow');

    if (this.isTypeSearch) {
      classes.add('slds-input-has-icon slds-input-has-icon_left-right');
    }

    return classes.toString();
  }

  get i18n() {
    return i18n;
  }

  get computedLabelClass() {
    const classnames = (0,lightning_utils__WEBPACK_IMPORTED_MODULE_15__.classSet)('slds-form-element__label');

    if (this.isTypeCheckable || this.isTypeFile) {// do nothing
    } else if (this.isTypeToggle) {
      classnames.add('slds-m-bottom_none');
    } else {
      classnames.add('slds-no-flex');
    }

    return classnames.add({
      'slds-assistive-text': this.isLabelHidden
    }).toString();
  }

  get computedNumberClass() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_15__.classSet)('slds-input').add({
      'slds-is-disabled': this.disabled
    }).toString();
  }

  get computedColorLabelClass() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_15__.classSet)('slds-form-element__label slds-color-picker__summary-label').add({
      'slds-assistive-text': this.isLabelHidden
    }).toString();
  }

  get computedCheckboxClass() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_15__.classSet)('slds-checkbox').add({
      'slds-checkbox_standalone': !this.isStandardVariant
    }).toString();
  }

  get computedHelpMessageClass() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_15__.classSet)('slds-form-element__help').add({
      'slds-m-left_none': this.variant !== lightning_inputUtils__WEBPACK_IMPORTED_MODULE_21__.VARIANT.LABEL_INLINE
    }).toString();
  }

  get normalizedMax() {
    return this._normalizeDateTimeString(this.max);
  }

  get normalizedMin() {
    return this._normalizeDateTimeString(this.min);
  }

  get isTypeNumber() {
    return this.type === 'number';
  }

  get isTypeEmail() {
    // To test against native change this to type="emails"
    return this.type === 'email';
  }

  get isTypeCheckable() {
    return this.isTypeCheckbox || this.isTypeCheckboxButton || this.isTypeRadio || this.isTypeToggle;
  }

  get isTypeSearch() {
    return this.type === 'search';
  }

  get isTypeToggle() {
    return this.type === 'toggle';
  }

  get isTypeText() {
    return this.type === 'text';
  }

  get isTypeCheckbox() {
    return this.type === 'checkbox';
  }

  get isTypeRadio() {
    return this.type === 'radio';
  }

  get isTypeCheckboxButton() {
    return this.type === 'checkbox-button';
  }

  get isTypeFile() {
    return this.type === 'file';
  }

  get isTypeColor() {
    return this.type === 'color';
  }

  get isTypeDate() {
    return this.type === 'date';
  }

  get isTypeDateTime() {
    return this.type === 'datetime' || this.type === 'datetime-local';
  }

  get isTypeTime() {
    return this.type === 'time';
  }

  get isTypeMobileDate() {
    return this.isTypeDate && !this._isDesktopBrowser();
  }

  get isTypeDesktopDate() {
    return this.isTypeDate && this._isDesktopBrowser();
  }

  get isTypeMobileDateTime() {
    return this.isTypeDateTime && !this._isDesktopBrowser();
  }

  get isTypeDesktopDateTime() {
    return this.isTypeDateTime && this._isDesktopBrowser();
  }

  get isTypeMobileTime() {
    return this.isTypeTime && !this._isDesktopBrowser();
  }

  get isTypeDesktopTime() {
    return this.isTypeTime && this._isDesktopBrowser();
  }

  get isTypeSimple() {
    return !this.isTypeCheckbox && !this.isTypeCheckboxButton && !this.isTypeToggle && !this.isTypeRadio && !this.isTypeFile && !this.isTypeColor && !this.isTypeDesktopDate && !this.isTypeDesktopDateTime && !this.isTypeDesktopTime;
  }

  get _inputElement() {
    if (!this._cachedInputElement || this._inputElementRefreshNeeded) {
      this._inputDragonDecorated = false;
      let inputElement;

      if (this.isTypeDesktopDate) {
        inputElement = this.template.querySelector('lightning-datepicker');
      } else if (this.isTypeDesktopDateTime) {
        inputElement = this.template.querySelector('lightning-datetimepicker');
      } else if (this.isTypeDesktopTime) {
        inputElement = this.template.querySelector('lightning-timepicker');
      } else {
        inputElement = this.template.querySelector('input');
        this._inputDragonDecorated = true;
        (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.decorateInputForDragon)(inputElement);
      }

      this._inputElementRefreshNeeded = false;
      this._cachedInputElement = inputElement;
    }

    return this._cachedInputElement;
  }

  get _inputTypeForValidity() {
    let inputType = 'text';

    if (this.isTypeSimple) {
      if (this.isTypeEmail) {
        inputType = 'text';
      } else if (this.isTypeNumber) {
        inputType = 'number';
      } else {
        inputType = this.type;
      }
    } else if (this.isTypeCheckable) {
      inputType = this.isTypeRadio ? 'radio' : 'checkbox';
    } else if (this.isTypeFile) {
      inputType = 'file';
    } else if (this.isTypeDateTime) {
      inputType = 'datetime-local';
    } else if (this.isTypeTime) {
      inputType = 'time';
    } else if (this.isTypeDate) {
      inputType = 'date';
    }

    return inputType;
  }

  get _displayedValue() {
    if (this.isTypeNumber) {
      // When only a symbol is entered by the user, set the display value as the user's input.
      // This will not affect the value dispatched by input via the change event, as it only dispatches a valid decimal number.
      // Due to the above, in integrations like input-field, the user's initial input of a symbol
      // like a minus sign will not be overwritten by an empty string value.
      // See description in PR for more details: https://github.com/salesforce-experience-platform/lightning-components/pull/3843
      if (this._inputElement.value.length === 1 && (0,_numberUtil__WEBPACK_IMPORTED_MODULE_22__.hasValidNumberSymbol)(this._inputElement.value)) {
        return this._inputElement.value;
      } // If the number is not valid (bad input, step mismatch, etc.) show the raw number as
      // well, otherwise the formatted value ends up being 'NaN' which makes it hard to
      // see mistakes


      if (this._showRawNumber || !this.validity.valid) {
        if ((0,_numberUtil__WEBPACK_IMPORTED_MODULE_22__.hasValidNumberShortcut)(this._numberRawValue) && (0,_numberUtil__WEBPACK_IMPORTED_MODULE_22__.isValidNumber)(this._numberRawValue)) {
          this._numberRawValue = (0,_numberUtil__WEBPACK_IMPORTED_MODULE_22__.fromIsoDecimal)(this._value);
        }

        return this._numberRawValue;
      }

      return (0,_numberUtil__WEBPACK_IMPORTED_MODULE_22__.formatNumber)(this._value, this._buildFormatNumberOptions(this.formatter));
    }

    if (this.isTypeMobileDate || this.isTypeMobileDateTime || this.isTypeMobileTime) {
      return this._normalizeDateTimeString(this._value);
    }

    return this._value;
  }
  /**
   * Gets the value for the actual 'type' attribute on the input element.
   */


  get _internalType() {
    // Maps number->text to support shorthand input strings like '1k'.
    if (this.isTypeNumber || this.isTypeEmail) {
      return 'text';
    }

    return this._type;
  }

  get isStandardVariant() {
    return this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_21__.VARIANT.STANDARD || this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_21__.VARIANT.LABEL_HIDDEN;
  }

  get _showClearButton() {
    return this.isTypeSearch && (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.isNotUndefinedOrNull)(this._value) && this._value !== '';
  }

  get _ignoreRequired() {
    // If uploading via the drop zone or via the input directly, we should
    // ignore the required flag as a file has been uploaded
    return this.isTypeFile && this._required && (this.fileUploadedViaDroppableZone || this._files && this._files.length > 0);
  }

  get _inputMode() {
    if (this.isTypeNumber) {
      return 'decimal';
    } else if (this.isTypeEmail) {
      return 'email';
    }

    return null;
  }

  get _constraint() {
    if (!this._constraintApi) {
      const overrides = {
        badInput: () => {
          if (!this._rendered) {
            return false;
          }

          if (this.isTypeNumber) {
            return !(0,_numberUtil__WEBPACK_IMPORTED_MODULE_22__.isValidNumber)(this._numberRawValue);
          }

          if (!this.isNativeInput) {
            return this._inputElement.hasBadInput();
          }

          return this._inputElement.validity.badInput;
        },
        tooLong: () => // since type=number is type=text in the dom when not in focus
        // we should always return false as maxlength doesn't apply
        this.isNativeInput && !this.isTypeNumber && this._rendered && this._inputElement.validity.tooLong,
        tooShort: () => // since type=number is type=text in the dom when not in focus
        // we should always return false as minlength doesn't apply
        this.isNativeInput && !this.isTypeNumber && this._rendered && this._inputElement.validity.tooShort,
        patternMismatch: () => this.isNativeInput && this._rendered && this._inputElement.validity.patternMismatch
      }; // International email support, note that the type="email" does not currently
      // support full unicode that 226+ now supports

      if (this.isTypeEmail) {
        overrides.typeMismatch = () => {
          if (this._multiple) {
            return !(0,_emailUtil__WEBPACK_IMPORTED_MODULE_23__.isValidMultipleEmails)(this.value);
          }

          return !(0,_emailUtil__WEBPACK_IMPORTED_MODULE_23__.isValidEmail)(this.value);
        };
      } // FF, IE and Safari don't support type datetime-local,
      // IE and Safari don't support type date or time
      // we need to defer to the base component to check rangeOverflow/rangeUnderflow.
      // Due to the custom override, changing the type to or from datetime/time would affect the validation


      if (this.isTypeDesktopDateTime || this.isTypeDesktopTime || this.isTypeDesktopDate) {
        overrides.rangeOverflow = () => {
          // input type='time' is timezone agnostic, so we should remove the timezone designator before comparison
          const max = this.isTypeDesktopTime ? (0,_dateTimeUtil__WEBPACK_IMPORTED_MODULE_19__.normalizeTime)(this.max) : this.max;
          return (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_20__.isAfter)(this.value, max);
        };

        overrides.rangeUnderflow = () => {
          // input type='time' is timezone agnostic, so we should remove the timezone designator before comparison
          const min = this.isTypeDesktopTime ? (0,_dateTimeUtil__WEBPACK_IMPORTED_MODULE_19__.normalizeTime)(this.min) : this.min;
          return (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_20__.isBefore)(this.value, min);
        };

        overrides.stepMismatch = () => false;
      }

      if (this.isIE11) {
        overrides.stepMismatch = () => false;
      }

      this._constraintApi = new lightning_inputUtils__WEBPACK_IMPORTED_MODULE_21__.FieldConstraintApiWithProxyInput(() => {
        // The date/time components display their own errors and have custom messages for badInput and rangeOverflow/Underflow.
        if (!this.isNativeInput) {
          return this._inputElement;
        }

        return this;
      }, overrides); // Buggy: This (or similar code) creates invalid DOM when attributes like 'step' are passed
      // directly along to the input element if the type doesn't allow those attributes.
      // For example: 'step' is allowed on type=number but not type=text.
      // See https://www.w3.org/TR/html52/sec-forms.html#apply for which attributes apply to which types.

      this._constraintApiProxyInputUpdater = this._constraintApi.setInputAttributes({
        type: () => this._inputTypeForValidity,
        // We need to normalize value so that it's consumable by the proxy input (otherwise the value
        // will be invalid for the native input)
        value: () => this._normalizeDateTimeString(this.value),
        checked: () => this.checked,
        maxlength: () => this.maxLength,
        minlength: () => this.minLength,
        // 'pattern' depends on type
        pattern: () => this.pattern,
        // 'max' and 'min' depend on type and timezone
        max: () => this.normalizedMax,
        min: () => this.normalizedMin,
        step: () => this.step,
        accept: () => this.accept,
        multiple: () => this.multiple,
        disabled: () => this.disabled,
        readonly: () => this.readOnly,
        // depends on type and whether an upload has been made
        required: () => this.required && !this._ignoreRequired
      });
    }

    return this._constraintApi;
  }

  get hasExternalLabel() {
    return this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_21__.VARIANT.LABEL_HIDDEN && this.ariaLabelledBy && this.ariaLabelledBy.length;
  }

  get helptextAlternativeText() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_15__.formatLabel)(i18n.helpTextAlternativeText, this.label);
  }

  handleFileClick() {
    this._setInputValue(null);

    this._updateValueAndValidityAttribute(null);
  }

  handleDropFiles(event) {
    // drop doesn't trigger focus nor blur, so set state to interacting
    // and auto leave when there's no more action
    this.interactingState.interacting();
    this.fileUploadedViaDroppableZone = true;
    this._files = event.dataTransfer && event.dataTransfer.files;

    this._updateProxyInputAttributes('required');

    this._dispatchChangeEventWithDetail({
      files: this._files
    });
  }
  /**
   * Handle text selection.
   * Dynamically bound to the select event by `renderedCallback`.
   * This allows us to cache text selection in Safari, which doesn't preserve selection.
   */


  handleSelect() {
    if (lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.isSafari) {
      this._selectionCache.preserve(this._inputElement);
    }
  }

  handleFocus() {
    this.interactingState.enter();

    if (this.isTypeColor) {
      this._isColorPickerPanelOpen = false;
    } // Focusing a number input causes the value displayed to be modified.
    // Changing the value resets selection, so we save and restore selection.


    if (this._rendered && this.isTypeNumber) {
      this._showRawNumber = true;

      this._selectionCache.preserve(this._inputElement);

      this._inputElement.value = this._displayedValue;

      this._selectionCache.restore(this._inputElement);
    }

    this.dispatchEvent(new CustomEvent('focus'));
  }

  handleBlur(event) {
    this.interactingState.leave();

    if (this._rendered && this.isTypeNumber) {
      this._showRawNumber = false;

      this._setInputValue(this._displayedValue);
    }

    if (!event.relatedTarget || !this.template.contains(event.relatedTarget)) {
      this.dispatchEvent(new CustomEvent('blur'));
    }
  }

  handleCheckboxClick() {
    if (this.template.activeElement === null) {
      this.template.querySelector("[type='checkbox']").focus();
    }
  }

  handleChange(event) {
    event.stopPropagation();

    this._dispatchCommitEvent();

    if (this.isTypeSimple && this.value === event.target.value) {
      return;
    }

    this._dispatchChangeEvent();
  }

  handleInput(event) {
    event.stopPropagation();

    if (this.isTypeNumber) {
      // for invalid numbers the value might stay the same as the user
      // changed the invalid input, so we need to update the raw value
      this._numberRawValue = this._inputElement.value;
    }

    if (this.isTypeSimple && this.value === event.target.value) {
      return;
    }

    this._dispatchChangeEvent();
  }

  handleKeyDown(event) {
    if (this.isTypeNumber) {
      // we're letting "Shift" through to prevent capital letters, other special symbols for type="number"
      const hasMetaOrCtrlModifier = event.metaKey || event.ctrlKey; // need to check that event.key is valid for "autofill" cases

      if (!hasMetaOrCtrlModifier && !this.readOnly && event.key) {
        const key = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.normalizeKeyValue)(event.key);

        if (key.length === 1 && !(0,_numberUtil__WEBPACK_IMPORTED_MODULE_22__.isValidNumberCharacter)(key)) {
          event.preventDefault();
        }

        if (key === 'ArrowUp') {
          event.preventDefault();

          this._numberStepUpAndDispatchEvents(1);
        } else if (key === 'ArrowDown') {
          event.preventDefault();

          this._numberStepUpAndDispatchEvents(-1);
        }
      }
    }
  }

  handleColorChange(event) {
    const selectedColor = event.detail.color;

    if (selectedColor !== this._inputElement.value) {
      this._setInputValue(selectedColor);

      this._updateValueAndValidityAttribute(selectedColor);

      this.focus();

      this._dispatchChangeEventWithDetail({
        value: selectedColor
      });

      this._dispatchCommitEvent();
    }

    this.template.querySelector('lightning-primitive-colorpicker-button').focus();
  }

  _clearAndSetFocusOnInput(event) {
    // TODO: Discuss this, it seems the wrong thing to do.
    // button is removed from template, but
    // event still is propagated, For example, captured by panel,
    // then cause panel think is clicked outside.
    event.stopPropagation();
    this.interactingState.enter();

    this._setInputValue('');

    this._updateValueAndValidityAttribute('');

    this._inputElement.focus();

    this._dispatchChangeEventWithDetail({
      value: this._value
    });

    this._dispatchCommitEvent();
  }

  _dispatchCommitEvent() {
    this.dispatchEvent(new CustomEvent('commit'));
  }

  _dispatchChangeEventWithDetail(detail) {
    this.dispatchEvent(new CustomEvent('change', {
      composed: true,
      bubbles: true,
      detail
    }));
  }

  _validateType(type) {
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.assert)(type !== 'hidden', `<lightning-input> The type attribute value "hidden" is invalid. Use a regular <input type="hidden"> instead.`);
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.assert)(type !== 'submit' && type !== 'reset' && type !== 'image' && type !== 'button', `<lightning-input> The type attribute value "${type}" is invalid. Use <lightning:button> instead.`);

    if (this.isTypeRadio) {
      (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.assert)(!this.required, `<lightning-input> The required attribute is not supported on radio inputs directly. It should be implemented at the radio group level.`);
    }
  }

  _validateRequiredAttributes() {
    const {
      label
    } = this;
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.assert)(typeof label === 'string' && label.length, `<lightning-input> The required label attribute value "${label}" is invalid.`);
  }

  _setInputValue(value) {
    if (this._inputDragonDecorated) {
      // The underlying input has been modified to dispatch an 'input' event when a direct value set
      // is used to allow for Dragon Natural Speaking (which sets the value directly on the inputs instead
      // dispatching an input event against the input). Since we're in a programatic set here (ie. set
      // not resulting from a direct user interaction) we want a default setter behaviour that doesn't
      // dispatch any events.
      (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.setDecoratedDragonInputValueWithoutEvent)(this._inputElement, value);
    } else {
      this._inputElement.value = value;
    }
  }

  _dispatchChangeEvent() {
    this.interactingState.enter();
    const detail = {};

    if (this.isTypeCheckable) {
      this._updateCheckedAndValidityAttribute(this._inputElement.checked);

      detail.checked = this._checked;
    } else if (this.isTypeFile) {
      this._files = this._inputElement.files; // LWC does not proxy dom elements any more. So there is no need to call lwc.unwrap here anymore

      detail.files = this._files;

      this._updateProxyInputAttributes('required');
    }

    if (!this.isTypeCheckable) {
      if (this.isTypeNumber) {
        this._numberRawValue = this._inputElement.value;
        detail.value = (0,_numberUtil__WEBPACK_IMPORTED_MODULE_22__.toIsoDecimal)(this._inputElement.value);
      } else {
        detail.value = this._inputElement.value;
      }

      if (this.isTypeMobileDateTime) {
        detail.value = (0,_dateTimeUtil__WEBPACK_IMPORTED_MODULE_19__.normalizeDateTimeToUTC)(detail.value, this.timezone);
      } else if (this.isTypeMobileTime) {
        detail.value = (0,_dateTimeUtil__WEBPACK_IMPORTED_MODULE_19__.normalizeTime)(detail.value);
      }

      this._updateValueAndValidityAttribute(detail.value);
    }

    this._dispatchChangeEventWithDetail(detail);
  }

  _isDesktopBrowser() {
    return _salesforce_client_formFactor__WEBPACK_IMPORTED_MODULE_14__.default === 'Large';
  }

  _updateValueAndValidityAttribute(value) {
    this._value = value;

    this._updateProxyInputAttributes('value');
  }

  _updateCheckedAndValidityAttribute(value) {
    this._checked = value;

    this._updateProxyInputAttributes('checked');

    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.reflectAttribute)(this, 'checked', this._checked);
  }

  _updateProxyInputAttributes(attributes) {
    if (this._constraintApiProxyInputUpdater) {
      this._constraintApiProxyInputUpdater(attributes);
    }
  }

  _updateInputDisplayValueIfTypeNumber() {
    // Displayed value depends on the format number, so if we're not showing the raw
    // number we should update the value
    if (this._rendered && this.isTypeNumber && !this._showRawNumber && this._inputElement) {
      this._setInputValue(this._displayedValue);
    }
  }
  /**
   * Increases (if increment is positive, decreases otherwise) the number value of the input by the increment
   * multiple of the given 'step'. Additionally dispatches the 'change' and 'commit' events.
   *
   * @param {Number} increment A multiple of the step to increase, when step is 'any',
   * the step is assumed to be 1.
   * @private
   */


  _numberStepUpAndDispatchEvents(increment) {
    if (this._readOnly || this._disabled) {
      return;
    }

    this._value = (0,_numberUtil__WEBPACK_IMPORTED_MODULE_22__.increaseNumberByStep)({
      value: this._value,
      step: this.step,
      increment,
      fractionDigits: this._buildFormatNumberOptions(this.formatter).minimumFractionDigits
    }); // Raw value is the value the user entered (we preserve a user's input),
    // since we're generating a new value we're overriding it

    this._numberRawValue = (0,_numberUtil__WEBPACK_IMPORTED_MODULE_22__.fromIsoDecimal)(this._value);

    this._setInputValue(this._displayedValue);

    this._dispatchChangeEvent();

    this._dispatchCommitEvent();
  }

  _updateClassList() {
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.classListMutation)(this.classList, {
      'slds-form-element_stacked': this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_21__.VARIANT.LABEL_STACKED,
      'slds-form-element_horizontal': this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_21__.VARIANT.LABEL_INLINE
    });
  }

  _updateNumberValue(value) {
    const newValue = (0,_numberUtil__WEBPACK_IMPORTED_MODULE_22__.stringifyNumber)(value);
    this._value = newValue;
    this._numberRawValue = (0,_numberUtil__WEBPACK_IMPORTED_MODULE_22__.fromIsoDecimal)(newValue);
  }

  _buildFormatNumberOptions(formatter) {
    const options = {
      style: formatter
    }; // Use the min/max fraction digits from the formatFractionDigits provided by the user if available.
    // Otherwise, use the number of digits calculated from step

    if (this._formatFractionDigits !== undefined) {
      options.minimumFractionDigits = this._formatFractionDigits;
      options.maximumFractionDigits = this._formatFractionDigits;
    } else {
      let digitsFromStep = (0,_numberUtil__WEBPACK_IMPORTED_MODULE_22__.calculateFractionDigitsFromStep)(this._step); // if formatting percentages, when calculating digits from step, take into
      // consideration that the formatted number is effectively multiplied by 10^2, ie. 0.1 is 10%
      // so we need to subtract 2 digits;

      if (formatter === 'percent' && typeof digitsFromStep === 'number') {
        digitsFromStep -= 2;

        if (digitsFromStep < 0) {
          digitsFromStep = 0;
        }
      }

      options.minimumFractionDigits = digitsFromStep;
      options.maximumFractionDigits = digitsFromStep;
    }

    return options;
  }

  _normalizeDateTimeString(value) {
    let result = value;

    if (this.isTypeDate) {
      result = (0,_dateTimeUtil__WEBPACK_IMPORTED_MODULE_19__.normalizeDate)(value);
    } else if (this.isTypeTime) {
      result = (0,_dateTimeUtil__WEBPACK_IMPORTED_MODULE_19__.normalizeTime)(value);
    } else if (this.isTypeDateTime) {
      result = (0,_dateTimeUtil__WEBPACK_IMPORTED_MODULE_19__.normalizeUTCDateTime)(value, this.timezone);
    }

    return result;
  }

  _updateInputA11y(elem) {
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.synchronizeAttrs)(elem, {
      [ARIA_LABELLEDBY]: this.computedAriaLabelledBy,
      [ARIA_DESCRIBEDBY]: this.computedAriaDescribedBy,
      [ARIA_LABEL]: this.computedAriaLabel
    });
  }

  _updateDateOrTimePickerA11y(elem) {
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.synchronizeAttrs)(elem, {
      ariaLabelledByElement: this.ariaLabelledBy,
      ariaDescribedByElements: this.ariaDescribedBy,
      ariaControlsElement: this.ariaControls,
      [ARIA_LABEL]: this.computedAriaLabel
    });
  }

  _updateDateTimePickerA11y(elem) {
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_16__.synchronizeAttrs)(elem, {
      // datepicker aria attributes
      dateAriaLabelledBy: this.dateAriaLabelledBy,
      dateAriaDescribedBy: this.dateAriaDescribedBy,
      dateAriaControls: this.dateAriaControls,
      dateAriaLabel: this.dateAriaLabel,
      // timepicker aria attributes
      timeAriaLabelledBy: this.timeAriaLabelledBy,
      timeAriaDescribedBy: this.timeAriaDescribedBy,
      timeAriaControls: this.timeAriaControls,
      timeAriaLabel: this.timeAriaLabel
    });
  }

  _synchronizeA11y() {
    // each of these templates are mutually exclusive and are selected
    // depending on the [type] of input.
    const input = this.template.querySelector('input');
    const datepicker = this.template.querySelector('lightning-datepicker');
    const timepicker = this.template.querySelector('lightning-timepicker');
    const datetimepicker = this.template.querySelector('lightning-datetimepicker'); // determine which template type is present,
    // and update a11y props accordingly

    if (input) {
      this._updateInputA11y(input);
    } else if (datepicker) {
      this._updateDateOrTimePickerA11y(datepicker);
    } else if (timepicker) {
      this._updateDateOrTimePickerA11y(timepicker);
    } else if (datetimepicker) {
      this._updateDateTimePickerA11y(datetimepicker);
    }
  }

}

LightningInput.delegatesFocus = true;

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningInput, {
  publicProps: {
    placeholder: {
      config: 0
    },
    name: {
      config: 0
    },
    label: {
      config: 0
    },
    messageWhenBadInput: {
      config: 0
    },
    messageWhenPatternMismatch: {
      config: 0
    },
    messageWhenRangeOverflow: {
      config: 0
    },
    messageWhenRangeUnderflow: {
      config: 0
    },
    messageWhenStepMismatch: {
      config: 0
    },
    messageWhenTooShort: {
      config: 0
    },
    messageWhenTooLong: {
      config: 0
    },
    messageWhenTypeMismatch: {
      config: 0
    },
    messageWhenValueMissing: {
      config: 0
    },
    messageToggleActive: {
      config: 0
    },
    messageToggleInactive: {
      config: 0
    },
    ariaLabel: {
      config: 0
    },
    autocomplete: {
      config: 0
    },
    dateStyle: {
      config: 0
    },
    timeStyle: {
      config: 0
    },
    dateAriaLabel: {
      config: 0
    },
    formatFractionDigits: {
      config: 3
    },
    timeAriaControls: {
      config: 3
    },
    dateAriaLabelledBy: {
      config: 3
    },
    timeAriaLabelledBy: {
      config: 3
    },
    timeAriaDescribedBy: {
      config: 3
    },
    dateAriaControls: {
      config: 3
    },
    dateAriaDescribedBy: {
      config: 3
    },
    ariaControls: {
      config: 3
    },
    ariaLabelledBy: {
      config: 3
    },
    ariaDescribedBy: {
      config: 3
    },
    ariaInvalid: {
      config: 3
    },
    ariaHasPopup: {
      config: 0
    },
    formatter: {
      config: 3
    },
    type: {
      config: 3
    },
    isLoading: {
      config: 3
    },
    pattern: {
      config: 3
    },
    maxLength: {
      config: 3
    },
    accept: {
      config: 3
    },
    minLength: {
      config: 3
    },
    max: {
      config: 3
    },
    min: {
      config: 3
    },
    step: {
      config: 3
    },
    checked: {
      config: 3
    },
    multiple: {
      config: 3
    },
    value: {
      config: 3
    },
    variant: {
      config: 3
    },
    disabled: {
      config: 3
    },
    readOnly: {
      config: 3
    },
    required: {
      config: 3
    },
    timezone: {
      config: 3
    },
    fieldLevelHelp: {
      config: 3
    },
    accessKey: {
      config: 3
    },
    files: {
      config: 1
    },
    validity: {
      config: 1
    },
    selectionStart: {
      config: 3
    },
    selectionEnd: {
      config: 3
    }
  },
  publicMethods: ["checkValidity", "setCustomValidity", "reportValidity", "showHelpMessageIfInvalid", "focus", "blur"],
  track: {
    _timeAriaDescribedBy: 1,
    _timeAriaLabelledBy: 1,
    _timeAriaControls: 1,
    _dateAriaControls: 1,
    _dateAriaDescribedBy: 1,
    _dateAriaLabelledBy: 1,
    _value: 1,
    _type: 1,
    _pattern: 1,
    _max: 1,
    _min: 1,
    _step: 1,
    _disabled: 1,
    _readOnly: 1,
    _required: 1,
    _checked: 1,
    _isLoading: 1,
    _multiple: 1,
    _timezone: 1,
    _helpMessage: 1,
    _isColorPickerPanelOpen: 1,
    _fieldLevelHelp: 1,
    _accesskey: 1,
    _maxLength: 1,
    _minLength: 1,
    _accept: 1,
    _variant: 1,
    _numberRawValue: 1,
    _ariaInvalid: 1
  },
  fields: ["_formatter", "_showRawNumber", "_initialValueSet", "_files", "_rendered", "_selectionCache"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningInput, {
  tmpl: _input_html__WEBPACK_IMPORTED_MODULE_1__.default
}));
LightningInput.interopMap = {
  exposeNativeEvent: {
    change: true,
    focus: true,
    blur: true
  }
};

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/input/normalize.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/input/normalize.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "normalizeInput": () => (/* binding */ normalizeInput)
/* harmony export */ });
function normalizeInput(value) {
  if (typeof value === 'number' || typeof value === 'string') {
    return String(value);
  }

  return '';
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/input/numberUtil.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/input/numberUtil.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toIsoDecimal": () => (/* binding */ toIsoDecimal),
/* harmony export */   "isValidNumber": () => (/* binding */ isValidNumber),
/* harmony export */   "fromIsoDecimal": () => (/* binding */ fromIsoDecimal),
/* harmony export */   "increaseNumberByStep": () => (/* binding */ increaseNumberByStep),
/* harmony export */   "calculateFractionDigitsFromStep": () => (/* binding */ calculateFractionDigitsFromStep),
/* harmony export */   "formatNumber": () => (/* binding */ formatNumber),
/* harmony export */   "transformLocalizedNumberToIsoDecimal": () => (/* binding */ transformLocalizedNumberToIsoDecimal),
/* harmony export */   "isValidNumberCharacter": () => (/* binding */ isValidNumberCharacter),
/* harmony export */   "stringifyNumber": () => (/* binding */ stringifyNumber),
/* harmony export */   "hasValidNumberSymbol": () => (/* binding */ hasValidNumberSymbol),
/* harmony export */   "hasValidNumberShortcut": () => (/* binding */ hasValidNumberShortcut),
/* harmony export */   "expandShortcuts": () => (/* binding */ expandShortcuts)
/* harmony export */ });
/* harmony import */ var _salesforce_i18n_number_groupingSeparator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @salesforce/i18n/number.groupingSeparator */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.groupingSeparator.js");
/* harmony import */ var _salesforce_i18n_number_decimalSeparator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @salesforce/i18n/number.decimalSeparator */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.decimalSeparator.js");
/* harmony import */ var lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/internationalizationLibrary */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/internationalizationLibrary.js");
/* harmony import */ var lightning_inputUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/inputUtils */ "./node_modules/lightning-base-components/src/lightning/inputUtils/inputUtils.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");





const VALID_NUMBER_CHARACTERS_EXPRESSION = new RegExp( // eslint-disable-next-line no-useless-escape
'^[-+0-9kKmMbBtTeE.,\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9' + '\u0966-\u096F\u09E6-\u09EF\u0A66-\u0A6F\u0AE6-\u0AEF' + '\u0B66-\u0B6F\u0BE6-\u0BEF\u0C66-\u0C6F\u0CE6-\u0CEF' + '\u0D66-\u0D6F\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9' + '\u0F20-\u0F29\u1040-\u1049\u1090-\u1099\u17E0-\u17E9' + '\u1810-\u1819\u1946-\u194F\u19D0-\u19D9\u1A80-\u1A89' + '\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49' + '\u1C50-\u1C59\uA620-\uA629\uA8D0-\uA8D9\uA900-\uA909' + '\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9' + ']$');
const SHORTCUT_FACTORS = {
  k: 3,
  m: 6,
  b: 9,
  t: 12
};
const SHORTCUTS = ['k', 'm', 'b', 't'];
const NUMBER_SYMBOLS = ['+', '-'];
function toIsoDecimal(numberAsString) {
  const result = transformLocalizedNumberToIsoDecimal(numberAsString);

  if (isNaN(result)) {
    return '';
  }

  return result;
}
function isValidNumber(numberAsString) {
  return !isNaN(transformLocalizedNumberToIsoDecimal(numberAsString));
}
function fromIsoDecimal(numberAsString) {
  return (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_2__.toLocalizedDigits)(numberAsString.replace('.', _salesforce_i18n_number_decimalSeparator__WEBPACK_IMPORTED_MODULE_1__.default));
} // TODO: Too many options, simplify

function increaseNumberByStep({
  value,
  increment,
  step,
  fractionDigits
}) {
  const startingValue = value === '' || value == null ? '0' : value;
  const stepAsFloat = parseFloat(step);
  let result;

  if (isNaN(stepAsFloat)) {
    result = parseFloat(startingValue) + increment;
  } else {
    // ideally we'd round the value to the closest correct step, so that if say the step is '2', and the
    // current value is '1' it would increment to '2' instead of '3', since the former would be the valid
    // number given the step constraint, however this would significantly complicate the code, keeping
    // it simple for now.
    const increaseBy = increment * stepAsFloat;
    result = parseFloat(startingValue) + increaseBy;
  }

  return result.toFixed(fractionDigits);
}
function calculateFractionDigitsFromStep(step) {
  let calculatedFractionDigits;

  if (step) {
    const stepAsString = String(step).toLowerCase();

    if (stepAsString !== 'any') {
      // lowering the case because we're checking for exponent format as well
      let fractionDigits = 0;

      if (stepAsString.indexOf('.') >= 0 && stepAsString.indexOf('e') < 0) {
        const fractionalPart = stepAsString.split('.')[1]; // we're parsing to account for cases where the step is
        // '1.0', or '1.000', etc.

        if (parseInt(fractionalPart, 10) > 0) {
          fractionDigits = fractionalPart.length;
        }
      } else if (stepAsString.indexOf('e-') > 0) {
        // exponent form eg. 1.5e-5
        const splitOnExponent = stepAsString.split('e-');
        const fractionalPart = splitOnExponent[0].split('.')[1];
        const exponentPart = splitOnExponent[1];
        const fractionalPartLength = fractionalPart ? fractionalPart.length : 0;
        fractionDigits = parseInt(exponentPart, 10) + fractionalPartLength;
      }

      calculatedFractionDigits = fractionDigits;
    }
  }

  return calculatedFractionDigits;
}
function formatNumber(numberAsString, options) {
  if ((0,lightning_inputUtils__WEBPACK_IMPORTED_MODULE_3__.isEmptyString)(numberAsString)) {
    return '';
  }

  let formattedValue = numberAsString;
  let inputValue = numberAsString; // set formatter style & default options

  const formatStyle = options.style;
  const formatOptions = {
    style: formatStyle
  };
  formatOptions.minimumFractionDigits = options.minimumFractionDigits;
  formatOptions.maximumFractionDigits = options.maximumFractionDigits;

  if (formatStyle === 'percent-fixed') {
    // percent-fixed just uses percent format and divides the value by 100
    // before passing to the library, this is to deal with the
    // fact that percentages in salesforce are 0-100, not 0-1
    formatOptions.style = 'percent';
    const inputValueAsString = inputValue.toString();
    const normalisedNumberInPercent = parseFloat(inputValue) / 100; // If the number contains fraction digits and is not in an exponent format

    if (inputValueAsString.indexOf('.') > 0 && inputValueAsString.indexOf('e') < 0) {
      // Depending on the input number, division by 100 may lead to rounding errors
      // (e.g 0.785 / 100 is 0.007850000000000001), so we need to round back
      // to the correct precision, that is - existing number of fractional digits
      // plus extra 2 for division by 100.
      inputValue = normalisedNumberInPercent.toFixed(inputValueAsString.split('.')[1].length + 2);
    } else {
      inputValue = normalisedNumberInPercent;
    }
  }

  try {
    formattedValue = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_2__.numberFormat)(formatOptions).format(inputValue) || '';
  } catch (ignore) {// ignore any errors
  }

  return formattedValue;
} // Exporting only to test, separators are only overridden in the tests

function transformLocalizedNumberToIsoDecimal(numberAsString, separators) {
  if (numberAsString == null || numberAsString.length === 0) {
    return '';
  }

  const decimalSymbol = separators ? separators.decimalSeparator : _salesforce_i18n_number_decimalSeparator__WEBPACK_IMPORTED_MODULE_1__.default;
  const groupingSymbol = separators ? separators.groupSeparator : _salesforce_i18n_number_groupingSeparator__WEBPACK_IMPORTED_MODULE_0__.default; // remove the grouping separator

  let result = numberAsString.split(groupingSymbol).join('');

  if (decimalSymbol !== '.') {
    // replace the local decimal separator with a
    result = result.replace(decimalSymbol, '.');
  }

  return expandShortcuts(addLeadingZeroIfNeeded((0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_2__.fromLocalizedDigits)(result)));
}
function isValidNumberCharacter(character) {
  return VALID_NUMBER_CHARACTERS_EXPRESSION.test(character);
}
/**
 * validate the string-typed number and return the number string
 * @param {String} value, number string to be validated
 * @returns a valid number in string-typed, otherwise, empty string
 */

function stringifyNumber(value) {
  const numericValue = typeof value === 'string' ? Number(value) : value;
  const normalizedNumber = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_4__.normalizeNumber)(numericValue);
  return normalizedNumber === undefined ? '' : String(value);
}
function hasValidNumberSymbol(value) {
  const validSymbols = NUMBER_SYMBOLS.join('');
  const matchSymbols = new RegExp(`[${validSymbols}]`);
  return value.match(matchSymbols) ? true : false;
}
function hasValidNumberShortcut(value) {
  const result = value.toLowerCase().trim();
  const kmb = SHORTCUTS.join(''); // Cannot have two shortcuts /([kmb])/g

  const matchShortcuts = new RegExp(`([${kmb}])`, 'g');
  const shortcutMatch = result.match(matchShortcuts);

  if (shortcutMatch && shortcutMatch.length > 1) {
    return false;
  } // Must end with 'm', 'k', 'b' and more than just a single letter


  const matchEndsWith = new RegExp(`[${kmb}]$`);
  const endsWithShortcut = result.match(matchEndsWith) !== null; // has 'm' / 'k' / 'b' and more than just them (ie. result of 'm' / 'k' / 'b' are not valid.

  return endsWithShortcut && result.length > 1;
} // Exported for testing only

function expandShortcuts(isoValue) {
  if (!hasValidNumberShortcut(isoValue)) {
    return isoValue;
  }

  let result = isoValue.toLowerCase().trim();
  const shortcut = result.charAt(result.length - 1); // remove the suffix

  result = result.substring(0, result.length - 1);

  if (isNaN(result)) {
    return isoValue;
  }

  const parts = result.split('.');
  let fractionDigits = 0;
  const hasDecimalPart = parts.length > 1;

  if (hasDecimalPart) {
    fractionDigits = parts[1].length;
  }

  const exponent = SHORTCUT_FACTORS[shortcut]; // since multiplication may result in loss of precision on javascript's part,
  // we're calculating here the number of fraction digits needed and formatting
  // the number at that

  const newFractionDigits = Math.max(0, fractionDigits - exponent);
  return parseFloat(result * Math.pow(10, exponent)).toFixed(newFractionDigits);
}

function addLeadingZeroIfNeeded(result) {
  // If the number starts with +. OR  -. OR . ; insert a 0 before the decimal separator.
  // eg. -.2 -> -0.2
  const decimalSeparatorLocation = result.indexOf('.');

  if (decimalSeparatorLocation === 0 || decimalSeparatorLocation === 1) {
    const firstCharacter = result.charAt(0);

    if (firstCharacter === '+' || firstCharacter === '-' || firstCharacter === '.') {
      result = result.substring(0, decimalSeparatorLocation) + '0' + result.substring(decimalSeparatorLocation);
    }
  }

  return result;
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/input/selection.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/input/selection.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InputSelectionCache": () => (/* binding */ InputSelectionCache)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");


/**
 * Purges the selection cache to the DOM.
 * @param input {HTMLInputElement}
 * @param cache {InputSelectionCache}
 */

function restoreCacheToInput(input, cache) {
  input.setSelectionRange(cache._selectionStartCached, cache._selectionEndCached);
  cache.clearCache();
}
/**
 * This class provides a way to cache text selection in input fields.
 */


class InputSelectionCache {
  constructor() {
    this._selectionStartCached = null;
    this._selectionEndCached = null;
  }

  /**
   * Updates the cached values.
   * @param {number} start The start of the selected range
   * @param {number} end The end of the selected range
   * @private
   */
  _cacheSelectionRange(start, end) {
    if (typeof start === 'number' && typeof end === 'number') {
      this._selectionStartCached = start;
      this._selectionEndCached = end;
    }
  }
  /**
   * Clears our cached selection.
   */


  clearCache() {
    this._selectionStartCached = null;
    this._selectionEndCached = null;
  }
  /**
   * True, if the DOM element has selection.
   * @param input {HTMLInputElement} The DOM element to operate on
   */


  hasSelection(input) {
    return input.selectionStart !== null && // If the start and end are the same, that's not selection, it's just the cursor position.
    input.selectionStart !== input.selectionEnd;
  }
  /**
   * True, if selection has been cached.
   */


  isCached() {
    return this._selectionStartCached !== null && this._selectionEndCached !== null;
  }
  /**
   * Cache the current text selection for this input field.
   * We ignore selection range of (0,0) because that indicates no selection and we don't want to restore it later.
   * @param input {HTMLInputElement} The DOM element to operate on
   */


  preserve(input) {
    if (!this.hasSelection(input) && this.isCached()) {
      // We already have cached selection but we're asking to preserve no selection,
      // so we must NOT overwrite our cache with no selection or we can't restore the previously selected text.
      // This happens if the browser doesn't preserve text selection automatically in the input.
      return;
    } // Only update cache if there is selection.


    if (this.hasSelection(input)) {
      this._cacheSelectionRange(input.selectionStart, input.selectionEnd);
    }
  }
  /**
   * Restore cached selection. This may happen async, so a promise is returned.
   * @param input {HTMLInputElement} The DOM element to operate on
   * @returns {Promise} A promise to be resolved when the selection is restored.
   *  If the cache was empty, the promise is resolved immediately as a no-op.
   */


  restore(input) {
    // Bail early if we don't have a cached selection.
    if (!this.isCached()) {
      return Promise.resolve();
    } // @W-7962838 - Safari has a browser bug where setting the selection on inputs
    // as you focus them keeps it from scrolling into view in certain conditions.
    // This can be worked around by setting the text selection in a new call stack immediately after the focus.
    // https://bugs.webkit.org/show_bug.cgi?id=217350


    if (lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_1__.isSafari) {
      return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_1__.timeout)(0).then(() => {
        // running async, so revalidate our inputs
        if (this.isCached() && input) {
          restoreCacheToInput(input, this);
        }
      });
    } // W-6176985: IE11 input when set value, will move cursor to beginning.
    // This fix is only for input type=number on IE11, and force the cursor to the end.


    if (lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_1__.isIE11) {
      const length = input.value.length;
      input.setSelectionRange(length, length);
      return Promise.resolve();
    }

    restoreCacheToInput(input, this);
    return Promise.resolve();
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(InputSelectionCache, {
  fields: ["_selectionStartCached", "_selectionEndCached"]
});

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/inputUtils/idGenerator.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/inputUtils/idGenerator.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "generateUniqueId": () => (/* binding */ generateUniqueId)
/* harmony export */ });
let idCounter = 0;
function generateUniqueId(prefix = 'input') {
  idCounter++;
  return `${prefix}-${idCounter}`;
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/inputUtils/inputUtils.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/inputUtils/inputUtils.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "generateUniqueId": () => (/* reexport safe */ _idGenerator__WEBPACK_IMPORTED_MODULE_0__.generateUniqueId),
/* harmony export */   "InteractingState": () => (/* reexport safe */ _interacting__WEBPACK_IMPORTED_MODULE_1__.InteractingState),
/* harmony export */   "debounce": () => (/* reexport safe */ _interacting__WEBPACK_IMPORTED_MODULE_1__.debounce),
/* harmony export */   "buildSyntheticValidity": () => (/* reexport safe */ _validity__WEBPACK_IMPORTED_MODULE_2__.buildSyntheticValidity),
/* harmony export */   "getErrorMessage": () => (/* reexport safe */ _validity__WEBPACK_IMPORTED_MODULE_2__.getErrorMessage),
/* harmony export */   "FieldConstraintApiWithProxyInput": () => (/* reexport safe */ _validity__WEBPACK_IMPORTED_MODULE_2__.FieldConstraintApiWithProxyInput),
/* harmony export */   "FieldConstraintApi": () => (/* reexport safe */ _validity__WEBPACK_IMPORTED_MODULE_2__.FieldConstraintApi),
/* harmony export */   "normalizeVariant": () => (/* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_3__.normalizeVariant),
/* harmony export */   "VARIANT": () => (/* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_3__.VARIANT),
/* harmony export */   "isEmptyString": () => (/* binding */ isEmptyString),
/* harmony export */   "isEmptyObject": () => (/* binding */ isEmptyObject)
/* harmony export */ });
/* harmony import */ var _idGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./idGenerator */ "./node_modules/lightning-base-components/src/lightning/inputUtils/idGenerator.js");
/* harmony import */ var _interacting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interacting */ "./node_modules/lightning-base-components/src/lightning/inputUtils/interacting.js");
/* harmony import */ var _validity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validity */ "./node_modules/lightning-base-components/src/lightning/inputUtils/validity.js");
/* harmony import */ var _normalize__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./normalize */ "./node_modules/lightning-base-components/src/lightning/inputUtils/normalize.js");




function isEmptyString(s) {
  return s === undefined || s === null || typeof s === 'string' && s.trim() === '';
}
function isEmptyObject(obj) {
  if (obj === undefined || obj === null || typeof obj !== 'object') {
    return false;
  } // eslint-disable-next-line guard-for-in


  for (const name in obj) {
    return false;
  }

  return true;
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/inputUtils/interacting.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/inputUtils/interacting.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InteractingState": () => (/* binding */ InteractingState),
/* harmony export */   "debounce": () => (/* binding */ debounce)
/* harmony export */ });
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");

/**
 Represents an object which keeps track of a user's interacting state.
 @constructor InteractingState
 @param {Object} options - The options object.
 @param {Object} [options.duration=2000] - The number of milliseconds of idle time to wait before exiting the interacting state.
 @param {Object} [options.debounceInteraction=false] - Whether to debounce interaction to ignore consecutive leave-enter interactions.
 **/

class InteractingState {
  constructor(options) {
    const duration = options && options.duration >= 0 ? options.duration : 2000;
    this.eventemitter = new lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this._interacting = false;
    this._debouncedLeave = debounce(this.leave.bind(this), duration);
    this._debounceInteraction = options && options.debounceInteraction;
    this._interactedRecently = false;

    if (this._debounceInteraction) {
      // debounce leave until a short time later
      this._debouncedEmitLeave = debounce(() => {
        if (!this._interacting) {
          this._interactedRecently = false;
          this.eventemitter.emit('leave');
        }
      }, 200); // debounce enter until left

      this._debouncedEmitEnter = () => {
        if (!this._interactedRecently) {
          this._interactedRecently = true;
          this.eventemitter.emit('enter');
        }
      };
    }
  }
  /**
   Checks whether or not we are in the interacting state.
   @method InteractingState#isInteracting
   @return {Boolean} - Whether or not we are interacting.
   **/


  isInteracting() {
    return this._interacting;
  }
  /**
   Enters the interacting state.
   @method InteractingState#enter
   @returns {void}
   **/


  enter() {
    if (!this._interacting) {
      this._interacting = true;

      if (this._debounceInteraction) {
        this._debouncedEmitEnter();
      } else {
        this.eventemitter.emit('enter');
      }
    }
  }
  /**
   Registers a handler to execute when we enter the interacting state.
   @method InteractingState#onenter
   @param {Function} handler - The callback function.
   **/


  onenter(handler) {
    this.eventemitter.on('enter', handler);
  }
  /**
   Leaves the interacting state.
   @method InteractingState#leave
   @returns {void}
   **/


  leave() {
    if (this._interacting) {
      this._interacting = false;

      if (this._debounceInteraction) {
        this._debouncedEmitLeave();
      } else {
        this.eventemitter.emit('leave');
      }
    }
  }
  /**
   Registers a handler to execute when we leave the interacting state.
   @method InteractingState#onleave
   @param {Function} handler - The callback function.
   **/


  onleave(handler) {
    this.eventemitter.on('leave', handler);
  }
  /**
   Signals the start of the transition into the interacting state and
   schedules a transition out of the interacting state after an idle
   duration. Calling this method multiple times will reset the timer.
   @method InteractingState#interacting
   @returns {void}
   **/


  interacting() {
    this.enter();

    this._debouncedLeave();
  }

}
/**
 Creates a debounced function that delays invoking `func` until after
 `delay` milliseconds have elapsed since the last time the debounced
 function was invoked.
 @function debounce
 @param {Function} func - The function to debounce
 @param {Number} delay - The number of milliseconds to delay
 @param {Object} options - The options object
 @param {Boolean} options.leading - Specify invoking on the leading edge of the timeout
 @return {Function} - debounced function
 **/

function debounce(func, delay, options) {
  const _options = options || {};

  let invokeLeading = _options.leading;
  let timer;
  return function debounced() {
    const args = Array.prototype.slice.apply(arguments);

    if (invokeLeading) {
      func.apply(this, args);
      invokeLeading = false;
    }

    clearTimeout(timer); // eslint-disable-next-line @lwc/lwc/no-async-operation

    timer = setTimeout(function () {
      func.apply(this, args);
      invokeLeading = _options.leading; // reset for next debounce sequence
    }, delay);
  };
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/inputUtils/normalize.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/inputUtils/normalize.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VARIANT": () => (/* binding */ VARIANT),
/* harmony export */   "normalizeVariant": () => (/* binding */ normalizeVariant)
/* harmony export */ });
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");

const VARIANT = {
  STANDARD: 'standard',
  LABEL_HIDDEN: 'label-hidden',
  LABEL_STACKED: 'label-stacked',
  LABEL_INLINE: 'label-inline'
};
/**
A variant normalization utility for attributes.
@param {Any} value - The value to normalize.
@return {Boolean} - The normalized value.
**/

function normalizeVariant(value) {
  return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__.normalizeString)(value, {
    fallbackValue: VARIANT.STANDARD,
    validValues: [VARIANT.STANDARD, VARIANT.LABEL_HIDDEN, VARIANT.LABEL_STACKED, VARIANT.LABEL_INLINE]
  });
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/inputUtils/validity.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/inputUtils/validity.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "buildSyntheticValidity": () => (/* binding */ buildSyntheticValidity),
/* harmony export */   "getErrorMessage": () => (/* binding */ getErrorMessage),
/* harmony export */   "FieldConstraintApi": () => (/* binding */ FieldConstraintApi),
/* harmony export */   "FieldConstraintApiWithProxyInput": () => (/* binding */ FieldConstraintApiWithProxyInput)
/* harmony export */ });
/* harmony import */ var _salesforce_label_LightningErrorMessage_validityBadInput__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @salesforce/label/LightningErrorMessage.validityBadInput */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityBadInput.js");
/* harmony import */ var _salesforce_label_LightningErrorMessage_validityPatternMismatch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @salesforce/label/LightningErrorMessage.validityPatternMismatch */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityPatternMismatch.js");
/* harmony import */ var _salesforce_label_LightningErrorMessage_validityRangeOverflow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/label/LightningErrorMessage.validityRangeOverflow */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityRangeOverflow.js");
/* harmony import */ var _salesforce_label_LightningErrorMessage_validityRangeUnderflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @salesforce/label/LightningErrorMessage.validityRangeUnderflow */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityRangeUnderflow.js");
/* harmony import */ var _salesforce_label_LightningErrorMessage_validityStepMismatch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @salesforce/label/LightningErrorMessage.validityStepMismatch */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityStepMismatch.js");
/* harmony import */ var _salesforce_label_LightningErrorMessage_validityTooLong__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @salesforce/label/LightningErrorMessage.validityTooLong */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityTooLong.js");
/* harmony import */ var _salesforce_label_LightningErrorMessage_validityTooShort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @salesforce/label/LightningErrorMessage.validityTooShort */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityTooShort.js");
/* harmony import */ var _salesforce_label_LightningErrorMessage_validityTypeMismatch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @salesforce/label/LightningErrorMessage.validityTypeMismatch */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityTypeMismatch.js");
/* harmony import */ var _salesforce_label_LightningErrorMessage_validityValueMissing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @salesforce/label/LightningErrorMessage.validityValueMissing */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityValueMissing.js");
/* harmony import */ var _salesforce_label_LightningErrorMessage_validitySelectAtleastOne__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @salesforce/label/LightningErrorMessage.validitySelectAtleastOne */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validitySelectAtleastOne.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");











const constraintsSortedByPriority = ['customError', 'badInput', 'patternMismatch', 'rangeOverflow', 'rangeUnderflow', 'stepMismatch', 'tooLong', 'tooShort', 'typeMismatch', 'valueMissing', 'selectAtleastOneValue'];
const defaultLabels = {
  badInput: _salesforce_label_LightningErrorMessage_validityBadInput__WEBPACK_IMPORTED_MODULE_0__.default,
  customError: _salesforce_label_LightningErrorMessage_validityBadInput__WEBPACK_IMPORTED_MODULE_0__.default,
  patternMismatch: _salesforce_label_LightningErrorMessage_validityPatternMismatch__WEBPACK_IMPORTED_MODULE_1__.default,
  rangeOverflow: _salesforce_label_LightningErrorMessage_validityRangeOverflow__WEBPACK_IMPORTED_MODULE_2__.default,
  rangeUnderflow: _salesforce_label_LightningErrorMessage_validityRangeUnderflow__WEBPACK_IMPORTED_MODULE_3__.default,
  stepMismatch: _salesforce_label_LightningErrorMessage_validityStepMismatch__WEBPACK_IMPORTED_MODULE_4__.default,
  tooLong: _salesforce_label_LightningErrorMessage_validityTooLong__WEBPACK_IMPORTED_MODULE_5__.default,
  tooShort: _salesforce_label_LightningErrorMessage_validityTooShort__WEBPACK_IMPORTED_MODULE_6__.default,
  typeMismatch: _salesforce_label_LightningErrorMessage_validityTypeMismatch__WEBPACK_IMPORTED_MODULE_7__.default,
  valueMissing: _salesforce_label_LightningErrorMessage_validityValueMissing__WEBPACK_IMPORTED_MODULE_8__.default,
  selectAtleastOneValue: _salesforce_label_LightningErrorMessage_validitySelectAtleastOne__WEBPACK_IMPORTED_MODULE_9__.default
};

function resolveBestMatch(validity) {
  let validityState;

  if (validity && validity.valid === false) {
    validityState = 'badInput';
    constraintsSortedByPriority.some(stateName => {
      if (validity[stateName] === true) {
        validityState = stateName;
        return true;
      }

      return false;
    });
  }

  return validityState;
}

function computeConstraint(valueProvider, constraint) {
  const provider = valueProvider[constraint];

  if (typeof provider === 'function') {
    return provider();
  }

  if (typeof provider === 'boolean') {
    return provider;
  }

  return false;
} // We're doing the below to avoid exposing the constraintsProvider in the ValidityState


function newValidityState(constraintsProvider) {
  class ValidityState {
    get valueMissing() {
      return computeConstraint(constraintsProvider, 'valueMissing');
    }

    get typeMismatch() {
      return computeConstraint(constraintsProvider, 'typeMismatch');
    }

    get patternMismatch() {
      return computeConstraint(constraintsProvider, 'patternMismatch');
    }

    get tooLong() {
      return computeConstraint(constraintsProvider, 'tooLong');
    }

    get tooShort() {
      return computeConstraint(constraintsProvider, 'tooShort');
    }

    get rangeUnderflow() {
      return computeConstraint(constraintsProvider, 'rangeUnderflow');
    }

    get rangeOverflow() {
      return computeConstraint(constraintsProvider, 'rangeOverflow');
    }

    get stepMismatch() {
      return computeConstraint(constraintsProvider, 'stepMismatch');
    }

    get customError() {
      return computeConstraint(constraintsProvider, 'customError');
    }

    get badInput() {
      return computeConstraint(constraintsProvider, 'badInput');
    }

    get selectAtleastOneValue() {
      return computeConstraint(constraintsProvider, 'validitySelectAtleastOneValue');
    }

    get valid() {
      return !(this.valueMissing || this.typeMismatch || this.patternMismatch || this.tooLong || this.tooShort || this.rangeUnderflow || this.rangeOverflow || this.stepMismatch || this.customError || this.badInput || this.selectAtleastOneValue);
    }

  }

  return new ValidityState();
}

function buildSyntheticValidity(constraintProvider) {
  return Object.freeze(newValidityState(constraintProvider));
}
function getErrorMessage(validity, labelMap) {
  const key = resolveBestMatch(validity);

  if (key) {
    return labelMap[key] ? labelMap[key] : defaultLabels[key];
  }

  return '';
}
class FieldConstraintApi {
  constructor(inputComponentProvider, constraintProviders) {
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.assert)(typeof inputComponentProvider === 'function');
    this._inputComponentProvider = inputComponentProvider;
    this._constraintsProvider = Object.assign({}, constraintProviders);

    if (!this._constraintsProvider.customError) {
      this._constraintsProvider.customError = () => typeof this._customValidityMessage === 'string' && this._customValidityMessage !== '';
    }
  }

  get validity() {
    if (!this._constraint) {
      this._constraint = buildSyntheticValidity(this._constraintsProvider);
    }

    return this._constraint;
  }

  checkValidity() {
    const isValid = this.validity.valid;

    if (!isValid) {
      if (this.inputComponent) {
        this.inputComponent.dispatchEvent(new CustomEvent('invalid', {
          cancellable: true
        }));
      }
    }

    return isValid;
  }

  reportValidity(callback) {
    const valid = this.checkValidity(); // the input might have been removed from the DOM by the time we query it

    if (this.inputComponent) {
      this.inputComponent.classList.toggle('slds-has-error', !valid);
      (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_10__.reflectAttribute)(this.inputComponent, 'invalid', !valid);

      if (callback) {
        callback(this.validationMessage);
      }
    }

    return valid;
  }

  setCustomValidity(message) {
    this._customValidityMessage = message;
  }

  get validationMessage() {
    return getErrorMessage(this.validity, {
      customError: this._customValidityMessage,
      badInput: this.inputComponent.messageWhenBadInput,
      patternMismatch: this.inputComponent.messageWhenPatternMismatch,
      rangeOverflow: this.inputComponent.messageWhenRangeOverflow,
      rangeUnderflow: this.inputComponent.messageWhenRangeUnderflow,
      stepMismatch: this.inputComponent.messageWhenStepMismatch,
      tooShort: this.inputComponent.messageWhenTooShort,
      tooLong: this.inputComponent.messageWhenTooLong,
      typeMismatch: this.inputComponent.messageWhenTypeMismatch,
      valueMissing: this.inputComponent.messageWhenValueMissing,
      selectAtleastOneValue: this.inputComponent.messageWhenValueMissing
    });
  }

  get inputComponent() {
    if (!this._inputComponentElement) {
      this._inputComponentElement = this._inputComponentProvider();
    }

    return this._inputComponentElement;
  }

}
class FieldConstraintApiWithProxyInput {
  constructor(inputComponent, overrides = {}, inputElementName = 'input') {
    this._inputComponent = inputComponent;
    this._overrides = overrides;
    this._proxyInput = document.createElement(inputElementName);
  }

  setInputAttributes(attributes) {
    this._attributes = attributes;

    this._attributeUpdater = attributeNames => {
      if (!attributes) {
        return;
      }

      if (typeof attributeNames === 'string') {
        this._setAttribute(attributeNames, attributes[attributeNames]());
      } else {
        attributeNames.forEach(attributeName => {
          this._setAttribute(attributeName, attributes[attributeName]());
        });
      }
    };

    return this._attributeUpdater;
  }

  get validity() {
    return this._constraintApi.validity;
  }

  checkValidity() {
    return this._constraintApi.checkValidity();
  }

  reportValidity(callback) {
    return this._constraintApi.reportValidity(callback);
  }

  setCustomValidity(message) {
    this._constraintApi.setCustomValidity(message);

    this._proxyInput.setCustomValidity(message);
  }

  get validationMessage() {
    return this._constraintApi.validationMessage;
  }

  _setAttribute(attributeName, value) {
    if (value !== null && value !== undefined && value !== false) {
      if (attributeName === 'value') {
        if (this._proxyInput.type === 'file') {
          // Can't set value on file
          return;
        }

        this._proxyInput.value = value;
      } else {
        this._proxyInput.setAttribute(attributeName, value);
      }
    } else {
      this._removeAttribute(attributeName);
    }
  }

  _removeAttribute(attributeName) {
    this._proxyInput.removeAttribute(attributeName);
  }

  get _constraintApi() {
    if (!this._privateConstraintApi) {
      this._updateAllAttributes();

      const computeConstraintWithProxyInput = constraintName => {
        const constraintOverride = this._overrides[constraintName];

        const isDisabledOrReadOnly = this._proxyInput.hasAttribute('disabled') || this._proxyInput.hasAttribute('readonly');

        if (typeof constraintOverride === 'function') {
          return !isDisabledOrReadOnly && constraintOverride();
        } // Firefox incorrectly computes rangeUnderflow for disabled and readonly inputs, so we're adding
        // a check here instead to always return false when the input has readonly or disabled attributes set


        return !isDisabledOrReadOnly && this._proxyInput.validity[constraintName];
      };

      const constraintsProvider = constraintsSortedByPriority.reduce((provider, constraint) => {
        provider[constraint] = computeConstraintWithProxyInput.bind(this, constraint);
        return provider;
      }, {});
      this._privateConstraintApi = new FieldConstraintApi(this._inputComponent, constraintsProvider);
    }

    return this._privateConstraintApi;
  }

  _updateAllAttributes() {
    if (this._attributes) {
      Object.entries(this._attributes).forEach(([key, valueFunction]) => {
        this._setAttribute(key, valueFunction());
      });
    }
  }

}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/address/AddressFormat.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/address/AddressFormat.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "address": () => (/* binding */ address)
/* harmony export */ });
// This is a library built from Globalization's repo
// https://git.soma.salesforce.com/Globalization/address.js
// For new versions, copy AddressFormat.js from node_modules/address.js/dist/AddressFormat.js
// And add "export { address };" at the end.

/* eslint-disable */
var data = {
  AE: {
    fmt: '%A%n%S%n%K',
    require: 'AS',
    input: 'ASK'
  },
  AL: {
    fmt: '%A%n%Z%n%C%n%K',
    require: 'AZC',
    input: 'AZCK'
  },
  EC: {
    _ref: 'AL'
  },
  MU: {
    _ref: 'AL'
  },
  OM: {
    _ref: 'AL'
  },
  AM: {
    fmt: '%A%n%Z%n%C%n%S%n%K',
    require: 'AZCS',
    input: 'AZK'
  },
  AR: {
    fmt: '%A%n%Z %C%n%S%n%K',
    require: 'AZCS',
    input: 'AZCSK'
  },
  CL: {
    _ref: 'AR'
  },
  CV: {
    _ref: 'AR'
  },
  MY: {
    _ref: 'AR'
  },
  UZ: {
    _ref: 'AR'
  },
  AT: {
    fmt: '%A%n%Z %C%n%K',
    require: 'AZC',
    input: 'AZCK'
  },
  BA: {
    _ref: 'AT'
  },
  BG: {
    _ref: 'AT'
  },
  CH: {
    _ref: 'AT'
  },
  DE: {
    _ref: 'AT'
  },
  DK: {
    _ref: 'AT'
  },
  DO: {
    _ref: 'AT'
  },
  DZ: {
    _ref: 'AT'
  },
  EE: {
    _ref: 'AT'
  },
  ET: {
    _ref: 'AT'
  },
  FR: {
    _ref: 'AT'
  },
  GE: {
    _ref: 'AT'
  },
  GR: {
    _ref: 'AT'
  },
  IL: {
    _ref: 'AT'
  },
  KW: {
    _ref: 'AT'
  },
  LA: {
    _ref: 'AT'
  },
  LR: {
    _ref: 'AT'
  },
  IS: {
    _ref: 'AT'
  },
  MA: {
    _ref: 'AT'
  },
  MG: {
    _ref: 'AT'
  },
  MK: {
    _ref: 'AT'
  },
  MZ: {
    _ref: 'AT'
  },
  NL: {
    _ref: 'AT'
  },
  NO: {
    _ref: 'AT'
  },
  PL: {
    _ref: 'AT'
  },
  PT: {
    _ref: 'AT'
  },
  PY: {
    _ref: 'AT'
  },
  RO: {
    _ref: 'AT'
  },
  RS: {
    _ref: 'AT'
  },
  SK: {
    _ref: 'AT'
  },
  TJ: {
    _ref: 'AT'
  },
  TN: {
    _ref: 'AT'
  },
  TZ: {
    _ref: 'AT'
  },
  WF: {
    _ref: 'AT'
  },
  AU: {
    fmt: '%A%n%C %S %Z%n%K',
    require: 'ACSZ',
    input: 'ACSZK'
  },
  CA: {
    _ref: 'AU'
  },
  AZ: {
    fmt: '%A%n%Z %C%n%K',
    require: 'AZC',
    input: 'AZCK'
  },
  AF: {
    fmt: '%A%n%C%n%Z%n%K',
    require: 'ACZ',
    input: 'ACZK'
  },
  FK: {
    _ref: 'AF'
  },
  GB: {
    fmt: '%A%n%C%n%S%n%Z%n%K',
    require: 'ACZ',
    input: 'ACSZK'
  },
  KE: {
    _ref: 'AF'
  },
  LK: {
    _ref: 'AF'
  },
  ZA: {
    _ref: 'AF'
  },
  SH: {
    _ref: 'AF'
  },
  SZ: {
    _ref: 'AF'
  },
  US: {
    fmt: '%A%n%C, %S %Z%n%K',
    require: 'ACSZ',
    input: 'ACSZK'
  },
  BB: {
    _ref: 'US'
  },
  BS: {
    _ref: 'US'
  },
  SO: {
    _ref: 'US'
  },
  ES: {
    fmt: '%A%n%Z %C %S%n%K',
    require: 'AZCS',
    input: 'AZCSK'
  },
  IT: {
    _ref: 'ES'
  },
  UY: {
    _ref: 'ES'
  },
  ID: {
    fmt: '%A%n%C%n%S %Z%n%K',
    require: 'ACSZ',
    input: 'ACSZK'
  },
  IE: {
    _ref: 'ID'
  },
  TH: {
    _ref: 'ID'
  },
  VN: {
    _ref: 'ID'
  },
  HU: {
    fmt: '%C%n%A%n%Z%n%K',
    require: 'CAZ',
    input: 'CAZK'
  },
  BH: {
    fmt: '%A%n%C %Z%n%K',
    require: 'ACZ',
    input: 'ACZK'
  },
  BM: {
    _ref: 'BH'
  },
  BN: {
    _ref: 'BH'
  },
  BT: {
    _ref: 'BH'
  },
  KH: {
    _ref: 'BH'
  },
  LB: {
    _ref: 'BH'
  },
  JO: {
    _ref: 'BH'
  },
  MT: {
    _ref: 'BH'
  },
  NP: {
    _ref: 'BH'
  },
  NZ: {
    _ref: 'BH'
  },
  SA: {
    _ref: 'BH'
  },
  BD: {
    fmt: '%A%n%C - %Z%n%K',
    require: 'ACZ',
    input: 'ACZK'
  },
  BR: {
    fmt: '%A%n%C-%S%n%Z%n%K',
    require: 'ACSZ',
    input: 'ACSZK'
  },
  CN: {
    fmt: '%K%n%S %C%n%A%n%Z',
    require: 'CAZ',
    input: 'KSCAZ'
  },
  HK: {
    fmt: '%K%S%C%n%A%n%Z',
    require: 'CA',
    input: 'KSCAZ'
  },
  CO: {
    fmt: '%A%n%C, %S, %Z%n%K',
    require: 'ACSZ',
    input: 'ACSZK'
  },
  CR: {
    fmt: '%A%n%S, %C%n%Z%n%K',
    require: 'ACSZ',
    input: 'ASCZK'
  },
  EG: {
    fmt: '%A%n%C%n%S%n%Z%n%K',
    require: 'ACSZ',
    input: 'ACSZK'
  },
  RU: {
    _ref: 'EG'
  },
  UA: {
    _ref: 'EG'
  },
  FI: {
    fmt: '%A%n%Z %C%n%K',
    require: 'AZC',
    input: 'AZCK'
  },
  GT: {
    fmt: '%A%n%Z-%C%n%K',
    require: 'AZC',
    input: 'AZCK'
  },
  HN: {
    fmt: '%A%n%C, %S%n%Z%n%K',
    require: 'ACSZ',
    input: 'ACSZK'
  },
  IQ: {
    _ref: 'HN'
  },
  HR: {
    fmt: '%A%n%Z %C%n%K',
    require: 'AZC',
    input: 'AZCK'
  },
  HT: {
    fmt: '%A%n%Z %C%n%K',
    require: 'AZC',
    input: 'AZCK'
  },
  IN: {
    fmt: '%A%n%C %Z%n%S%n%K',
    require: 'ACZS',
    input: 'ACZSK'
  },
  NG: {
    _ref: 'IN'
  },
  PE: {
    _ref: 'IN'
  },
  IR: {
    fmt: '%S%n%C%n%A%n%Z%n%K',
    require: 'SCAZ',
    input: 'SCAZK'
  },
  JM: {
    fmt: '%A%n%C%n%S%n%K',
    require: 'ACS',
    input: 'ACSK'
  },
  PA: {
    _ref: 'JM'
  },
  SC: {
    _ref: 'JM'
  },
  SR: {
    _ref: 'JM'
  },
  JP: {
    // Escape non-ASCII character. Aura component test cannot parse non-ASCII string properly.
    fmt: '%K%n' + String.fromCharCode(12306) + '%Z%n%S %C%n%A',
    require: 'ZCA',
    input: 'KZSCA'
  },
  EN_JP: {
    fmt: '%A%n%C %S%n%Z %K',
    require: 'ACSZ',
    input: 'ACSZK'
  },
  KG: {
    fmt: '%Z %C%n%A%n%S%n%K',
    require: 'ZCA',
    input: 'ZCAK'
  },
  KR: {
    fmt: '%S %C%n%A%n%Z%n%K',
    require: 'SCAZ',
    input: 'SCAZK'
  },
  KY: {
    fmt: '%A%n%S %Z%n%K',
    require: 'ASZ',
    input: 'ASZK'
  },
  KZ: {
    fmt: '%Z%n%S%n%C%n%A%n%K',
    require: 'ZSCA',
    input: 'ZSCAK'
  },
  LT: {
    fmt: '%A%n%Z %C%n%K',
    require: 'AZC',
    input: 'AZCK'
  },
  LV: {
    fmt: '%A%n%C, %Z%n%K',
    require: 'ACZ',
    input: 'ACZK'
  },
  MM: {
    _ref: 'LV'
  },
  MC: {
    fmt: '%A%n%Z %C%n%K',
    require: 'AZC',
    input: 'AZCK'
  },
  MD: {
    fmt: '%A%n%Z %C%n%K',
    require: 'AZC',
    input: 'AZCK'
  },
  MW: {
    fmt: '%A%n%C%n%K',
    require: 'AC',
    input: 'ACK'
  },
  MX: {
    fmt: '%A%n%Z %C, %S%n%K',
    require: 'AZCS',
    input: 'AZCSK'
  },
  NI: {
    fmt: '%A%n%Z%n%C, %S%n%K',
    require: 'AZCS',
    input: 'AZCSK'
  },
  PG: {
    fmt: '%A%n%C %Z %S%n%K',
    require: 'ACZS',
    input: 'ACZSK'
  },
  PH: {
    fmt: '%A, %C%n%Z %S%n%K',
    require: 'ACZS',
    input: 'ACZSK'
  },
  PK: {
    fmt: '%A%n%C-%Z%n%K',
    require: 'ACZ',
    input: 'ACZK'
  },
  PR: {
    fmt: '%A%n%C %Z%n%K',
    require: 'ACZ',
    input: 'ACZK'
  },
  SE: {
    fmt: '%A%n%Z %C%n%K',
    require: 'AZC',
    input: 'AZCK'
  },
  SG: {
    fmt: '%A%n%C %Z%n%S%n%K',
    require: 'AZ',
    input: 'AZK'
  },
  SI: {
    fmt: '%A%n%Z %C%n%K',
    require: 'AZC',
    input: 'AZCK'
  },
  SV: {
    fmt: '%A%n%Z-%C%n%S%n%K',
    require: 'AZCS',
    input: 'AZCSK'
  },
  TR: {
    fmt: '%A%n%Z %C/%S%n%K',
    require: 'AZC',
    input: 'AZCK'
  },
  TW: {
    fmt: '%K%n%Z%n%S %C%n%A',
    require: 'ZSCA',
    input: 'KZSCA'
  },
  VE: {
    fmt: '%A%n%C %Z, %S%n%K',
    require: 'ACZS',
    input: 'ACZSK'
  }
};
var languageCodeToCountry = {
  languageCode: {
    ar: 'AE',
    af: 'ZA',
    bg: 'BG',
    bn: 'BN',
    bs: 'BA',
    ca: 'ES',
    cs: 'CZ',
    cy: 'GB',
    da: 'DK',
    de: 'DE',
    el: 'GR',
    es: 'ES',
    et: 'ET',
    eu: 'ES',
    fi: 'FI',
    fr: 'FR',
    ga: 'IE',
    gu: 'IN',
    hi: 'IN',
    hr: 'HR',
    hu: 'HU',
    hy: 'HY',
    in: 'ID',
    is: 'IS',
    it: 'IT',
    iw: 'IL',
    ja: 'JP',
    ka: 'GE',
    kn: 'IN',
    ko: 'KR',
    lb: 'LU',
    lt: 'IT',
    lv: 'LV',
    mk: 'MK',
    ml: 'IN',
    mr: 'IN',
    ms: 'MY',
    mt: 'MT',
    nl: 'NL',
    no: 'NO',
    pl: 'PL',
    pt: 'PT',
    rm: 'DE',
    ro: 'RO',
    ru: 'RU',
    sh: 'BA',
    sk: 'SK',
    sl: 'SL',
    sq: 'SQ',
    sr: 'RS',
    sv: 'SE',
    sw: 'ZA',
    ta: 'IN',
    te: 'IN',
    th: 'TH',
    tl: 'PH',
    tr: 'TR',
    uk: 'UK',
    ur: 'IN',
    vi: 'VN',
    xh: 'ZA',
    zh: 'CN',
    zu: 'ZA'
  }
};
/**
 * Define address format patterns.
 */

var AddressFormatPattern = Object.freeze({
  /**
   *
   * N: Name (The formatting of names for this field is outside of the scope of the address elements.)
   * O: Organization
   * A: Address Lines (2 or 3 lines address)
   * D: District (Sub-locality): smaller than a city, and could be a neighborhood, suburb or dependent locality.
   * C: City (Locality)
   * S: State (Administrative Area)
   * K: Country
   * Z: ZIP Code / Postal Code
   * X: Sorting code, for example, CEDEX as used in France
   * n: newline
   */
  A: Symbol('Address Lines'),
  C: Symbol('City'),
  S: Symbol('State'),
  K: Symbol('Country'),
  Z: Symbol('Zip Code'),
  n: Symbol('New Line'),
  fromPlaceHolder: function fromPlaceHolder(placeHolder) {
    switch (placeHolder) {
      case 'A':
        return AddressFormatPattern.A;

      case 'C':
        return AddressFormatPattern.C;

      case 'S':
        return AddressFormatPattern.S;

      case 'K':
        return AddressFormatPattern.K;

      case 'Z':
        return AddressFormatPattern.Z;

      case 'n':
        return AddressFormatPattern.n;
    }

    return null;
  },
  getPlaceHolder: function getPlaceHolder(pattern) {
    switch (pattern) {
      case AddressFormatPattern.A:
        return 'A';

      case AddressFormatPattern.C:
        return 'C';

      case AddressFormatPattern.S:
        return 'S';

      case AddressFormatPattern.K:
        return 'K';

      case AddressFormatPattern.Z:
        return 'Z';

      case AddressFormatPattern.n:
        return 'n';
    }

    return null;
  },
  getData: function getData(pattern, data) {
    if (data) {
      switch (pattern) {
        case AddressFormatPattern.A:
          return data.address;

        case AddressFormatPattern.C:
          return data.city;

        case AddressFormatPattern.S:
          return data.state;

        case AddressFormatPattern.K:
          return data.country;

        case AddressFormatPattern.Z:
          return data.zipCode;

        case AddressFormatPattern.n:
          return data.newLine;
      }
    }

    return null;
  }
});

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError('Cannot call a class as a function');
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ('value' in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
/**
 * Address token types enum
 *
 * @private
 */


var AddressTokenTypes = Object.freeze({
  DATA: Symbol('data'),
  STRING: Symbol('string'),
  NEWLINE: Symbol('newline'),
  GROUP: Symbol('group')
});
/**
 * AddressToken class
 *
 * @private
 */

var AddressToken = function () {
  /**
   *
   * @param {AddressTokenTypes} type
   * @param {string} string
   * @param {*} pattern
   */
  function AddressToken(type, string, pattern) {
    classCallCheck(this, AddressToken);
    this.type = type;
    this.string = string;
    this.pattern = pattern;
  }
  /**
   * Construct a string type token
   *
   * @param {string} string String
   * @return {AddressToken} Address Token
   */


  createClass(AddressToken, null, [{
    key: 'string',
    value: function string(_string) {
      return new AddressToken(AddressTokenTypes.STRING, _string);
    }
    /**
     * Construct a data type token
     *
     * @param {pattern} pattern Address Format Pattern
     * @return {AddressToken} Address Token
     */

  }, {
    key: 'data',
    value: function data(pattern) {
      return new AddressToken(AddressTokenTypes.DATA, undefined, pattern);
    }
    /**
     * Construct a new line type token
     *
     * @return {AddressToken} Address Token
     */

  }, {
    key: 'newLine',
    value: function newLine() {
      return new AddressToken(AddressTokenTypes.NEWLINE);
    }
  }]);
  return AddressToken;
}();
/**
 * TokenizerState class
 *
 * @private
 */


var TokenizerState =
/**
 * Constructor
 *
 * @param {string} pattern
 * @param {int} start
 */
function TokenizerState(pattern, start) {
  classCallCheck(this, TokenizerState);
  this.pattern = pattern;
  this.start = start;
};
/**
 * Tokenize string pattern to AddressToken array
 *
 * @param {TokenizerState} state
 * @param {AddressToken[]} tokens
 * @return {TokenizerState} Tokenizer state
 *
 * @private
 */


function tokenize(state, tokens) {
  var nextIndex = state.start;

  if (state.pattern) {
    var len = state.pattern.length;

    while (state.start < len) {
      nextIndex = state.pattern.indexOf('%', nextIndex);

      if (nextIndex >= 0 && nextIndex + 1 < len) {
        var placeHolder = state.pattern.substring(nextIndex + 1, nextIndex + 2);

        switch (placeHolder) {
          case 'n':
            {
              if (nextIndex - state.start > 0) {
                tokens.push(AddressToken.string(state.pattern.substring(state.start, nextIndex)));
              }

              tokens.push(AddressToken.newLine());
              state.start = nextIndex + 2;
              nextIndex = state.start;
              break;
            }

          default:
            {
              var p = AddressFormatPattern.fromPlaceHolder(placeHolder);

              if (p) {
                if (nextIndex - state.start > 0) {
                  tokens.push(AddressToken.string(state.pattern.substring(state.start, nextIndex)));
                }

                tokens.push(AddressToken.data(p));
                state.start = nextIndex + 2;
                nextIndex = state.start;
              } else {
                state.start = nextIndex + 2;
                nextIndex = state.start;
              }

              break;
            }
        }
      } else {
        if (state.start < len) {
          tokens.push(AddressToken.string(state.pattern.substring(state.start)));
        }

        state.start = len;
      }
    }
  }

  return state;
}
/**
 * Format line from tokens
 *
 * @param {*} tokens
 * @param {*} data
 * @param {*} ignoreEmptyLines
 * @param {*} firstIndex
 * @param {*} lastIndex
 * @return {string} Formatted line
 *
 * @private
 */


function formatLineTokens(tokens, data, ignoreEmptyLines, firstIndex, lastIndex) {
  var parts = [];

  for (var index = firstIndex; index <= lastIndex; index++) {
    var token = tokens[index];

    if (!token) {
      continue;
    } else if (token.type == AddressTokenTypes.DATA) {
      // Consume all subsequent data if available
      var dataBuffer = '';
      var lastDataIndex = index;

      for (var dataIndex = index; dataIndex <= lastIndex; dataIndex++) {
        var dataToken = tokens[dataIndex];

        if (!dataToken || dataToken.type != AddressTokenTypes.DATA) {
          break;
        }

        var fieldData = AddressFormatPattern.getData(dataToken.pattern, data);

        if (fieldData) {
          dataBuffer += fieldData;
          lastDataIndex = dataIndex;
        }
      }

      var hasData = dataBuffer && dataBuffer.length > 0; // Output previous string only if there is data before it,
      // or if it is the first on the line

      var hasPreviousData = false;

      if (index - 1 >= firstIndex) {
        var stringToken = tokens[index - 1];

        if (stringToken && stringToken.type == AddressTokenTypes.STRING && stringToken.string) {
          for (var prevIndex = index - 2; prevIndex >= firstIndex; prevIndex--) {
            var prevToken = tokens[prevIndex];

            if (prevToken && prevToken.type == AddressTokenTypes.DATA) {
              var _fieldData = AddressFormatPattern.getData(prevToken.pattern, data);

              if (_fieldData) {
                hasPreviousData = true;
                break;
              }
            } else if (prevToken && prevToken.type == AddressTokenTypes.STRING) {
              // ie. for "%C, %S %Z" without S -> "City, 95100"
              // Comment this if we want "City 95100" instead
              // (use the separator between S Z instead of C S)
              stringToken = prevToken;
            }
          }

          if (!ignoreEmptyLines || hasPreviousData && hasData || index - 1 == firstIndex && hasData) {
            parts.push(stringToken.string);
          }
        }
      }

      if (hasData) {
        parts.push(dataBuffer);
      }

      index = lastDataIndex; // Output next string only if it is the last
      // and there is previous data before it

      if (index + 1 == lastIndex) {
        var _stringToken = tokens[index + 1];

        if (_stringToken && _stringToken.type == AddressTokenTypes.STRING && _stringToken.string) {
          if (!ignoreEmptyLines || hasData || hasPreviousData) {
            parts.push(_stringToken.string);
          }
        } // Consume the last string token


        index = index + 1;
      }
    } else {// We should not get here
    }
  }

  return parts.join('').trim();
}
/**
 * Tokenize address format pattern.
 *
 * @param {AddressToken[]} tokens
 * @param {*} data
 * @param {string} lineBreak
 * @param {boolean} ignoreEmptyLines
 * @return {string} Formatted Address
 *
 * @private
 */


function formatTokens(tokens, data, lineBreak, ignoreEmptyLines) {
  var lines = [];
  var lineIndex = -1;

  for (var index = 0; index < tokens.length; index++) {
    var doFormat = false;
    var endWithNewLine = false;
    var token = tokens[index];

    switch (token.type) {
      case AddressTokenTypes.NEWLINE:
        {
          if (lineIndex >= 0) {
            doFormat = true;
            endWithNewLine = true;
          } else if (!ignoreEmptyLines) {
            lines.push(''); // Empty line
            // If the pattern ends with a newline

            if (index + 1 == tokens.length) {
              lines.push(''); // Empty line
            }
          }

          break;
        }

      default:
        {
          lineIndex = lineIndex < 0 ? index : lineIndex;
          doFormat = index + 1 == tokens.length ? true : doFormat;
          break;
        }
    }

    if (doFormat) {
      var line = formatLineTokens(tokens, data, ignoreEmptyLines, lineIndex, endWithNewLine ? index - 1 : index);

      if (!ignoreEmptyLines || line) {
        lines.push(line);
      } // If line ends with a newline, and it is the last line on pattern


      if (!ignoreEmptyLines && endWithNewLine && index + 1 == tokens.length) {
        lines.push('');
      }

      lineIndex = -1;
    }
  }

  return lines.join(lineBreak);
}
/**
 * Format address data.
 *
 * @param {*} data Address data being processed.
 * @param {string} pattern Address format pattern.
 * @param {string} lineBreak Line break string to use
 * @param {boolean} ignoreEmptyLines Ignore lines that has no or empty data to replace.
 * @return {string} Formatted address.
 */


function format(data, pattern, lineBreak, ignoreEmptyLines) {
  // TODO: support escapeHtml to match Java class feature parity
  ignoreEmptyLines = ignoreEmptyLines === false ? false : true; // Defaults to false

  lineBreak = lineBreak || '\n'; // Defaults to <br/> or lf

  var tokens = [];
  tokenize(new TokenizerState(pattern, 0), tokens);
  return formatTokens(tokens, data, lineBreak, ignoreEmptyLines);
}

var addressFormatter = {
  format: format
};
var CJK_COUNTRIES = ['CN', 'HK', 'TW', 'JP', 'KR', 'KP'];
var CJK_LANGUAGES = ['zh', 'ja', 'ko'];
var address = {
  /**
   * Gets the globalization for the specified country code.
   * A: Address Lines (2 or 3 lines address)
   * C: City (Locality)
   * S: State (Administrative Area)
   * K: Country
   * Z: ZIP Code / Postal Code
   * n: newline
   *
   * @param {string} langCode Language Code
   * @param {string} countryCode Country Code
   * @return {{fmt: string, input: string, require: string}} Format Data
   */
  getAddressInfoForCountry: function getAddressInfoForCountry(langCode, countryCode) {
    var code = this.getCountryFromLocale(langCode, countryCode);

    if (data[code]) {
      // Double check.
      var cloneAddressRep = Object.freeze(Object.assign({}, data[code]));
      return Object.freeze({
        address: cloneAddressRep
      });
    }

    return {};
  },

  /**
   * Get the format pattern.
   * A: Address Lines (2 or 3 lines address)
   * C: City (Locality)
   * S: State (Administrative Area)
   * K: Country
   * Z: ZIP Code / Postal Code
   * n: newline
   *
   * @param {string} langCode Language Code
   * @param {string} countryCode Country Code
   * @return {string} Address Format Pattern
   */
  getAddressFormat: function getAddressFormat(langCode, countryCode) {
    var code = this.getCountryFromLocale(langCode, countryCode);

    if (data[code]) {
      // Double check.
      return data[code].fmt;
    }

    return '';
  },

  /**
   * Get the input order pattern.
   * A: Address Lines (2 or 3 lines address)
   * C: City (Locality)
   * S: State (Administrative Area)
   * K: Country
   * Z: ZIP Code / Postal Code
   * n: newline
   *
   * @param {string} langCode Language Code
   * @param {string} countryCode Country Code
   * @return {string} Input Order
   */
  getAddressInputOrder: function getAddressInputOrder(langCode, countryCode) {
    // A special case to deal with en_HK locale. We want to use US like
    // format for en_HK.
    // See W-4718344
    if (langCode && langCode.toLowerCase() == 'en' && countryCode && countryCode.toUpperCase() == 'HK') {
      langCode = 'en';
      countryCode = 'US';
    }

    var code = this.getCountryFromLocale(langCode, countryCode);

    if (data[code]) {
      // Double check.
      return data[code].input;
    }

    return '';
  },

  /**
   * Get the input order pattern for all fields.
   * A: Address Lines (2 or 3 lines address)
   * C: City (Locality)
   * S: State (Administrative Area)
   * K: Country
   * Z: ZIP Code / Postal Code
   * n: newline
   *
   * @param {string} langCode Language Code
   * @param {string} countryCode Country Code
   * @return {string} Input Order
   */
  getAddressInputOrderAllField: function getAddressInputOrderAllField(langCode, countryCode) {
    // A special case to deal with en_HK locale. We want to use US like
    // format for en_HK.
    // See W-4718344
    if (langCode && langCode.toLowerCase() == 'en' && countryCode && countryCode.toUpperCase() == 'HK') {
      langCode = 'en';
      countryCode = 'US';
    }

    var code = this.getCountryFromLocale(langCode, countryCode);

    if (data[code]) {
      // Double check.
      var input = data[code].input; // Add missing patterns.

      if (input.indexOf('S') === -1) {
        input = input.replace('K', 'SK');
      }

      if (input.indexOf('C') === -1) {
        input = input.replace('S', 'CS');
      }

      if (input.indexOf('Z') === -1) {
        input = input.replace('C', 'ZC');
      }

      return input;
    }

    return '';
  },

  /**
   * Get required fields.
   * A: Address Lines (2 or 3 lines address)
   * C: City (Locality)
   * S: State (Administrative Area)
   * K: Country
   * Z: ZIP Code / Postal Code
   * n: newline
   *
   * @param {string} langCode Language Code
   * @param {string} countryCode Country Code
   * @return {string} Required Fields
   */
  getAddressRequireFields: function getAddressRequireFields(langCode, countryCode) {
    var code = this.getCountryFromLocale(langCode, countryCode);

    if (data[code]) {
      // Double check.
      return data[code].require;
    }

    return '';
  },

  /**
   * Format a address values for given language code and country code with specified line break.
   *
   * @param {string} langCode Language Code
   * @param {string} countryCode Country Code
   * @param {{address: string, country: string, city: string, state: string, zipCode: string}} values Actual Address Data
   * @param {string} lineBreak Line Break
   * @return {string} Formatted Address
   */
  formatAddressAllFields: function formatAddressAllFields(langCode, countryCode, values, lineBreak) {
    var code = this.getCountryFromLocale(langCode, countryCode, values);

    if (data[code]) {
      // Double check.
      var pattern = data[code].fmt; // Some countries don't have City, State or ZIP code. We don't want to
      // lose those data from formatted string.

      if (values.zipCode && pattern.indexOf('%Z') === -1) {
        pattern = pattern.replace('%K', '%Z %K');
      }

      if (values.city && pattern.indexOf('%C') === -1) {
        pattern = pattern.replace('%K', '%C %K');
      }

      if (values.state && pattern.indexOf('%S') === -1) {
        pattern = pattern.replace('%K', '%S %K');
      }

      return this.buildAddressLines(pattern, values, lineBreak, true);
    }

    return '';
  },

  /**
   * Format a address values for given language code and country code with specified line break.
   *
   * @param {string} langCode Language Code
   * @param {string} countryCode Country Code
   * @param {{address: string, country: string, city: string, state: string, zipCode: string}} values Actual Address Data
   * @param {string} lineBreak Line Break
   * @return {string} Formatted Address
   */
  formatAddress: function formatAddress(langCode, countryCode, values, lineBreak) {
    var code = this.getCountryFromLocale(langCode, countryCode, values);

    if (data[code]) {
      // Double check.
      return this.buildAddressLines(data[code].fmt, values, lineBreak, true);
    }

    return '';
  },

  /**
   * Creates an array of address lines given the format and the values to use.
   *
   * @param {string} pattern
   * @param {{address: string, country: string, city: string, state: string, zipCode: string}} values
   * @param {string} lineBreak
   * @param {string} ignoreEmptyLines
   * @return {string} the text for use in the address
   */
  buildAddressLines: function buildAddressLines(pattern, values, lineBreak, ignoreEmptyLines) {
    return addressFormatter.format(values, pattern, lineBreak, ignoreEmptyLines);
  },

  /**
   * Resolve the reference by tracing down the _ref value.
   * @param {*} data Address Format Data
   * @param {string} countryCode Country Code
   * @return {*} Referenced Address Format Data
   */
  followReferences: function followReferences(data$$1, countryCode) {
    if (data$$1[countryCode] && data$$1[countryCode]._ref) {
      return this.followReferences(data$$1, data$$1[countryCode]._ref);
    }

    return countryCode;
  },

  /**
   * Check strings for Han characters
   *
   * @param {...string} values String values to check against
   * @return {boolean} true if any of string values contain Han script character
   */
  containsHanScript: function containsHanScript() {
    for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {
      values[_key] = arguments[_key];
    }

    if (!values || !Array.isArray(values)) return false;
    return values.some(function (value) {
      if (!value) return false; // Javascript regex do not work with surrogate pairs so String#match is unusable with supplemental ranges.
      // Iterating a string returns a char that contains one codepoint.
      // Surrogate pairs will be returned as a pair.
      // Unicode block ranges: @see http://www.unicode.org/Public/UCD/latest/ucd/Blocks.txt

      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = value[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var singleChar = _step.value;
          var codePoint = singleChar.codePointAt(0); // Thank you ES2015

          if (0x2e80 <= codePoint && codePoint <= 0x2eff || // CJK Radicals Supplement
          0x3300 <= codePoint && codePoint <= 0x33ff || // CJK Compatibility
          0xfe30 <= codePoint && codePoint <= 0xfe4f || // CJK Compatibility Forms
          0xf900 <= codePoint && codePoint <= 0xfaff || // CJK Compatibility Ideographs
          0x2f800 <= codePoint && codePoint <= 0x2fa1f || // CJK Compatibility Ideographs Supplement
          0x3000 <= codePoint && codePoint <= 0x303f || // CJK Symbols and Punctuation
          0x4e00 <= codePoint && codePoint <= 0x9fff || // CJK Unified Ideographs
          0x3400 <= codePoint && codePoint <= 0x4dbf || // CJK Unified Ideographs Extension A
          0x20000 <= codePoint && codePoint <= 0x2a6df || // CJK Unified Ideographs Extension B
          0x2a700 <= codePoint && codePoint <= 0x2b73f || // CJK Unified Ideographs Extension C
          0x2b740 <= codePoint && codePoint <= 0x2b81f || // CJK Unified Ideographs Extension D
          0x2b820 <= codePoint && codePoint <= 0x2ceaf || // CJK Unified Ideographs Extension E // Not on core
          0x2ceb0 <= codePoint && codePoint <= 0x2ebef || // CJK Unified Ideographs Extension F // Not on core
          0x3200 <= codePoint && codePoint <= 0x32ff || // Enclosed CJK Letters and Months
          0x31c0 <= codePoint && codePoint <= 0x31ef || // CJK Strokes
          // Chinese
          0x3100 <= codePoint && codePoint <= 0x312f || // Bopomofo
          0x31a0 <= codePoint && codePoint <= 0x31bf || // Bopomofo Extended
          0x2f00 <= codePoint && codePoint <= 0x2fdf || // Kangxi Radicals
          0x2ff0 <= codePoint && codePoint <= 0x2fff || // Ideographic Description Characters
          // Japanese
          0xff00 <= codePoint && codePoint <= 0xffef || // Halfwidth and Fullwidth Forms
          0x3040 <= codePoint && codePoint <= 0x309f || // Hiragana
          0x30a0 <= codePoint && codePoint <= 0x30ff || // Katakana
          0x31f0 <= codePoint && codePoint <= 0x31ff || // Katakana Phonetic Extensions
          0x1b000 <= codePoint && codePoint <= 0x1b0ff || // Kana Supplement
          0x1b100 <= codePoint && codePoint <= 0x1b12f || // Kana Extended-A // Not on core
          // Korean
          0x1100 <= codePoint && codePoint <= 0x11ff || // Hangul Jamo
          0xac00 <= codePoint && codePoint <= 0xd7af || // Hangul Syllables
          0x3130 <= codePoint && codePoint <= 0x318f || // Hangul Compatibility Jamo
          0xa960 <= codePoint && codePoint <= 0xa97f || // Hangul Jamo Extended-A
          0xd7b0 <= codePoint && codePoint <= 0xd7ff // Hangul Jamo Extended-B
          ) {
            return true;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return false;
    });
  },

  /**
   * Returns the address code (country code) for given locale and data.
   *
   * @param {string} langCode Language Code
   * @param {string} countryCode Country Code
   * @param {*} values Address Data
   * @return {string} Address Code
   */
  getCountryFromLocale: function getCountryFromLocale(langCode, countryCode, values) {
    if (values) {
      var isCJK = !countryCode && CJK_LANGUAGES.indexOf(langCode.toLowerCase()) >= 0 || countryCode && CJK_COUNTRIES.indexOf(countryCode.toUpperCase()) >= 0;
      var isJA = !countryCode && 'ja' == langCode.toLowerCase() || countryCode && 'JP' == countryCode.toUpperCase(); // English format (ja_en_JP) is only used when all fields do not contain CJK characters

      if (!(isJA && this.containsHanScript(values.address, values.city, values.state, values.country)) && isCJK && !this.containsHanScript(values.address)) {
        return this.getCountryFromLocale(langCode, 'EN_' + countryCode);
      }
    }

    var country = countryCode; // Address format should be always associated to a COUNTRY.
    // If country part is empty, we need to map language to a
    // certain country. For example, "de" -> "DE".

    if (!countryCode && languageCodeToCountry.languageCode[langCode]) {
      country = languageCodeToCountry.languageCode[langCode];
    } // Trace the real data from country reference.


    country = this.followReferences(data, country);

    if (!country || !data[country]) {
      return 'US'; // Always fall back to US format.
    }

    return country;
  },

  /**
   * Get fall back country code.
   *
   * @param {string} langCode Language Code
   * @param {string} countryCode Country Code
   * @param {*} address Address Data
   * @return {string} Address Code
   *
   * @deprecated Use getCountryFromLocale instead
   */
  getFallback: function getFallback(langCode, countryCode, address) {
    return this.getCountryFromLocale(langCode, countryCode);
  }
};


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/dateTimeOptions.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/dateTimeOptions.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getSkeleton": () => (/* binding */ getSkeleton)
/* harmony export */ });
// TODO: remove file when migrating off aura
const FORMAT_MAP = {
  weekday: {
    short: 'EEE, ',
    narrow: 'EEE, ',
    long: 'EEEE, '
  },
  month: {
    short: 'MMM ',
    narrow: 'MMM ',
    numeric: 'MMM ',
    '2-digit': 'MMM ',
    long: 'MMMM '
  },
  day: {
    numeric: 'd, ',
    '2-digit': 'dd, '
  },
  year: {
    numeric: 'yyyy ',
    '2-digit': 'yy '
  },
  hour: {
    numeric12: 'h',
    numeric24: 'H',
    '2-digit12': 'hh',
    '2-digit24': 'HH'
  },
  minute: {
    numeric: 'mm',
    '2-digit': 'mm'
  },
  second: {
    numeric: 'ss',
    '2-digit': 'ss'
  },
  timeZoneName: {
    short: '[GMT]Z',
    long: '[GMT]Z'
  }
};
const SEPARATORS = [',', ' ', ':'];

function getWeekDayPart(format, options) {
  const weekdayOptionValue = options.weekday;

  if (FORMAT_MAP.weekday[weekdayOptionValue] !== undefined) {
    format.push(FORMAT_MAP.weekday[weekdayOptionValue]);
  }
}

function getMonthPart(format, options) {
  const monthOptionValue = options.month;

  if (FORMAT_MAP.month[monthOptionValue] !== undefined) {
    format.push(FORMAT_MAP.month[monthOptionValue]);
  }
}

function getDayPart(format, options) {
  const dayOptionValue = options.day;

  if (FORMAT_MAP.day[dayOptionValue] !== undefined) {
    format.push(FORMAT_MAP.day[dayOptionValue]);
  }
}

function getYearPart(format, options) {
  const yearOptionValue = options.year;

  if (FORMAT_MAP.year[yearOptionValue] !== undefined) {
    format.push(FORMAT_MAP.year[yearOptionValue]);
  }
}

function getTZPart(format, options) {
  const timeZoneNameOptionValue = options.timeZoneName;

  if (FORMAT_MAP.timeZoneName[timeZoneNameOptionValue] !== undefined) {
    if (options.timeZone === 'UTC') {
      format.push('[GMT]');
    } else {
      format.push(FORMAT_MAP.timeZoneName[timeZoneNameOptionValue]);
    }
  }
}

function getTimePart(format, options) {
  const hourOptionValue = options.hour,
        minuteOptionValue = options.minute,
        secondOptionValue = options.second;
  let hasTime = false;
  let hasHourOnly = false; // hour 12 hr or 24 hr

  if (hourOptionValue === 'numeric' || hourOptionValue === '2-digit') {
    hasTime = true;

    if (options.hour12 === false) {
      if (hourOptionValue === 'numeric') {
        format.push(FORMAT_MAP.hour.numeric24);
      } else {
        format.push(FORMAT_MAP.hour['2-digit24']);
      }
    } else if (hourOptionValue === 'numeric') {
      format.push(FORMAT_MAP.hour.numeric12);
    } else {
      format.push(FORMAT_MAP.hour['2-digit12']);
    }

    if (FORMAT_MAP.minute[minuteOptionValue] !== undefined) {
      format.push(':');
    } else if (FORMAT_MAP.second[secondOptionValue] !== undefined) {
      hasHourOnly = true;
    }
  } // minute


  if (FORMAT_MAP.minute[minuteOptionValue] !== undefined) {
    hasTime = true;
    format.push(FORMAT_MAP.minute[minuteOptionValue]);

    if (FORMAT_MAP.second[secondOptionValue] !== undefined) {
      format.push(':');
    }
  } // second


  if (FORMAT_MAP.second[secondOptionValue] !== undefined && !hasHourOnly) {
    hasTime = true;
    format.push(FORMAT_MAP.second[secondOptionValue]);
  } // AM/PM marker


  if (hasTime) {
    format.push(' a ');
  }

  if (hasHourOnly) {
    format.push('[(sec]: ' + FORMAT_MAP.second[secondOptionValue] + '[)]');
  }
}
/**
 * Function translating provided date time options to a
 * string that can be passed into Aura localization service.
 *
 * @param {Object} options - date time formatting options
 * @returns {string} representing provided options as a string -
 * e.g. "dd, MMM yyyy h:mm"
 */


const getSkeleton = options => {
  const format = [];
  getWeekDayPart(format, options);
  getMonthPart(format, options);
  getDayPart(format, options);
  getYearPart(format, options);
  getTimePart(format, options);
  getTZPart(format, options);
  let formatStr = format.join('');
  SEPARATORS.forEach(element => {
    if (formatStr.lastIndexOf(element) === formatStr.length - 1) {
      formatStr = formatStr.slice(0, -1);
    }
  });
  return formatStr;
};

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/dateTimeUtils.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/dateTimeUtils.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isDate": () => (/* binding */ isDate),
/* harmony export */   "getCurrentDateString": () => (/* binding */ getCurrentDateString),
/* harmony export */   "getISODateString": () => (/* binding */ getISODateString),
/* harmony export */   "getISOTimeString": () => (/* binding */ getISOTimeString),
/* harmony export */   "getCurrentTimeString": () => (/* binding */ getCurrentTimeString),
/* harmony export */   "getDateFormatFromStyle": () => (/* binding */ getDateFormatFromStyle),
/* harmony export */   "getTimeFormatFromStyle": () => (/* binding */ getTimeFormatFromStyle),
/* harmony export */   "normalizeISODate": () => (/* binding */ normalizeISODate),
/* harmony export */   "normalizeISOTime": () => (/* binding */ normalizeISOTime),
/* harmony export */   "normalizeISODateTime": () => (/* binding */ normalizeISODateTime),
/* harmony export */   "normalizeFormattedDate": () => (/* binding */ normalizeFormattedDate),
/* harmony export */   "normalizeFormattedTime": () => (/* binding */ normalizeFormattedTime),
/* harmony export */   "normalizeFormattedDateTime": () => (/* binding */ normalizeFormattedDateTime),
/* harmony export */   "parseFormattedTime": () => (/* binding */ parseFormattedTime),
/* harmony export */   "parseFormattedDate": () => (/* binding */ parseFormattedDate)
/* harmony export */ });
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var _salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @salesforce/i18n/locale */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-locale.js");
/* harmony import */ var _salesforce_i18n_dateTime_shortDateFormat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/i18n/dateTime.shortDateFormat */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.shortDateFormat.js");
/* harmony import */ var _salesforce_i18n_dateTime_mediumDateFormat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @salesforce/i18n/dateTime.mediumDateFormat */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.mediumDateFormat.js");
/* harmony import */ var _salesforce_i18n_dateTime_longDateFormat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @salesforce/i18n/dateTime.longDateFormat */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.longDateFormat.js");
/* harmony import */ var _salesforce_i18n_dateTime_shortTimeFormat__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @salesforce/i18n/dateTime.shortTimeFormat */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.shortTimeFormat.js");
/* harmony import */ var _salesforce_i18n_dateTime_mediumTimeFormat__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @salesforce/i18n/dateTime.mediumTimeFormat */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.mediumTimeFormat.js");
/* harmony import */ var lightning_i18nCldrOptions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lightning/i18nCldrOptions */ "./node_modules/lightning-base-components/src/lightning/i18nCldrOptions/i18nCldrOptions.js");
/* harmony import */ var lightning_i18nService__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lightning/i18nService */ "./node_modules/lightning-base-components/src/lightning/i18nService/i18nService.js");
/* harmony import */ var lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lightning/iso8601Utils */ "./node_modules/lightning-base-components/src/lightning/iso8601Utils/iso8601Utils.js");
/* harmony import */ var _localizationService__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../localizationService */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/localizationService.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/utils.js");
// TODO: When migrating off Aura, consider removing 'asserts'; consider
// consider using console.error, throwing Error and/or sticking with
// default behavior for handling invalid inputs in i18nService












const ISO_FORMAT = "yyyy-MM-dd'T'hh:mm:ss.SSS'Z'";
const LATN = 'latn';
const utcTimeZone = {
  timeZone: 'UTC'
};
/**
 * HELPER FUNCTIONS
 */

/**
 * Checks if a value contains a time zone offset by checking
 * for a '+' or '-' character in string and null otherwise
 *
 * @param {any} value
 * @returns
 */

const hasTimeZoneOffset = value => {
  if (typeof value === 'string') {
    return value.indexOf('+') !== -1 || value.indexOf('-') !== -1;
  }

  return false;
};
/**
 * If provided a string returns trimmed string, otherwise
 * returns provided value exactly as-is
 *
 * @param {any} value
 * @returns {any}
 */


const getTrimmedValue = value => {
  return typeof value === 'string' ? value.trim() : value;
};
/**
 * If provided a string returns trimmed string
 * with 0 or 3 digits for milliseconds, otherwise
 * returns provided value exactly as-is
 *
 * @param {any} value
 * @returns {any}
 */


const getNormalizedValue = value => {
  const trimmedValue = getTrimmedValue(value);
  return (0,lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_9__.padMilliseconds)(trimmedValue);
};
/**
 * Returns part of a provided string before 'T', representing
 * date portion of ISO string. If provided value is not a string
 * simply returns the value exactly as-is
 *
 * @param {any} value - value to get date for
 * @returns {any}
 */


const getDateOnly = value => {
  return typeof value === 'string' ? value.split(lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_9__.TIME_SEPARATOR)[0] : value;
};
/**
 * Returns true if provided value is a Date object, false otherwise
 *
 * @param {any} value - value to check if Date object or not
 * @returns {boolean}
 */


function isDate(value) {
  return Object.prototype.toString.call(value) === '[object Date]' && !isNaN(value.getTime());
}
/**
 * @returns YYYY-MM-DD string for system time zone
 */

function getCurrentDateString() {
  const today = getTodayBasedOnTimezone();
  return getISODateString(today);
}
/**
 * Returns ISO date string corresponding to provided date in local time zone
 *
 * @param {Date} date - date to get ISO date string for
 * @returns 'YYYY-MM-DD' string representing provided date in local time zone
 */

function getISODateString(date) {
  if (!isDate(date)) {
    return null;
  }

  return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}`;
}
/**
 * Returns ISO time string without any time zone indicator
 * corresponding to provided date in local time zone
 *
 * @param {Date} date - date to get ISO time string in local time zone for
 * @returns 'HH:mm:ss.SSS' string representing the provided
 * date time in local time zone
 */

function getISOTimeString(date) {
  if (!isDate(date)) {
    return null;
  }

  return `${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}.${doublePad(date.getMilliseconds())}`;
}
/**
 * Returns ISO time string without any time zone indicator
 * corresponding to provided date in UTC time zone
 *
 * @param {Date} date - date to get ISO time string in UTC for
 * @returns 'HH:mm:ss.SSS' string representing the provided
 * date time in UTC time zone
 */

function getISOTimeStringUTC(date) {
  if (!isDate(date)) {
    return null;
  }

  return `${pad(date.getUTCHours())}:${pad(date.getUTCMinutes())}:${pad(date.getUTCSeconds())}.${doublePad(date.getUTCMilliseconds())}`;
}
/**
 * Gets current time in provided timezone in hours and minutes
 *
 * @param {string} timezone - timezone to get time for
 * @returns time in HH:mm format
 */


function getCurrentTimeString(timezone) {
  const today = getTodayBasedOnTimezone(timezone);
  return `${pad(today.getHours())}:${pad(today.getMinutes())}`;
}
/**
 * Gets offset between provided timezone and either
 * system timezone or UTC timezone at current date
 *
 * @param {Date} date - date used when determining offset
 * @param {string} timeZone - time zone to get offset for
 * @returns {Number} offset in milliseconds
 */

function getOffsetForTimezone(date, timeZone, shouldAddUTCOffset) {
  const time1 = (0,lightning_i18nService__WEBPACK_IMPORTED_MODULE_8__.getDateTimeCLDRParser)({
    pattern: ISO_FORMAT,
    timeZone,
    numberingSystem: LATN
  }).parse(date.toISOString());
  const extraOffset = shouldAddUTCOffset ? date.getTimezoneOffset() : 0; // need to subtract milliseconds since CLDR seems to reset milliseconds to zero

  const time2 = date.getTime() - date.getMilliseconds() + extraOffset * 60 * 1000;
  return time2 - time1;
}
/**
 * Adjust provided date by offset from either system time zone or UTC
 *
 * @param {Date} date - initial date to adjust
 * @param {string} timeZone - time zone to adjust date based on
 * @param {boolean} shouldAddUTCOffset - adjust by UTC instead of local offset if true
 *
 * @returns {Date} date adjusted by either system time zone or UTC
 * e.g., if the date corresponds to 2pm in provided time zone and calculated
 * offset is +4 hours, returns date corresponding to 6pm in provided time zone
 */


function adjustDateByOffset(date, timeZone, shouldAddUTCOffset) {
  const offset = getOffsetForTimezone(date, timeZone, shouldAddUTCOffset);
  const timestamp = date.getTime() + offset;
  return new Date(timestamp);
}
/**
 * Get current date moved by offset between provided timezone
 * (or system time zone if none provided) and UTC
 *
 * @param {string} timeZone - optional time zone to get current date for
 * @returns {Date} current date adjusted by offset between provided
 * time zone and UTC; e.g., if current time is 6pm in UTC and 2pm
 * locally, returns date corresponding to 6pm locally and 10pm UTC
 */


function getTodayBasedOnTimezone(timeZone) {
  const today = new Date();

  if (_utils__WEBPACK_IMPORTED_MODULE_11__.isAuraL10NAvailable) {
    // time in UTC
    today.setTime(today.getTime() + today.getTimezoneOffset() * 60 * 1000); // localization service will use $Locale.timezone when no timezone provided

    return (0,_localizationService__WEBPACK_IMPORTED_MODULE_10__.syncUTCToWallTime)(today, timeZone);
  }

  return adjustDateByOffset(today, timeZone, true);
}

function pad(n) {
  return Number(n) < 10 ? '0' + n : n;
}

function doublePad(n) {
  const number = Number(n);

  if (number < 10) {
    return '00' + n;
  } else if (number < 100) {
    return '0' + n;
  }

  return n;
}
/**
 * STYLE-TO-FORMAT MAPPING
 */


const DATE = 'date';
const TIME = 'time';
const DATETIME_STYLES = {
  SHORT: 'short',
  MEDIUM: 'medium',
  LONG: 'long'
}; // mapping of type/style of formats to use when
// getting format based on provided type/style

const DATETIME_FORMATS = {
  [DATE]: {
    [DATETIME_STYLES.SHORT]: _salesforce_i18n_dateTime_shortDateFormat__WEBPACK_IMPORTED_MODULE_2__.default,
    [DATETIME_STYLES.MEDIUM]: _salesforce_i18n_dateTime_mediumDateFormat__WEBPACK_IMPORTED_MODULE_3__.default,
    [DATETIME_STYLES.LONG]: _salesforce_i18n_dateTime_longDateFormat__WEBPACK_IMPORTED_MODULE_4__.default,
    default: _salesforce_i18n_dateTime_mediumDateFormat__WEBPACK_IMPORTED_MODULE_3__.default
  },
  [TIME]: {
    [DATETIME_STYLES.SHORT]: _salesforce_i18n_dateTime_shortTimeFormat__WEBPACK_IMPORTED_MODULE_5__.default,
    [DATETIME_STYLES.MEDIUM]: _salesforce_i18n_dateTime_mediumTimeFormat__WEBPACK_IMPORTED_MODULE_6__.default,
    [DATETIME_STYLES.LONG]: _salesforce_i18n_dateTime_mediumTimeFormat__WEBPACK_IMPORTED_MODULE_6__.default,
    default: _salesforce_i18n_dateTime_shortTimeFormat__WEBPACK_IMPORTED_MODULE_5__.default
  }
};
/**
 * Returns short/medium/long format for date/time/datetime
 * in CLDR format or options for datetime formatter
 *
 * Always returns CLDR in Aura, otherwise returns
 * formatting object if isCldr is falsy
 *
 * @param {string} type - date/time/datetime
 * @param {string} style - short/medium/long
 * @param {boolean} isCldr - true if getting cldr format
 * @returns {string|Object}
 */

const getFormatFromStyle = (type, style, isCldr) => {
  let cldrString = DATETIME_FORMATS[type][style];

  if (!cldrString) {
    cldrString = DATETIME_FORMATS[type].default;
  }

  if (_utils__WEBPACK_IMPORTED_MODULE_11__.isAuraL10NAvailable || isCldr) {
    return cldrString;
  }

  return (0,lightning_i18nCldrOptions__WEBPACK_IMPORTED_MODULE_7__.default)(cldrString);
};

const getDateFormatFromStyle = (dateStyle, isCldr) => {
  return getFormatFromStyle(DATE, dateStyle, isCldr);
};
const getTimeFormatFromStyle = (timeStyle, isCldr) => {
  return getFormatFromStyle(TIME, timeStyle, isCldr);
};
/**
 * NORMALIZE ISO DATETIMES
 */

/**
 * Normalizes ISO date string to localized short,
 * medium, or long date string. Uses Aura on core
 * and localizer off-core.
 *
 * @param {string} value - ISO date to normalize
 * @param {string} dateStyle - style date should be in
 * eg., style 'short' may correspond to 'dd/mm/yy'
 *
 * @returns {Object} with ISO value and localized display value
 */

function normalizeISODate(value, dateStyle) {
  const format = getDateFormatFromStyle(dateStyle);
  const isoValue = getDateOnly(getNormalizedValue(value));
  let parsedDate, displayValue;

  if (isoValue) {
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__.assert)((0,lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_9__.isValidISODateTimeString)(isoValue), (0,_utils__WEBPACK_IMPORTED_MODULE_11__.getDateTimeErrorMessage)(value));

    try {
      if (_utils__WEBPACK_IMPORTED_MODULE_11__.isAuraL10NAvailable) {
        parsedDate = (0,_localizationService__WEBPACK_IMPORTED_MODULE_10__.parseDateTime)(isoValue, lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_9__.STANDARD_DATE_FORMAT); // converts to Buddhist calendar if necessary

        const civilDate = (0,_localizationService__WEBPACK_IMPORTED_MODULE_10__.toOtherCalendar)(parsedDate);
        displayValue = (0,_localizationService__WEBPACK_IMPORTED_MODULE_10__.formatDate)(civilDate, format);
      } else {
        parsedDate = (0,lightning_i18nService__WEBPACK_IMPORTED_MODULE_8__.getDateTimeISO8601Parser)().parse(isoValue);
        const formatOptions = Object.assign({}, utcTimeZone, format);
        displayValue = (0,lightning_i18nService__WEBPACK_IMPORTED_MODULE_8__.getDateTimeFormat)(_salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_1__.default, formatOptions).format(parsedDate);
      }
    } catch (error) {
      console.warn(error.message);
      parsedDate = null;
    }
  }

  if (!parsedDate) {
    return {
      isoValue: null,
      displayValue: value || ''
    };
  }

  return {
    isoValue,
    displayValue
  };
}
/**
 * Normalizes ISO time string to localized format
 * Used in formattedTime and timepicker components
 *
 * @param {string} value - ISO time to normalize
 * @param {string} timeStyle - style time should be in
 * eg., style 'short' may correspond to 'HH:mm'
 *
 * @returns {Object} with ISO value, parsed Date value and localized display value
 */

function normalizeISOTime(value, timeStyle) {
  const format = getTimeFormatFromStyle(timeStyle);
  const timeValue = getNormalizedValue((0,lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_9__.removeTimeZoneSuffix)(value));
  let parsedValue, displayValue, getISO;

  if (timeValue) {
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__.assert)((0,lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_9__.isValidISOTimeString)(timeValue), (0,_utils__WEBPACK_IMPORTED_MODULE_11__.getDateTimeErrorMessage)(value));

    try {
      if (_utils__WEBPACK_IMPORTED_MODULE_11__.isAuraL10NAvailable) {
        parsedValue = (0,_localizationService__WEBPACK_IMPORTED_MODULE_10__.parseTime)(timeValue);
        displayValue = (0,_localizationService__WEBPACK_IMPORTED_MODULE_10__.formatTime)(parsedValue, format);
        getISO = getISOTimeString;
      } else {
        parsedValue = (0,lightning_i18nService__WEBPACK_IMPORTED_MODULE_8__.getDateTimeISO8601Parser)().parse(timeValue);
        const formatOptions = Object.assign({}, utcTimeZone, format);
        displayValue = (0,lightning_i18nService__WEBPACK_IMPORTED_MODULE_8__.getDateTimeFormat)(_salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_1__.default, formatOptions).format(parsedValue);
        getISO = getISOTimeStringUTC;
      }
    } catch (error) {
      console.warn(error.message);
      parsedValue = null;
    }
  }

  if (!parsedValue) {
    return {
      isoValue: null,
      parsedValue: null,
      displayValue: value || ''
    };
  } else if (hasTimeZoneOffset(value)) {
    // log warning to avoid confusion when time zone offset is ignored
    console.warn('lightning-formatted-time does not support non-UTC time zones and will ignore any time zone offsets.');
  }

  const isoValue = getISO(parsedValue);
  return {
    isoValue,
    parsedValue,
    displayValue
  };
}
/**
 * Normalizes ISO datetime string to localized format
 * Used in datetimepicker component
 *
 * @param {string} value - ISO datetime to normalize
 * @param {string} timeZone - IANA time zone to adjust value to
 *
 * @returns {Object} with ISO value, and localized/time zone adjusted display value
 */

function normalizeISODateTime(value, timeZone) {
  const dateTimeValue = getNormalizedValue(value);
  let parsedDate, displayValue;

  if (dateTimeValue) {
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__.assert)((0,lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_9__.isValidISODateTimeString)(dateTimeValue), (0,_utils__WEBPACK_IMPORTED_MODULE_11__.getDateTimeErrorMessage)(value));

    try {
      if (_utils__WEBPACK_IMPORTED_MODULE_11__.isAuraL10NAvailable) {
        const utcDate = (0,_localizationService__WEBPACK_IMPORTED_MODULE_10__.parseDateTimeISO8601)(dateTimeValue);

        if (utcDate) {
          parsedDate = (0,_localizationService__WEBPACK_IMPORTED_MODULE_10__.syncUTCToWallTime)(utcDate, timeZone);
          displayValue = (0,_localizationService__WEBPACK_IMPORTED_MODULE_10__.formatDateTimeUTC)(parsedDate);
        }
      } else {
        const utcDate = (0,lightning_i18nService__WEBPACK_IMPORTED_MODULE_8__.getDateTimeISO8601Parser)().parse(dateTimeValue);
        parsedDate = adjustDateByOffset(utcDate, timeZone);
        const dateFormat = (0,lightning_i18nCldrOptions__WEBPACK_IMPORTED_MODULE_7__.default)(_salesforce_i18n_dateTime_mediumDateFormat__WEBPACK_IMPORTED_MODULE_3__.default);
        const timeFormat = (0,lightning_i18nCldrOptions__WEBPACK_IMPORTED_MODULE_7__.default)(_salesforce_i18n_dateTime_mediumTimeFormat__WEBPACK_IMPORTED_MODULE_6__.default);
        const formatOptions = Object.assign({}, utcTimeZone, dateFormat, timeFormat);
        displayValue = (0,lightning_i18nService__WEBPACK_IMPORTED_MODULE_8__.getDateTimeFormat)(_salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_1__.default, formatOptions).format(parsedDate);
      }
    } catch (error) {
      console.warn(error.message);
      parsedDate = null;
    }
  }

  if (!parsedDate) {
    return {
      isoValue: null,
      displayValue: value || ''
    };
  }

  return {
    isoValue: (0,lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_9__.removeTimeZoneSuffix)(parsedDate.toISOString()),
    displayValue
  };
}
/**
 * NORMALIZE FORMATTED DATETIMES
 */

/**
 * Attempts to parse provided string into Date assuming string
 * is provided date style (short, medium, long) and returns string
 * in YYYY-MM-DD format. If parsing unsuccessful returns null.
 *
 * @param {string} value - formatted date string to parse into date
 * @param {string} dateStyle - date style to parse string as (short/medium/long)
 * @returns {string|null}
 */

function normalizeFormattedDate(value, dateStyle) {
  const dateValue = getTrimmedValue(value);
  const format = getDateFormatFromStyle(dateStyle, true);
  let parsedDate;

  try {
    if (dateValue) {
      if (_utils__WEBPACK_IMPORTED_MODULE_11__.isAuraL10NAvailable) {
        parsedDate = (0,_localizationService__WEBPACK_IMPORTED_MODULE_10__.fromOtherCalendar)((0,_localizationService__WEBPACK_IMPORTED_MODULE_10__.parseDateTime)(dateValue, format, true));
      } else {
        // doesn't work as expected for th-TH
        parsedDate = (0,lightning_i18nService__WEBPACK_IMPORTED_MODULE_8__.getDateTimeCLDRParser)({
          pattern: format
        }).parse(dateValue);
      }
    }
  } catch (error) {
    return null;
  }

  if (!parsedDate) {
    return null;
  }

  return getISODateString(parsedDate);
}
/**
 * Attempts to parse provided string into Date assuming string
 * is provided time style (short, medium, long) and returns string
 * in HH:mm:ss.SSS format. If parsing unsuccessful returns null.
 *
 * @param {string} value - formatted time string to parse into date
 * @param {string} timeStyle - time style to parse string as (short/medium/long)
 * @returns {string|null}
 */

function normalizeFormattedTime(value, timeStyle) {
  const timeValue = getTrimmedValue(value);
  const format = getTimeFormatFromStyle(timeStyle, true);
  let parsedTime;

  try {
    if (timeValue) {
      if (_utils__WEBPACK_IMPORTED_MODULE_11__.isAuraL10NAvailable) {
        parsedTime = (0,_localizationService__WEBPACK_IMPORTED_MODULE_10__.parseTime)(timeValue, format || _salesforce_i18n_dateTime_mediumTimeFormat__WEBPACK_IMPORTED_MODULE_6__.default, true);
      } else {
        parsedTime = (0,lightning_i18nService__WEBPACK_IMPORTED_MODULE_8__.getDateTimeCLDRParser)({
          pattern: format
        }).parse(timeValue);
      }
    }
  } catch (error) {
    return null;
  }

  if (!parsedTime) {
    return null;
  }

  return getISOTimeString(parsedTime);
}
/**
 * Converts ISO date time string without time zone indicator in given
 * time zone to the equivalent ISO date time string in UTC time zone
 *
 * @param {string} value - ISO datetime string without time zone indicator
 * @param {string} timeZone - IANA time zone that corresponds to value
 * @returns Equivalent ISO date string in UTC
 */

function normalizeFormattedDateTime(value, timeZone) {
  const datetimeValue = getTrimmedValue(value);
  let parsedDate;

  try {
    if (datetimeValue) {
      if (_utils__WEBPACK_IMPORTED_MODULE_11__.isAuraL10NAvailable) {
        // given that value is an ISO string without Z, the parseDateTimeUTC
        // call below is equivalent to parseDateTimeISO8601(value + 'Z')
        const utcDate = (0,_localizationService__WEBPACK_IMPORTED_MODULE_10__.parseDateTimeUTC)(datetimeValue);

        if (utcDate) {
          parsedDate = (0,_localizationService__WEBPACK_IMPORTED_MODULE_10__.syncWallTimeToUTC)(utcDate, timeZone);
        }
      } else {
        // no time zone in value so UTC time zone is assumed
        const utcDate = (0,lightning_i18nService__WEBPACK_IMPORTED_MODULE_8__.getDateTimeISO8601Parser)().parse(datetimeValue);
        parsedDate = (0,lightning_i18nService__WEBPACK_IMPORTED_MODULE_8__.getDateTimeCLDRParser)({
          pattern: ISO_FORMAT,
          timeZone,
          numberingSystem: LATN
        }).parse(utcDate.toISOString());
      }
    }
  } catch (error) {
    return null;
  }

  if (!parsedDate) {
    return null;
  }

  return parsedDate.toISOString();
}
/**
 * Checks if normalization function recognizes provided value for any styles
 * returning the style recognized and the value as an ISO string
 * Used to allow user's to input a date/time in any style and have it
 * recognized as valid even though the picker defaults to a specific style
 *
 * @param {Function} normalizeFormattedValue - function to normalize formatted string to ISO string
 * @param {string} displayValue - string to format, generally input by user
 * @returns {Object} object with style of displayValue and displayValue normalized to ISO string
 */

const parseFormattedValue = (normalizeFormattedValue, displayValue) => {
  const allowedStyles = Object.values(DATETIME_STYLES);
  let value = null,
      style = null;

  for (let i = 0; i < allowedStyles.length; i++) {
    value = normalizeFormattedValue(displayValue, allowedStyles[i]);

    if (value) {
      style = allowedStyles[i];
      break;
    }
  }

  return {
    value,
    style
  };
};

const parseFormattedTime = value => {
  return parseFormattedValue(normalizeFormattedTime, value);
};
const parseFormattedDate = value => {
  return parseFormattedValue(normalizeFormattedDate, value);
};

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/intlDisplayNames.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/intlDisplayNames.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getNameOfWeekdays": () => (/* binding */ getNameOfWeekdays),
/* harmony export */   "getMonthNames": () => (/* binding */ getMonthNames)
/* harmony export */ });
/* harmony import */ var _salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @salesforce/i18n/locale */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-locale.js");
/* harmony import */ var _salesforce_i18n_lang__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @salesforce/i18n/lang */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-lang.js");

 // Month and weekdays names should be based on the user's language setting.
// Falling back to the user's locale or the default 'en-us' in case the tag isn't supported by the browser's Intl implementation

const FALLBACK_LOCALES = [_salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_0__.default, 'en-us'];
const symbolsCache = {}; // languageOverride is only used in the tests

function getNameOfWeekdays(languageOverride) {
  const language = languageOverride || _salesforce_i18n_lang__WEBPACK_IMPORTED_MODULE_1__.default;
  const languageDataCache = symbolsCache[language];

  if (languageDataCache && languageDataCache.weekdays) {
    return languageDataCache.weekdays;
  }

  const intlLocales = [language, ...FALLBACK_LOCALES];
  const fullNameFormatter = new Intl.DateTimeFormat(intlLocales, {
    weekday: 'long',
    timeZone: 'UTC'
  });
  const shortNameFormatter = new Intl.DateTimeFormat(intlLocales, {
    weekday: 'short',
    timeZone: 'UTC'
  });
  const weekdays = [];

  for (let i = 0; i <= 6; i++) {
    // (1970, 0, 4) corresponds to a sunday.
    const date = new Date(Date.UTC(1970, 0, 4 + i));
    weekdays.push({
      fullName: format(fullNameFormatter, date),
      shortName: format(shortNameFormatter, date)
    });
  }

  if (!symbolsCache[language]) {
    symbolsCache[language] = {};
  }

  symbolsCache[language].weekdays = weekdays;
  return weekdays;
} // languageOverride is only used in the tests

function getMonthNames(languageOverride) {
  const language = languageOverride || _salesforce_i18n_lang__WEBPACK_IMPORTED_MODULE_1__.default;
  const languageDataCache = symbolsCache[language];

  if (languageDataCache && languageDataCache.months) {
    return languageDataCache.months;
  }

  const intlLocales = [language, ...FALLBACK_LOCALES];
  const monthNameFormatter = new Intl.DateTimeFormat(intlLocales, {
    month: 'long'
  });
  const months = [];

  for (let i = 0; i <= 11; i++) {
    const date = new Date(1970, i, 4);
    months.push({
      // we currently only need the fullName
      fullName: format(monthNameFormatter, date)
    });
  }

  if (!symbolsCache[language]) {
    symbolsCache[language] = {};
  }

  symbolsCache[language].months = months;
  return months;
}

function format(dateTimeFormat, date) {
  const formattedDate = dateTimeFormat.format(date);
  return removeIE11Markers(formattedDate);
}

function removeIE11Markers(formattedString) {
  // IE11 adds LTR / RTL mark in the formatted date time string
  return formattedString.replace(/[\u200E\u200F]/g, '');
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/intlFormat.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/intlFormat.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toDate": () => (/* binding */ toDate),
/* harmony export */   "dateTimeFormat": () => (/* binding */ dateTimeFormat)
/* harmony export */ });
/* harmony import */ var _salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @salesforce/i18n/locale */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-locale.js");
/* harmony import */ var _salesforce_i18n_dateTime_mediumDateFormat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @salesforce/i18n/dateTime.mediumDateFormat */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.mediumDateFormat.js");
/* harmony import */ var lightning_i18nCldrOptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/i18nCldrOptions */ "./node_modules/lightning-base-components/src/lightning/i18nCldrOptions/i18nCldrOptions.js");
/* harmony import */ var _dateTimeOptions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dateTimeOptions */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/dateTimeOptions.js");
/* harmony import */ var _dateTimeUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dateTimeUtils */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/dateTimeUtils.js");
/* harmony import */ var _localizationService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../localizationService */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/localizationService.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/utils.js");
/* harmony import */ var lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lightning/iso8601Utils */ "./node_modules/lightning-base-components/src/lightning/iso8601Utils/iso8601Utils.js");
/* harmony import */ var lightning_i18nService__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lightning/i18nService */ "./node_modules/lightning-base-components/src/lightning/i18nService/i18nService.js");
// TODO: when migrating off aura, remove functions
// and vaiables only used in dateTimeOptions










function convertAndFormatDate(date, format, timeZone) {
  const translatedDate = (0,_localizationService__WEBPACK_IMPORTED_MODULE_5__.toOtherCalendar)(date);
  const converted = (0,_localizationService__WEBPACK_IMPORTED_MODULE_5__.syncUTCToWallTime)(translatedDate, timeZone);
  return (0,_localizationService__WEBPACK_IMPORTED_MODULE_5__.formatDateUTC)(converted, format);
}
/**
 * Tries toDateStrict; if error thrown (unparseable string),
 * logs warning and returns value from Date.parse
 *
 * @param {String|Number|Date} value
 * @returns Date
 */


function toDate(value) {
  try {
    return toDateStrict(value);
  } catch (err) {
    console.warn(`'${value}' does not follow a supported date format. Please use either a timestamp, ISO8601 string, or Date object to avoid risking inconsistencies and breakages.`);
    return new Date(value);
  }
}
/**
 * Converts a timestamp or ISO-8601 string to a Date object
 * If a Date object is provided it is returned as-is
 *
 * @param {String|Number|Date} value
 * @returns Date
 */

function toDateStrict(value) {
  if (value && !(0,_dateTimeUtils__WEBPACK_IMPORTED_MODULE_4__.isDate)(value) && isFinite(value)) {
    // handles timestamp as number or string
    return new Date(parseInt(value, 10));
  } else if (value && !(0,_dateTimeUtils__WEBPACK_IMPORTED_MODULE_4__.isDate)(value)) {
    // handles non-timestamp string
    const strictString = (0,lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_7__.padMilliseconds)(value);
    return (0,lightning_i18nService__WEBPACK_IMPORTED_MODULE_8__.getDateTimeISO8601Parser)().parse(strictString);
  }

  return value; // handles date object
}
/**
 * Returns true if the current browser supports time zones
 * for Intl other than UTC by seeing if error is thrown when
 * a non-UTC time zone is passed; should return false for IE11
 * and true for all other supported browsers.
 */


const isNonUTCSupported = function () {
  try {
    // eslint-disable-next-line new-cap
    Intl.DateTimeFormat('en-US', {
      timeZone: 'America/Los_Angeles'
    });
  } catch (err) {
    return false;
  }

  return true;
}();

function dateTimeFormatFallback(options) {
  const format = !useDefaultFormat(options) ? (0,_dateTimeOptions__WEBPACK_IMPORTED_MODULE_3__.getSkeleton)(options) : null;
  const {
    timeZone
  } = options;
  return {
    format: value => {
      // if value is an ISO date string with no time component, do not convert between timezones
      if ((0,lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_7__.isValidISODateTimeString)(value) && value.indexOf(lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_7__.TIME_SEPARATOR) < 0) {
        return (0,_localizationService__WEBPACK_IMPORTED_MODULE_5__.formatDate)(value);
      } // FIXME use standard methods from localizationService for parsing and formatting instead


      const dateObj = toDate(value);

      if ((0,_dateTimeUtils__WEBPACK_IMPORTED_MODULE_4__.isDate)(dateObj)) {
        if (timeZone === 'UTC') {
          dateObj.setTime(dateObj.getTime() + dateObj.getTimezoneOffset() * 60 * 1000);
        }

        return convertAndFormatDate(dateObj, format, timeZone);
      }

      return '';
    }
  };
}
/**
 * Returns true if Aura fallback should be used for
 * datetime formatting with provided date time optionss
 *
 * More specifically, Aura should be used on-core and
 * when no formatting options are provided or we're
 * using a non-UTC time zone on a browser that does
 * not support them
 */


function useAuraFallbackFormatting(options) {
  const {
    timeZone
  } = options;
  const isNonUTCTimeZone = timeZone && timeZone !== 'UTC';

  if (_utils__WEBPACK_IMPORTED_MODULE_6__.isAuraL10NAvailable && (useDefaultFormat(options) || !isNonUTCSupported && isNonUTCTimeZone)) {
    return true;
  }

  return false;
}
/**
 * Returns true if the mediumDateFormat options should be used
 * Medium date format should be used when there are no options
 * or only options are for the time zone and hour system
 */


function useDefaultFormat(options) {
  const excludedOptions = {
    hour12: true,
    hourCycle: true,
    timeZone: true,
    timeZoneName: true
  };
  const hasFormattingOption = Object.keys(options).some(opt => options[opt] !== undefined && !excludedOptions[opt]);
  return !hasFormattingOption;
}
/**
 * Creates date time formatter based on feature availability and provided options.
 * When on-core, uses Aura on IE11 or when we need default format, and uses
 * Intl.DateTimeFormat through i18nService otherwise
 *
 * @param {Object} opts - Formatting options from lightning-formatted-date-time
 * @returns {Object} - Object with "format" function
 */


function dateTimeFormat(opts) {
  const options = opts || {};

  if (useAuraFallbackFormatting(options)) {
    return dateTimeFormatFallback(options);
  } else if (useDefaultFormat(options)) {
    // use mediumDateFormat options if not using Aura
    // and no options outside of hour system or time zone
    // need to use Object.assign so hour system and
    // time zone options work as expected when passed in
    opts = Object.assign(options, (0,lightning_i18nCldrOptions__WEBPACK_IMPORTED_MODULE_2__.default)(_salesforce_i18n_dateTime_mediumDateFormat__WEBPACK_IMPORTED_MODULE_1__.default));
  }

  return {
    format: value => {
      const formatter = (0,lightning_i18nService__WEBPACK_IMPORTED_MODULE_8__.getDateTimeFormat)(_salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_0__.default, opts);
      return formatter.format(toDate(value));
    }
  };
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/duration/RelativeFormat.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/duration/RelativeFormat.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "relativeFormat": () => (/* binding */ relativeFormat)
/* harmony export */ });
/* harmony import */ var _localizationService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../localizationService */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/localizationService.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");


const MINUTE_MILLISECONDS = 1000 * 60;
function relativeFormat() {
  return {
    format: value => {
      const now = Date.now();
      const timestamp = Number(value);
      (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_1__.assert)(isFinite(timestamp), `RelativeFormat: The value attribute accepts either a Date object or a timestamp, but we are getting the ${typeof value} value "${value}" instead.`);
      const getDiffInMinutes = (timestamp - now) / MINUTE_MILLISECONDS;
      const durationData = (0,_localizationService__WEBPACK_IMPORTED_MODULE_0__.duration)(getDiffInMinutes, 'minutes');
      return (0,_localizationService__WEBPACK_IMPORTED_MODULE_0__.displayDuration)(durationData, true);
    }
  };
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/internationalizationLibrary.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/internationalizationLibrary.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addressFormat": () => (/* reexport safe */ _address_AddressFormat__WEBPACK_IMPORTED_MODULE_0__.address),
/* harmony export */   "nameFormat": () => (/* reexport safe */ _name_NameFormat__WEBPACK_IMPORTED_MODULE_1__.name),
/* harmony export */   "numberFormat": () => (/* reexport safe */ _number_NumberFormat__WEBPACK_IMPORTED_MODULE_2__.numberFormat),
/* harmony export */   "dateTimeFormat": () => (/* reexport safe */ _datetime_intlFormat__WEBPACK_IMPORTED_MODULE_4__.dateTimeFormat),
/* harmony export */   "relativeFormat": () => (/* reexport safe */ _duration_RelativeFormat__WEBPACK_IMPORTED_MODULE_3__.relativeFormat),
/* harmony export */   "getNameOfWeekdays": () => (/* reexport safe */ _datetime_intlDisplayNames__WEBPACK_IMPORTED_MODULE_5__.getNameOfWeekdays),
/* harmony export */   "getMonthNames": () => (/* reexport safe */ _datetime_intlDisplayNames__WEBPACK_IMPORTED_MODULE_5__.getMonthNames),
/* harmony export */   "normalizeISODate": () => (/* reexport safe */ _datetime_dateTimeUtils__WEBPACK_IMPORTED_MODULE_6__.normalizeISODate),
/* harmony export */   "normalizeISOTime": () => (/* reexport safe */ _datetime_dateTimeUtils__WEBPACK_IMPORTED_MODULE_6__.normalizeISOTime),
/* harmony export */   "normalizeISODateTime": () => (/* reexport safe */ _datetime_dateTimeUtils__WEBPACK_IMPORTED_MODULE_6__.normalizeISODateTime),
/* harmony export */   "parseFormattedDate": () => (/* reexport safe */ _datetime_dateTimeUtils__WEBPACK_IMPORTED_MODULE_6__.parseFormattedDate),
/* harmony export */   "parseFormattedTime": () => (/* reexport safe */ _datetime_dateTimeUtils__WEBPACK_IMPORTED_MODULE_6__.parseFormattedTime),
/* harmony export */   "normalizeFormattedDateTime": () => (/* reexport safe */ _datetime_dateTimeUtils__WEBPACK_IMPORTED_MODULE_6__.normalizeFormattedDateTime),
/* harmony export */   "getCurrentDateString": () => (/* reexport safe */ _datetime_dateTimeUtils__WEBPACK_IMPORTED_MODULE_6__.getCurrentDateString),
/* harmony export */   "getISODateString": () => (/* reexport safe */ _datetime_dateTimeUtils__WEBPACK_IMPORTED_MODULE_6__.getISODateString),
/* harmony export */   "getISOTimeString": () => (/* reexport safe */ _datetime_dateTimeUtils__WEBPACK_IMPORTED_MODULE_6__.getISOTimeString),
/* harmony export */   "getCurrentTimeString": () => (/* reexport safe */ _datetime_dateTimeUtils__WEBPACK_IMPORTED_MODULE_6__.getCurrentTimeString),
/* harmony export */   "getDateFormatFromStyle": () => (/* reexport safe */ _datetime_dateTimeUtils__WEBPACK_IMPORTED_MODULE_6__.getDateFormatFromStyle),
/* harmony export */   "getTimeFormatFromStyle": () => (/* reexport safe */ _datetime_dateTimeUtils__WEBPACK_IMPORTED_MODULE_6__.getTimeFormatFromStyle),
/* harmony export */   "toDate": () => (/* reexport safe */ _datetime_intlFormat__WEBPACK_IMPORTED_MODULE_4__.toDate),
/* harmony export */   "isBefore": () => (/* reexport safe */ _localizationService__WEBPACK_IMPORTED_MODULE_7__.isBefore),
/* harmony export */   "isAfter": () => (/* reexport safe */ _localizationService__WEBPACK_IMPORTED_MODULE_7__.isAfter),
/* harmony export */   "formatDate": () => (/* reexport safe */ _localizationService__WEBPACK_IMPORTED_MODULE_7__.formatDate),
/* harmony export */   "formatTime": () => (/* reexport safe */ _localizationService__WEBPACK_IMPORTED_MODULE_7__.formatTime),
/* harmony export */   "formatDateUTC": () => (/* reexport safe */ _localizationService__WEBPACK_IMPORTED_MODULE_7__.formatDateUTC),
/* harmony export */   "formatDateTimeUTC": () => (/* reexport safe */ _localizationService__WEBPACK_IMPORTED_MODULE_7__.formatDateTimeUTC),
/* harmony export */   "parseTime": () => (/* reexport safe */ _localizationService__WEBPACK_IMPORTED_MODULE_7__.parseTime),
/* harmony export */   "parseDateTime": () => (/* reexport safe */ _localizationService__WEBPACK_IMPORTED_MODULE_7__.parseDateTime),
/* harmony export */   "parseDateTimeUTC": () => (/* reexport safe */ _localizationService__WEBPACK_IMPORTED_MODULE_7__.parseDateTimeUTC),
/* harmony export */   "toOtherCalendar": () => (/* reexport safe */ _localizationService__WEBPACK_IMPORTED_MODULE_7__.toOtherCalendar),
/* harmony export */   "fromOtherCalendar": () => (/* reexport safe */ _localizationService__WEBPACK_IMPORTED_MODULE_7__.fromOtherCalendar),
/* harmony export */   "toLocalizedDigits": () => (/* reexport safe */ _localizationService__WEBPACK_IMPORTED_MODULE_7__.toLocalizedDigits),
/* harmony export */   "fromLocalizedDigits": () => (/* reexport safe */ _localizationService__WEBPACK_IMPORTED_MODULE_7__.fromLocalizedDigits),
/* harmony export */   "syncWallTimeToUTC": () => (/* reexport safe */ _localizationService__WEBPACK_IMPORTED_MODULE_7__.syncWallTimeToUTC),
/* harmony export */   "syncUTCToWallTime": () => (/* reexport safe */ _localizationService__WEBPACK_IMPORTED_MODULE_7__.syncUTCToWallTime),
/* harmony export */   "isAuraL10NAvailable": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_8__.isAuraL10NAvailable)
/* harmony export */ });
/* harmony import */ var _address_AddressFormat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./address/AddressFormat */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/address/AddressFormat.js");
/* harmony import */ var _name_NameFormat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./name/NameFormat */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/name/NameFormat.js");
/* harmony import */ var _number_NumberFormat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./number/NumberFormat */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/NumberFormat.js");
/* harmony import */ var _duration_RelativeFormat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./duration/RelativeFormat */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/duration/RelativeFormat.js");
/* harmony import */ var _datetime_intlFormat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./datetime/intlFormat */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/intlFormat.js");
/* harmony import */ var _datetime_intlDisplayNames__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./datetime/intlDisplayNames */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/intlDisplayNames.js");
/* harmony import */ var _datetime_dateTimeUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./datetime/dateTimeUtils */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/dateTimeUtils.js");
/* harmony import */ var _localizationService__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./localizationService */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/localizationService.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/utils.js");












/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/localizationService.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/localizationService.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isBefore": () => (/* binding */ isBefore),
/* harmony export */   "isAfter": () => (/* binding */ isAfter),
/* harmony export */   "formatDateTimeUTC": () => (/* binding */ formatDateTimeUTC),
/* harmony export */   "formatDate": () => (/* binding */ formatDate),
/* harmony export */   "formatDateUTC": () => (/* binding */ formatDateUTC),
/* harmony export */   "formatTime": () => (/* binding */ formatTime),
/* harmony export */   "parseDateTimeUTC": () => (/* binding */ parseDateTimeUTC),
/* harmony export */   "parseDateTimeISO8601": () => (/* binding */ parseDateTimeISO8601),
/* harmony export */   "parseDateTime": () => (/* binding */ parseDateTime),
/* harmony export */   "syncUTCToWallTime": () => (/* binding */ syncUTCToWallTime),
/* harmony export */   "syncWallTimeToUTC": () => (/* binding */ syncWallTimeToUTC),
/* harmony export */   "toOtherCalendar": () => (/* binding */ toOtherCalendar),
/* harmony export */   "fromOtherCalendar": () => (/* binding */ fromOtherCalendar),
/* harmony export */   "toLocalizedDigits": () => (/* binding */ toLocalizedDigits),
/* harmony export */   "fromLocalizedDigits": () => (/* binding */ fromLocalizedDigits),
/* harmony export */   "parseTime": () => (/* binding */ parseTime),
/* harmony export */   "getNumberFormat": () => (/* binding */ getNumberFormat),
/* harmony export */   "duration": () => (/* binding */ duration),
/* harmony export */   "displayDuration": () => (/* binding */ displayDuration)
/* harmony export */ });
/* harmony import */ var lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/configProvider */ "./node_modules/lightning-base-components/src/lightning/configProvider/configProvider.js");
/* harmony import */ var lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lightning/iso8601Utils */ "./node_modules/lightning-base-components/src/lightning/iso8601Utils/iso8601Utils.js");
// TODO: remove mosst if not all of file when migrating off aura
// This is a library for all calls to the aura localizationService.


function isBefore(date1, date2, unit) {
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().isBefore(date1, date2, unit);
}
function isAfter(date1, date2, unit) {
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().isAfter(date1, date2, unit);
}
function formatDateTimeUTC(date) {
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().formatDateTimeUTC(date);
}
function formatDate(dateString, format, locale) {
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().formatDate(dateString, format, locale);
}
function formatDateUTC(dateString, format, locale) {
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().formatDateUTC(dateString, format, locale);
}
function formatTime(timeString, format) {
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().formatTime(timeString, format);
}
function parseDateTimeUTC(dateTimeString) {
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().parseDateTimeUTC(dateTimeString);
}
function parseDateTimeISO8601(dateTimeString) {
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().parseDateTimeISO8601(dateTimeString);
}
function parseDateTime(dateTimeString, format, strictMode) {
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().parseDateTime(dateTimeString, format, strictMode);
}
function syncUTCToWallTime(date, timeZone) {
  let converted = null; // eslint-disable-next-line new-cap

  (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().UTCToWallTime(date, timeZone, result => {
    converted = result;
  });
  return converted;
}
function syncWallTimeToUTC(date, timeZone) {
  let converted = null; // eslint-disable-next-line new-cap

  (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().WallTimeToUTC(date, timeZone, result => {
    converted = result;
  });
  return converted;
}
function toOtherCalendar(date) {
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().translateToOtherCalendar(date);
}
function fromOtherCalendar(date) {
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().translateFromOtherCalendar(date);
}
function toLocalizedDigits(input) {
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().translateToLocalizedDigits(input);
}
function fromLocalizedDigits(input) {
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().translateFromLocalizedDigits(input);
} // This belongs to localization service; i.e. getLocalizationService().parseTime()
// Should be removed after it's been added to the localization service

function parseTime(timeString, format, strictParsing) {
  if (!timeString) {
    return null;
  }

  if (!format) {
    if (!(0,lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_1__.isValidISOTimeString)(timeString)) {
      return null;
    }

    return parseDateTimeISO8601(timeString);
  }

  const parseString = timeString.replace(/(\d)([AaPp][Mm])/g, '$1 $2'); // Modifying the time string so that strict parsing doesn't break on minor deviations

  const parseFormat = format.replace(/(\b|[^h])h{2}(?!h)/g, '$1h').replace(/(\b|[^H])H{2}(?!H)/g, '$1H').replace(/(\b|[^m])m{2}(?!m)/g, '$1m').replace(/\s*A/g, ' A').trim();
  const acceptableFormats = [parseFormat]; // We want to be lenient and accept input values with seconds or milliseconds precision.
  // So even though we may display the time as 10:23 AM, we would accept input values like 10:23:30.555 AM.

  acceptableFormats.push(parseFormat.replace('m', 'm:s'), parseFormat.replace('m', 'm:s.S'), parseFormat.replace('m', 'm:s.SS'), parseFormat.replace('m', 'm:s.SSS')); // Start parsing from the most strict format (i.e. time with milliseconds).
  // The strict mode parsing of time strings using parseDateTime seems to be lenient for certain formats

  acceptableFormats.reverse();

  for (let i = 0; i < acceptableFormats.length; i++) {
    const time = parseDateTime(parseString, acceptableFormats[i], strictParsing);

    if (time) {
      return time;
    }
  }

  return null;
} // This is called from the numberFormat library when the value exceeds the safe length.

function getNumberFormat(format) {
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().getNumberFormat(format);
}
function duration(value, unit) {
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().duration(value, unit);
}
function displayDuration(value, withSuffix) {
  return (0,lightning_configProvider__WEBPACK_IMPORTED_MODULE_0__.getLocalizationService)().displayDuration(value, withSuffix);
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/name/NameFormat.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/name/NameFormat.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "name": () => (/* binding */ name)
/* harmony export */ });
// This is a library built from Globalization's repo
// https://git.soma.salesforce.com/Globalization/name.js
// This will be added/updated through a build process in the future

/* eslint-disable */
var data = {
  DEFAULT: {
    short_f: '%F %L',
    medium_f: '%F %M %L',
    long_f: '%S %F %M %L %X %I',
    input: 'SFMLXI'
  },
  vi: {
    short_f: '%L %F',
    medium_f: '%L %M %F',
    long_f: '%L %M %F %X %I',
    input: 'SLFMXI'
  },
  vi_VN: {
    _ref: 'vi'
  },
  hu: {
    short_f: '%L %F',
    medium_f: '%L %F',
    long_f: '%L %F %M %X %I',
    input: 'SLFMXI'
  },
  hu_HU: {
    _ref: 'hu'
  },
  ja: {
    short_f: '%L %F',
    medium_f: '%L %M %F',
    long_f: '%L %M %F %X %I',
    input: 'SLMFXI'
  },
  ja_JP: {
    _ref: 'ja'
  },
  ko: {
    _ref: 'ja'
  },
  ko_KR: {
    _ref: 'ja'
  },
  zh: {
    _ref: 'ja'
  },
  zh_CN: {
    _ref: 'ja'
  },
  zh_CN_PINYIN: {
    _ref: 'ja'
  },
  zh_CN_STROKE: {
    _ref: 'ja'
  },
  zh_HK: {
    _ref: 'ja'
  },
  zh_HK_STROKE: {
    _ref: 'ja'
  },
  zh_MO: {
    _ref: 'ja'
  },
  zh_SG: {
    _ref: 'ja'
  },
  zh_TW: {
    _ref: 'ja'
  },
  zh_TW_STROKE: {
    _ref: 'ja'
  }
}; // Define all available fields.

/**
 S: Salutation
 F: First Name(givenName)
 M: Middle Name
 L: Last Name(familyName)
 X: Suffix
 I: Informal Name
 */

var fieldConstants = {
  SALUTATION: Symbol('Salutation'),
  FIRST: Symbol('First Name'),
  MIDDLE: Symbol('Middle Name'),
  LAST: Symbol('Last Name'),
  SUFFIX: Symbol('Suffix'),
  INFORMAL: Symbol('Informal Name')
};

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ('value' in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError('Cannot call a class as a function');
  }
}

var Format = function Format(parts) {
  _classCallCheck(this, Format);

  this.parts = Object.freeze(parts);
  Object.freeze(this);
};
/**
 * Represents a field within the format
 */


var FieldFormatPart = function FieldFormatPart(field) {
  _classCallCheck(this, FieldFormatPart);

  this.field = field;
  this.type = 'field';
  Object.freeze(this);
};
/**
 * Represents text to be output directly
 */


var TextFormatPart = function TextFormatPart(text) {
  _classCallCheck(this, TextFormatPart);

  this.type = 'text';
  this.text = text;
  Object.freeze(this);
};

var fieldFormatParts = Object.freeze({
  SALUTATION: new FieldFormatPart(fieldConstants.SALUTATION),
  FIRST: new FieldFormatPart(fieldConstants.FIRST),
  MIDDLE: new FieldFormatPart(fieldConstants.MIDDLE),
  LAST: new FieldFormatPart(fieldConstants.LAST),
  SUFFIX: new FieldFormatPart(fieldConstants.SUFFIX),
  INFORMAL: new FieldFormatPart(fieldConstants.INFORMAL)
});

var FormatParser = function () {
  function FormatParser() {
    _classCallCheck(this, FormatParser);
  }

  _createClass(FormatParser, [{
    key: 'parse',

    /**
     * Parses the format
     * @param {string} fmt the format to be parsed
     * @returns {Format}
     */
    value: function parse(fmt) {
      var nodes = [];
      var textBuffer = ''; // parse the format string

      for (var i = 0; i < fmt.length; i = i + 1) {
        if (fmt[i] === '%') {
          i = i + 1; // move to the next character after %
          // end the last text buffer

          if (textBuffer.length > 0) {
            nodes.push(Object.freeze(new TextFormatPart(textBuffer)));
            textBuffer = '';
          }

          if (i >= fmt.length) {
            throw new Error('Unexpected end of format. Symbol at ' + (i - 1) + ' should be followed by a valid field code');
          }

          var code = fmt[i];

          switch (code) {
            case 'S':
              nodes.push(fieldFormatParts.SALUTATION);
              break;

            case 'F':
              nodes.push(fieldFormatParts.FIRST);
              break;

            case 'M':
              nodes.push(fieldFormatParts.MIDDLE);
              break;

            case 'L':
              nodes.push(fieldFormatParts.LAST);
              break;

            case 'X':
              nodes.push(fieldFormatParts.SUFFIX);
              break;

            case 'I':
              nodes.push(fieldFormatParts.INFORMAL);
              break;

            default:
              // TODO log the bad symbol and continue
              break;
          }
        } else {
          // if it wasn't a symbol, then just output the value directly
          textBuffer += fmt[i];
        }
      }

      if (textBuffer.length > 0) {
        nodes.push(new TextFormatPart(textBuffer));
      }

      return new Format(nodes);
    }
  }]);

  return FormatParser;
}();

var formatParser = new FormatParser();
var name = {
  /**
   * S: Salutation
   * F: First Name(givenName)
   * M: Middle Name
   * L: Last Name(familyName)
   * X: Suffix
   * I: Informal Name
   * @param {string} locale string, like zh_CN, zh_CN_PINYIN, or de.
   * @return {{short: string, medium: string, long: string, input: string}} format data
   */
  getNameInfoForLocale: function getNameInfoForLocale(localeStr) {
    var key = this.getFallback(localeStr);

    if (data[key]) {
      // Double check.
      var cloneNameInfo = Object.freeze(Object.assign({}, data[key]));
      return Object.freeze({
        name: cloneNameInfo
      });
    }
  },

  /**
   * S: Salutation
   * F: First Name(givenName)
   * M: Middle Name
   * L: Last Name(familyName)
   * X: Suffix
   * I: Informal Name
   * @param {string} locale string, like zh_CN, zh_CN_PINYIN, or de.
   * @return {string} format pattern
   */
  getNameFormatPatternMedium: function getNameFormatPatternMedium(localeStr) {
    var key = this.getFallback(localeStr);

    if (data[key]) {
      // Double check.
      return data[key].medium_f;
    }
  },

  /**
   * S: Salutation
   * F: First Name(givenName)
   * M: Middle Name
   * L: Last Name(familyName)
   * X: Suffix
   * I: Informal Name
   * @param {string} locale string, like zh_CN, zh_CN_PINYIN, or de.
   * @return {string} format pattern
   */
  getNameFormatPatternShort: function getNameFormatPatternShort(localeStr) {
    var key = this.getFallback(localeStr);

    if (data[key]) {
      // Double check.
      return data[key].short_f;
    }
  },

  /**
   * S: Salutation
   * F: First Name(givenName)
   * M: Middle Name
   * L: Last Name(familyName)
   * X: Suffix
   * I: Informal Name
   * @param {string} locale string, like zh_CN, zh_CN_PINYIN, or de.
   * @return {string} format pattern
   */
  getNameFormatPatternLong: function getNameFormatPatternLong(localeStr) {
    var key = this.getFallback(localeStr);

    if (data[key]) {
      // Double check.
      return data[key].long_f;
    }
  },

  /**
   * S: Salutation
   * F: First Name(givenName)
   * M: Middle Name
   * L: Last Name(familyName)
   * X: Suffix
   * I: Informal Name
   * @param {string} locale string, like zh_CN, zh_CN_PINYIN, or de.
   * @return {string} input order
   */
  getNameInputOrder: function getNameInputOrder(localeStr) {
    var key = this.getFallback(localeStr);

    if (data[key]) {
      // Double check.
      return data[key].input;
    }
  },

  /**
   * Format name values for given locale.
   * @param {string} locale string, like zh_CN, zh_CN_PINYIN, or de.
   * @param {{first: string, middle: string, last: string, salutation: string, suffix: string, informal: string}} values
   * @returns {string} the formatted name
   */
  formatNameShort: function formatNameShort(localeStr, values) {
    var key = this.getFallback(localeStr);

    if (data[key]) {
      // Double check.
      return this.buildName(data[key].short_f, values);
    }
  },

  /**
   * Format name values for given locale.
   * @param {string} locale string, like zh_CN, zh_CN_PINYIN, or de.
   * @param {{first: string, middle: string, last: string, salutation: string, suffix: string, informal: string}} values
   * @returns {string} the formatted name
   */
  formatNameMedium: function formatNameMedium(localeStr, values) {
    var key = this.getFallback(localeStr);

    if (data[key]) {
      // Double check.
      return this.buildName(data[key].medium_f, values);
    }
  },

  /**
   * Format name values for given locale.
   * @param {string} locale string, like zh_CN, zh_CN_PINYIN, or de.
   * @param {{first: string, middle: string, last: string, salutation: string, suffix: string, informal: string}} values
   * @returns {string} the formatted name
   */
  formatNameLong: function formatNameLong(localeStr, values) {
    var key = this.getFallback(localeStr);

    if (data[key]) {
      // Double check.
      return this.buildName(data[key].long_f, values);
    }
  },

  /**
   * Creates an array of address lines given the format and the values to use.
   * @param {string} pattern
   * @param @param {{first: string, middle: string, last: string, salutation: string, suffix: string, informal: string}} values
   * @returns {string} the text for use in the address
   */
  buildName: function buildName(pattern, values) {
    var format = formatParser.parse(pattern);
    var sb = [];

    for (var i = 0; i < format.parts.length; i++) {
      var part = format.parts[i];

      if (part.type === 'text') {
        sb.push(part.text);
      } else if (part.type === 'field') {
        if (part.field === fieldConstants.SALUTATION) {
          sb.push(values.salutation || '');
        } else if (part.field === fieldConstants.FIRST) {
          sb.push(values.first || '');
        } else if (part.field === fieldConstants.MIDDLE) {
          sb.push(values.middle || '');
        } else if (part.field === fieldConstants.LAST) {
          sb.push(values.last || '');
        } else if (part.field === fieldConstants.SUFFIX) {
          sb.push(values.suffix || '');
        } else if (part.field === fieldConstants.INFORMAL) {
          sb.push(values.informal || '');
        } else {}
      }
    }

    return sb.join('').trim().replace(/  /g, ' ');
  },
  // Resolve the reference by tracing down the _ref value.
  followReferences: function followReferences(key) {
    if (data[key] && data[key]._ref) {
      return this.followReferences(data[key]._ref);
    }

    return key;
  },
  // Get fall back key.
  getFallback: function getFallback(localeStr) {
    // Resolve the reference.
    var key = this.followReferences(localeStr);

    if (!data[key]) {
      return 'DEFAULT'; // Always fall back to 'US'.
    }

    return key;
  }
};


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/NumberFormat.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/NumberFormat.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "numberFormat": () => (/* binding */ numberFormat)
/* harmony export */ });
/* harmony import */ var _salesforce_i18n_currency__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @salesforce/i18n/currency */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-currency.js");
/* harmony import */ var _salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @salesforce/i18n/locale */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-locale.js");
/* harmony import */ var lightning_i18nService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/i18nService */ "./node_modules/lightning-base-components/src/lightning/i18nService/i18nService.js");
/* harmony import */ var _numberFormatFallback__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./numberFormatFallback */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/numberFormatFallback.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/utils.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/utils.js");






function numberFormat(options) {
  const currencyValue = {
    currency: options.currency || _salesforce_i18n_currency__WEBPACK_IMPORTED_MODULE_0__.default
  };
  const normalizedOpts = Object.assign({}, options, currencyValue);
  return {
    format: value => {
      // TODO: when migrating off aura just use getNumberFormat directly
      // TD-0117848 will need to be completed before migrating off
      // aura fallback should only be used when aura is available and value has
      // too many significant digits to work correctly with localizer
      const useFallback = _utils__WEBPACK_IMPORTED_MODULE_5__.isAuraL10NAvailable && value && (0,_utils__WEBPACK_IMPORTED_MODULE_4__.exceedsSafeLength)(value);
      const numberFormatter = useFallback ? (0,_numberFormatFallback__WEBPACK_IMPORTED_MODULE_3__.numberFormatFallback)(normalizedOpts) : (0,lightning_i18nService__WEBPACK_IMPORTED_MODULE_2__.getNumberFormat)(_salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_1__.default, normalizedOpts);
      return numberFormatter.format(value);
    }
  };
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/numberFormatFallback.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/numberFormatFallback.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "numberFormatFallback": () => (/* binding */ numberFormatFallback)
/* harmony export */ });
/* harmony import */ var _numberOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./numberOptions */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/numberOptions.js");
/* harmony import */ var _localizationService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../localizationService */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/localizationService.js");
// TODO: remove file when migrating off aura


function numberFormatFallback(options) {
  const skeleton = (0,_numberOptions__WEBPACK_IMPORTED_MODULE_0__.getSkeleton)(options);
  return {
    format: value => {
      return (0,_localizationService__WEBPACK_IMPORTED_MODULE_1__.getNumberFormat)(skeleton).format(value);
    }
  };
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/numberOptions.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/numberOptions.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getSkeleton": () => (/* binding */ getSkeleton)
/* harmony export */ });
/* harmony import */ var _salesforce_i18n_number_numberFormat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @salesforce/i18n/number.numberFormat */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.numberFormat.js");
/* harmony import */ var _salesforce_i18n_number_percentFormat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @salesforce/i18n/number.percentFormat */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.percentFormat.js");
/* harmony import */ var _salesforce_i18n_number_currencyFormat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/i18n/number.currencyFormat */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.currencyFormat.js");
/* harmony import */ var _salesforce_i18n_currency__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @salesforce/i18n/currency */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-currency.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/utils.js");
// TODO: remove file when migrating off aura






const isDefaultCurrency = options => {
  return !options.currency || _salesforce_i18n_currency__WEBPACK_IMPORTED_MODULE_3__.default === options.currency;
};

const getDefaultSkeleton = options => {
  if (options.style === _utils__WEBPACK_IMPORTED_MODULE_4__.STYLE.CURRENCY) {
    return _salesforce_i18n_number_currencyFormat__WEBPACK_IMPORTED_MODULE_2__.default;
  } else if (options.style === _utils__WEBPACK_IMPORTED_MODULE_4__.STYLE.PERCENT) {
    return _salesforce_i18n_number_percentFormat__WEBPACK_IMPORTED_MODULE_1__.default;
  }

  return _salesforce_i18n_number_numberFormat__WEBPACK_IMPORTED_MODULE_0__.default;
};
/**
 * Function translating provided number formatting options to a
 * string that can be passed into Aura localization service.
 *
 * @param {Object} options - number formatting options
 * @returns {string} representing provided options as a string -
 * e.g. "$#,##,##0.00#"
 */


const getSkeleton = options => {
  const defaultSkeleton = getDefaultSkeleton(options);
  let skeleton = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.updateFractionPart)(defaultSkeleton, options);
  skeleton = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.updateIntegerPart)(skeleton, options);

  if (!isDefaultCurrency(options)) {
    skeleton = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.updateCurrencySymbol)(skeleton, (0,_utils__WEBPACK_IMPORTED_MODULE_4__.getCurrency)(options), options);
  }

  return skeleton;
};

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/utils.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/utils.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "STYLE": () => (/* binding */ STYLE),
/* harmony export */   "updateFractionPart": () => (/* binding */ updateFractionPart),
/* harmony export */   "updateIntegerPart": () => (/* binding */ updateIntegerPart),
/* harmony export */   "getCurrency": () => (/* binding */ getCurrency),
/* harmony export */   "updateCurrencySymbol": () => (/* binding */ updateCurrencySymbol),
/* harmony export */   "exceedsSafeLength": () => (/* binding */ exceedsSafeLength)
/* harmony export */ });
/* harmony import */ var _salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @salesforce/i18n/locale */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-locale.js");
/* harmony import */ var lightning_i18nService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lightning/i18nService */ "./node_modules/lightning-base-components/src/lightning/i18nService/i18nService.js");
// TODO: when migrating off aura, remove functions
// and variables only needed for numberOptions

 // For possible parameters, see the Intl.NumberFormat spec:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat#Parameters

const STYLE = {
  DECIMAL: 'decimal',
  CURRENCY: 'currency',
  PERCENT: 'percent'
};
const CURRENCY_DISPLAY = {
  CODE: 'code',
  // USD
  SYMBOL: 'symbol',
  // $
  NAME: 'name' // US Dollars

};
const SAFE_NUM_LENGTH = 15;
const SAFE_NUM_REGEXP = /0+$/;

function toNumber(value) {
  return parseInt(value, 10);
}
/**
 * Gets portion of skeleton for decimal portion of number
 */


function getFractionSkeleton(skeleton) {
  const format = skeleton.split(';')[0];
  return format.split('.')[1] || '';
}
/**
 * Sets minimum and maximum fraction digits in options based on
 * default skeleton and current values; needed to adjust skeleton
 *
 * @param {string} skeleton
 */


function normalizeFractionDigits(skeleton, options) {
  const fractionSkeleton = getFractionSkeleton(skeleton);
  const defaultMinimum = fractionSkeleton.replace(/[^0]/g, '').length; // number of 0s in skeleton

  const defaultMaximum = fractionSkeleton.replace(/[^0#]/g, '').length; // number of 0s and #s in skeleton

  const minDigits = toNumber(options.minimumFractionDigits);
  const maxDigits = toNumber(options.maximumFractionDigits);

  if (!isFinite(options.minimumFractionDigits)) {
    // min fraction digits shouldn't be more than max digits
    options.minimumFractionDigits = Math.min(defaultMinimum, isNaN(maxDigits) ? defaultMinimum : maxDigits);
  }

  if (!isFinite(options.maximumFractionDigits) || maxDigits < minDigits) {
    // max fraction digits shouldn't be less than min digits
    options.maximumFractionDigits = Math.max(defaultMaximum, isNaN(minDigits) ? defaultMaximum : minDigits);
  }
}
/**
 * Gets the fraction/decimal portion of the number formatting
 * string based on the provided formatting options
 *
 * @param {Object} options - number formatting options
 * @returns {string}
 */


function getFractionPart(options) {
  const {
    minimumFractionDigits,
    maximumFractionDigits
  } = options;
  return '.' + '0'.repeat(minimumFractionDigits) + '#'.repeat(maximumFractionDigits - minimumFractionDigits);
}
/**
 * Updates "skeleton" for number format
 * based on the formatting options provided
 *
 * @param {string} skeleton - outline for number format
 * @param {Object} options - number formatting options
 * @returns {string} updated skeleton
 */


function updateFractionPart(skeleton, options) {
  normalizeFractionDigits(skeleton, options);
  const fractionPart = getFractionPart(options);
  return addFractionsToPattern(skeleton, fractionPart);
}
/**
 * Updates provided pattern to use provided
 * fractionPart for fraction/decimal portion
 * @param {string} pattern - current string for number format
 * @param {string} fractionPart - string to use for fraction part of number formatting
 * @returns {string} updated pattern
 */

function addFractionsToPattern(pattern, fractionPart) {
  if (!fractionPart) {
    return pattern;
  } // if pattern has two formats (one for positive and one for negative numbers), add fractions to both patterns


  if (pattern.indexOf(';') > 0) {
    const [positivePattern, negativePattern] = pattern.split(';');
    return `${addFractionsToPattern(positivePattern, fractionPart)};${addFractionsToPattern(negativePattern, fractionPart)}`;
  } // If the pattern already has a fraction part, replace it with the fractions calculated from the options


  if (pattern.indexOf('.') > 0) {
    return pattern.replace(/\.(0|#)*/, fractionPart);
  } // If the pattern doesn't have a fraction part, we need to add it to the pattern
  // We need to add the fraction part after the last digit (represented by '0' or '#')


  const position = Math.max(pattern.lastIndexOf('0'), pattern.lastIndexOf('#')) + 1;
  return [pattern.slice(0, position), fractionPart, pattern.slice(position)].join('');
}
/**
 * Gets count of numbers in last "grouping" before decimal
 * e.g. for en-IN pattern "#,##,##0.###" this returns 3
 * @param {Object} skeleton
 * @returns {Number}
 */


function getGroupingCount(skeleton) {
  const match = skeleton.match(/,[#0]*\./);
  return match ? match[0].length - 2 : 0;
}
/**
 * Updates integer part of string representation for number format
 * for number as needed based on minimumIntegerDigits option
 *
 * @param {string} skeleton - string of default number format
 * @param {Object} options - number format options
 * @returns skeleton with integer part updated for options
 */


function updateIntegerPart(skeleton, options) {
  const minimumIntegerDigits = options.minimumIntegerDigits;
  const groupingCount = getGroupingCount(skeleton);

  if (!minimumIntegerDigits) {
    return skeleton;
  }

  if (minimumIntegerDigits <= groupingCount) {
    // handle case where number will include grouping e.g., "1,234"
    return skeleton.replace(/,[#0]*\./, ',' + '#'.repeat(groupingCount - minimumIntegerDigits) + '0'.repeat(minimumIntegerDigits) + '.');
  } // handle case where number will not include grouping e.g., "123"


  return skeleton.replace(/[#0]*\./, '0'.repeat(minimumIntegerDigits - groupingCount) + ',' + '0'.repeat(groupingCount) + '.');
}
/**
 * Gets string for how to display currency for provided
 * currency code and display style by formatting value
 * and removing remainder of string a set
 *
 * @param {string} code - currency code to format number with
 * @param {string} currencyDisplay - style for displaying currency
 * @returns {string} for currency
 */

function getBestMatchCurrencySymbol(code, currencyDisplay) {
  const opts = {
    style: STYLE.CURRENCY,
    currency: code,
    minimumFractionDigits: 0
  };

  if (currencyDisplay) {
    opts.currencyDisplay = currencyDisplay;
  }

  const nf = (0,lightning_i18nService__WEBPACK_IMPORTED_MODULE_1__.getNumberFormat)(_salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_0__.default, opts);
  return nf.format(2).replace(/2/g, '');
}
/**
 * Returns string for how currency should be displayed
 * based on provided number formatting options
 *
 * @param {Object} options - number formatting options
 * @returns {string} for how currency will show in formatted number
 */


function getCurrency(options) {
  const currencyDisplay = options.currencyDisplay || CURRENCY_DISPLAY.SYMBOL;

  if (currencyDisplay === CURRENCY_DISPLAY.SYMBOL || currencyDisplay === CURRENCY_DISPLAY.NAME) {
    return getBestMatchCurrencySymbol(options.currency, currencyDisplay);
  }

  return options.currency; // if displaying code no formatting needed
}
/**
 * Updates "skeleton" to include currency code/name
 * based on provided currencyCode and options
 *
 * @param {string} skeleton - current number formatting skeleton
 * @param {string} currencyCode - currency code to use
 * @param {Object} options - number formatting options
 * @returns {string} updated skeleton
 */

function updateCurrencySymbol(skeleton, currencyCode, options) {
  const symbol = String.fromCharCode(164); // corresponds to "¤"

  if (options.currencyDisplay === CURRENCY_DISPLAY.NAME) {
    // append the currency code at the end
    return skeleton.replace(symbol, '') + currencyCode;
  }

  return skeleton.replace(symbol, currencyCode);
}
/**
 * Determines whether or not the provided value has more
 * significant digits than what Intl.NumberFormat supports
 *
 * @param {Number|String} value - value to check
 * @returns {boolean} true if value exceeds safe length for Intl.NumberFormat
 */

function exceedsSafeLength(value) {
  const numberAsString = value.toString();
  const [intPart, fractionPart] = numberAsString.split('.'); // This count strips out insignificant trailing zeroes in the fraction part of the number.

  const digitCount = intPart.length + (fractionPart ? fractionPart.replace(SAFE_NUM_REGEXP, '').length : 0);
  return digitCount >= SAFE_NUM_LENGTH;
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/utils.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/utils.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isAuraL10NAvailable": () => (/* binding */ isAuraL10NAvailable),
/* harmony export */   "getDateTimeErrorMessage": () => (/* binding */ getDateTimeErrorMessage)
/* harmony export */ });
/**
 * Used to determine if aura localization service is available
 * This should be true on-core and false off-core, and will
 * no longer be needed when we fully migrate off aura's service
 */
const isAuraL10NAvailable = window.$A && window.$A.localizationService;
/**
 * Returns string to use when throwing an error message
 * if an invalid value is provided when parsing a datetime
 */

const getDateTimeErrorMessage = value => `datetime component: The value attribute accepts a valid ISO8601 formatted string ` + `with timezone offset. but we are getting the ${typeof value} value "${value}" instead.`;

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/iso8601Utils/iso8601Utils.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/iso8601Utils/iso8601Utils.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "STANDARD_TIME_FORMAT": () => (/* binding */ STANDARD_TIME_FORMAT),
/* harmony export */   "STANDARD_DATE_FORMAT": () => (/* binding */ STANDARD_DATE_FORMAT),
/* harmony export */   "TIME_SEPARATOR": () => (/* binding */ TIME_SEPARATOR),
/* harmony export */   "isValidISODateTimeString": () => (/* binding */ isValidISODateTimeString),
/* harmony export */   "isValidISOTimeString": () => (/* binding */ isValidISOTimeString),
/* harmony export */   "removeTimeZoneSuffix": () => (/* binding */ removeTimeZoneSuffix),
/* harmony export */   "padMilliseconds": () => (/* binding */ padMilliseconds)
/* harmony export */ });
// TODO: remove file when migrating off aura

/*
 * Regex to test a string for an ISO8601 Date. The following formats are matched.
 *
 *  YYYY
 *  YYYY-MM
 *  YYYY-MM-DD
 *  YYYY-MM-DDThh:mmTZD
 *  YYYY-MM-DDThh:mm:ssTZD
 *  YYYY-MM-DDThh:mm:ss.STZD
 *
 *
 * @see: https://www.w3.org/TR/NOTE-datetime
 */
const ISO8601_STRICT_PATTERN = /^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d[:]?\d\d)|Z)?)?)?)?$/i;
/* Regex to test a string for an ISO8601 partial time or full time:
 * hh:mm
 * hh:mm:ss
 * hh:mm:ss.S
 * full time = partial time + TZD
 */

const ISO8601_TIME_PATTERN = /^\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d[:]?\d\d)|Z)?$/i;
const STANDARD_TIME_FORMAT = 'HH:mm:ss.SSS';
const STANDARD_DATE_FORMAT = 'YYYY-MM-DD';
const TIME_SEPARATOR = 'T';
const TIMEZONE_INDICATOR = /(Z|([+-])(\d{2})[:]?(\d{2}))$/i;
function isValidISODateTimeString(dateTimeString) {
  return isValidISO8601String(dateTimeString) && isValidDate(dateTimeString);
}
function isValidISOTimeString(timeString) {
  if (!isValidISO8601TimeString(timeString)) {
    return false;
  }

  const timeOnly = removeTimeZoneSuffix(timeString);
  return isValidDate(`2018-09-09T${timeOnly}Z`);
}
function removeTimeZoneSuffix(dateTimeString) {
  if (typeof dateTimeString === 'string') {
    return dateTimeString.split(TIMEZONE_INDICATOR)[0];
  }

  return dateTimeString;
}
/**
 * Ensures that any valid ISO string with a milliseconds
 * component has exactly three digits
 *
 * @param {any} dateTimeString
 * @returns {any}
 */

function padMilliseconds(dateTimeString) {
  if (typeof dateTimeString === 'string' && (isValidDate(dateTimeString) || isValidISOTimeString(dateTimeString))) {
    const millisecondIndex = dateTimeString.indexOf('.');
    let timezoneIndex = dateTimeString.search(TIMEZONE_INDICATOR);

    if (timezoneIndex === -1) {
      timezoneIndex = dateTimeString.length;
    } // if milliseconds present, make sure exactly 3 digits present


    if (millisecondIndex !== -1) {
      const milliseconds = dateTimeString.substring(millisecondIndex + 1, timezoneIndex);
      let newMilliseconds = milliseconds;

      if (milliseconds.length > 3) {
        // if more than 3 digits, cut to three digits
        newMilliseconds = newMilliseconds.substring(0, 3);
      } else if (milliseconds.length < 3) {
        // if less than 3 digits, add zeros to make it 3 digits
        const extraZeros = '0'.repeat(3 - milliseconds.length);
        newMilliseconds = `${newMilliseconds}${extraZeros}`;
      } // replace old milliseconds with new 3 digit milliseconds


      const start = dateTimeString.substring(0, millisecondIndex);
      const end = dateTimeString.substring(timezoneIndex);
      return `${start}.${newMilliseconds}${end}`;
    }
  }

  return dateTimeString;
}

function isValidISO8601String(dateTimeString) {
  if (typeof dateTimeString !== 'string') {
    return false;
  }

  return ISO8601_STRICT_PATTERN.test(dateTimeString);
}

function isValidISO8601TimeString(timeString) {
  if (typeof timeString !== 'string') {
    return false;
  }

  return ISO8601_TIME_PATTERN.test(timeString);
}

function isValidDate(value) {
  // Date.parse returns NaN if the argument doesn't represent a valid date
  const timeStamp = Date.parse(value);
  return isFinite(timeStamp);
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/layout/layout.css":
/*!********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/layout/layout.css ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function stylesheet(useActualHostSelector, token) {
  var shadowSelector = token ? ("[" + token + "]") : "";
  var hostSelector = token ? ("[" + token + "-host]") : "";
  return ["@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {.slds-slot", shadowSelector, " {display: flex;}}"].join('');
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([stylesheet]);

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/layout/layout.html":
/*!*********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/layout/layout.html ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _layout_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./layout.css */ "./node_modules/lightning-base-components/src/lightning/layout/layout.css");
/* harmony import */ var _layout_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layout.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");





function tmpl($api, $cmp, $slotset, $ctx) {
  const {s: api_slot} = $api;
  return [api_slot("", {
    classMap: {
      "slds-slot": true
    },
    key: 0
  }, [], $slotset)];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_2__.registerTemplate)(tmpl));
tmpl.slots = [""];
tmpl.stylesheets = [];


if (_layout_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _layout_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_layout_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _layout_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-layout_layout"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/layout/layout.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/layout/layout.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _layout_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layout.html */ "./node_modules/lightning-base-components/src/lightning/layout/layout.html");
/* harmony import */ var _styleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./styleUtils */ "./node_modules/lightning-base-components/src/lightning/layout/styleUtils.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");




/**
 * Represents a responsive grid system for arranging containers on a page.
 */

class LightningLayout extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  constructor(...args) {
    super(...args);
    this._horizontalAlign = void 0;
    this._verticalAlign = void 0;
    this._pullToBoundary = void 0;
    this._multipleRows = void 0;
    this._layoutClass = [];
  }

  /**
   * Determines how to spread the layout items horizontally.
   * The alignment options are center, space, spread, and end.
   * @type {string}
   * @default
   */
  get horizontalAlign() {
    return this._horizontalAlign;
  }

  set horizontalAlign(value) {
    this._horizontalAlign = (0,_styleUtils__WEBPACK_IMPORTED_MODULE_2__.normalizeParam)(value, _styleUtils__WEBPACK_IMPORTED_MODULE_2__.HORIZONTAL_ALIGN);
    this.updateClassList();
  }

  /**
   * Determines how to align the layout items vertically in the container.
   * The alignment options are start, center, end, and stretch.
   * @type {string}
   * @default
   */
  get verticalAlign() {
    return this._verticalAlign;
  }

  set verticalAlign(value) {
    this._verticalAlign = (0,_styleUtils__WEBPACK_IMPORTED_MODULE_2__.normalizeParam)(value, _styleUtils__WEBPACK_IMPORTED_MODULE_2__.VERTICAL_ALIGN);
    this.updateClassList();
  }

  /**
   * Pulls layout items to the layout boundaries and corresponds
   * to the padding size on the layout item. Possible values are small, medium, or large.
   * @type {string}
   * @default
   *
   */
  get pullToBoundary() {
    return this._pullToBoundary;
  }

  set pullToBoundary(value) {
    this._pullToBoundary = (0,_styleUtils__WEBPACK_IMPORTED_MODULE_2__.normalizeParam)(value, _styleUtils__WEBPACK_IMPORTED_MODULE_2__.BOUNDARY);
    this.updateClassList();
  }

  /**
   * If present, layout items wrap to the following line when they exceed the layout width.
   * @type {boolean}
   * @default false
   */
  get multipleRows() {
    return this._multipleRows || false;
  }

  set multipleRows(value) {
    this._multipleRows = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_3__.normalizeBoolean)(value);
    this.updateClassList();
  }

  connectedCallback() {
    this.updateClassList();
  }

  updateClassList() {
    this.classList.remove(...this._layoutClass);
    const config = (0,_styleUtils__WEBPACK_IMPORTED_MODULE_2__.computeLayoutClass)(this.horizontalAlign, this.verticalAlign, this.pullToBoundary, this.multipleRows);
    this._layoutClass = Object.keys(config);
    this.classList.add(...this._layoutClass);
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningLayout, {
  publicProps: {
    horizontalAlign: {
      config: 3
    },
    verticalAlign: {
      config: 3
    },
    pullToBoundary: {
      config: 3
    },
    multipleRows: {
      config: 3
    }
  },
  track: {
    _horizontalAlign: 1,
    _verticalAlign: 1,
    _pullToBoundary: 1,
    _multipleRows: 1
  },
  fields: ["_layoutClass"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningLayout, {
  tmpl: _layout_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/layout/styleUtils.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/layout/styleUtils.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VERTICAL_ALIGN": () => (/* binding */ VERTICAL_ALIGN),
/* harmony export */   "BOUNDARY": () => (/* binding */ BOUNDARY),
/* harmony export */   "HORIZONTAL_ALIGN": () => (/* binding */ HORIZONTAL_ALIGN),
/* harmony export */   "normalizeParam": () => (/* binding */ normalizeParam),
/* harmony export */   "computeLayoutClass": () => (/* binding */ computeLayoutClass)
/* harmony export */ });
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var lightning_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lightning/utils */ "./node_modules/lightning-base-components/src/lightning/utils/utils.js");


const HALIN_CLASS = {
  center: 'slds-grid_align-center',
  space: 'slds-grid_align-space',
  spread: 'slds-grid_align-spread',
  end: 'slds-grid_align-end'
};
const VALIN_CLASS = {
  start: 'slds-grid_vertical-align-start',
  center: 'slds-grid_vertical-align-center',
  end: 'slds-grid_vertical-align-end',
  stretch: 'slds-grid_vertical-stretch'
};
const BOUNDARY_CLASS = {
  small: 'slds-grid_pull-padded',
  medium: 'slds-grid_pull-padded-medium',
  large: 'slds-grid_pull-padded-large'
};
const VERTICAL_ALIGN = Object.keys(VALIN_CLASS);
const BOUNDARY = Object.keys(BOUNDARY_CLASS);
const HORIZONTAL_ALIGN = Object.keys(HALIN_CLASS);
const ROWS_CLASS = 'slds-wrap';
const GRID_CLASS = 'slds-grid';
function normalizeParam(value, valid, fallback) {
  value = value ? value.toLowerCase() : ' ';
  return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__.normalizeString)(value, {
    fallbackValue: fallback || ' ',
    validValues: valid || []
  });
}
function computeLayoutClass(hAlign, vAlign, boundary, multiRows) {
  const computedClass = (0,lightning_utils__WEBPACK_IMPORTED_MODULE_1__.classSet)(GRID_CLASS);

  if (hAlign !== ' ' && HALIN_CLASS[hAlign]) {
    computedClass.add(HALIN_CLASS[hAlign]);
  }

  if (vAlign !== ' ' && VALIN_CLASS[vAlign]) {
    computedClass.add(VALIN_CLASS[vAlign]);
  }

  if (boundary !== ' ' && BOUNDARY_CLASS[boundary]) {
    computedClass.add(BOUNDARY_CLASS[boundary]);
  }

  if (multiRows) {
    computedClass.add(ROWS_CLASS);
  }

  return computedClass;
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/layoutItem/layoutItem.html":
/*!*****************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/layoutItem/layoutItem.html ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _layoutItem_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./layoutItem.css */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var _layoutItem_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layoutItem.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");





function tmpl($api, $cmp, $slotset, $ctx) {
  const {s: api_slot} = $api;
  return [api_slot("", {
    key: 0
  }, [], $slotset)];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_2__.registerTemplate)(tmpl));
tmpl.slots = [""];
tmpl.stylesheets = [];


if (_layoutItem_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _layoutItem_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_layoutItem_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _layoutItem_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-layoutItem_layoutItem"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/layoutItem/layoutItem.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/layoutItem/layoutItem.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _layoutItem_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layoutItem.html */ "./node_modules/lightning-base-components/src/lightning/layoutItem/layoutItem.html");
/* harmony import */ var _styleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./styleUtils */ "./node_modules/lightning-base-components/src/lightning/layoutItem/styleUtils.js");



/**
 * The basic element in a lightning-layout component.
 * A layout item groups information together to define visual grids, spacing, and sections.
 * @slot default Placeholder for your content in lightning-layout-item.
 */

class LightningLayoutItem extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  constructor(...args) {
    super(...args);
    this._flexibility = void 0;
    this._alignmentBump = void 0;
    this._padding = void 0;
    this._size = void 0;
    this._smallDeviceSize = void 0;
    this._mediumDeviceSize = void 0;
    this._largeDeviceSize = void 0;
    this._layoutClass = [];
  }

  /**
   * Make the item fluid so that it absorbs any extra space in its
   * container or shrinks when there is less space. Allowed values are:
   * auto (columns grow or shrink equally as space allows),
   * shrink (columns shrink equally as space decreases),
   * no-shrink (columns don't shrink as space reduces),
   * grow (columns grow equally as space increases),
   * no-grow (columns don't grow as space increases),
   * no-flex (columns don't grow or shrink as space changes).
   * Use a comma-separated value for multiple options, such as 'auto, no-shrink'.
   * @type {object}
   */
  get flexibility() {
    return this._flexibility;
  }

  set flexibility(value) {
    this._flexibility = (0,_styleUtils__WEBPACK_IMPORTED_MODULE_2__.normalizeFlexibility)(value);
    this.updateClassList();
  }

  /**
   * Specifies a direction to bump the alignment of adjacent layout items. Allowed values are left, top, right, bottom.
   * @type {string}
   */
  get alignmentBump() {
    return this._alignmentBump;
  }

  set alignmentBump(value) {
    this._alignmentBump = (0,_styleUtils__WEBPACK_IMPORTED_MODULE_2__.normalizeDirection)(value);
    this.updateClassList();
  }

  /**
   * Sets padding to either the right and left sides of a container,
   * or all sides of a container. Allowed values are horizontal-small,
   * horizontal-medium, horizontal-large, around-small, around-medium, around-large.
   * @type {string}
   */
  get padding() {
    return this._padding;
  }

  set padding(value) {
    this._padding = (0,_styleUtils__WEBPACK_IMPORTED_MODULE_2__.normalizePadding)(value);
    this.updateClassList();
  }

  /**
   * If the viewport is divided into 12 parts, size indicates the
   * relative space the container occupies. Size is expressed as
   * an integer from 1 through 12. This applies for all device-types.
   * @type {number}
   */
  get size() {
    return this._size;
  }

  set size(value) {
    this._size = (0,_styleUtils__WEBPACK_IMPORTED_MODULE_2__.normalizeSize)(value);
    this.validateSize();
    this.updateClassList();
  }

  /**
   * If the viewport is divided into 12 parts, this attribute indicates
   * the relative space the container occupies on device-types larger than
   * mobile. It is expressed as an integer from 1 through 12.
   * @type {number}
   */
  get smallDeviceSize() {
    return this._smallDeviceSize;
  }

  set smallDeviceSize(value) {
    this._smallDeviceSize = (0,_styleUtils__WEBPACK_IMPORTED_MODULE_2__.normalizeSize)(value);
    this.validateSize();
    this.updateClassList();
  }

  /**
   * If the viewport is divided into 12 parts, this attribute indicates
   * the relative space the container occupies on device-types larger than
   * tablet. It is expressed as an integer from 1 through 12.
   * @type {number}
   */
  get mediumDeviceSize() {
    return this._mediumDeviceSize;
  }

  set mediumDeviceSize(value) {
    this._mediumDeviceSize = (0,_styleUtils__WEBPACK_IMPORTED_MODULE_2__.normalizeSize)(value);
    this.validateSize();
  }

  /**
   * If the viewport is divided into 12 parts, this attribute indicates
   * the relative space the container occupies on device-types larger than
   * desktop. It is expressed as an integer from 1 through 12.
   * @type {number}
   */
  get largeDeviceSize() {
    return this._largeDeviceSize;
  }

  set largeDeviceSize(value) {
    this._largeDeviceSize = (0,_styleUtils__WEBPACK_IMPORTED_MODULE_2__.normalizeSize)(value);
    this.validateSize();
    this.updateClassList();
  }

  connectedCallback() {
    this.updateClassList();
  }

  updateClassList() {
    this.classList.remove(...this._layoutClass);
    const config = (0,_styleUtils__WEBPACK_IMPORTED_MODULE_2__.computeLayoutClass)({
      default: this.size,
      small: this.smallDeviceSize,
      medium: this.mediumDeviceSize,
      large: this.largeDeviceSize
    }, this.flexibility, this.padding, this.alignmentBump);
    this._layoutClass = Object.keys(config);
    this.classList.add(...this._layoutClass);
  }

  validateSize() {
    (0,_styleUtils__WEBPACK_IMPORTED_MODULE_2__.validateSize)(this.size, this.smallDeviceSize, this.mediumDeviceSize, this.largeDeviceSize);
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningLayoutItem, {
  publicProps: {
    flexibility: {
      config: 3
    },
    alignmentBump: {
      config: 3
    },
    padding: {
      config: 3
    },
    size: {
      config: 3
    },
    smallDeviceSize: {
      config: 3
    },
    mediumDeviceSize: {
      config: 3
    },
    largeDeviceSize: {
      config: 3
    }
  },
  track: {
    _flexibility: 1,
    _alignmentBump: 1,
    _padding: 1,
    _size: 1,
    _smallDeviceSize: 1,
    _mediumDeviceSize: 1,
    _largeDeviceSize: 1
  },
  fields: ["_layoutClass"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningLayoutItem, {
  tmpl: _layoutItem_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/layoutItem/styleUtils.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/layoutItem/styleUtils.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "STYLE_ERROR": () => (/* binding */ STYLE_ERROR),
/* harmony export */   "normalizeDirection": () => (/* binding */ normalizeDirection),
/* harmony export */   "normalizePadding": () => (/* binding */ normalizePadding),
/* harmony export */   "normalizeFlexibility": () => (/* binding */ normalizeFlexibility),
/* harmony export */   "normalizeSize": () => (/* binding */ normalizeSize),
/* harmony export */   "computeLayoutClass": () => (/* binding */ computeLayoutClass),
/* harmony export */   "validateSize": () => (/* binding */ validateSize)
/* harmony export */ });
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var lightning_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lightning/utils */ "./node_modules/lightning-base-components/src/lightning/utils/utils.js");


const SIZE_MIN = 1;
const SIZE_MAX = 12;
const DEFAULT_LAYOUT_SIZE = {
  default: null,
  small: null,
  medium: null,
  large: null
};
const PADDING = ['horizontal-small', 'horizontal-medium', 'horizontal-large', 'around-small', 'around-medium', 'around-large'];
const PADDING_CLASS = {
  'slds-p-right_small': 'horizontal-small',
  'slds-p-left_small': 'horizontal-small',
  'slds-p-right_medium': 'horizontal-medium',
  'slds-p-left_medium': 'horizontal-medium',
  'slds-p-right_large': 'horizontal-large',
  'slds-p-left_large': 'horizontal-large',
  'slds-p-around_small': 'around-small',
  'slds-p-around_medium': 'around-medium',
  'slds-p-around_large': 'around-large'
};
const FLEXIBILITY = ['auto', 'shrink', 'no-shrink', 'grow', 'no-grow', 'no-flex'];
const FLEX_CLASS = {
  'slds-col': 'auto',
  'slds-grow': 'grow',
  'slds-shrink': 'shrink',
  'slds-grow-none': 'no-grow',
  'slds-shrink-none': 'no-shrink',
  'slds-no-flex': 'no-flex'
};
const SIZE_CLASS = {
  default: 'slds-size_',
  small: 'slds-small-size_',
  medium: 'slds-medium-size_',
  large: 'slds-large-size_'
};
const DIRECTION = ['left', 'top', 'right', 'bottom'];
const STYLE_ERROR = {
  FLEX_CONFLICT: 'You cannot have `flexibility` value to be set to `auto` and `no-flex` together for <lightning-layout-item> component',
  SIZE_RANGE: 'Invalid `size` attribute for <lightning-layout-item> component. The `size` attribute should be an integer between 1 and 12',
  SMALL_SIZE_RANGE: 'Invalid `smallDeviceSize` attribute for <lightning-layout-item> component. The `smallDeviceSize` attribute should be an integer between 1 and 12',
  MEDIUM_SIZE_RANGE: 'Invalid `mediumDeviceSize` attribute for <lightning-layout-item> component. The `mediumDeviceSize` attribute should be an integer between 1 and 12',
  LARGE_SIZE_RANGE: 'Invalid `largeDeviceSize` attribute for <lightning-layout-item> component. The `largeDeviceSize` attribute should be an integer between 1 and 12',
  SIZE_REQUIRED: 'You cannot have device specific size attributes for <lightning-layout-item> component without specifying the `size` attribute'
};

function hasConflict(value) {
  return value.some(item => item === 'auto') && value.some(item => item === 'no-flex');
}

function toArray(value) {
  if (Array.isArray(value)) {
    return value;
  } else if (typeof value === 'string') {
    value = value.split(',');
    return value.map(item => item.trim());
  }

  return [value];
}

function normalizeDirection(value, fallback) {
  value = value ? value.toLowerCase() : ' ';
  return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__.normalizeString)(value, {
    fallbackValue: fallback || '',
    validValues: DIRECTION
  });
}
function normalizePadding(value) {
  value = value ? value.toLowerCase() : ' ';
  return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__.normalizeString)(value, {
    fallbackValue: ' ',
    validValues: PADDING
  });
}
function normalizeFlexibility(value) {
  value = toArray(value);

  if (hasConflict(value)) {
    throw new Error(STYLE_ERROR.FLEX_CONFLICT);
  }

  return value.filter(item => FLEXIBILITY.some(allowed => item === allowed));
}
function normalizeSize(value) {
  if (value != null) {
    const size = parseFloat(value);
    return isNaN(size) ? null : Math.round(size);
  }

  return value;
}

function computePaddingClass(padding, computedClass) {
  computedClass = computedClass || (0,lightning_utils__WEBPACK_IMPORTED_MODULE_1__.classSet)();
  padding = padding || ' ';
  Object.keys(PADDING_CLASS).forEach(key => {
    if (PADDING_CLASS[key].toLowerCase() === padding) {
      computedClass.add(key);
    }
  });
  return computedClass;
}

function computeFlexibilityClass(flexibility, computedClass) {
  computedClass = computedClass || (0,lightning_utils__WEBPACK_IMPORTED_MODULE_1__.classSet)();
  flexibility = flexibility || [];
  Object.keys(FLEX_CLASS).forEach(key => {
    if (flexibility.some(flex => flex === FLEX_CLASS[key])) {
      computedClass.add(key);
    }
  });
  return computedClass;
}

function computeSizeClass(layoutSize, computedClass) {
  computedClass = computedClass || (0,lightning_utils__WEBPACK_IMPORTED_MODULE_1__.classSet)();
  layoutSize = layoutSize || DEFAULT_LAYOUT_SIZE;
  Object.keys(SIZE_CLASS).forEach(key => {
    const size = layoutSize[key];

    if (size != null && size !== 0) {
      computedClass.add(`${SIZE_CLASS[key]}${size}-of-12`);
    }
  });
  return computedClass;
}

function computeBumpClass(direction, computedClass) {
  computedClass = computedClass || (0,lightning_utils__WEBPACK_IMPORTED_MODULE_1__.classSet)();
  direction = direction || '';

  if (direction !== '') {
    computedClass.add(`slds-col_bump-${direction}`);
  }

  return computedClass;
}

function computeLayoutClass(layoutSize, flexibility, padding, bump) {
  const computedClass = computePaddingClass(padding);
  computeFlexibilityClass(flexibility, computedClass);
  computeSizeClass(layoutSize, computedClass);
  computeBumpClass(bump, computedClass);
  return computedClass;
}
function validateSize(size, smallDeviceSize, mediumDeviceSize, largeDeviceSize) {
  if (size != null && !(SIZE_MIN <= size && size <= SIZE_MAX)) {
    throw new Error(STYLE_ERROR.SIZE_RANGE);
  }

  if (smallDeviceSize != null && !(SIZE_MIN <= smallDeviceSize && smallDeviceSize <= SIZE_MAX)) {
    throw new Error(STYLE_ERROR.SMALL_SIZE_RANGE);
  }

  if (mediumDeviceSize != null && !(SIZE_MIN <= mediumDeviceSize && mediumDeviceSize <= SIZE_MAX)) {
    throw new Error(STYLE_ERROR.MEDIUM_SIZE_RANGE);
  }

  if (largeDeviceSize && !(SIZE_MIN <= largeDeviceSize && largeDeviceSize <= SIZE_MAX)) {
    throw new Error(STYLE_ERROR.LARGE_SIZE_RANGE);
  }

  if (size == null && (smallDeviceSize != null || mediumDeviceSize != null || largeDeviceSize != null)) {
    throw new Error(STYLE_ERROR.SIZE_REQUIRED);
  }

  return true;
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/positionLibrary/constraint.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/positionLibrary/constraint.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Constraint": () => (/* binding */ Constraint)
/* harmony export */ });
/* harmony import */ var _transformBuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transformBuilder */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/transformBuilder.js");

class Constraint {
  constructor(type, config) {
    const {
      target,
      element,
      pad,
      boxDirections
    } = config;
    const {
      horizontal,
      vertical
    } = config.targetAlign;
    this._element = element;
    this._targetElement = target;
    this.destroyed = false;
    this._transformer = new _transformBuilder__WEBPACK_IMPORTED_MODULE_0__.TransformBuilder().type(type).align(horizontal, vertical).pad(pad).boxDirections(boxDirections).build();
  }

  detach() {
    this._disabled = true;
  }

  attach() {
    this._disabled = false;
  }

  computeDisplacement() {
    if (!this._disabled) {
      this._targetElement.refresh();

      this._element.refresh();

      this._pendingBox = this._transformer.transform(this._targetElement, this._element);
    }

    return this;
  }

  computePosition() {
    const el = this._element;

    if (!this._disabled) {
      Object.keys(this._pendingBox).forEach(key => {
        el.setDirection(key, this._pendingBox[key]);
      });
    }

    return this;
  }

  destroy() {
    this._element.release();

    this._targetElement.release();

    this._disabled = true;
    this.destroyed = true;
  }

}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/positionLibrary/direction.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/positionLibrary/direction.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Direction": () => (/* binding */ Direction),
/* harmony export */   "normalizeDirection": () => (/* binding */ normalizeDirection),
/* harmony export */   "mapToHorizontal": () => (/* binding */ mapToHorizontal),
/* harmony export */   "mapToVertical": () => (/* binding */ mapToVertical),
/* harmony export */   "flipDirection": () => (/* binding */ flipDirection),
/* harmony export */   "isValidDirection": () => (/* binding */ isValidDirection),
/* harmony export */   "checkFlipPossibility": () => (/* binding */ checkFlipPossibility)
/* harmony export */ });
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/util.js");

 // TODO: Remove, not currently in use.

const ALIGN_REGEX = /^(left|right|center)\s(top|bottom|center)$/;
const Direction = {
  Center: 'center',
  Middle: 'middle',
  Right: 'right',
  Left: 'left',
  Bottom: 'bottom',
  Top: 'top',
  Default: 'default'
};
const VerticalMap = {
  top: Direction.Top,
  bottom: Direction.Bottom,
  center: Direction.Middle
};
const HorizontalMap = {
  left: Direction.Left,
  right: Direction.Right,
  center: Direction.Center
};
const FlipMap = {
  left: Direction.Right,
  right: Direction.Left,
  top: Direction.Bottom,
  bottom: Direction.Top,
  center: Direction.Center,
  default: Direction.Right
};

function getContainerSize(parent) {
  if (parent) {
    return parent.getBoundingClientRect();
  }

  const rect = {
    width: _util__WEBPACK_IMPORTED_MODULE_1__.WindowManager.window.innerWidth || document.body.clientWidth || 0,
    height: _util__WEBPACK_IMPORTED_MODULE_1__.WindowManager.window.innerHeight || document.body.clientHeight || 0,
    top: 0,
    left: 0
  };
  rect.bottom = rect.height;
  rect.right = rect.width;
  return rect;
}

function normalizeDirection(direction, defaultValue) {
  return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__.normalizeString)(direction, {
    fallbackValue: defaultValue || Direction.Default,
    validValues: [Direction.Center, Direction.Right, Direction.Left, Direction.Bottom, Direction.Top, Direction.Middle, Direction.Default]
  });
}
function mapToHorizontal(value) {
  value = normalizeDirection(value, Direction.Left);
  return HorizontalMap[value];
}
function mapToVertical(value) {
  value = normalizeDirection(value, Direction.Left);
  return VerticalMap[value];
}
function flipDirection(value) {
  value = normalizeDirection(value, Direction.Left);
  return FlipMap[value];
} // TODO: Remove, not currently in use.

function isValidDirection(value) {
  return value && value.match(ALIGN_REGEX);
}
function checkFlipPossibility(parent, element, target, leftAsBoundary) {
  const viewPort = getContainerSize(parent);
  const windowViewPort = getContainerSize();
  const elemRect = element.getBoundingClientRect();
  const referenceElemRect = target.getBoundingClientRect();
  const height = typeof elemRect.height !== 'undefined' ? elemRect.height : elemRect.bottom - elemRect.top;
  const width = typeof elemRect.width !== 'undefined' ? elemRect.width : elemRect.right - elemRect.left; // TODO: We'll need to revisit the leftAsBoundary config property. Either we'll need a better
  // name to cover the RTL language cases and maybe open up the possibility of bounding the
  // element to the target in both the horizontal and vertical directions.
  // The boundary shrinks the available area to the edge of the target rather than the viewport.

  let rightAsBoundary = false;

  if (document.dir === 'rtl') {
    rightAsBoundary = leftAsBoundary;
    leftAsBoundary = false;
  } // Bug Fix for https://gus.lightning.force.com/lightning/r/ADM_Work__c/a07B0000008DxOhIAK/view
  // If viewport is scrollableParent, then should count the top of scrollerParent,
  // otherwise, window top is 0. no change to original logic.
  // When used in console app, console's viewport is not window, but a scrollable div, then popup can be cut off easily.
  // scrollable parent => if any parent element set overflow-y:auto, then inner element won't popup, unless use position:fix.


  let aboveSpace = referenceElemRect.top - viewPort.top - height;
  let belowSpace = viewPort.height - referenceElemRect.bottom - height; // If there is scrollable parent, always check aboveSpace > 0

  let hasSpaceAbove = aboveSpace >= 0 || parent == null && belowSpace < 0 && aboveSpace > belowSpace;
  let hasSpaceBelow = belowSpace >= 0 || aboveSpace < 0 && belowSpace > aboveSpace; // Assuming left alignment is specified this tests if:
  // - there's room to accommodate the element with right alignment
  //      - within the viewport, if parent present
  // - there's not enough room to accommodate the element with left alignment

  let shouldAlignToRight = false;

  if (parent) {
    shouldAlignToRight = referenceElemRect.right - viewPort.left >= width && referenceElemRect.left + width > (rightAsBoundary ? referenceElemRect.right : viewPort.width);
  } else {
    shouldAlignToRight = referenceElemRect.right >= width && referenceElemRect.left + width > (rightAsBoundary ? referenceElemRect.right : viewPort.width);
  } // Assuming right alignment is specified this tests if:
  // - there's room to accommodate the element with left alignment
  //      - within the viewport if parent present
  // - there's not enough room to accommodate the element with right alignment


  let shouldAlignToLeft = false;

  if (parent) {
    shouldAlignToLeft = referenceElemRect.left + width <= viewPort.right && referenceElemRect.right - viewPort.left - width < (leftAsBoundary ? referenceElemRect.left : 0);
  } else {
    shouldAlignToLeft = referenceElemRect.left + width <= viewPort.width && referenceElemRect.right - width < (leftAsBoundary ? referenceElemRect.left : 0);
  }

  if (!shouldAlignToLeft && !shouldAlignToRight && parent) {
    shouldAlignToRight = (referenceElemRect.right - viewPort.left >= width || referenceElemRect.right >= width) && referenceElemRect.left + width > (rightAsBoundary ? referenceElemRect.right : viewPort.width);
    shouldAlignToLeft = (referenceElemRect.left + width <= viewPort.right || referenceElemRect.left + width <= windowViewPort.width) && referenceElemRect.right - width < (leftAsBoundary ? referenceElemRect.left : 0);
  } // If there is no space above and below, recalculate space based on window
  // when there is still no space above and below based on window then select the maximum available space


  if (!hasSpaceAbove && !hasSpaceBelow && parent) {
    belowSpace = viewPort.height - (referenceElemRect.bottom - viewPort.top) - height;

    if (belowSpace < 0) {
      if (parent.scrollTop > 0) {
        aboveSpace = referenceElemRect.top - viewPort.top + parent.scrollTop - height;
      }
    }

    hasSpaceAbove = aboveSpace >= 0 || belowSpace < 0 && aboveSpace > belowSpace;
    hasSpaceBelow = belowSpace >= 0 || aboveSpace < 0 && belowSpace > aboveSpace;
  } // Assuming center alignment, does the viewport have space to fit half of the element around
  // the target?


  const centerOverflow = {
    left: referenceElemRect.left - width * 0.5 < 0,
    right: referenceElemRect.right + width * 0.5 > viewPort.width,
    top: referenceElemRect.top - height * 0.5 < 0,
    bottom: referenceElemRect.bottom + height * 0.5 > viewPort.height
  };
  return {
    shouldAlignToLeft,
    shouldAlignToRight,
    hasSpaceAbove,
    hasSpaceBelow,
    centerOverflow
  };
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/positionLibrary/elementProxy.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/positionLibrary/elementProxy.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ElementProxy": () => (/* binding */ ElementProxy)
/* harmony export */ });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/util.js");

class ElementProxy {
  constructor(el, id) {
    this.id = id;
    this.width = 0;
    this.height = 0;
    this.left = 0;
    this.top = 0;
    this.right = 0;
    this.bottom = 0;
    this._dirty = false;
    this._node = null;
    this._releaseCb = null;

    if (!el) {
      throw new Error('Element missing');
    } // W-3262919
    // for some reason I cannot figure out sometimes the
    // window, which clearly a window object, is not the window object
    // this will correct that. It might be related to locker


    if (_util__WEBPACK_IMPORTED_MODULE_0__.WindowManager.isWindow(el)) {
      el = _util__WEBPACK_IMPORTED_MODULE_0__.WindowManager.window;
    }

    this._node = el;
    this.setupObserver();
    this.refresh();
  }

  setupObserver() {
    // this check is because phantomjs does not support
    // mutation observers. The consqeuence here
    // is that any browser without mutation observers will
    // fail to update dimensions if they changwe after the proxy
    // is created and the proxy is not not refreshed
    if (_util__WEBPACK_IMPORTED_MODULE_0__.WindowManager.MutationObserver && !this._node.isObserved) {
      // Use mutation observers to invalidate cache. It's magic!
      this._observer = new _util__WEBPACK_IMPORTED_MODULE_0__.WindowManager.MutationObserver(this.refresh.bind(this)); // do not observe the window

      if (!_util__WEBPACK_IMPORTED_MODULE_0__.WindowManager.isWindow(this._node)) {
        this._observer.observe(this._node, {
          attributes: true,
          childList: true,
          characterData: true,
          subtree: true
        });

        this._node.isObserved = true;
      }
    }
  }

  setReleaseCallback(cb, scope) {
    const scopeObj = scope || this;
    this._releaseCb = cb.bind(scopeObj);
  }

  checkNodeIsInDom() {
    // if underlying DOM node is gone,
    // this proxy should be released
    if (!(0,_util__WEBPACK_IMPORTED_MODULE_0__.isInDom)(this._node)) {
      return false;
    }

    return true;
  }

  refresh() {
    const w = _util__WEBPACK_IMPORTED_MODULE_0__.WindowManager.window;

    if (!this.isDirty()) {
      if (!this.checkNodeIsInDom()) {
        return this.release();
      }

      let box, x, scrollTop, scrollLeft;

      if (typeof w.pageYOffset !== 'undefined') {
        scrollTop = w.pageYOffset;
        scrollLeft = w.pageXOffset;
      } else {
        scrollTop = w.scrollY;
        scrollLeft = w.scrollX;
      }

      if (!_util__WEBPACK_IMPORTED_MODULE_0__.WindowManager.isWindow(this._node)) {
        // force paint
        // eslint-disable-next-line no-unused-vars
        const offsetHeight = this._node.offsetHeight;
        box = this._node.getBoundingClientRect(); // not using integers causes weird rounding errors
        // eslint-disable-next-line guard-for-in

        for (x in box) {
          this[x] = Math.floor(box[x]);
        }

        this.top = Math.floor(this.top + scrollTop);
        this.bottom = Math.floor(this.top + box.height);
        this.left = Math.floor(this.left + scrollLeft);
        this.right = Math.floor(this.left + box.width);
      } else {
        box = {};
        this.width = _util__WEBPACK_IMPORTED_MODULE_0__.WindowManager.documentElement.clientWidth;
        this.height = _util__WEBPACK_IMPORTED_MODULE_0__.WindowManager.documentElement.clientHeight;
        this.left = scrollLeft;
        this.top = scrollTop;
        this.right = _util__WEBPACK_IMPORTED_MODULE_0__.WindowManager.documentElement.clientWidth + scrollLeft;
        this.bottom = _util__WEBPACK_IMPORTED_MODULE_0__.WindowManager.documentElement.clientHeight;
      }

      this._dirty = false;
    }

    return this._dirty;
  }

  getNode() {
    return this._node;
  }

  isDirty() {
    return this._dirty;
  }

  bake() {
    const w = _util__WEBPACK_IMPORTED_MODULE_0__.WindowManager.window;

    const absPos = this._node.getBoundingClientRect();

    const style = w.getComputedStyle(this._node) || this._node.style;

    const hasPageOffset = typeof w.pageYOffset !== 'undefined';
    const scrollTop = hasPageOffset ? w.pageYOffset : w.scrollY;
    const scrollLeft = hasPageOffset ? w.pageXOffset : w.scrollX;
    const originalLeft = style.left.match(/auto|fixed/) ? '0' : parseInt(style.left.replace('px', ''), 10);
    const originalTop = style.top.match(/auto|fixed/) ? '0' : parseInt(style.top.replace('px', ''), 10);
    let leftDif = Math.round(this.left - (absPos.left + scrollLeft));
    const topDif = this.top - (absPos.top + scrollTop);
    const viewPortWidth = w.innerWidth || document.body.clientWidth;
    let rightPos = parseInt(style.right, 10);

    if (originalLeft + leftDif + parseInt(style.width, 10) > viewPortWidth && rightPos <= 0) {
      rightPos = rightPos < 0 ? -rightPos : leftDif;
      this._node.style.right = -rightPos + 'px';
      leftDif = 0;
    }

    this._node.style.left = `${originalLeft + leftDif}px`;
    this._node.style.top = `${originalTop + topDif}px`;

    if (this._restoreSize) {
      // Only store the first height/width which is the original height/width.
      if (this.originalHeight === undefined) {
        this.originalHeight = this._node.style.height;
      }

      if (this.originalWidth === undefined) {
        this.originalWidth = this._node.style.width;
      }

      this._node.style.width = `${this.width}px`;
      this._node.style.height = `${this.height}px`;
    }

    this._dirty = false;
  }

  setDirection(direction, val) {
    this[direction] = val;
    this._dirty = true; // if size is changed, should restore the original size.

    if (direction === 'height' || direction === 'width') {
      this._restoreSize = true;
    }
  }

  release() {
    if (this._restoreSize) {
      this._node.style.width = this.originalWidth;
      this._node.style.height = this.originalHeight;

      if (this._removeMinHeight) {
        this._node.style.minHeight = '';
      }
    }

    if (this._releaseCb) {
      this._releaseCb(this);
    } // Due to https://github.com/salesforce/lwc/pull/1423
    // require to call disconnect explicitly.


    if (this._observer) {
      this._observer.disconnect();

      this._observer = null;
    }
  }

  querySelectorAll(selector) {
    return this._node.querySelectorAll(selector);
  }

}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/positionLibrary/elementProxyCache.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/positionLibrary/elementProxyCache.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "releaseOrphanProxies": () => (/* binding */ releaseOrphanProxies),
/* harmony export */   "bakeOff": () => (/* binding */ bakeOff),
/* harmony export */   "getReferenceCount": () => (/* binding */ getReferenceCount),
/* harmony export */   "release": () => (/* binding */ release),
/* harmony export */   "reset": () => (/* binding */ reset),
/* harmony export */   "createProxy": () => (/* binding */ createProxy),
/* harmony export */   "count": () => (/* binding */ count)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _elementProxy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./elementProxy */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/elementProxy.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/util.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");





class ProxyCache {
  constructor() {
    this.proxyCache = {};
  }

  get count() {
    return Object.keys(this.proxyCache).length;
  }

  releaseOrphanProxies() {
    for (const proxy in this.proxyCache) {
      if (!this.proxyCache[proxy].el.checkNodeIsInDom()) {
        this.proxyCache[proxy].el.release();
      }
    }
  }

  bakeOff() {
    for (const proxy in this.proxyCache) {
      if (this.proxyCache[proxy].el.isDirty()) {
        this.proxyCache[proxy].el.bake();
      }
    }
  }

  getReferenceCount(proxy) {
    const id = proxy.id;

    if (!id || !this.proxyCache[id]) {
      return 0;
    }

    return this.proxyCache[id].refCount;
  }

  release(proxy) {
    const proxyInstance = this.proxyCache[proxy.id];

    if (proxyInstance) {
      --proxyInstance.refCount;
    }

    if (proxyInstance && proxyInstance.refCount <= 0) {
      delete this.proxyCache[proxy.id];
    }
  }

  reset() {
    this.proxyCache = {};
  }

  create(element) {
    let key = 'window';

    if (!_util__WEBPACK_IMPORTED_MODULE_2__.WindowManager.isWindow(element)) {
      key = element ? element.getAttribute(_util__WEBPACK_IMPORTED_MODULE_2__.POSITION_ATTR_NAME) : null; // 1 - Node.ELEMENT_NODE, 11 - Node.DOCUMENT_FRAGMENT_NODE

      (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_3__.assert)(key && element.nodeType && (element.nodeType !== 1 || element.nodeType !== 11), `Element Proxy requires an element and has property ${_util__WEBPACK_IMPORTED_MODULE_2__.POSITION_ATTR_NAME}`);
    }

    if (this.proxyCache[key]) {
      this.proxyCache[key].refCount++;
      return this.proxyCache[key].el;
    }

    const newProxy = new _elementProxy__WEBPACK_IMPORTED_MODULE_1__.ElementProxy(element, key);
    newProxy.setReleaseCallback(release, newProxy);
    this.proxyCache[key] = {
      el: newProxy,
      refCount: 1
    }; // run GC

    (0,_util__WEBPACK_IMPORTED_MODULE_2__.timeout)(0).then(() => {
      this.releaseOrphanProxies();
    });
    return this.proxyCache[key].el;
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(ProxyCache, {
  fields: ["proxyCache"]
});

const elementProxyCache = new ProxyCache();
function releaseOrphanProxies() {
  return elementProxyCache.releaseOrphanProxies();
}
function bakeOff() {
  elementProxyCache.bakeOff();
}
function getReferenceCount(proxy) {
  return elementProxyCache.getReferenceCount(proxy);
}
function release(proxy) {
  return elementProxyCache.release(proxy);
}
function reset() {
  elementProxyCache.reset();
}
function createProxy(element) {
  return elementProxyCache.create(element);
}
function count() {
  return elementProxyCache.count;
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/positionLibrary/overlayDetector.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/positionLibrary/overlayDetector.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OVERLAY_TYPE": () => (/* binding */ OVERLAY_TYPE),
/* harmony export */   "isOverlay": () => (/* binding */ isOverlay),
/* harmony export */   "OverlayDetector": () => (/* binding */ OverlayDetector)
/* harmony export */ });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/util.js");

const OVERLAY_TYPE = {
  NONE: 'none',
  MODAL: 'uiModal',
  DIALOG: 'lightning-dialog',
  POPOVER: 'lightning-popover',
  PANEL: 'uiPanel',
  SLDSMODAL: 'slds-modal'
};
function isOverlay(element) {
  const isDialog = element.localName === OVERLAY_TYPE.DIALOG;

  if (isDialog) {
    return OVERLAY_TYPE.DIALOG;
  }

  const isPopover = element.localName === OVERLAY_TYPE.POPOVER;

  if (isPopover) {
    return OVERLAY_TYPE.POPOVER;
  }

  const isModal = element.classList && element.classList.contains(OVERLAY_TYPE.MODAL);

  if (isModal) {
    return OVERLAY_TYPE.MODAL;
  }

  const isPanel = element.classList && element.classList.contains(OVERLAY_TYPE.PANEL);

  if (isPanel) {
    return OVERLAY_TYPE.PANEL;
  }

  const isSldsModal = element.classList && element.classList.contains(OVERLAY_TYPE.SLDSMODAL);

  if (isSldsModal) {
    return OVERLAY_TYPE.SLDSMODAL;
  }

  return OVERLAY_TYPE.NONE;
}

function isInsideOverlay(element) {
  if (!element) {
    return {
      isInside: false,
      type: null,
      overlay: null
    };
  }

  const type = isOverlay(element);

  if (type !== OVERLAY_TYPE.NONE) {
    return {
      isInside: true,
      type,
      overlay: element
    };
  }

  if (!element.parentNode) {
    return {
      isInside: false,
      type: null,
      overlay: null
    };
  }

  return isInsideOverlay((0,_util__WEBPACK_IMPORTED_MODULE_0__.isShadowRoot)(element.parentNode) ? element.parentNode.host : element.parentNode);
}

class OverlayDetector {
  constructor(element) {
    this._element = element;
    this._detection = isInsideOverlay(this._element) || {
      isInside: false,
      overlay: null
    };
  }

  get isInsideModal() {
    return this.isInside && (this._detection.type === OVERLAY_TYPE.MODAL || this._detection.type === OVERLAY_TYPE.DIALOG || this._detection.type === OVERLAY_TYPE.SLDSMODAL);
  }

  get isInside() {
    return this._detection.isInside;
  }

  get overlay() {
    return this._detection.overlay;
  }

}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/positionLibrary/positionLibrary.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/positionLibrary/positionLibrary.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Direction": () => (/* reexport safe */ _direction__WEBPACK_IMPORTED_MODULE_1__.Direction),
/* harmony export */   "startPositioning": () => (/* binding */ startPositioning),
/* harmony export */   "stopPositioning": () => (/* binding */ stopPositioning),
/* harmony export */   "AutoPosition": () => (/* binding */ AutoPosition)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _direction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./direction */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/direction.js");
/* harmony import */ var _constraint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constraint */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/constraint.js");
/* harmony import */ var _elementProxyCache__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./elementProxyCache */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/elementProxyCache.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/util.js");
/* harmony import */ var _reposition__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./reposition */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/reposition.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var _relationship__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./relationship */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/relationship.js");
/* harmony import */ var _overlayDetector__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./overlayDetector */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/overlayDetector.js");










const DEFAULT_MIN_HEIGHT = '1.875rem';

function setupObserver(config, scrollableParent) {
  const observedElement = config.element;
  let observer = null;

  if (_util__WEBPACK_IMPORTED_MODULE_4__.WindowManager.MutationObserver && !observedElement.isObserved) {
    observer = new _util__WEBPACK_IMPORTED_MODULE_4__.WindowManager.MutationObserver(() => {});
    observer.observe(observedElement, {
      attributes: true,
      subtree: true,
      childList: true
    });
    observedElement.isObserved = true;
  }

  if (scrollableParent) {
    scrollableParent.addEventListener('scroll', _reposition__WEBPACK_IMPORTED_MODULE_5__.scheduleReposition);

    config.removeListeners = () => {
      scrollableParent.removeEventListener('scroll', _reposition__WEBPACK_IMPORTED_MODULE_5__.scheduleReposition);
    };
  }

  return observer;
}

function validateConfig(config) {
  (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_6__.assert)(config.element && (0,_util__WEBPACK_IMPORTED_MODULE_4__.isDomNode)(config.element), 'Element is undefined or missing, or not a Dom Node');
  (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_6__.assert)(config.target && (_util__WEBPACK_IMPORTED_MODULE_4__.WindowManager.isWindow(config.target) || (0,_util__WEBPACK_IMPORTED_MODULE_4__.isDomNode)(config.target)), 'Target is undefined or missing');
}

function createRelationship(originalConfig, disableReposition, eventComposedPath) {
  (0,_reposition__WEBPACK_IMPORTED_MODULE_5__.bindEvents)();
  let scrollableParent = (0,_util__WEBPACK_IMPORTED_MODULE_4__.getScrollableParent)((0,_util__WEBPACK_IMPORTED_MODULE_4__.getPositionTarget)(originalConfig.target), _util__WEBPACK_IMPORTED_MODULE_4__.WindowManager.window);

  if (!scrollableParent && eventComposedPath) {
    scrollableParent = (0,_util__WEBPACK_IMPORTED_MODULE_4__.getScrollableParentFromEventPath)(eventComposedPath);
  }

  const config = normalizeConfig(scrollableParent, originalConfig);

  if (config.alignWidth && config.element.style.position === 'fixed') {
    config.element.style.width = config.target.getBoundingClientRect().width + 'px';
  }

  const constraintList = []; // This observer and the test for scrolling children
  // is so that if a panel contains a scroll we do not
  // proxy the events to the "parent"  (actually the target's parent)

  const observer = setupObserver(config, scrollableParent);

  if (config.appendToBody) {
    document.body.appendChild(config.element);
  }

  config.element = (0,_elementProxyCache__WEBPACK_IMPORTED_MODULE_3__.createProxy)(config.element);
  config.target = (0,_elementProxyCache__WEBPACK_IMPORTED_MODULE_3__.createProxy)(config.target); // Add horizontal constraint.

  const horizontalConfig = Object.assign({}, config);

  if (horizontalConfig.padLeft !== undefined) {
    horizontalConfig.pad = horizontalConfig.padLeft;
  } // Add vertical constraint.


  const verticalConfig = Object.assign({}, config);

  if (verticalConfig.padTop !== undefined) {
    verticalConfig.pad = verticalConfig.padTop;
  }

  constraintList.push(new _constraint__WEBPACK_IMPORTED_MODULE_2__.Constraint((0,_direction__WEBPACK_IMPORTED_MODULE_1__.mapToHorizontal)(config.align.horizontal), horizontalConfig));
  constraintList.push(new _constraint__WEBPACK_IMPORTED_MODULE_2__.Constraint((0,_direction__WEBPACK_IMPORTED_MODULE_1__.mapToVertical)(config.align.vertical), verticalConfig));
  const autoShrink = config.autoShrink.height || config.autoShrink.width;

  if (config.scrollableParentBound && scrollableParent) {
    const parent = (0,_util__WEBPACK_IMPORTED_MODULE_4__.normalizeElement)(scrollableParent);
    const boxConfig = {
      element: config.element,
      enabled: config.enabled,
      target: (0,_elementProxyCache__WEBPACK_IMPORTED_MODULE_3__.createProxy)(parent),
      align: {},
      targetAlign: {},
      pad: 3,
      boxDirections: {
        top: true,
        bottom: true,
        left: true,
        right: true
      }
    };

    if (autoShrink) {
      const style = boxConfig.element.getNode().style;

      if (!style.minHeight) {
        style.minHeight = config.minHeight;
        boxConfig.element._removeMinHeight = true;
      }

      boxConfig.boxDirections = {
        top: !!config.autoShrink.height,
        bottom: !!config.autoShrink.height,
        left: !!config.autoShrink.width,
        right: !!config.autoShrink.width
      };
      constraintList.push(new _constraint__WEBPACK_IMPORTED_MODULE_2__.Constraint('shrinking box', boxConfig));
    } else {
      constraintList.push(new _constraint__WEBPACK_IMPORTED_MODULE_2__.Constraint('bounding box', boxConfig));
    }
  }

  if (config.keepInViewport) {
    constraintList.push(new _constraint__WEBPACK_IMPORTED_MODULE_2__.Constraint('bounding box', {
      element: config.element,
      enabled: config.enabled,
      target: (0,_elementProxyCache__WEBPACK_IMPORTED_MODULE_3__.createProxy)(window),
      align: {},
      targetAlign: {},
      pad: 3,
      boxDirections: {
        top: true,
        bottom: true,
        left: true,
        right: true
      }
    }));
  }

  (0,_reposition__WEBPACK_IMPORTED_MODULE_5__.addConstraints)(constraintList);

  if (!disableReposition) {
    (0,_reposition__WEBPACK_IMPORTED_MODULE_5__.reposition)();
  }

  return new _relationship__WEBPACK_IMPORTED_MODULE_7__.Relationship(config, constraintList, scrollableParent, observer);
}

function isAutoFlipHorizontal(config) {
  return config.autoFlip || config.autoFlipHorizontal;
}

function isAutoFlipVertical(config) {
  return config.autoFlip || config.autoFlipVertical;
}

function normalizeAlignments(config, flipConfig) {
  const align = {
    horizontal: config.align.horizontal,
    vertical: config.align.vertical
  };
  const targetAlign = {
    horizontal: config.targetAlign.horizontal,
    vertical: config.targetAlign.vertical
  }; // Horizontal alignments flip for RTL languages.

  if (document.dir === 'rtl') {
    align.horizontal = (0,_direction__WEBPACK_IMPORTED_MODULE_1__.flipDirection)(align.horizontal);
    targetAlign.horizontal = (0,_direction__WEBPACK_IMPORTED_MODULE_1__.flipDirection)(targetAlign.horizontal);
  } // When using the autoFlip flags with center alignment, we change the element alignment to fit
  // within the viewport when it's detected that it overflows the edge of the viewport.


  let vFlip = false;

  if (isAutoFlipVertical(config)) {
    if (align.vertical === _direction__WEBPACK_IMPORTED_MODULE_1__.Direction.Bottom) {
      vFlip = !flipConfig.hasSpaceAbove && flipConfig.hasSpaceBelow;
    } else if (align.vertical === _direction__WEBPACK_IMPORTED_MODULE_1__.Direction.Top) {
      vFlip = flipConfig.hasSpaceAbove && !flipConfig.hasSpaceBelow;
    } else if (align.vertical === _direction__WEBPACK_IMPORTED_MODULE_1__.Direction.Center) {
      if (flipConfig.centerOverflow.top && !flipConfig.centerOverflow.bottom) {
        align.vertical = targetAlign.vertical = _direction__WEBPACK_IMPORTED_MODULE_1__.Direction.Top;
      } else if (flipConfig.centerOverflow.bottom && !flipConfig.centerOverflow.top) {
        align.vertical = targetAlign.vertical = _direction__WEBPACK_IMPORTED_MODULE_1__.Direction.Bottom;
      }
    }
  }

  let hFlip = false;

  if (isAutoFlipHorizontal(config)) {
    if (align.horizontal === _direction__WEBPACK_IMPORTED_MODULE_1__.Direction.Left) {
      hFlip = flipConfig.shouldAlignToRight && !flipConfig.shouldAlignToLeft;
    } else if (align.horizontal === _direction__WEBPACK_IMPORTED_MODULE_1__.Direction.Right) {
      hFlip = flipConfig.shouldAlignToLeft && !flipConfig.shouldAlignToRight;
    } else if (align.horizontal === _direction__WEBPACK_IMPORTED_MODULE_1__.Direction.Center) {
      if (flipConfig.centerOverflow.left && !flipConfig.centerOverflow.right) {
        align.horizontal = targetAlign.horizontal = _direction__WEBPACK_IMPORTED_MODULE_1__.Direction.Left;
      } else if (flipConfig.centerOverflow.right && !flipConfig.centerOverflow.left) {
        align.horizontal = targetAlign.horizontal = _direction__WEBPACK_IMPORTED_MODULE_1__.Direction.Right;
      }
    }
  }

  return {
    align: {
      horizontal: hFlip ? (0,_direction__WEBPACK_IMPORTED_MODULE_1__.flipDirection)(align.horizontal) : (0,_direction__WEBPACK_IMPORTED_MODULE_1__.normalizeDirection)(align.horizontal, _direction__WEBPACK_IMPORTED_MODULE_1__.Direction.Left),
      vertical: vFlip ? (0,_direction__WEBPACK_IMPORTED_MODULE_1__.flipDirection)(align.vertical) : (0,_direction__WEBPACK_IMPORTED_MODULE_1__.normalizeDirection)(align.vertical, _direction__WEBPACK_IMPORTED_MODULE_1__.Direction.Top)
    },
    targetAlign: {
      horizontal: hFlip ? (0,_direction__WEBPACK_IMPORTED_MODULE_1__.flipDirection)(targetAlign.horizontal) : (0,_direction__WEBPACK_IMPORTED_MODULE_1__.normalizeDirection)(targetAlign.horizontal, _direction__WEBPACK_IMPORTED_MODULE_1__.Direction.Left),
      vertical: vFlip ? (0,_direction__WEBPACK_IMPORTED_MODULE_1__.flipDirection)(targetAlign.vertical) : (0,_direction__WEBPACK_IMPORTED_MODULE_1__.normalizeDirection)(targetAlign.vertical, _direction__WEBPACK_IMPORTED_MODULE_1__.Direction.Bottom)
    }
  };
}

function normalizeConfig(parent, config) {
  config.align = config.align || {};
  config.targetAlign = config.targetAlign || {};
  const flipConfig = (0,_direction__WEBPACK_IMPORTED_MODULE_1__.checkFlipPossibility)(config.overlay.isInside ? null : parent, // For modal/panel, dialog/popover, should always popup.
  // And consider window is the viewport, ignore scrollable parent.
  // Otherwise, when stay on flat page, should use scrollable parent as viewpoint.
  config.element, config.target, config.leftAsBoundary);
  const {
    align,
    targetAlign
  } = normalizeAlignments(config, flipConfig); // When inside modal, element may expand out of the viewport and be cut off.
  // So if inside modal, and don't have enough space above or below, will add bounding box rule.
  // IMPORTANT: config.isInsideModal is for element, not target.

  if (config.isInsideModal && !flipConfig.hasSpaceAbove && !flipConfig.hasSpaceBelow) {
    config.scrollableParentBound = true;
  }

  return {
    target: config.target,
    element: config.element,
    align,
    targetAlign,
    alignWidth: config.alignWidth,
    scrollableParentBound: config.scrollableParentBound,
    keepInViewport: config.keepInViewport,
    pad: config.pad,
    padTop: config.padTop,
    padLeft: config.padLeft,
    autoShrink: {
      height: config.autoShrink || config.autoShrinkHeight,
      width: config.autoShrink || config.autoShrinkWidth
    },
    minHeight: config.minHeight || DEFAULT_MIN_HEIGHT
  };
}

function toElement(root, target) {
  if (target && typeof target === 'string') {
    return root.querySelector(target);
  } else if (target && typeof target === 'function') {
    return target();
  }

  return target;
}

function startPositioning(root, config, disableReposition) {
  (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_6__.assert)(root, 'Root is undefined or missing');
  (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_6__.assert)(config, 'Config is undefined or missing');
  const node = (0,_util__WEBPACK_IMPORTED_MODULE_4__.normalizeElement)(root);
  const target = toElement(node, config.target);
  const element = toElement(node, config.element); // when target/element is selector, there is chance, dom isn't present anymore.

  if (!target || !element) {
    return null;
  }

  config.target = (0,_util__WEBPACK_IMPORTED_MODULE_4__.normalizeElement)(target);
  config.element = (0,_util__WEBPACK_IMPORTED_MODULE_4__.normalizeElement)(element); // Check if element is inside modal overlay.

  const result = new _overlayDetector__WEBPACK_IMPORTED_MODULE_8__.OverlayDetector(config.element); // IMPORTANT: config.isInsideModal will be used to decide if element should use modal as viewport.

  config.isInsideModal = result.isInsideModal; // stackManager will increase the zIndex too.
  // if detect inside modal, read modal zIndex and rebase to it.

  if (config.isInsideModal && result.overlay) {
    const index = parseInt(result.overlay.style.zIndex, 10);
    (0,_reposition__WEBPACK_IMPORTED_MODULE_5__.rebaseIndex)(index);
  } // Also should check if target inside modal too.


  const targetResult = new _overlayDetector__WEBPACK_IMPORTED_MODULE_8__.OverlayDetector(config.target); // if detect target is inside modal, read modal zindex and rebase to it.
  // for example, lightning-helptext, lightning-primitive-bubble by default is global.
  // So it won't be in any modal. For other use case, target and element is inside same modal.

  if (targetResult.isInsideModal && targetResult.overlay) {
    const index = parseInt(targetResult.overlay.style.zIndex, 10);
    (0,_reposition__WEBPACK_IMPORTED_MODULE_5__.rebaseIndex)(index);
  } // Element absolute / fixed must be set prior to getBoundingClientRect call or
  // the scrollable parent (usually due to uiModal/uiPanel) will push the page down.


  const overlayCheck = (0,_util__WEBPACK_IMPORTED_MODULE_4__.normalizePosition)(config.element, result, (0,_reposition__WEBPACK_IMPORTED_MODULE_5__.nextIndex)(), config.target, config.alignWidth);
  config.element = overlayCheck.element;
  config.overlay = overlayCheck.overlay;
  validateConfig(config);
  const relationship = createRelationship(config, disableReposition); // Scroll regions within a shadowRoot are skipped while traversing parent nodes.
  // Components that contain a scroll region in their template
  // must handle the `privatescrollablecontainer` event and execute the callback with the event path.
  // The event path is used to find the scrollable parent and the constraints
  // for positioning are set according to this element.
  // Usage in parent component with scroll region:
  // addEventListener('privatescrollablecontainer', (event) => {
  //     const { callback } = event.detail;
  //     callback(event.composedPath());
  //     event.stopPropagation();
  // });

  root.dispatchEvent(new CustomEvent('privatescrollablecontainer', {
    composed: true,
    bubbles: true,
    detail: {
      callback: eventComposedPath => {
        var updatedReltnWrtoScrollParent = createRelationship(config, disableReposition, eventComposedPath);
        relationship.config.align.horizontal = updatedReltnWrtoScrollParent.config.align.horizontal;
        relationship.config.align.vertical = updatedReltnWrtoScrollParent.config.align.vertical;
      }
    }
  }));
  return relationship;
}
function stopPositioning(relationship) {
  if (relationship) {
    relationship.destroy();
  }
}
class AutoPosition {
  constructor(root) {
    this._autoPositionUpdater = null;
    this._root = root;
  }

  start(config) {
    return (0,_util__WEBPACK_IMPORTED_MODULE_4__.requestAnimationFrameAsPromise)().then(() => {
      let promise = Promise.resolve();

      if (!this._autoPositionUpdater) {
        this._autoPositionUpdater = startPositioning(this._root, config);
      } else {
        promise = promise.then(() => {
          return this._autoPositionUpdater.reposition();
        });
      }

      return promise.then(() => {
        return this._autoPositionUpdater;
      });
    });
  }

  stop() {
    if (this._autoPositionUpdater) {
      stopPositioning(this._autoPositionUpdater);
      this._autoPositionUpdater = null;
    }

    return Promise.resolve();
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(AutoPosition, {
  fields: ["_autoPositionUpdater"]
});

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/positionLibrary/relationship.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/positionLibrary/relationship.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Relationship": () => (/* binding */ Relationship)
/* harmony export */ });
/* harmony import */ var _reposition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reposition */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/reposition.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/util.js");


class Relationship {
  constructor(config, constraintList, scrollableParent, observer) {
    this.config = config;
    this.constraintList = constraintList;
    this.scrollableParent = scrollableParent;
    this.observer = observer;
  }

  disable() {
    this.constraintList.forEach(constraintToDisable => {
      constraintToDisable.detach();
    });
  }

  enable() {
    this.constraintList.forEach(constraintToEnable => {
      constraintToEnable.attach();
    });
  }

  destroy() {
    if (this.config.removeListeners) {
      this.config.removeListeners();
      this.config.removeListeners = undefined;
    }

    while (this.constraintList.length > 0) {
      this.constraintList.pop().destroy();
    } // Clean up node appended to body of dom


    if (this.config.appendToBody && this.config.element) {
      // eslint-disable-next-line @lwc/lwc/no-document-query
      const nodeToRemove = document.querySelector(`[${_util__WEBPACK_IMPORTED_MODULE_1__.POSITION_ATTR_NAME}="${this.config.element.getAttribute(_util__WEBPACK_IMPORTED_MODULE_1__.POSITION_ATTR_NAME)}"]`);

      if (nodeToRemove) {
        nodeToRemove.parentNode.removeChild(nodeToRemove);
      }
    } // Due to https://github.com/salesforce/lwc/pull/1423
    // require to call disconnect explicitly.


    if (this.observer) {
      this.observer.disconnect();
      this.observer = null;
    }
  }

  reposition() {
    return new Promise(resolve => {
      (0,_reposition__WEBPACK_IMPORTED_MODULE_0__.reposition)(() => {
        resolve();
      });
    });
  }

}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/positionLibrary/reposition.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/positionLibrary/reposition.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheduleReposition": () => (/* binding */ scheduleReposition),
/* harmony export */   "bindEvents": () => (/* binding */ bindEvents),
/* harmony export */   "addConstraints": () => (/* binding */ addConstraints),
/* harmony export */   "reposition": () => (/* binding */ reposition),
/* harmony export */   "nextIndex": () => (/* binding */ nextIndex),
/* harmony export */   "rebaseIndex": () => (/* binding */ rebaseIndex)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _elementProxyCache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./elementProxyCache */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/elementProxyCache.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");




class RepositionQueue {
  constructor() {
    this.callbacks = [];
    this.repositionScheduled = false;
    this._constraints = [];
    this.timeoutId = 0;
    this.lastIndex = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.getZIndexBaseline)();
    this.eventsBound = false;
  }

  get nextIndex() {
    return this.lastIndex++;
  }

  get constraints() {
    return this._constraints;
  }

  set constraints(value) {
    this._constraints = this._constraints.concat(value);
  }

  dispatchRepositionCallbacks() {
    while (this.callbacks.length > 0) {
      this.callbacks.shift()();
    }
  }

  add(callback) {
    if (typeof callback === 'function') {
      this.callbacks.push(callback);
      return true;
    }

    return false;
  }

  scheduleReposition(callback) {
    if (this.timeoutId === 0) {
      // eslint-disable-next-line @lwc/lwc/no-async-operation
      this.timeoutId = setTimeout(() => {
        this.reposition(callback);
      }, 10);
    }
  }

  reposition(callback) {
    // all the callbacks will be called
    if (typeof callback === 'function') {
      this.callbacks.push(callback);
    } // this is for throttling


    clearTimeout(this.timeoutId);
    this.timeoutId = 0; // this semaphore is to make sure
    // if reposition is called twice within one frame
    // we only run this once

    if (!this.repositionScheduled) {
      // eslint-disable-next-line @lwc/lwc/no-async-operation
      requestAnimationFrame(() => {
        this.repositionScheduled = false; // this must be executed in order or constraints
        // will behave oddly

        this._constraints = this._constraints.filter(constraint => {
          if (!constraint.destroyed) {
            constraint.computeDisplacement().computePosition();
            return true;
          }

          return false;
        });
        (0,_elementProxyCache__WEBPACK_IMPORTED_MODULE_1__.bakeOff)();
        this.dispatchRepositionCallbacks();
      });
      this.repositionScheduled = true;
    }
  }

  get repositioning() {
    if (!this._reposition) {
      this._reposition = this.scheduleReposition.bind(this);
    }

    return this._reposition;
  }

  bindEvents() {
    if (!this.eventsBound) {
      window.addEventListener('resize', this.repositioning);
      window.addEventListener('scroll', this.repositioning);
      this.eventsBound = true;
    }
  }

  detachEvents() {
    window.removeEventListener('resize', this.repositioning);
    window.removeEventListener('scroll', this.repositioning);
    this.eventsBound = false;
  }

  rebase(index) {
    if (this.lastIndex <= index) {
      this.lastIndex = index + 1;
    }
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(RepositionQueue, {
  fields: ["callbacks", "repositionScheduled", "_constraints", "timeoutId", "lastIndex", "eventsBound"]
});

const positionQueue = new RepositionQueue();
function scheduleReposition(callback) {
  positionQueue.scheduleReposition(callback);
}
function bindEvents() {
  positionQueue.bindEvents();
}
function addConstraints(list) {
  positionQueue.constraints = list;
}
function reposition(callback) {
  positionQueue.reposition(callback);
}
function nextIndex() {
  return positionQueue.nextIndex;
}
function rebaseIndex(index) {
  return positionQueue.rebase(index);
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/positionLibrary/transformBuilder.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/positionLibrary/transformBuilder.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TransformBuilder": () => (/* binding */ TransformBuilder)
/* harmony export */ });
/* harmony import */ var _transformers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transformers */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/transformers.js");
/* harmony import */ var _direction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./direction */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/direction.js");


class TransformBuilder {
  type(value) {
    this._type = value;
    return this;
  }

  align(horizontal, vertical) {
    this._transformX = (0,_transformers__WEBPACK_IMPORTED_MODULE_0__.toTransformFunctions)(horizontal);
    this._transformY = (0,_transformers__WEBPACK_IMPORTED_MODULE_0__.toTransformFunctions)(vertical);
    return this;
  }

  pad(value) {
    this._pad = parseInt(value, 10);
    return this;
  }

  boxDirections(value) {
    this._boxDirections = value;
    return this;
  }

  build() {
    const AConstructor = _transformers__WEBPACK_IMPORTED_MODULE_0__.Transformers[this._type] ? _transformers__WEBPACK_IMPORTED_MODULE_0__.Transformers[this._type] : _transformers__WEBPACK_IMPORTED_MODULE_0__.Transformers[_direction__WEBPACK_IMPORTED_MODULE_1__.Direction.Default];
    return new AConstructor(this._pad || 0, this._boxDirections || {}, this._transformX || (0,_transformers__WEBPACK_IMPORTED_MODULE_0__.toTransformFunctions)(_direction__WEBPACK_IMPORTED_MODULE_1__.Direction.left), this._transformY || (0,_transformers__WEBPACK_IMPORTED_MODULE_0__.toTransformFunctions)(_direction__WEBPACK_IMPORTED_MODULE_1__.Direction.left));
  }

}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/positionLibrary/transformers.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/positionLibrary/transformers.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LeftTransformer": () => (/* binding */ LeftTransformer),
/* harmony export */   "Transformers": () => (/* binding */ Transformers),
/* harmony export */   "toTransformFunctions": () => (/* binding */ toTransformFunctions)
/* harmony export */ });
class Transformer {
  constructor(pad, boxDirections, transformX, transformY) {
    this.pad = pad || 0;
    this.boxDirections = boxDirections || {
      left: true,
      right: true
    };

    this.transformX = transformX || function () {};

    this.transformY = transformY || function () {};
  }

  transform() {// no-op
  }

}

class TopTransformer extends Transformer {
  transform(targetBox, elementBox) {
    return {
      top: Math.floor(this.transformY(targetBox.top, targetBox, elementBox) + this.pad)
    };
  }

}

class BottomTransFormer extends Transformer {
  transform(targetBox, elementBox) {
    return {
      top: Math.floor(this.transformY(targetBox.top, targetBox, elementBox) - elementBox.height - this.pad)
    };
  }

}

class CenterTransformer extends Transformer {
  transform(targetBox, elementBox) {
    return {
      left: Math.floor(this.transformX(targetBox.left, targetBox, elementBox) - 0.5 * elementBox.width)
    };
  }

}

class MiddleTransformer extends Transformer {
  transform(targetBox, elementBox) {
    return {
      top: Math.floor(0.5 * (2 * targetBox.top + targetBox.height - elementBox.height))
    };
  }

}

class LeftTransformer extends Transformer {
  transform(targetBox, elementBox) {
    return {
      left: Math.floor(this.transformX(targetBox.left, targetBox, elementBox) + this.pad)
    };
  }

}

class RightTransformer extends Transformer {
  transform(targetBox, elementBox) {
    return {
      left: Math.floor(this.transformX(targetBox.left, targetBox, elementBox) - elementBox.width - this.pad)
    };
  }

}

class BelowTransformer extends Transformer {
  transform(targetBox, elementBox) {
    const top = targetBox.top + targetBox.height + this.pad;
    return elementBox.top < top ? {
      top
    } : {};
  }

}

const MIN_HEIGHT = 36; // Minimum Line Height

const MIN_WIDTH = 36;

class ShrinkingBoxTransformer extends Transformer {
  transform(targetBox, elementBox) {
    const retBox = {};

    if (this.boxDirections.top && elementBox.top < targetBox.top + this.pad) {
      retBox.top = targetBox.top + this.pad;
      retBox.height = Math.max(elementBox.height - (retBox.top - elementBox.top), MIN_HEIGHT);
    }

    if (this.boxDirections.left && elementBox.left < targetBox.left + this.pad) {
      retBox.left = targetBox.left + this.pad;
      retBox.width = Math.max(elementBox.width - (retBox.left - elementBox.left), MIN_WIDTH);
    }

    if (this.boxDirections.right && elementBox.left + elementBox.width > targetBox.left + targetBox.width - this.pad) {
      retBox.right = targetBox.left + targetBox.width - this.pad;
      retBox.width = Math.max(retBox.right - (retBox.left || elementBox.left), MIN_WIDTH);
    }

    if (this.boxDirections.bottom && elementBox.top + elementBox.height > targetBox.top + targetBox.height - this.pad) {
      retBox.bottom = targetBox.top + targetBox.height - this.pad;
      retBox.height = Math.max(retBox.bottom - (retBox.top || elementBox.top), MIN_HEIGHT);
    }

    return retBox;
  }

}

class BoundingBoxTransformer extends Transformer {
  transform(targetBox, elementBox) {
    const retBox = {};

    if (this.boxDirections.top && elementBox.top < targetBox.top + this.pad) {
      retBox.top = targetBox.top + this.pad;
    }

    if (this.boxDirections.left && elementBox.left < targetBox.left + this.pad) {
      retBox.left = targetBox.left + this.pad;
    }

    if (this.boxDirections.right && elementBox.left + elementBox.width > targetBox.left + targetBox.width - this.pad) {
      retBox.left = targetBox.left + targetBox.width - elementBox.width - this.pad;
    }

    if (this.boxDirections.bottom && elementBox.top + elementBox.height > targetBox.top + targetBox.height - this.pad) {
      retBox.top = targetBox.top + targetBox.height - elementBox.height - this.pad;
    }

    return retBox;
  }

}

class InverseBoundingBoxTransformer extends Transformer {
  transform(targetBox, elementBox) {
    const retBox = {};

    if (this.boxDirections.left && targetBox.left - this.pad < elementBox.left) {
      retBox.left = targetBox.left - this.pad;
    }

    if (this.boxDirections.right && elementBox.left + elementBox.width < targetBox.left + targetBox.width + this.pad) {
      retBox.left = targetBox.width + this.pad - elementBox.width + targetBox.left;
    }

    if (this.boxDirections.top && targetBox.top < elementBox.top + this.pad) {
      retBox.top = targetBox.top - this.pad;
    }

    if (this.boxDirections.bottom && elementBox.top + elementBox.height < targetBox.top + targetBox.height + this.pad) {
      retBox.top = targetBox.height + this.pad - elementBox.height + targetBox.top;
    }

    return retBox;
  }

}

const TransformFunctions = {
  center(input, targetBox) {
    return Math.floor(input + 0.5 * targetBox.width);
  },

  right(input, targetBox) {
    return input + targetBox.width;
  },

  left(input) {
    return input;
  },

  bottom(input, targetBox) {
    return input + targetBox.height;
  }

};
const Transformers = {
  top: TopTransformer,
  bottom: BottomTransFormer,
  center: CenterTransformer,
  middle: MiddleTransformer,
  left: LeftTransformer,
  right: RightTransformer,
  below: BelowTransformer,
  'bounding box': BoundingBoxTransformer,
  'shrinking box': ShrinkingBoxTransformer,
  'inverse bounding box': InverseBoundingBoxTransformer,
  default: Transformer
};
function toTransformFunctions(value) {
  return TransformFunctions[value] || TransformFunctions.left;
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/positionLibrary/util.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/positionLibrary/util.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "POSITION_ATTR_NAME": () => (/* binding */ POSITION_ATTR_NAME),
/* harmony export */   "WindowManager": () => (/* binding */ WindowManager),
/* harmony export */   "isShadowRoot": () => (/* binding */ isShadowRoot),
/* harmony export */   "getScrollableParent": () => (/* binding */ getScrollableParent),
/* harmony export */   "getScrollableParentFromEventPath": () => (/* binding */ getScrollableParentFromEventPath),
/* harmony export */   "isInDom": () => (/* binding */ isInDom),
/* harmony export */   "isScrolling": () => (/* binding */ isScrolling),
/* harmony export */   "isDomNode": () => (/* binding */ isDomNode),
/* harmony export */   "computeAbsPos": () => (/* binding */ computeAbsPos),
/* harmony export */   "timeout": () => (/* binding */ timeout),
/* harmony export */   "containsScrollingElement": () => (/* binding */ containsScrollingElement),
/* harmony export */   "queryScrollableChildren": () => (/* binding */ queryScrollableChildren),
/* harmony export */   "getPositionTarget": () => (/* binding */ getPositionTarget),
/* harmony export */   "generateUniqueSelector": () => (/* binding */ generateUniqueSelector),
/* harmony export */   "normalizeElement": () => (/* binding */ normalizeElement),
/* harmony export */   "normalizePosition": () => (/* binding */ normalizePosition),
/* harmony export */   "requestAnimationFrameAsPromise": () => (/* binding */ requestAnimationFrameAsPromise)
/* harmony export */ });
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var _salesforce_i18n_dir__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @salesforce/i18n/dir */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dir.js");


const POSITION_ATTR_NAME = 'data-position-id';

class BrowserWindow {
  get window() {
    if (!this._window) {
      this._window = window; // JTEST/Ingtegration: getComputedStyle may be null

      if (!this.window.getComputedStyle) {
        this.window.getComputedStyle = node => {
          return node.style;
        };
      }
    }

    return this._window;
  }

  mockWindow(value) {
    // For test, allow mock window.
    this._window = value;
  }

  get documentElement() {
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_0__.assert)(this.window.document, 'Missing window.document');
    return this.window.document.documentElement;
  }

  get MutationObserver() {
    return this.window.MutationObserver;
  }

  isWindow(element) {
    return element && element.toString() === '[object Window]';
  }

}

const WindowManager = new BrowserWindow();
function isShadowRoot(node) {
  return node && node.nodeType === 11;
}

function enumerateParent(elem, stopEl, checker) {
  // document.body is not necessarily a body tag, because of the (very rare)
  // case of a frameset.
  if (!elem || elem === stopEl || elem === document.body) {
    return null;
  } // if overflow is auto and overflow-y is also auto,
  // however in firefox the opposite is not true


  try {
    // getComputedStyle throws an exception
    // if elem is not an element
    // (can happen during unrender)
    const computedStyle = WindowManager.window.getComputedStyle(elem);

    if (!computedStyle) {
      return null;
    }

    if (checker(computedStyle)) {
      return elem;
    }

    return enumerateParent(isShadowRoot(elem.parentNode) ? elem.parentNode.host : elem.parentNode, stopEl, checker);
  } catch (e) {
    return null;
  }
}

function getScrollableParent(elem, stopEl) {
  return enumerateParent(elem, stopEl, computedStyle => {
    const overflow = computedStyle['overflow-y'];
    return overflow === 'auto' || overflow === 'scroll';
  });
}
function getScrollableParentFromEventPath(eventPath) {
  var computedStyle;
  var overflow;

  for (let i = 0; i < eventPath.length; i++) {
    let element = eventPath[i];

    if (element instanceof HTMLElement) {
      computedStyle = WindowManager.window.getComputedStyle(element);
      overflow = computedStyle['overflow-y'];

      if (overflow === 'auto' || overflow === 'scroll') {
        return element;
      }
    }
  }

  return null;
}

function queryOverflowHiddenParent(elem, stopEl) {
  return enumerateParent(elem, stopEl, computedStyle => {
    return computedStyle['overflow-x'] === 'hidden' || computedStyle['overflow-y'] === 'hidden';
  });
}

function isInDom(el) {
  if (el === WindowManager.window) {
    return true;
  }

  if (!isShadowRoot(el.parentNode) && el.parentNode && el.parentNode.tagName && el.parentNode.tagName.toUpperCase() === 'BODY') {
    return true;
  }

  if (isShadowRoot(el.parentNode) && el.parentNode.host) {
    return isInDom(el.parentNode.host);
  }

  if (el.parentNode) {
    return isInDom(el.parentNode);
  }

  return false;
}
function isScrolling(elem) {
  return elem.scrollHeight > elem.clientHeight;
}
function isDomNode(obj) {
  return obj.nodeType && (obj.nodeType === 1 || obj.nodeType === 11);
}
function computeAbsPos(target) {
  const val = {
    top: target.offsetTop,
    left: target.offsetLeft
  };

  if (target.offsetParent) {
    const val2 = computeAbsPos(target.offsetParent);
    val.top += val2.top;
    val.left += val2.left;
  }

  return val;
}
function timeout(time) {
  return new Promise(resolve => {
    // eslint-disable-next-line @lwc/lwc/no-async-operation
    setTimeout(() => {
      resolve();
    }, time);
  });
}
function containsScrollingElement(list) {
  const len = list.length;

  if (!len) {
    return false;
  }

  for (let i = 0; i < len; i++) {
    if (isScrolling(list[i])) {
      return true;
    }
  }

  return false;
}
function queryScrollableChildren(element) {
  return element.querySelectorAll('[data-scoped-scroll="true"]');
}
function getPositionTarget(element) {
  return element.tagName === 'TEXTAREA' ? isShadowRoot(element.parentNode) ? element.parentNode.host : element.parentNode : element;
}
let lastId = 1000000;
function generateUniqueSelector() {
  return `lgcp-${lastId++}`;
}
function normalizeElement(element) {
  const selector = generateUniqueSelector();
  element.setAttribute(POSITION_ATTR_NAME, selector);
  element = // eslint-disable-next-line @lwc/lwc/no-document-query
  document.querySelector(`[${POSITION_ATTR_NAME}="${selector}"]`) || element;
  return element;
}
function normalizePosition(element, overlay, nextIndex, target, alignWidth) {
  // Set element position to fixed
  // 1. element is inside overlay
  // or 2. When element isn't align with target's width, and target's parent has overflow-x:hidden setting.
  const isFixed = overlay.isInside || !alignWidth && queryOverflowHiddenParent(target, WindowManager.window, true);
  element.style.position = isFixed ? 'fixed' : 'absolute';
  element.style.zIndex = nextIndex || 0; // W-8042285 For RTL, left is positive value instead of negative.

  element.style.left = _salesforce_i18n_dir__WEBPACK_IMPORTED_MODULE_1__.default === 'rtl' ? '99999px' : '-9999px'; // Avoid flicker
  // we always position from the left, but in RTL mode Omakase swaps left and right properties.
  // To always allow positioning from the left we set right to auto so position library can do its work.

  element.style.right = 'auto';
  element.style.top = '0px'; // Avoid flicker

  return {
    element,
    overlay
  };
}
function requestAnimationFrameAsPromise() {
  return new Promise(resolve => {
    // eslint-disable-next-line @lwc/lwc/no-async-operation
    requestAnimationFrame(() => resolve());
  });
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/primitiveBubble/primitiveBubble.css":
/*!**************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/primitiveBubble/primitiveBubble.css ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function stylesheet(useActualHostSelector, token) {
  var shadowSelector = token ? ("[" + token + "]") : "";
  var hostSelector = token ? ("[" + token + "-host]") : "";
  return [".fix-popover_tooltip_alignment", shadowSelector, " {min-width: inherit;}"].join('');
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([stylesheet]);

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/primitiveBubble/primitiveBubble.html":
/*!***************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/primitiveBubble/primitiveBubble.html ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _primitiveBubble_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./primitiveBubble.css */ "./node_modules/lightning-base-components/src/lightning/primitiveBubble/primitiveBubble.css");
/* harmony import */ var _primitiveBubble_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./primitiveBubble.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");





function tmpl($api, $cmp, $slotset, $ctx) {
  const {b: api_bind, h: api_element} = $api;
  const {_m0, _m1} = $ctx;
  return [api_element("div", {
    className: $cmp.computedPopoverClass,
    attrs: {
      "part": "overlay"
    },
    key: 0,
    on: {
      "transitionend": _m0 || ($ctx._m0 = api_bind($cmp.handleTransitionEnd))
    }
  }, [api_element("div", {
    classMap: {
      "slds-popover__body": true
    },
    context: {
      lwc: {
        dom: "manual"
      }
    },
    key: 1,
    on: {
      "mouseleave": _m1 || ($ctx._m1 = api_bind($cmp.handleMouseLeave))
    }
  }, [])])];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_2__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_primitiveBubble_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _primitiveBubble_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_primitiveBubble_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _primitiveBubble_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-primitiveBubble_primitiveBubble"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/primitiveBubble/primitiveBubble.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/primitiveBubble/primitiveBubble.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _primitiveBubble_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./primitiveBubble.html */ "./node_modules/lightning-base-components/src/lightning/primitiveBubble/primitiveBubble.html");
/* harmony import */ var lightning_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/utils */ "./node_modules/lightning-base-components/src/lightning/utils/utils.js");



const DEFAULT_ALIGN = {
  horizontal: 'left',
  vertical: 'bottom'
};

class LightningPrimitiveBubble extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  constructor(...args) {
    super(...args);
    this.state = {
      // tracks the `visibility` of the tooltip
      visible: false,
      // tracks the `display` of the tooltip
      hidden: true,
      contentId: ''
    };
  }

  get contentId() {
    return this.state.contentId;
  }

  set contentId(value) {
    this.state.contentId = value;

    if (this.state.inDOM) {
      this.divEl.setAttribute('id', this.state.contentId);
    }
  }

  connectedCallback() {
    this.setAttribute('role', 'tooltip');
    this.state.inDOM = true;
  }

  disconnectedCallback() {
    this.state.inDOM = false;
  }

  renderedCallback() {
    // set content manually once rendered
    // - this is required to avoid the content update being in the wrong 'tick'
    this.setContentManually();
    this.setIdManually();
  }

  set content(value) {
    this.state.content = value;

    if (this.state.inDOM) {
      this.setContentManually();
    }
  }

  get content() {
    return this.state.content || '';
  }

  get align() {
    return this.state.align || DEFAULT_ALIGN;
  }

  set align(value) {
    this.state.align = value;
  }

  get visible() {
    return this.state.visible;
  }

  set visible(value) {
    this.state.visible = value;

    if (this.state.visible) {
      // Show the tooltip before css animation
      this.state.hidden = false;
    }
  }

  handleTransitionEnd() {
    // Hide the tooltip after css animation
    if (!this.state.visible) {
      this.state.hidden = true;
    }
  }

  setIdManually() {
    this.setAttribute('id', this.state.contentId);
  } // manually set the content value


  setContentManually() {
    /* manipulate DOM directly */
    this.template.querySelector('.slds-popover__body').textContent = this.state.content;
  } // compute class value for this bubble


  get computedPopoverClass() {
    const classes = (0,lightning_utils__WEBPACK_IMPORTED_MODULE_2__.classSet)('slds-popover').add('slds-popover_tooltip').add('fix-popover_tooltip_alignment'); // fix for W-11677142
    // show or hide bubble

    classes.add({
      'slds-rise-from-ground': this.visible,
      'slds-fall-into-ground': !this.visible,
      'slds-hide': this.state.hidden
    }); // apply the proper nubbin CSS class

    const {
      horizontal,
      vertical
    } = this.align;
    classes.add({
      'slds-nubbin_top-left': horizontal === 'left' && vertical === 'top',
      'slds-nubbin_top-right': horizontal === 'right' && vertical === 'top',
      'slds-nubbin_bottom-left': horizontal === 'left' && vertical === 'bottom',
      'slds-nubbin_bottom-right': horizontal === 'right' && vertical === 'bottom',
      'slds-nubbin_bottom': horizontal === 'center' && vertical === 'bottom',
      'slds-nubbin_top': horizontal === 'center' && vertical === 'top',
      'slds-nubbin_left': horizontal === 'left' && vertical === 'center',
      'slds-nubbin_right': horizontal === 'right' && vertical === 'center'
    });
    return classes.toString();
  }

  handleMouseLeave() {
    this.visible = false;
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningPrimitiveBubble, {
  publicProps: {
    contentId: {
      config: 3
    },
    content: {
      config: 3
    },
    align: {
      config: 3
    },
    visible: {
      config: 3
    }
  },
  track: {
    state: 1
  }
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningPrimitiveBubble, {
  tmpl: _primitiveBubble_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/primitiveButton/primitiveButton.html":
/*!***************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/primitiveButton/primitiveButton.html ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _primitiveButton_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./primitiveButton.css */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var _primitiveButton_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./primitiveButton.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");





function tmpl($api, $cmp, $slotset, $ctx) {
  const {} = $api;
  return [];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_2__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_primitiveButton_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _primitiveButton_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_primitiveButton_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _primitiveButton_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-primitiveButton_primitiveButton"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/primitiveButton/primitiveButton.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/primitiveButton/primitiveButton.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _primitiveButton_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./primitiveButton.html */ "./node_modules/lightning-base-components/src/lightning/primitiveButton/primitiveButton.html");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var lightning_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/utils */ "./node_modules/lightning-base-components/src/lightning/utils/utils.js");
/* harmony import */ var lightning_ariaObserver__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lightning/ariaObserver */ "./node_modules/lightning-base-components/src/lightning/ariaObserver/ariaObserver.js");





const BUTTON = 'button';
const ROLE = 'role';
/**
 * Primitive for button, buttonIcon and buttonIconStateful
 * We try to have those components to set their aria attributes on their template as much as possible
 * to avoid setting those manually, however there are a few instances
 * in which manual setting is still required:
 *
 *  - aria-disabled: Since it dependes on the disabled state, which is controlled by primitive button.
 *  - aria-controls: Abstracts the logic of setting the id-reference on the host element
 *  - aria-cetails: Role that depeneds on AriaObserver for native shadow.
 *  - aria-describedBy: Role that depeneds on AriaObserver for native shadow.
 *  - aria-flowTo: Abstracts the logic of setting the id-reference on the host element.
 *  - aria-labelledby: Role that depeneds on AriaObserver for native shadow.
 *  - aria-owns: Abstracts the logic of setting the id-reference on the host element.
 */

class LightningPrimitiveButton extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  /**** COMPONENT PRIVATE PROPERTIES ****/

  /**** COMPONENT PUBLIC APIS ****/

  /**
   * Specifies whether this button should be displayed in a disabled state.
   * Disabled buttons can't be clicked. This value defaults to false.
   *
   * @type {boolean}
   * @default false
   */
  set disabled(value) {
    this.originalDisabledValue = value;
    this.state.disabled = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.normalizeBoolean)(value);
  }

  get disabled() {
    return this.state.disabled;
  }
  /**
   * Specifies a shortcut key to activate or focus an element.
   *
   * @type {string}
   */


  /**
   * Specifies the ID or list of IDs of the element or elements that
   * contain visible descriptive text to describe the button.
   */
  set ariaLabelledBy(value) {
    this.originalAriaLabelledBy = value;
    this.ariaObserver.connect({
      targetSelector: 'button',
      attribute: 'aria-labelledby',
      id: value
    });
  }

  get ariaLabelledBy() {
    return this.originalAriaLabelledBy;
  }
  /**
   * A space-separated list of element IDs that provide descriptive labels for the button.
   *
   * @type {string}
   */


  set ariaDescribedBy(value) {
    this.originalAriaDescribedBy = value;
    this.ariaObserver.connect({
      targetSelector: 'button',
      attribute: 'aria-describedby',
      id: value
    });
  }

  get ariaDescribedBy() {
    return this.originalAriaDescribedBy;
  }
  /**
   * A space-separated list of element IDs whose presence or content is controlled by this button.
   *
   * @type {string}
   */


  set ariaControls(value) {
    this.originalAriaControls = value;
    this.template.host.setAttribute('aria-controls', value);
    this.setHostRoleAttribute(BUTTON);
  }

  get ariaControls() {
    return this.originalAriaControls;
  }
  /**
   * A space-separated list of element IDs whose presence or content is controlled by this button.
   *
   * @type {string}
   */


  set ariaOwns(value) {
    this.originalAriaOwns = value;
    this.template.host.setAttribute('aria-owns', value);
    this.setHostRoleAttribute(BUTTON);
  }

  get ariaOwns() {
    return this.originalAriaOwns;
  }
  /**
   * A space-separated list of element IDs whose presence or content is controlled by this button.
   *
   * @type {string}
   */


  set ariaDetails(value) {
    this.originalAriaDetails = value;
    this.template.host.setAttribute('aria-details', value);
    this.setHostRoleAttribute(BUTTON);
  }

  get ariaDetails() {
    return this.originalAriaDetails;
  }
  /**
   * A space-separated list of element IDs whose presence or content is controlled by this button.
   *
   * @type {string}
   */


  set ariaFlowTo(value) {
    this.originalAriaFlowTo = value;
    this.template.host.setAttribute('aria-flowto', value);
    this.setHostRoleAttribute(BUTTON);
  }

  get ariaFlowTo() {
    return this.originalAriaFlowTo;
  }
  /**
   * Indicates whether an element that the button controls is expanded or collapsed.
   * Valid values are 'true' or 'false'. The default value is undefined.
   *
   * @type {string}
   * @default undefined
   */


  get ariaExpanded() {
    return this.originalAriaExpanded;
  }

  set ariaExpanded(value) {
    this.originalAriaExpanded = value;
    this.state.ariaExpanded = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.normalizeString)(value, {
      fallbackValue: null,
      validValues: ['true', 'false']
    });
  }

  get computedAriaExpanded() {
    return this.state.ariaExpanded;
  }
  /**
   * Indicates the current "pressed" state of toggle buttons.
   * Valid values are 'true' or 'false'. The default value is undefined.
   *
   * @type {string}
   * @default undefined
   */


  set ariaPressed(value) {
    this.originalAriaPressed = value;
    this.state.ariaPressed = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.normalizeString)(value, {
      fallbackValue: null,
      validValues: ['true', 'false']
    });
  }

  get ariaPressed() {
    return this.originalAriaPressed;
  }

  get computedAriaPressed() {
    return this.state.ariaPressed;
  }
  /**
   * Indicates whether an element that the button controls is expanded or collapsed.
   * Valid values are 'true' or 'false'. The default value is undefined.
   *
   * @type {string}
   * @default undefined
   */


  set ariaHidden(value) {
    this.originalAriaHidden = value;
    this.state.ariaHidden = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.normalizeString)(value, {
      fallbackValue: null,
      validValues: ['true', 'false']
    });
  }

  get ariaHidden() {
    return this.originalAriaHidden;
  }

  get computedAriaHidden() {
    return this.state.ariaHidden;
  }
  /**
   * Indicates the element that represents the current item within a container or set of related elements.
   * For example:
   *   - A page token used to indicate a link within a set of pagination links, where the link is visually styled to
   *   represent the currently-displayed page.
   *   - A step token used to indicate a link within a step indicator for a step-based process, where
   *   the link is visually styled to represent the current step.
   *   - A location token used to indicate the image that is visually highlighted as the current component
   *   of a flow chart.
   *   - A date token used to indicate the current date within a calendar.
   *   - A time token used to indicate the current time within a timetable.
   *
   * @type {string}
   * @default undefined
   */


  /**
   * Indicates that the button has an interactive popup element.
   * Valid values are 'true', 'dialog', 'menu', 'listbox', 'tree', and 'grid' based on ARIA 1.1 specifications.
   * The default value is undefined.
   *
   * @type {string}
   * @default undefined
   */
  set ariaHasPopup(value) {
    this.originalAriaHasPopup = value;
    this.state.ariaHasPopup = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.normalizeString)(value, {
      fallbackValue: null,
      validValues: ['true', 'dialog', 'menu', 'listbox', 'tree', 'grid']
    });
  }

  get ariaHasPopup() {
    return this.originalAriaHasPopup;
  }

  get computedAriaHasPopup() {
    return this.state.ariaHasPopup;
  }
  /**
   * Indicates that the button has an interactive popup element.
   * Valid values are 'true', 'dialog', 'menu', 'listbox', 'tree', and 'grid' based on ARIA 1.1 specifications.
   * The default value is undefined.
   *
   * @type {string}
   * @default undefined
   */


  set ariaRelevant(value) {
    this.originalAriaRelevant = value;
    this.state.ariaRelevant = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.normalizeString)(value, {
      fallbackValue: null,
      validValues: ['additions', 'removals', 'text', 'all']
    });
  }

  get ariaRelevant() {
    return this.originalAriaRelevant;
  }

  get computedAriaRelevant() {
    return this.state.ariaRelevant;
  }
  /**
   * Indicates that the button can be updated when it doesn't have focus.
   * Valid values are 'polite', 'assertive', or 'off'. The polite value causes assistive
   * technologies to notify users of updates at a low priority, generally without interrupting.
   * The assertive value causes assistive technologies to notify users immediately,
   * potentially clearing queued speech updates.
   *
   * @type {string}
   */


  set ariaLive(value) {
    this.originalAriaLive = value;
    this.state.ariaLive = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.normalizeString)(value, {
      fallbackValue: null,
      validValues: ['polite', 'assertive', 'off']
    });
  }

  get ariaLive() {
    return this.originalAriaLive;
  }

  get computedAriaLive() {
    return this.state.ariaLive;
  }
  /**
   * Indicates whether assistive technologies present all, or only parts of,
   * the changed region. Valid values are 'true' or 'false'.
   *
   * @type {string}
   */


  set ariaAtomic(value) {
    this.originalAriaAtomic = value;
    this.state.ariaAtomic = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.normalizeString)(value, {
      fallbackValue: null,
      validValues: ['true', 'false']
    });
  }

  get ariaAtomic() {
    return this.originalAriaAtomic;
  }

  get computedAriaAtomic() {
    return this.state.ariaAtomic;
  }
  /**
   * Indicates an element is being modified and that assistive technologies MAY want to wait
   * until the modifications are complete before exposing them to the user.
   * Refer to W3C aria-busy for more
   *
   * @type {string}
   */


  set ariaBusy(value) {
    this.originalAriaBusy = value;
    this.state.ariaBusy = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.normalizeString)(value, {
      fallbackValue: null,
      validValues: ['true', 'false']
    });
  }

  get ariaBusy() {
    return this.originalAriaBusy;
  }

  get computedAriaBusy() {
    return this.state.ariaBusy;
  }

  get computedButtonClass() {
    const classes = (0,lightning_utils__WEBPACK_IMPORTED_MODULE_3__.classSet)('slds-button');
    classes.add((0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.buttonGroupOrderClass)(this.groupOrder));
    return classes.toString();
  }
  /**
   * Sets focus on the element.
   */


  focus() {}
  /**
   * Reserved for internal use only.
   * Describes the order of this element (first, middle or last) inside lightning-button-group.
   * @type {string}
   */


  /**** COMPONENT LIFECYCLE EVENTS ****/
  constructor() {
    super();
    this._initialized = false;
    this.state = {
      ariaAtomic: null,
      ariaBusy: null,
      ariaControls: null,
      ariaDetails: null,
      ariaDescribedBy: null,
      ariaExpanded: null,
      ariaFlowTo: null,
      ariaHasPopup: null,
      ariaHidden: null,
      ariaLabelledBy: null,
      ariaLive: null,
      ariaOwns: null,
      ariaPressed: null,
      ariaRelevant: null,
      disabled: false
    };
    this.originalAriaAtomic = void 0;
    this.originalAriaBusy = void 0;
    this.originalAriaControls = void 0;
    this.originalAriaDetails = void 0;
    this.originalAriaDescribedBy = void 0;
    this.originalAriaExpanded = void 0;
    this.originalAriaFlowTo = void 0;
    this.originalAriaHasPopup = void 0;
    this.originalAriaHidden = void 0;
    this.originalAriaLabelledBy = void 0;
    this.originalAriaLive = void 0;
    this.originalAriaOwns = void 0;
    this.originalAriaPressed = void 0;
    this.originalAriaRelevant = void 0;
    this.originalDisabledValue = void 0;
    this.accessKey = void 0;
    this.title = void 0;
    this.ariaLabel = void 0;
    this.ariaCurrent = void 0;
    this.ariaKeyShortcuts = void 0;
    this.groupOrder = '';
    this.ariaObserver = new lightning_ariaObserver__WEBPACK_IMPORTED_MODULE_4__.default(this); // Workaround for an IE11 bug where click handlers on button ancestors
    // receive the click event even if the button element has the `disabled`
    // attribute set.

    if (lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.isIE11) {
      this.template.addEventListener('click', event => {
        if (this.disabled) {
          event.stopImmediatePropagation();
        }
      });
    }
  }

  renderedCallback() {
    if (this.isConnected) {
      this.ariaObserver.sync();
    }
  }

  disconnectedCallback() {
    if (this.ariaObserver) {
      this.ariaObserver.disconnect();
      this.ariaObserver = undefined;
    }
  }
  /**
   * Utility function to set aria roles on the host element.
   * This is used mainly for native-shadow use cases for aria attributes that
   * depenend on ID references.
   *
   * If the role attribute is present we will respect that, otherwise it will be set to
   * an specific role, in this case button.
   *
   * @type {string}
   * @default undefined
   */


  setHostRoleAttribute(value) {
    const hostElement = this.template.host;
    let ariaRoleValue = hostElement.getAttribute(ROLE) || value;
    hostElement.setAttribute(ROLE, ariaRoleValue);
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningPrimitiveButton, {
  publicProps: {
    disabled: {
      config: 3
    },
    accessKey: {
      config: 0
    },
    title: {
      config: 0
    },
    ariaLabel: {
      config: 0
    },
    ariaLabelledBy: {
      config: 3
    },
    ariaDescribedBy: {
      config: 3
    },
    ariaControls: {
      config: 3
    },
    ariaOwns: {
      config: 3
    },
    ariaDetails: {
      config: 3
    },
    ariaFlowTo: {
      config: 3
    },
    ariaExpanded: {
      config: 3
    },
    ariaPressed: {
      config: 3
    },
    ariaHidden: {
      config: 3
    },
    ariaCurrent: {
      config: 0
    },
    ariaKeyShortcuts: {
      config: 0
    },
    ariaHasPopup: {
      config: 3
    },
    ariaRelevant: {
      config: 3
    },
    ariaLive: {
      config: 3
    },
    ariaAtomic: {
      config: 3
    },
    ariaBusy: {
      config: 3
    },
    groupOrder: {
      config: 0
    }
  },
  publicMethods: ["focus"],
  track: {
    state: 1
  },
  fields: ["_initialized", "originalAriaAtomic", "originalAriaBusy", "originalAriaControls", "originalAriaDetails", "originalAriaDescribedBy", "originalAriaExpanded", "originalAriaFlowTo", "originalAriaHasPopup", "originalAriaHidden", "originalAriaLabelledBy", "originalAriaLive", "originalAriaOwns", "originalAriaPressed", "originalAriaRelevant", "originalDisabledValue"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningPrimitiveButton, {
  tmpl: _primitiveButton_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/primitiveColorpickerButton/primitiveColorpickerButton.css":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/primitiveColorpickerButton/primitiveColorpickerButton.css ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([]);

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/primitiveColorpickerButton/primitiveColorpickerButton.html":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/primitiveColorpickerButton/primitiveColorpickerButton.html ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _primitiveColorpickerButton_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./primitiveColorpickerButton.css */ "./node_modules/lightning-base-components/src/lightning/primitiveColorpickerButton/primitiveColorpickerButton.css");
/* harmony import */ var _primitiveColorpickerButton_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./primitiveColorpickerButton.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lightning_primitiveIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/primitiveIcon */ "./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.js");
/* harmony import */ var lightning_colorPickerPanel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/colorPickerPanel */ "./node_modules/lightning-base-components/src/lightning/colorPickerPanel/colorPickerPanel.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");







function tmpl($api, $cmp, $slotset, $ctx) {
  const {b: api_bind, d: api_dynamic_text, t: api_text, h: api_element, c: api_custom_element} = $api;
  const {_m0, _m1} = $ctx;
  return [api_element("button", {
    classMap: {
      "slds-button": true,
      "slds-color-picker__summary-button": true,
      "slds-button_icon": true,
      "slds-button_icon-more": true
    },
    attrs: {
      "type": "button",
      "part": "color-picker-button",
      "disabled": $cmp.disabled ? "" : null
    },
    key: 0,
    on: {
      "click": _m0 || ($ctx._m0 = api_bind($cmp.handleColorPickerToggleClick))
    }
  }, [api_element("span", {
    classMap: {
      "slds-swatch": true
    },
    style: $cmp.colorInputStyle,
    attrs: {
      "data-id": "thumbnail"
    },
    key: 1
  }, [api_element("span", {
    classMap: {
      "slds-assistive-text": true
    },
    key: 2
  }, [api_text(api_dynamic_text($cmp.i18n.a11yTriggerText))])]), api_custom_element("lightning-primitive-icon", lightning_primitiveIcon__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "iconName": "utility:down",
      "svgClass": "slds-button__icon slds-button__icon_small",
      "variant": "bare"
    },
    key: 3
  }, []), api_element("span", {
    classMap: {
      "slds-assistive-text": true,
      "a11y-color-value": true
    },
    key: 4
  }, [api_text(api_dynamic_text($cmp.value))])]), $cmp._isColorPickerPanelOpen ? api_custom_element("lightning-color-picker-panel", lightning_colorPickerPanel__WEBPACK_IMPORTED_MODULE_3__.default, {
    classMap: {
      "color-picker-panel": true
    },
    props: {
      "currentColor": $cmp.value
    },
    key: 5,
    on: {
      "updatecolor": _m1 || ($ctx._m1 = api_bind($cmp.handleUpdateColorEvent))
    }
  }, []) : null];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_4__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_primitiveColorpickerButton_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _primitiveColorpickerButton_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_primitiveColorpickerButton_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _primitiveColorpickerButton_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-primitiveColorpickerButton_primitiveColorpickerButton"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/primitiveColorpickerButton/primitiveColorpickerButton.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/primitiveColorpickerButton/primitiveColorpickerButton.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _primitiveColorpickerButton_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./primitiveColorpickerButton.html */ "./node_modules/lightning-base-components/src/lightning/primitiveColorpickerButton/primitiveColorpickerButton.html");
/* harmony import */ var _salesforce_label_LightningColorPicker_a11yTriggerText__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/label/LightningColorPicker.a11yTriggerText */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.a11yTriggerText.js");
/* harmony import */ var lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/positionLibrary */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/positionLibrary.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");





const i18n = {
  a11yTriggerText: _salesforce_label_LightningColorPicker_a11yTriggerText__WEBPACK_IMPORTED_MODULE_2__.default
};

class PrimitiveColorpickerButton extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  constructor(...args) {
    super(...args);
    this._isColorPickerPanelOpen = false;
    this._value = '';
    this._disabled = false;
  }

  get value() {
    return this._value;
  }

  set value(value) {
    this._value = value;
  }
  /**
   * If present, the input field is disabled and users cannot interact with it.
   * @type {boolean}
   * @default false
   */


  get disabled() {
    return this._disabled;
  }

  set disabled(value) {
    this._disabled = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_4__.normalizeBoolean)(value);
  }

  focus() {
    const button = this.template.querySelector('button');
    return button && button.focus();
  }

  blur() {
    const button = this.template.querySelector('button');
    return button && button.blur();
  }

  get colorInputStyle() {
    return `background: ${this.value || '#5679C0'};`;
  }

  handleColorPickerToggleClick(event) {
    event.preventDefault();
    this._isColorPickerPanelOpen = !this._isColorPickerPanelOpen;

    if (this._isColorPickerPanelOpen) {
      this.startColorPickerPositioning();
    } else {
      this.stopColorPickerPositioning();
    }
  }

  startColorPickerPositioning() {
    if (!this._autoPosition) {
      this._autoPosition = new lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_3__.AutoPosition(this);
    }

    this._autoPosition.start({
      target: () => this.template.querySelector('button.slds-color-picker__summary-button'),
      element: () => this.template.querySelector('lightning-color-picker-panel').shadowRoot.querySelector('section'),
      align: {
        horizontal: lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_3__.Direction.Left,
        vertical: lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_3__.Direction.Top
      },
      targetAlign: {
        horizontal: lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_3__.Direction.Left,
        vertical: lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_3__.Direction.Bottom
      },
      autoFlip: true
    });
  }

  stopColorPickerPositioning() {
    if (this._autoPosition) {
      this._autoPosition.stop();
    }
  }

  handleUpdateColorEvent(event) {
    event.stopPropagation();
    const detail = event.detail;
    this._isColorPickerPanelOpen = false;
    this.stopColorPickerPositioning();
    this.dispatchEvent(new CustomEvent('change', {
      detail
    }));
  }

  get i18n() {
    return i18n;
  }

}

PrimitiveColorpickerButton.delegatesFocus = true;

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(PrimitiveColorpickerButton, {
  publicProps: {
    value: {
      config: 3
    },
    disabled: {
      config: 3
    }
  },
  publicMethods: ["focus", "blur"],
  track: {
    _isColorPickerPanelOpen: 1,
    _value: 1,
    _disabled: 1
  }
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(PrimitiveColorpickerButton, {
  tmpl: _primitiveColorpickerButton_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/primitiveFileDroppableZone/primitiveFileDroppableZone.css":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/primitiveFileDroppableZone/primitiveFileDroppableZone.css ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function stylesheet(useActualHostSelector, token) {
  var shadowSelector = token ? ("[" + token + "]") : "";
  var hostSelector = token ? ("[" + token + "-host]") : "";
  return ["slot", shadowSelector, " {display: inline-block;}"].join('');
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([stylesheet]);

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/primitiveFileDroppableZone/primitiveFileDroppableZone.html":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/primitiveFileDroppableZone/primitiveFileDroppableZone.html ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _primitiveFileDroppableZone_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./primitiveFileDroppableZone.css */ "./node_modules/lightning-base-components/src/lightning/primitiveFileDroppableZone/primitiveFileDroppableZone.css");
/* harmony import */ var _primitiveFileDroppableZone_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./primitiveFileDroppableZone.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");





function tmpl($api, $cmp, $slotset, $ctx) {
  const {s: api_slot} = $api;
  return [api_slot("", {
    key: 0
  }, [], $slotset)];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_2__.registerTemplate)(tmpl));
tmpl.slots = [""];
tmpl.stylesheets = [];


if (_primitiveFileDroppableZone_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _primitiveFileDroppableZone_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_primitiveFileDroppableZone_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _primitiveFileDroppableZone_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-primitiveFileDroppableZone_primitiveFileDroppableZone"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/primitiveFileDroppableZone/primitiveFileDroppableZone.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/primitiveFileDroppableZone/primitiveFileDroppableZone.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _primitiveFileDroppableZone_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./primitiveFileDroppableZone.html */ "./node_modules/lightning-base-components/src/lightning/primitiveFileDroppableZone/primitiveFileDroppableZone.html");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");




class LightningPrimitiveFileDroppableZone extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  get disabled() {
    return this._disabled || false;
  }

  set disabled(value) {
    this._disabled = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.normalizeBoolean)(value);
  }

  get multiple() {
    return this._multiple || false;
  }

  set multiple(value) {
    this._multiple = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.normalizeBoolean)(value);
  }

  constructor() {
    super();
    this._disabled = void 0;
    this._multiple = void 0;
    this.template.addEventListener('dragover', this.allowDrop.bind(this));
    this.template.addEventListener('dragleave', this.handleDragLeave.bind(this));
    this.template.addEventListener('drop', this.handleOnDrop.bind(this));
  }

  connectedCallback() {
    this.classList.add('slds-file-selector__dropzone');
  }

  setDragOver(dragOver) {
    this.classList.toggle('slds-has-drag-over', dragOver);
  }

  handleDragLeave() {
    this.setDragOver(false);
  }

  handleOnDrop(event) {
    event.preventDefault();
    this.setDragOver(false);

    if (this.disabled) {
      event.stopPropagation();
      return;
    }

    if (!this.meetsMultipleCriteria(event)) {
      event.stopPropagation();
    }
  }

  allowDrop(event) {
    event.preventDefault();

    if (!this.disabled) {
      this.setDragOver(true);
    }
  }

  meetsMultipleCriteria(dragEvent) {
    const files = dragEvent.dataTransfer.files;
    return !(files.length > 1 && !this.multiple);
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningPrimitiveFileDroppableZone, {
  publicProps: {
    disabled: {
      config: 3
    },
    multiple: {
      config: 3
    }
  },
  track: {
    _disabled: 1,
    _multiple: 1
  }
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningPrimitiveFileDroppableZone, {
  tmpl: _primitiveFileDroppableZone_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/primitiveIcon/fetch.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/primitiveIcon/fetch.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hasIconLibrary": () => (/* binding */ hasIconLibrary),
/* harmony export */   "getIconLibrary": () => (/* binding */ getIconLibrary),
/* harmony export */   "fetchIconLibrary": () => (/* binding */ fetchIconLibrary)
/* harmony export */ });
// Cache for promises that import icon templates
const importPromises = {};
const iconTemplateCache = {};
function hasIconLibrary(dir, category) {
  const cacheKey = makeCacheKey(dir, category);
  return !!iconTemplateCache[cacheKey];
}
function getIconLibrary(dir, category) {
  const cacheKey = makeCacheKey(dir, category);
  return iconTemplateCache[cacheKey] || null;
}
function fetchIconLibrary(dir, category) {
  const cacheKey = makeCacheKey(dir, category); // If icon template is being requested, return the cached promise

  if (importPromises[cacheKey]) {
    return importPromises[cacheKey];
  }

  const promise = fetchIconTemplate(dir, category);
  promise.then(tmpl => {
    iconTemplateCache[cacheKey] = tmpl;
    delete importPromises[cacheKey];
  }).catch(() => {
    delete importPromises[cacheKey];
  }); // Cache the promise to import

  importPromises[cacheKey] = promise;
  return promise;
}

function makeCacheKey(dir, category) {
  return `${category}${dir}`;
} // eslint-disable-next-line @lwc/lwc/no-async-await


async function fetchIconTemplate(dir, category) {
  if (dir === 'rtl') {
    switch (category) {
      case 'utility':
        {
          // eslint-disable-next-line @lwc/lwc/no-async-await
          const {
            default: Lib
          } = await __webpack_require__.e(/*! import() */ "vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesUtilityRtl_iconS-e8b064").then(__webpack_require__.bind(__webpack_require__, /*! lightning/iconSvgTemplatesUtilityRtl */ "./node_modules/lightning-base-components/src/lightning/iconSvgTemplatesUtilityRtl/iconSvgTemplatesUtilityRtl.js"));
          return Lib;
        }

      case 'action':
        {
          // eslint-disable-next-line @lwc/lwc/no-async-await
          const {
            default: Lib
          } = await __webpack_require__.e(/*! import() */ "vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesActionRtl_iconSv-8296d9").then(__webpack_require__.bind(__webpack_require__, /*! lightning/iconSvgTemplatesActionRtl */ "./node_modules/lightning-base-components/src/lightning/iconSvgTemplatesActionRtl/iconSvgTemplatesActionRtl.js"));
          return Lib;
        }

      case 'standard':
        {
          // eslint-disable-next-line @lwc/lwc/no-async-await
          const {
            default: Lib
          } = await __webpack_require__.e(/*! import() */ "vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesStandardRtl_icon-9d9064").then(__webpack_require__.bind(__webpack_require__, /*! lightning/iconSvgTemplatesStandardRtl */ "./node_modules/lightning-base-components/src/lightning/iconSvgTemplatesStandardRtl/iconSvgTemplatesStandardRtl.js"));
          return Lib;
        }

      case 'doctype':
        {
          // eslint-disable-next-line @lwc/lwc/no-async-await
          const {
            default: Lib
          } = await __webpack_require__.e(/*! import() */ "vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesDoctypeRtl_iconS-844b2b").then(__webpack_require__.bind(__webpack_require__, /*! lightning/iconSvgTemplatesDoctypeRtl */ "./node_modules/lightning-base-components/src/lightning/iconSvgTemplatesDoctypeRtl/iconSvgTemplatesDoctypeRtl.js"));
          return Lib;
        }

      case 'custom':
        {
          // eslint-disable-next-line @lwc/lwc/no-async-await
          const {
            default: Lib
          } = await __webpack_require__.e(/*! import() */ "vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesCustomRtl_iconSv-510854").then(__webpack_require__.bind(__webpack_require__, /*! lightning/iconSvgTemplatesCustomRtl */ "./node_modules/lightning-base-components/src/lightning/iconSvgTemplatesCustomRtl/iconSvgTemplatesCustomRtl.js"));
          return Lib;
        }

      default:
        return null;
    }
  } else {
    switch (category) {
      case 'utility':
        {
          // eslint-disable-next-line @lwc/lwc/no-async-await
          const {
            default: Lib
          } = await __webpack_require__.e(/*! import() */ "vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesUtility_iconSvgT-7b4df3").then(__webpack_require__.bind(__webpack_require__, /*! lightning/iconSvgTemplatesUtility */ "./node_modules/lightning-base-components/src/lightning/iconSvgTemplatesUtility/iconSvgTemplatesUtility.js"));
          return Lib;
        }

      case 'action':
        {
          // eslint-disable-next-line @lwc/lwc/no-async-await
          const {
            default: Lib
          } = await __webpack_require__.e(/*! import() */ "vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesAction_iconSvgTe-c9f95a").then(__webpack_require__.bind(__webpack_require__, /*! lightning/iconSvgTemplatesAction */ "./node_modules/lightning-base-components/src/lightning/iconSvgTemplatesAction/iconSvgTemplatesAction.js"));
          return Lib;
        }

      case 'standard':
        {
          // eslint-disable-next-line @lwc/lwc/no-async-await
          const {
            default: Lib
          } = await __webpack_require__.e(/*! import() */ "vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesStandard_iconSvg-a4537e").then(__webpack_require__.bind(__webpack_require__, /*! lightning/iconSvgTemplatesStandard */ "./node_modules/lightning-base-components/src/lightning/iconSvgTemplatesStandard/iconSvgTemplatesStandard.js"));
          return Lib;
        }

      case 'doctype':
        {
          // eslint-disable-next-line @lwc/lwc/no-async-await
          const {
            default: Lib
          } = await __webpack_require__.e(/*! import() */ "vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesDoctype_iconSvgT-b6500b").then(__webpack_require__.bind(__webpack_require__, /*! lightning/iconSvgTemplatesDoctype */ "./node_modules/lightning-base-components/src/lightning/iconSvgTemplatesDoctype/iconSvgTemplatesDoctype.js"));
          return Lib;
        }

      case 'custom':
        {
          // eslint-disable-next-line @lwc/lwc/no-async-await
          const {
            default: Lib
          } = await __webpack_require__.e(/*! import() */ "vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesCustom_iconSvgTe-6e9a35").then(__webpack_require__.bind(__webpack_require__, /*! lightning/iconSvgTemplatesCustom */ "./node_modules/lightning-base-components/src/lightning/iconSvgTemplatesCustom/iconSvgTemplatesCustom.js"));
          return Lib;
        }

      default:
        return null;
    }
  }
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.css":
/*!**********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.css ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function stylesheet(useActualHostSelector, token) {
  var shadowSelector = token ? ("[" + token + "]") : "";
  var hostSelector = token ? ("[" + token + "-host]") : "";
  return ["_:-ms-lang(x)", shadowSelector, ", svg", shadowSelector, " {pointer-events: none;}"].join('');
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([stylesheet]);

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.html":
/*!***********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.html ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _primitiveIcon_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./primitiveIcon.css */ "./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.css");
/* harmony import */ var _primitiveIcon_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./primitiveIcon.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");





function tmpl($api, $cmp, $slotset, $ctx) {
  const {fid: api_scoped_frag_id, h: api_element} = $api;
  return [api_element("svg", {
    className: $cmp.computedClass,
    attrs: {
      "focusable": "false",
      "data-key": $cmp.name,
      "aria-hidden": "true"
    },
    key: 0,
    svg: true
  }, [api_element("use", {
    attrs: {
      "xlink:href": (0,lwc__WEBPACK_IMPORTED_MODULE_2__.sanitizeAttribute)("use", "http://www.w3.org/2000/svg", "xlink:href", api_scoped_frag_id($cmp.href))
    },
    key: 1,
    svg: true
  }, [])])];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_2__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_primitiveIcon_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _primitiveIcon_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_primitiveIcon_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _primitiveIcon_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-primitiveIcon_primitiveIcon"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _primitiveIcon_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./primitiveIcon.html */ "./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.html");
/* harmony import */ var lightning_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/utils */ "./node_modules/lightning-base-components/src/lightning/utils/utils.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var lightning_iconUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lightning/iconUtils */ "./node_modules/lightning-base-components/src/lightning/iconUtils/iconUtils.js");
/* harmony import */ var _salesforce_i18n_dir__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @salesforce/i18n/dir */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dir.js");
/* harmony import */ var _fetch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fetch */ "./node_modules/lightning-base-components/src/lightning/primitiveIcon/fetch.js");









class LightningPrimitiveIcon extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  constructor(...args) {
    super(...args);
    this.src = void 0;
    this.svgClass = void 0;
    this._size = 'medium';
    this._variant = '';
    this._iconLibrary = null;
    this._iconName = null;
  }

  get size() {
    return this._size;
  }

  set size(val) {
    this._size = val;
  }

  get variant() {
    return this._variant;
  }

  set variant(val) {
    this._variant = val;
  }

  get iconName() {
    return this._iconName;
  }

  set iconName(value) {
    if (value !== this._iconName) {
      this._iconName = value;
      this.requestIconTemplates();
    }
  }

  get category() {
    if ((0,lightning_iconUtils__WEBPACK_IMPORTED_MODULE_4__.isValidName)(this._iconName)) {
      const [spriteName] = this._iconName.split(':');

      return spriteName;
    }

    return null;
  }

  get isReady() {
    return !!this._iconLibrary;
  } // eslint-disable-next-line @lwc/lwc/no-async-await


  async requestIconTemplates() {
    if ((0,_fetch__WEBPACK_IMPORTED_MODULE_6__.hasIconLibrary)(_salesforce_i18n_dir__WEBPACK_IMPORTED_MODULE_5__.default, this.category)) {
      this._iconLibrary = (0,_fetch__WEBPACK_IMPORTED_MODULE_6__.getIconLibrary)(_salesforce_i18n_dir__WEBPACK_IMPORTED_MODULE_5__.default, this.category);
      return;
    }

    if (this.category) {
      try {
        this._iconLibrary = null;
        this._iconLibrary = await (0,_fetch__WEBPACK_IMPORTED_MODULE_6__.fetchIconLibrary)(_salesforce_i18n_dir__WEBPACK_IMPORTED_MODULE_5__.default, this.category);
      } catch (e) {
        // eslint-disable-next-line no-console
        console.warn(`<lightning-primitive-icon> failed to dynamically import icon templates for ${this.category}: ${e.message}`);
      }
    }
  }

  renderedCallback() {
    if (this.isReady || this.iconName !== this.prevIconName) {
      this.prevIconName = this.iconName;
      const svgElement = this.template.querySelector('svg');
      (0,lightning_iconUtils__WEBPACK_IMPORTED_MODULE_4__.polyfill)(svgElement);
    }
  }

  render() {
    if (this.isReady) {
      // If src is present, should use default template reply on given svg src
      if (!this.src) {
        const name = this.iconName;

        if ((0,lightning_iconUtils__WEBPACK_IMPORTED_MODULE_4__.isValidName)(name)) {
          const [spriteName, iconName] = name.split(':');
          const template = this._iconLibrary[`${spriteName}_${iconName}`];

          if (template) {
            return template;
          }
        }
      }
    }

    return _primitiveIcon_html__WEBPACK_IMPORTED_MODULE_1__.default;
  }

  get href() {
    return this.src || '';
  }

  get name() {
    return (0,lightning_iconUtils__WEBPACK_IMPORTED_MODULE_4__.getName)(this.iconName);
  }

  get normalizedSize() {
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_3__.normalizeString)(this._size, {
      fallbackValue: 'medium',
      validValues: ['xx-small', 'x-small', 'small', 'medium', 'large']
    });
  }

  get normalizedVariant() {
    // NOTE: Leaving a note here because I just wasted a bunch of time
    // investigating why both 'bare' and 'inverse' are supported in
    // lightning-primitive-icon. lightning-icon also has a deprecated
    // 'bare', but that one is synonymous to 'inverse'. This 'bare' means
    // that no classes should be applied. So this component needs to
    // support both 'bare' and 'inverse' while lightning-icon only needs to
    // support 'inverse'.
    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_3__.normalizeString)(this._variant, {
      fallbackValue: '',
      validValues: ['bare', 'error', 'inverse', 'warning', 'success']
    });
  }

  get computedClass() {
    const classes = (0,lightning_utils__WEBPACK_IMPORTED_MODULE_2__.classSet)(this.svgClass);
    const {
      normalizedSize,
      normalizedVariant
    } = this;

    if (normalizedVariant !== 'bare') {
      classes.add('slds-icon');
    }

    switch (normalizedVariant) {
      case 'error':
        classes.add('slds-icon-text-error');
        break;

      case 'warning':
        classes.add('slds-icon-text-warning');
        break;

      case 'success':
        classes.add('slds-icon-text-success');
        break;

      case 'inverse':
      case 'bare':
        break;

      default:
        // if custom icon is set, we don't want to set
        // the text-default class
        if (!this.src) {
          classes.add('slds-icon-text-default');
        }

    }

    if (normalizedSize !== 'medium') {
      classes.add(`slds-icon_${normalizedSize}`);
    }

    return classes.toString();
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningPrimitiveIcon, {
  publicProps: {
    src: {
      config: 0
    },
    svgClass: {
      config: 0
    },
    size: {
      config: 3
    },
    variant: {
      config: 3
    },
    iconName: {
      config: 3
    }
  },
  fields: ["_size", "_variant", "_iconLibrary", "_iconName"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningPrimitiveIcon, {
  tmpl: _primitiveIcon_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/select/select.html":
/*!*********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/select/select.html ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _select_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./select.css */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var _select_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./select.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lightning_helptext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/helptext */ "./node_modules/lightning-base-components/src/lightning/helptext/helptext.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");






function tmpl($api, $cmp, $slotset, $ctx) {
  const {gid: api_scoped_id, t: api_text, h: api_element, d: api_dynamic_text, c: api_custom_element, b: api_bind, k: api_key, i: api_iterator} = $api;
  const {_m0, _m1, _m2} = $ctx;
  return [api_element("label", {
    className: $cmp.computedLabelClass,
    attrs: {
      "for": api_scoped_id("select")
    },
    key: 0
  }, [$cmp.required ? api_element("abbr", {
    classMap: {
      "slds-required": true
    },
    attrs: {
      "title": $cmp.i18n.required
    },
    key: 1
  }, [api_text("*")]) : null, api_text(api_dynamic_text($cmp.label))]), $cmp.fieldLevelHelp ? api_custom_element("lightning-helptext", lightning_helptext__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "content": $cmp.fieldLevelHelp,
      "alternativeText": $cmp.helptextAlternativeText
    },
    key: 2
  }, []) : null, api_element("div", {
    classMap: {
      "slds-form-element__control": true
    },
    key: 3
  }, [api_element("div", {
    classMap: {
      "slds-select_container": true
    },
    key: 4
  }, [api_element("select", {
    classMap: {
      "slds-select": true
    },
    attrs: {
      "autocomplete": $cmp.autocomplete,
      "disabled": $cmp.disabled ? "" : null,
      "id": api_scoped_id("select"),
      "multiple": $cmp.multiple ? "" : null,
      "name": $cmp.name,
      "required": $cmp.required ? "" : null,
      "accesskey": $cmp.accessKey,
      "size": $cmp.size,
      "aria-invalid": $cmp.computedAriaInvalid
    },
    key: 5,
    on: {
      "blur": _m0 || ($ctx._m0 = api_bind($cmp.handleBlur)),
      "change": _m1 || ($ctx._m1 = api_bind($cmp.handleChange)),
      "focus": _m2 || ($ctx._m2 = api_bind($cmp.handleFocus))
    }
  }, api_iterator($cmp.options, function (option) {
    return [option.disabled ? api_element("option", {
      attrs: {
        "disabled": "",
        "value": option.value
      },
      key: api_key(6, option.value)
    }, [api_text(api_dynamic_text(option.label))]) : null, !option.disabled ? api_element("option", {
      attrs: {
        "value": option.value
      },
      key: api_key(7, option.value)
    }, [api_text(api_dynamic_text(option.label))]) : null];
  }))])]), $cmp._helpMessage ? api_element("div", {
    classMap: {
      "slds-form-element__help": true
    },
    attrs: {
      "aria-live": "assertive",
      "data-help-message": "",
      "id": api_scoped_id("help-message")
    },
    key: 8
  }, [api_text(api_dynamic_text($cmp._helpMessage))]) : null];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_3__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_select_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _select_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_select_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _select_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-select_select"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/select/select.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/select/select.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _select_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./select.html */ "./node_modules/lightning-base-components/src/lightning/select/select.html");
/* harmony import */ var _salesforce_label_LightningControl_required__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/label/LightningControl.required */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.required.js");
/* harmony import */ var _salesforce_label_LightningInput_helptextAlternativeText__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @salesforce/label/LightningInput.helptextAlternativeText */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInput.helptextAlternativeText.js");
/* harmony import */ var lightning_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lightning/utils */ "./node_modules/lightning-base-components/src/lightning/utils/utils.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var lightning_inputUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lightning/inputUtils */ "./node_modules/lightning-base-components/src/lightning/inputUtils/inputUtils.js");







const i18n = {
  required: _salesforce_label_LightningControl_required__WEBPACK_IMPORTED_MODULE_2__.default,
  helpTextAlternativeText: _salesforce_label_LightningInput_helptextAlternativeText__WEBPACK_IMPORTED_MODULE_3__.default
};

class LightningSelect extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  constructor(...args) {
    super(...args);
    this.label = void 0;
    this.name = void 0;
    this.messageWhenValueMissing = void 0;
    this.accessKey = void 0;
    this.autocomplete = void 0;
    this._options = [];
    this._helpMessage = '';
    this._selectedValue = void 0;
    this._variant = void 0;
    this._required = false;
    this._disabled = false;
    this._multiple = false;
    this._fieldLevelHelp = void 0;
    this._size = void 0;
  }

  connectedCallback() {
    this.classList.add('slds-form-element');
    this.updateClassList();
    this.interactingState = new lightning_inputUtils__WEBPACK_IMPORTED_MODULE_6__.InteractingState();
    this.interactingState.onleave(() => this.reportValidity());
  }

  renderedCallback() {
    if (this.options && this._selectedValue !== undefined) {
      this.selectOptionsByValue(this._selectedValue);
    }

    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_5__.synchronizeAttrs)(this.selectElement, {
      'aria-describedby': (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_5__.getRealDOMId)(this.template.querySelector('[data-help-message]'))
    });
  }

  get computedAriaInvalid() {
    return !!this._helpMessage || undefined;
  }
  /**
   * Help text detailing the purpose and function of the menu of options.
   * The text is displayed in a tooltip above the menu.
   * @type {string}
   */


  get fieldLevelHelp() {
    return this._fieldLevelHelp;
  }

  set fieldLevelHelp(value) {
    this._fieldLevelHelp = value;
  }
  /**
   * The variant changes the appearance of the dropdown menu.
   * Accepted variants include standard, label-inline, label-hidden, and label-stacked.
   * This value defaults to standard, which displays the label above the dropdown menu.
   * label-hidden hides the label but make it available to assistive technology.
   * label-inline horizontally aligns the label and dropdown menu.
   * label-stacked places the label above the dropdown menu.
   * @type {string}
   */


  get variant() {
    return this._variant || lightning_inputUtils__WEBPACK_IMPORTED_MODULE_6__.VARIANT.STANDARD;
  }

  set variant(value) {
    this._variant = (0,lightning_inputUtils__WEBPACK_IMPORTED_MODULE_6__.normalizeVariant)(value);
    this.updateClassList();
  }
  /**
   * Specifies whether multiple options can be selected.
   * @type {boolean}
   * @default false
   */


  get multiple() {
    return this._multiple;
  }

  set multiple(value) {
    this._multiple = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_5__.normalizeBoolean)(value);
  }
  /**
   * The number of rows in the list that should be visible at one time.
   * Use this attribute with the multiple attribute.
   * @type {number}
   * @default 4
   */


  get size() {
    if (!this.multiple) {
      return null;
    }

    if (this._size === undefined) {
      return '4';
    }

    return this._size;
  }

  set size(newValue) {
    this._size = newValue;
  }
  /**
   * Specifies whether an option must be selected.
   * @type {boolean}
   * @default false
   */


  get required() {
    return this._required;
  }

  set required(value) {
    this._required = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_5__.normalizeBoolean)(value);
  }
  /**
   * Specifies whether the menu is disabled and users cannot interact with it.
   * @type {boolean}
   * @default false
   */


  get disabled() {
    return this._disabled;
  }

  set disabled(value) {
    this._disabled = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_5__.normalizeBoolean)(value);
  }
  /**
   * The value of the selected option.
   * If empty and a value is required, the component is in an invalid state.
   * @type {string}
   */


  get value() {
    return this._selectedValue;
  }

  set value(newValue) {
    this._selectedValue = newValue;

    if (this.isConnected) {
      this.selectOptionsByValue(newValue);
    }
  }
  /**
   * An array of menu options with key-value pairs for label and value.
   * @type {object}
   */


  get options() {
    return this._options;
  }

  set options(newValue) {
    this._options = newValue;

    if (this.isConnected && newValue) {
      this.selectOptionsByValue(this._selectedValue);
    }
  }

  updateClassList() {
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_5__.classListMutation)(this.classList, {
      'slds-form-element_stacked': this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_6__.VARIANT.LABEL_STACKED,
      'slds-form-element_horizontal': this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_6__.VARIANT.LABEL_INLINE
    });
  }
  /**
   * Sets focus on the select element.
   */


  focus() {
    if (this.isConnected) {
      this.selectElement.focus();
    }
  }
  /**
   * Removes focus on from the select element.
   */


  blur() {
    if (this.isConnected) {
      this.selectElement.blur();
    }
  }
  /**
   * Represents the validity states that an element can be in, with respect to constraint validation.
   * @type {object}
   *
   */


  get validity() {
    return this._constraint.validity;
  }
  /**
   * Checks if the input is valid.
   * @returns {boolean} Indicates whether the element meets all constraint validations.
   */


  checkValidity() {
    return this._constraint.checkValidity();
  }
  /**
   * Sets a custom error message to be displayed when a form is submitted.
   * @param {string} message - The string that describes the error. If message is an empty string, the error message is reset.
   */


  setCustomValidity(message) {
    this._constraint.setCustomValidity(message);

    this.customErrorMessage = message;
  }
  /**
   * Displays the error messages and returns false if the input is invalid.
   * If the input is valid, reportValidity() clears displayed error messages and returns true.
   * @returns {boolean} - The validity status of the input fields.
   */


  reportValidity() {
    return this._constraint.reportValidity(message => {
      this._helpMessage = message;
    });
  }
  /**
   * Displays an error message on an invalid select field.
   * An invalid field fails at least one constraint validation
   * and returns false when checkValidity() is called.
   */


  showHelpMessageIfInvalid() {
    const validity = this.validity;

    if (validity.valid) {
      this._helpMessage = '';
      this.classList.remove('slds-has-error');
    } else {
      this.classList.add('slds-has-error');
      this._helpMessage = (0,lightning_inputUtils__WEBPACK_IMPORTED_MODULE_6__.getErrorMessage)(validity, {
        valueMissing: this.messageWhenValueMissing,
        customError: this.customErrorMessage
      });
    }
  }

  get i18n() {
    return i18n;
  }

  get selectElement() {
    return this.template.querySelector('select');
  }

  get isLabelHidden() {
    return this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_6__.VARIANT.LABEL_HIDDEN;
  }

  get computedLabelClass() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_4__.classSet)('slds-form-element__label').add({
      'slds-assistive-text': this.isLabelHidden
    }).toString();
  }

  get _constraint() {
    if (!this._constraintApi) {
      this._constraintApi = new lightning_inputUtils__WEBPACK_IMPORTED_MODULE_6__.FieldConstraintApi(() => this, {
        valueMissing: () => {
          const isMultipleAndNoValue = this.multiple && (!this.value || this.value.length === 0);
          return !this.disabled && this.required && ((0,lightning_inputUtils__WEBPACK_IMPORTED_MODULE_6__.isEmptyString)(this.value) || isMultipleAndNoValue);
        }
      });
    }

    return this._constraintApi;
  }

  handleChange(event) {
    event.preventDefault();
    event.stopPropagation();
    this._selectedValue = this.getSelectedOptionValues();
    this.dispatchEvent(new CustomEvent('change', {
      bubbles: true,
      composed: true,
      detail: {
        value: this._selectedValue
      }
    }));
  }

  handleFocus() {
    this.interactingState.enter();
    this.dispatchEvent(new CustomEvent('focus'));
  }

  handleBlur() {
    this.interactingState.leave();
    this.dispatchEvent(new CustomEvent('blur'));
  }

  selectOptionsByValue(optionValue) {
    if (this.multiple) {
      if (Array.isArray(optionValue)) {
        const options = this.template.querySelectorAll('option');
        options.forEach(option => {
          option.selected = optionValue.includes(option.value);
        });
      }
    } else {
      this.selectElement.value = optionValue;
    }
  }

  getSelectedOptionValues() {
    if (this.multiple) {
      const options = this.template.querySelectorAll('option');
      return Array.prototype.reduce.call(options, (selectedValues, option) => {
        if (option.selected) {
          selectedValues.push(option.value);
        }

        return selectedValues;
      }, []);
    }

    return this.selectElement.value;
  }

  get helptextAlternativeText() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_4__.formatLabel)(i18n.helpTextAlternativeText, this.label);
  }

}

LightningSelect.delegatesFocus = true;

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningSelect, {
  publicProps: {
    label: {
      config: 0
    },
    name: {
      config: 0
    },
    messageWhenValueMissing: {
      config: 0
    },
    accessKey: {
      config: 0
    },
    autocomplete: {
      config: 0
    },
    fieldLevelHelp: {
      config: 3
    },
    variant: {
      config: 3
    },
    multiple: {
      config: 3
    },
    size: {
      config: 3
    },
    required: {
      config: 3
    },
    disabled: {
      config: 3
    },
    value: {
      config: 3
    },
    options: {
      config: 3
    },
    validity: {
      config: 1
    }
  },
  publicMethods: ["focus", "blur", "checkValidity", "setCustomValidity", "reportValidity", "showHelpMessageIfInvalid"],
  track: {
    _options: 1
  },
  fields: ["_helpMessage", "_selectedValue", "_variant", "_required", "_disabled", "_multiple", "_fieldLevelHelp", "_size"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningSelect, {
  tmpl: _select_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/timepicker/timepicker.html":
/*!*****************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/timepicker/timepicker.html ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _timepicker_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timepicker.css */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js");
/* harmony import */ var _timepicker_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./timepicker.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lightning_helptext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/helptext */ "./node_modules/lightning-base-components/src/lightning/helptext/helptext.js");
/* harmony import */ var lightning_baseCombobox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/baseCombobox */ "./node_modules/lightning-base-components/src/lightning/baseCombobox/baseCombobox.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");







function tmpl($api, $cmp, $slotset, $ctx) {
  const {t: api_text, h: api_element, d: api_dynamic_text, c: api_custom_element, b: api_bind, gid: api_scoped_id} = $api;
  const {_m0, _m1, _m2, _m3, _m4, _m5, _m6} = $ctx;
  return [!$cmp.hasExternalLabel ? api_element("label", {
    className: $cmp.computedLabelClass,
    key: 0
  }, [$cmp.required ? api_element("abbr", {
    classMap: {
      "slds-required": true
    },
    attrs: {
      "title": $cmp.i18n.required
    },
    key: 1
  }, [api_text("*")]) : null, api_text(api_dynamic_text($cmp.label))]) : null, !$cmp.hasExternalLabel ? $cmp.fieldLevelHelp ? api_custom_element("lightning-helptext", lightning_helptext__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "content": $cmp.fieldLevelHelp,
      "alternativeText": $cmp.helptextAlternativeText
    },
    key: 2
  }, []) : null : null, api_element("div", {
    classMap: {
      "slds-form-element__control": true
    },
    key: 3
  }, [api_custom_element("lightning-base-combobox", lightning_baseCombobox__WEBPACK_IMPORTED_MODULE_3__.default, {
    attrs: {
      "data-aria-invalid": $cmp.computedAriaInvalid
    },
    props: {
      "autocomplete": $cmp.autocomplete,
      "dropdownHeight": "small",
      "name": $cmp.name,
      "variant": "lookup",
      "placeholder": $cmp.placeholder,
      "disabled": $cmp.disabled,
      "readOnly": $cmp.readOnly,
      "required": $cmp.required,
      "items": $cmp.items,
      "inputText": $cmp.displayValue,
      "inputIconName": "utility:clock",
      "inputLabel": $cmp.ariaLabel,
      "inputControlsElement": $cmp.ariaControlsElement,
      "inputLabelledByElement": $cmp.ariaLabelledByElement,
      "dropdownAlignment": "auto"
    },
    key: 4,
    on: {
      "ready": _m0 || ($ctx._m0 = api_bind($cmp.handleReady)),
      "textchange": _m1 || ($ctx._m1 = api_bind($cmp.handleInputChange)),
      "textinput": _m2 || ($ctx._m2 = api_bind($cmp.handleTextInput)),
      "dropdownopenrequest": _m3 || ($ctx._m3 = api_bind($cmp.handleDropdownOpenRequest)),
      "focus": _m4 || ($ctx._m4 = api_bind($cmp.handleFocus)),
      "blur": _m5 || ($ctx._m5 = api_bind($cmp.handleBlur)),
      "select": _m6 || ($ctx._m6 = api_bind($cmp.handleTimeSelect))
    }
  }, [])]), api_element("div", {
    className: $cmp.computedClass,
    attrs: {
      "id": api_scoped_id("error-message"),
      "data-error-message": "",
      "aria-live": "assertive"
    },
    key: 5
  }, [api_text(api_dynamic_text($cmp._errorMessage))])];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_4__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_timepicker_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _timepicker_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_timepicker_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _timepicker_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "lightning-timepicker_timepicker"


/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/timepicker/timepicker.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/timepicker/timepicker.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var _timepicker_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./timepicker.html */ "./node_modules/lightning-base-components/src/lightning/timepicker/timepicker.html");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_invalidDate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.invalidDate */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.invalidDate.js");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_rangeOverflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.rangeOverflow */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.rangeOverflow.js");
/* harmony import */ var _salesforce_label_LightningDateTimePicker_rangeUnderflow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @salesforce/label/LightningDateTimePicker.rangeUnderflow */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.rangeUnderflow.js");
/* harmony import */ var _salesforce_label_LightningControl_required__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @salesforce/label/LightningControl.required */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.required.js");
/* harmony import */ var _salesforce_label_LightningInput_helptextAlternativeText__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @salesforce/label/LightningInput.helptextAlternativeText */ "./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInput.helptextAlternativeText.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils */ "./node_modules/lightning-base-components/src/lightning/timepicker/utils.js");
/* harmony import */ var lightning_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lightning/utils */ "./node_modules/lightning-base-components/src/lightning/utils/utils.js");
/* harmony import */ var lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lightning/internationalizationLibrary */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/internationalizationLibrary.js");
/* harmony import */ var lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! lightning/iso8601Utils */ "./node_modules/lightning-base-components/src/lightning/iso8601Utils/iso8601Utils.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! lightning/inputUtils */ "./node_modules/lightning-base-components/src/lightning/inputUtils/inputUtils.js");



/* eslint-disable @lwc/lwc/no-api-reassignments */











const i18n = {
  invalidDate: _salesforce_label_LightningDateTimePicker_invalidDate__WEBPACK_IMPORTED_MODULE_2__.default,
  rangeOverflow: _salesforce_label_LightningDateTimePicker_rangeOverflow__WEBPACK_IMPORTED_MODULE_3__.default,
  rangeUnderflow: _salesforce_label_LightningDateTimePicker_rangeUnderflow__WEBPACK_IMPORTED_MODULE_4__.default,
  required: _salesforce_label_LightningControl_required__WEBPACK_IMPORTED_MODULE_5__.default,
  helpTextAlternativeText: _salesforce_label_LightningInput_helptextAlternativeText__WEBPACK_IMPORTED_MODULE_6__.default
};
const STEP = 15; // in minutes

const TIME_STYLE = {
  SHORT: 'short',
  MEDIUM: 'medium',
  LONG: 'long'
};

class LightningTimePicker extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {
  constructor(...args) {
    super(...args);
    this._disabled = false;
    this._required = false;
    this._displayValue = null;
    this._value = null;
    this._min = void 0;
    this._max = void 0;
    this._items = [];
    this._fieldLevelHelp = void 0;
    this._variant = 'lookup';
    this._mainInputId = void 0;
    this._errorMessage = void 0;
    this._readonly = true;
    this._describedByElements = [];
    this.autocomplete = 'off';
    this.ariaLabelledByElement = void 0;
    this.ariaControlsElement = void 0;
    this.ariaLabel = void 0;
    this.label = void 0;
    this.name = void 0;
    this.placeholder = '';
    this.messageWhenValueMissing = void 0;
    this._ariaDescribedByElements = void 0;
    this._timeStyle = TIME_STYLE.SHORT;
  }

  get messageWhenBadInput() {
    return this._messageWhenBadInput || (0,lightning_utils__WEBPACK_IMPORTED_MODULE_8__.formatLabel)(i18n.invalidDate, (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_9__.getTimeFormatFromStyle)(this.timeStyle, true));
  }

  set messageWhenBadInput(message) {
    this._messageWhenBadInput = message;
  }

  get messageWhenRangeOverflow() {
    // using isoValue since the manually entered time could have seconds/milliseconds and the locale format generally doesn't have this precision
    return this._messageWhenRangeOverflow || (0,lightning_utils__WEBPACK_IMPORTED_MODULE_8__.formatLabel)(i18n.rangeOverflow, (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_9__.normalizeISOTime)(this.max, this.timeStyle).isoValue);
  }

  set messageWhenRangeOverflow(message) {
    this._messageWhenRangeOverflow = message;
  }

  get messageWhenRangeUnderflow() {
    return this._messageWhenRangeUnderflow || (0,lightning_utils__WEBPACK_IMPORTED_MODULE_8__.formatLabel)(i18n.rangeUnderflow, (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_9__.normalizeISOTime)(this.min, this.timeStyle).isoValue);
  }

  set messageWhenRangeUnderflow(message) {
    this._messageWhenRangeUnderflow = message;
  }

  set ariaDescribedByElements(el) {
    if (Array.isArray(el)) {
      this._ariaDescribedByElements = el;
    } else {
      this.ariaDescribedByElements = [el];
    }
  }

  get ariaDescribedByElements() {
    return this._ariaDescribedByElements;
  }

  get value() {
    return this._value;
  }

  set value(newValue) {
    const normalizedValue = (0,lightning_iso8601Utils__WEBPACK_IMPORTED_MODULE_10__.removeTimeZoneSuffix)(newValue);
    const normalizedTime = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_9__.normalizeISOTime)(normalizedValue, this.timeStyle);
    this._value = normalizedTime.isoValue;
    this._displayValue = normalizedTime.displayValue;
  }

  get disabled() {
    return this._disabled;
  }

  set disabled(value) {
    this._disabled = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_11__.normalizeBoolean)(value);
  }

  get readOnly() {
    return this._readonly;
  }

  set readOnly(value) {
    this._readonly = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_11__.normalizeBoolean)(value);

    if (this._readonly) {
      this._variant = lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__.VARIANT.STANDARD;
    }
  }

  get required() {
    return this._required;
  }

  set required(value) {
    this._required = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_11__.normalizeBoolean)(value);
  }

  hasBadInput() {
    return !!this._displayValue && this._value === null;
  }

  showHelpMessage(message) {
    if (!message) {
      this.classList.remove('slds-has-error');
      this._errorMessage = '';
    } else {
      this.classList.add('slds-has-error');
      this._errorMessage = message;
    }
  }

  set fieldLevelHelp(value) {
    this._fieldLevelHelp = value;
  }

  get fieldLevelHelp() {
    return this._fieldLevelHelp;
  }

  get variant() {
    return this._variant || lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__.VARIANT.STANDARD;
  }

  set variant(value) {
    this._variant = (0,lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__.normalizeVariant)(value);
  }

  get max() {
    return this._max;
  }

  set max(newValue) {
    this._max = newValue;

    if (this.connected) {
      this.rebuildAndUpdateTimeList();
    }
  }

  get min() {
    return this._min;
  }

  set min(newValue) {
    this._min = newValue;

    if (this.connected) {
      this.rebuildAndUpdateTimeList();
    }
  }
  /**
   * Sets focus on the input element.
   */


  focus() {
    if (this.connected) {
      this.getCombobox().focus();
    }
  }
  /**
   * Removes keyboard focus from the input element.
   */


  blur() {
    if (this.connected) {
      this.getCombobox().blur();
    }
  }

  get timeStyle() {
    return this._timeStyle;
  }

  set timeStyle(value) {
    this._timeStyle = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_11__.normalizeString)(value, {
      fallbackValue: TIME_STYLE.SHORT,
      validValues: [TIME_STYLE.SHORT, TIME_STYLE.MEDIUM, TIME_STYLE.LONG]
    });
    const normalizedDate = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_9__.normalizeISOTime)(this._value, this._timeStyle);
    this._displayValue = normalizedDate.displayValue;
  }

  connectedCallback() {
    this.connected = true;
  }

  disconnectedCallback() {
    this.connected = false;
  }

  synchronizeA11y() {
    const label = this.template.querySelector('label');
    const comboBox = this.template.querySelector('lightning-base-combobox');
    let describedByElements = [];

    if (this._ariaDescribedByElements) {
      describedByElements = describedByElements.concat(this._ariaDescribedByElements);
    }

    if (this._errorMessage) {
      const errorMessage = this.template.querySelector('[data-error-message]');
      describedByElements.push(errorMessage);
    }

    comboBox.inputDescribedByElements = describedByElements;
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_11__.synchronizeAttrs)(label, {
      for: this._mainInputId
    });
  }

  renderedCallback() {
    this.synchronizeA11y();
  }

  get displayValue() {
    return this._displayValue;
  }

  get items() {
    return this._items;
  }

  get i18n() {
    return i18n;
  }

  get isLabelHidden() {
    return this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__.VARIANT.LABEL_HIDDEN;
  }

  get computedClass() {
    let displayClass = this._errorMessage ? 'slds-show' : 'slds-hide';
    return 'slds-form-element__help ' + displayClass;
  }

  get computedLabelClass() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_8__.classSet)('slds-form-element__label').add({
      'slds-assistive-text': this.isLabelHidden
    }).toString();
  }

  handleReady(e) {
    this._mainInputId = e.detail.id;
  }

  buildTimeList() {
    // We should always display the options in the short style since m/l will add an extra :00 to the options.
    const timeList = [];
    const minTime = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_9__.normalizeISOTime)(this.min, TIME_STYLE.SHORT).parsedValue;
    const minHour = minTime ? minTime.getHours() : 0;
    const maxTime = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_9__.normalizeISOTime)(this.max, TIME_STYLE.SHORT).parsedValue;
    const maxHour = maxTime ? maxTime.getHours() + 1 : 24;
    const date = new Date();

    for (let hour = minHour; hour < maxHour; hour++) {
      for (let minutes = 0; minutes < 60; minutes += STEP) {
        date.setHours(hour, minutes);
        date.setSeconds(0, 0);

        if (this.isBeforeMinTime(date, minTime)) {
          continue; // eslint-disable-line no-continue
        }

        if (this.isAfterMaxTime(date, maxTime)) {
          break;
        }

        const isoTime = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_9__.getISOTimeString)(date);
        const normalizedTime = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_9__.normalizeISOTime)(isoTime, TIME_STYLE.SHORT);
        timeList.push({
          type: 'option-inline',
          text: normalizedTime.displayValue,
          value: isoTime
        });
      }
    }

    return timeList;
  }

  get timeList() {
    if (!this._timeList) {
      this._timeList = this.buildTimeList();
    }

    if (!this._value) {
      return this._timeList;
    }

    const timeToHighlight = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.getTimeToHighlight)(this._value, STEP);

    const timeList = this._timeList.map(item => {
      const itemCopy = Object.assign({}, item);

      if (item.value === this._value) {
        itemCopy.iconName = 'utility:check';
        itemCopy.checked = true;
      } else {
        itemCopy.checked = false;
      }

      if (item.value === timeToHighlight) {
        itemCopy.highlight = true;
      }

      return itemCopy;
    });

    return timeList;
  }

  rebuildAndUpdateTimeList() {
    // forcing the time list to be rebuilt
    this._timeList = null;
    this._items = this.timeList;
  }

  getCombobox() {
    return this.template.querySelector('lightning-base-combobox');
  }

  handleFocus() {
    this.dispatchEvent(new CustomEvent('focus'));
  }

  handleBlur() {
    this.dispatchEvent(new CustomEvent('blur'));
  }

  handleInputChange(event) {
    event.preventDefault();
    event.stopPropagation(); // keeping the display value in sync with the element's value

    this._displayValue = event.detail.text;
    const {
      value,
      style
    } = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_9__.parseFormattedTime)(this._displayValue);
    this._value = value;

    if (style) {
      this._timeStyle = style;
    }

    this._items = this.timeList;
    this.dispatchChangeEvent();
  }

  handleTextInput(event) {
    event.preventDefault();
    event.stopPropagation(); // keeping the display value in sync with the element's value

    this._displayValue = event.detail.text;
  }

  handleTimeSelect(event) {
    event.stopPropagation(); // for some reason this event is fired without detail from grouped-combobox

    if (!event.detail) {
      return;
    }

    this._value = event.detail.value;
    this._displayValue = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_9__.normalizeISOTime)(this._value, this.timeStyle).displayValue;
    this._items = this.timeList;
    this.dispatchChangeEvent();
  }

  handleDropdownOpenRequest() {
    this._items = this.timeList;
  }

  dispatchChangeEvent() {
    this.dispatchEvent(new CustomEvent('change', {
      composed: true,
      bubbles: true,
      detail: {
        value: this._value
      }
    }));
  }

  isBeforeMinTime(date, minTime) {
    const minDate = minTime || (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_9__.normalizeISOTime)(this.min, TIME_STYLE.SHORT);
    return minDate ? (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_9__.isBefore)(date, minDate, 'minute') : false;
  }

  isAfterMaxTime(date, maxTime) {
    const maxDate = maxTime || (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_9__.normalizeISOTime)(this.max, TIME_STYLE.SHORT);
    return maxDate ? (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_9__.isAfter)(date, maxDate, 'minute') : false;
  }

  get hasExternalLabel() {
    return this.variant === lightning_inputUtils__WEBPACK_IMPORTED_MODULE_12__.VARIANT.LABEL_HIDDEN && this.ariaLabelledByElement && this.ariaLabelledByElement.length;
  }

  get computedAriaInvalid() {
    const isAriaInvalid = this.template.host.getAttribute('data-aria-invalid') || this._errorMessage;

    return (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_11__.computeAriaInvalid)(isAriaInvalid, this.value);
  }

  get helptextAlternativeText() {
    return (0,lightning_utils__WEBPACK_IMPORTED_MODULE_8__.formatLabel)(i18n.helpTextAlternativeText, this.label);
  }

}

LightningTimePicker.delegatesFocus = true;

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(LightningTimePicker, {
  publicProps: {
    autocomplete: {
      config: 0
    },
    ariaLabelledByElement: {
      config: 0
    },
    ariaControlsElement: {
      config: 0
    },
    ariaLabel: {
      config: 0
    },
    label: {
      config: 0
    },
    name: {
      config: 0
    },
    placeholder: {
      config: 0
    },
    messageWhenValueMissing: {
      config: 0
    },
    messageWhenBadInput: {
      config: 3
    },
    messageWhenRangeOverflow: {
      config: 3
    },
    messageWhenRangeUnderflow: {
      config: 3
    },
    ariaDescribedByElements: {
      config: 3
    },
    value: {
      config: 3
    },
    disabled: {
      config: 3
    },
    readOnly: {
      config: 3
    },
    required: {
      config: 3
    },
    fieldLevelHelp: {
      config: 3
    },
    variant: {
      config: 3
    },
    max: {
      config: 3
    },
    min: {
      config: 3
    },
    timeStyle: {
      config: 3
    }
  },
  publicMethods: ["hasBadInput", "showHelpMessage", "focus", "blur"],
  track: {
    _disabled: 1,
    _required: 1,
    _displayValue: 1,
    _value: 1,
    _min: 1,
    _max: 1,
    _items: 1,
    _fieldLevelHelp: 1,
    _variant: 1,
    _mainInputId: 1,
    _errorMessage: 1,
    _readonly: 1,
    _describedByElements: 1
  },
  fields: ["_ariaDescribedByElements", "_timeStyle"]
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(LightningTimePicker, {
  tmpl: _timepicker_html__WEBPACK_IMPORTED_MODULE_1__.default
}));

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/timepicker/utils.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/timepicker/utils.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getTimeToHighlight": () => (/* binding */ getTimeToHighlight)
/* harmony export */ });
/* harmony import */ var lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightning/internationalizationLibrary */ "./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/internationalizationLibrary.js");

/* returns the closes time in the list that should be highlighted in case the value is not in the list. E.g.
- if value is 16:18 and the list has 15 minute intervals, returns 16:30
*/

function getTimeToHighlight(value, step) {
  const selectedTime = (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_0__.parseTime)(value);

  if (!selectedTime) {
    return null;
  }

  selectedTime.setSeconds(0, 0);
  let closestHour = selectedTime.getHours();
  let closestMinute = selectedTime.getMinutes();
  const mod = closestMinute % step;
  const quotient = Math.floor(closestMinute / step);

  if (mod !== 0) {
    const multiplier = mod < step / 2 ? quotient : quotient + 1;
    closestMinute = multiplier * step;

    if (closestMinute >= 60) {
      if (closestHour === 23) {
        closestMinute -= step;
      } else {
        closestMinute = 0;
        closestHour++;
      }
    }

    selectedTime.setHours(closestHour);
    selectedTime.setMinutes(closestMinute);
  }

  return (0,lightning_internationalizationLibrary__WEBPACK_IMPORTED_MODULE_0__.getISOTimeString)(selectedTime);
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/tooltipLibrary/tooltipLibrary.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/tooltipLibrary/tooltipLibrary.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Direction": () => (/* reexport safe */ lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_1__.Direction),
/* harmony export */   "BUBBLE_PREFIX": () => (/* binding */ BUBBLE_PREFIX),
/* harmony export */   "TooltipType": () => (/* binding */ TooltipType),
/* harmony export */   "Tooltip": () => (/* binding */ Tooltip)
/* harmony export */ });
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lightning/positionLibrary */ "./node_modules/lightning-base-components/src/lightning/positionLibrary/positionLibrary.js");
/* harmony import */ var lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/utilsPrivate */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js");
/* harmony import */ var lightning_primitiveBubble__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/primitiveBubble */ "./node_modules/lightning-base-components/src/lightning/primitiveBubble/primitiveBubble.js");


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





const BUBBLE_PREFIX = `salesforce-lightning-tooltip-bubble`;
const BUBBLE_ID = `${BUBBLE_PREFIX}_${(0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.guid)()}`;

function isResizeObserverSupported() {
  return window.ResizeObserver != null;
}

function buildResizeObserver(callback) {
  if (isResizeObserverSupported()) {
    return new ResizeObserver(callback);
  }

  return {
    observe() {},

    unobserve() {}

  };
}
/**
 * Shared instance of a primitive bubble used as a tooltip by most components. This was originally
 * defined in the helptext component which is where the minWidth style came from.
 * TODO: We may want to revisit the minWidth style with the PO and/or UX.
 */


let CACHED_BUBBLE_ELEMENT;

function getCachedBubbleElement() {
  if (!CACHED_BUBBLE_ELEMENT) {
    CACHED_BUBBLE_ELEMENT = (0,lwc__WEBPACK_IMPORTED_MODULE_0__.createElement)('lightning-primitive-bubble', {
      is: lightning_primitiveBubble__WEBPACK_IMPORTED_MODULE_3__.default
    });
    CACHED_BUBBLE_ELEMENT.contentId = BUBBLE_ID;
    CACHED_BUBBLE_ELEMENT.style.position = 'absolute';
    CACHED_BUBBLE_ELEMENT.style.minWidth = '75px';
  }

  return CACHED_BUBBLE_ELEMENT;
}

const ARIA_DESCRIBEDBY = 'aria-describedby';
/**
 * Used as a position offset to compensate for the nubbin. The dimensions of the nubbin are not
 * included in the position library bounding box calculations. This is the size in pixels of the
 * nubbin.
 * TODO: We may want to measure this instead in cases it changes.
 */

const NUBBIN_SIZE = 16;
/**
 * Used in the calculation that moves the tooltip to a location that places the nubbin at the
 * center of the target element. This is the nubbin offset from the edge of the bubble in pixels
 * when using slds-nubbin_bottom-left or slds-nubbin_bottom-right.
 * TODO: We may want to measure this instead in case it changes.
 */

const NUBBIN_OFFSET = 24;
/**
 * Known tooltip types:
 * - info: used in cases where target already has click handlers such as button-icon
 * - toggle: used in cases where target only shows a tooltip such as helptext
 */

const TooltipType = {
  Info: 'info',
  Toggle: 'toggle'
};
/**
 * Allows us to attach a tooltip to components. Typical usage is as follows:
 * - Create an instance of Tooltip
 * - Call Tooltip.initialize() to add the appropriate listeners to the element that needs a tooltip
 * See buttonIcon and buttonMenu for example usage.
 */

class Tooltip {
  /**
   * A shared instance of primitiveBubble is used when an element is not specified in the config
   * object.
   * @param {string} value the content of the tooltip
   * @param {object} config specifies the root component, target element of the tooltip
   */
  constructor(value, config) {
    this._autoPosition = null;
    this._disabled = true;
    this._initialized = false;
    this._visible = false;
    this._isFocusEvent = false;
    this._config = {};
    (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.assert)(config.target, 'target for tooltip is undefined or missing');
    this.value = value;
    this._root = config.root;
    this._target = config.target;
    this._config = _objectSpread({}, config);
    this._config.align = config.align || {};
    this._config.targetAlign = config.targetAlign || {};
    this._type = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.normalizeString)(config.type, {
      fallbackValue: TooltipType.Info,
      validValues: Object.values(TooltipType)
    }); // If a tooltip element is not given, fall back on the globally shared instance.

    this._element = config.element;

    if (!this._element) {
      this._element = getCachedBubbleElement;
      const bubbleElement = getCachedBubbleElement();

      if (bubbleElement.parentNode === null) {
        document.body.appendChild(bubbleElement);
      }
    }

    this.handleDocumentTouch = this.handleDocumentTouch.bind(this);
    this.handleEscape = this.handleEscape.bind(this);
  }
  /**
   * Disables the tooltip.
   */


  detach() {
    this._disabled = true;
  }
  /**
   * Enables the tooltip.
   */


  attach() {
    this._disabled = false;
  }
  /**
   * Adds the appropriate event listeners to the target element to make the tooltip appear. Also
   * links the tooltip and target element via the aria-describedby attribute for screen readers.
   */


  initialize() {
    const target = this._target();

    if (!this._initialized && target) {
      switch (this._type) {
        case TooltipType.Toggle:
          this.addToggleListeners();
          break;

        case TooltipType.Info:
        default:
          this.addInfoListeners();
          break;
      }

      const ariaDescribedBy = (0,lightning_utilsPrivate__WEBPACK_IMPORTED_MODULE_2__.normalizeAriaAttribute)([target.getAttribute(ARIA_DESCRIBEDBY), this._element().contentId]);
      target.setAttribute(ARIA_DESCRIBEDBY, ariaDescribedBy);
      this._initialized = true;
    }
  }

  addInfoListeners() {
    const target = this._target();

    if (!this._initialized && target) {
      ['mouseenter', 'focus'].forEach(name => target.addEventListener(name, () => this.show())); // Unlike the tooltip in Aura, we want clicks and keys to dismiss the tooltip.

      ['mouseleave', 'blur', 'click', 'keydown'].forEach(name => target.addEventListener(name, event => this.hideIfNotSelfCover(event)));
    }
  }

  hideIfNotSelfCover(event) {
    if (event.type === 'mouseleave' && event.clientX && event.clientY) {
      // In any chance, if mouseleave is caused by tooltip itself, it would means
      // tooltip cover the target which mostly caused by dynamic resize of tooltip by CSS or JS.
      try {
        const elementMouseIsOver = document.elementFromPoint ? document.elementFromPoint(event.clientX, event.clientY) : null;

        if (elementMouseIsOver === this._element()) {
          if (!isResizeObserverSupported()) {
            this.startPositioning();
          }

          return;
        }
      } catch (ex) {// Jest Throw Exception
      }
    }

    this.hide();
  }

  handleDocumentTouch() {
    if (this._visible) {
      this.hide();
    }
  }

  addToggleListeners() {
    const target = this._target();

    if (!this._initialized && target) {
      target.addEventListener('touchstart', e => {
        e.stopPropagation();
        this.toggle();
      });
      ['mouseenter', 'focus'].forEach(name => target.addEventListener(name, event => this.show(event)));
      ['mouseleave', 'blur'].forEach(name => target.addEventListener(name, event => this.hideIfNotSelfCover(event)));
      target.addEventListener('keydown', event => {
        if (event.keyCode === 13 && !this._visible) {
          this.toggle();
        } else {
          this.hide();
        }
      });
    }
  }

  handleEscape(e) {
    if (e.key === 'Escape' && this._isFocusEvent) {
      e.stopPropagation();
      this.hideIfNotSelfCover(e);
    }
  }

  get resizeObserver() {
    if (!this._resizeObserver) {
      this._resizeObserver = buildResizeObserver(() => {
        if (this._visible && this._autoPosition) {
          this.startPositioning();
        }
      });
    }

    return this._resizeObserver;
  }

  show(ev) {
    if (this._disabled) {
      return;
    }

    this._isFocusEvent = ev && (ev.type === 'focus' ? true : false);
    this._visible = true;

    const tooltip = this._element();

    tooltip.visible = this._visible;
    tooltip.content = this._value;
    this.startPositioning();
    document.addEventListener('keydown', this.handleEscape);
    document.addEventListener('touchstart', this.handleDocumentTouch);
    this.resizeObserver.observe(tooltip);
  }

  hide() {
    this._visible = false;

    const tooltip = this._element();

    tooltip.visible = this._visible;
    this.stopPositioning();
    document.removeEventListener('touchstart', this.handleDocumentTouch);
    document.removeEventListener('keydown', this.handleEscape);
    this.resizeObserver.unobserve(tooltip);
  }

  toggle() {
    if (this._visible) {
      this.hide();
    } else {
      this.show();
    }
  }

  get value() {
    return this._value;
  }

  set value(value) {
    this._value = value;
    this._disabled = !value;
  }

  get initialized() {
    return this._initialized;
  }

  get visible() {
    return this._visible;
  }

  startPositioning() {
    if (!this._autoPosition) {
      this._autoPosition = new lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_1__.AutoPosition(this._root);
    } // The lightning-helptext component was originally left aligned.


    const align = {
      horizontal: this._config.align.horizontal || lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_1__.Direction.Left,
      vertical: this._config.align.vertical || lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_1__.Direction.Bottom
    };
    const targetAlign = {
      horizontal: this._config.targetAlign.horizontal || lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_1__.Direction.Left,
      vertical: this._config.targetAlign.vertical || lightning_positionLibrary__WEBPACK_IMPORTED_MODULE_1__.Direction.Top
    }; // Pads the tooltip so its nubbin is at the center of the target element.

    const targetBox = this._target().getBoundingClientRect();

    const padLeft = targetBox.width * 0.5 - NUBBIN_OFFSET;

    this._autoPosition.start({
      target: this._target,
      element: this._element,
      align,
      targetAlign,
      autoFlip: true,
      padTop: NUBBIN_SIZE,
      padLeft
    }).then(autoPositionUpdater => {
      // The calculation above may have flipped the alignment of the tooltip. When the
      // tooltip changes alignment we need to update the nubbin class to have it draw in
      // the appropriate place.
      if (autoPositionUpdater) {
        const tooltip = this._element();

        tooltip.align = autoPositionUpdater.config.align;
        tooltip.visible = this._visible;
      }
    });
  }

  stopPositioning() {
    if (this._autoPosition) {
      this._autoPosition.stop();
    }
  }

}

(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(Tooltip, {
  fields: ["_autoPosition", "_disabled", "_initialized", "_visible", "_isFocusEvent", "_config"]
});

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utils/classSet.js":
/*!********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utils/classSet.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "classSet": () => (/* binding */ classSet)
/* harmony export */ });
const classNamesHash = classes => {
  return typeof classes === 'string' ? classes.trim().split(/\s+/).reduce((acc, cn) => {
    acc[cn] = true;
    return acc;
  }, {}) : classes;
};

const proto = {
  add(className) {
    Object.assign(this, classNamesHash(className));
    return this;
  },

  invert() {
    Object.keys(this).forEach(key => {
      this[key] = !this[key];
    });
    return this;
  },

  toString() {
    return Object.keys(this).filter(key => this[key]).join(' ');
  }

};
function classSet(config) {
  return Object.assign(Object.create(proto), classNamesHash(config));
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utils/labelUtils.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utils/labelUtils.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "formatLabel": () => (/* binding */ formatLabel)
/* harmony export */ });
/**
 * Takes label strings with placeholder params (`{0}`) and updates the label with given `args`
 * @param {string} str - any label string requiring injections of other strings/params (e.g., 'foo {0}')
 * @param  {string|array} arguments - string(s) to be injected into the `string` param
 * @returns {string} fully replaced string, e.g., '{0} is a {1}' -> 'Hal Jordan is a Green Lantern'
 */
function formatLabel(str) {
  const args = Array.prototype.slice.call(arguments, 1);
  let replacements = args;

  if (Array.isArray(args[0])) {
    [replacements] = args;
  }

  return str.replace(/{(\d+)}/g, (match, i) => {
    const replacement = replacements[i];
    return replacement !== null && replacement !== undefined ? replacement : '';
  });
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utils/queryFocusable.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utils/queryFocusable.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "queryFocusable": () => (/* binding */ queryFocusable)
/* harmony export */ });
const inputableNode = /input|select|textarea|button|object/;

function visible(element) {
  const {
    width,
    height
  } = element.getBoundingClientRect();
  const noZeroSize = width > 0 || height > 0;
  return noZeroSize && window.getComputedStyle(element).visibility !== 'hidden';
}

function focusable(element) {
  const nodeName = element.tagName.toLowerCase();
  const res = inputableNode.test(nodeName) && !element.disabled || nodeName === 'a' && element.href;
  return res && visible(element);
}

function tabbable(element) {
  const isDataActionable = element.getAttribute('data-navigation') === 'enable';
  const tabIndex = element.tabIndex;
  return tabIndex >= 0 && focusable(element) || isDataActionable;
}

function queryFocusable(element) {
  return [].slice.call(element.querySelectorAll('*'), 0).filter(tabbable);
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utils/utils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utils/utils.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "classSet": () => (/* reexport safe */ _classSet__WEBPACK_IMPORTED_MODULE_0__.classSet),
/* harmony export */   "queryFocusable": () => (/* reexport safe */ _queryFocusable__WEBPACK_IMPORTED_MODULE_1__.queryFocusable),
/* harmony export */   "formatLabel": () => (/* reexport safe */ _labelUtils__WEBPACK_IMPORTED_MODULE_2__.formatLabel)
/* harmony export */ });
/* harmony import */ var _classSet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classSet */ "./node_modules/lightning-base-components/src/lightning/utils/classSet.js");
/* harmony import */ var _queryFocusable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./queryFocusable */ "./node_modules/lightning-base-components/src/lightning/utils/queryFocusable.js");
/* harmony import */ var _labelUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./labelUtils */ "./node_modules/lightning-base-components/src/lightning/utils/labelUtils.js");
// NOTE: lightning-utils is a public library. adding new utils here means we
// will have to support it until the end of time. Consider adding the util to
// lightning-utils-private instead if it's something we can live with as
// internal-only.




/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/animation.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/animation.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hasAnimation": () => (/* binding */ hasAnimation)
/* harmony export */ });
/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./browser */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/browser.js");

/**
 * Does the browser display animation.
 * Always returns false for IE11 due to performance.
 */

function hasAnimation() {
  if (_browser__WEBPACK_IMPORTED_MODULE_0__.isIE11) {
    return false;
  }

  const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');
  return !(!mediaQuery || mediaQuery.matches);
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/aria.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/aria.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ARIA": () => (/* binding */ ARIA),
/* harmony export */   "ARIA_TO_CAMEL": () => (/* binding */ ARIA_TO_CAMEL),
/* harmony export */   "isAriaDescriptionSupported": () => (/* binding */ isAriaDescriptionSupported),
/* harmony export */   "updateAriaInvalidOnElement": () => (/* binding */ updateAriaInvalidOnElement),
/* harmony export */   "computeAriaInvalid": () => (/* binding */ computeAriaInvalid)
/* harmony export */ });
/* All Valid Aria Attributes, in camel case
 * - it's better to start from camel-case
 *   because `aria-${_.kebabCase('describedBy')}` => 'aria-described-by' (NOT aria property)
 * - correct aria property: 'aria-describedby'
 *  https://www.w3.org/TR/wai-aria/
 */
const ARIA_PROP_LIST = ['activeDescendant', 'atomic', 'autoComplete', 'busy', 'checked', 'colCount', 'colIndex', 'colSpan', 'controls', 'current', 'describedAt', 'describedBy', 'description', 'details', 'disabled', 'dropEffect', 'errorMessage', 'expanded', 'flowTo', 'grabbed', 'hasPopup', 'hidden', 'invalid', 'keyShortcuts', 'label', 'labelledBy', 'level', 'live', 'modal', 'multiLine', 'multiSelectable', 'orientation', 'owns', 'placeholder', 'posInSet', 'pressed', 'readOnly', 'relevant', 'required', 'roleDescription', 'rowCount', 'rowIndex', 'rowSpan', 'selected', 'setSize', 'sort', 'valueMax', 'valueMin', 'valueNow', 'valueText'];
/**
 * Generate an ARIA lookup object when passing in a list of ARIA values
 * @param {Array} list A list of ARIA properties (array of strings)
 * @param {String} type A type which defaults to output ARIA properties as modified kebab-case, or camel-case
 * @example 'valueMax' string becomes: { VALUEMAX: 'aria-valuemax' }
 * @returns {Object} A lookup object for ARIA properties in (modified) kebab-case or camel-case
 */

const getAriaLookup = (list, type = 'default') => {
  if (!list || list.length === 0) {
    throw new Error('List of aria properties is required');
  }

  const lookupObj = {};

  if (type === 'default') {
    list.forEach(name => {
      const nameUpperCase = name.toUpperCase();

      if (!lookupObj[nameUpperCase]) {
        lookupObj[nameUpperCase] = `aria-${name.toLowerCase()}`;
      }
    });
    return lookupObj;
  }

  list.forEach(name => {
    const ariaPropertyLowerCase = `aria-${name.toLowerCase()}`;
    const ariaPropertyCamelCase = `aria${name.charAt(0).toUpperCase()}${name.slice(1)}`;

    if (!lookupObj[ariaPropertyLowerCase]) {
      lookupObj[ariaPropertyLowerCase] = ariaPropertyCamelCase;
    }
  });
  return lookupObj;
};
/**
 * ARIA lookup, 'modified' kebab-case
 * Given an array of aria property strings in camel-case, produce a lookup object
 * NOTE: 'ariaDescribedBy' (camel-case ARIA property) in TRUE kebab-case would be:
 * - 'aria-described-by' (not valid ARIA)
 * - 'aria-describedby' (valid ARIA, or modified kebab-case)
 * Example: 'describedBy' -> { DESCRIBEDBY: 'aria-describedby' }
 */


const ARIA = getAriaLookup(ARIA_PROP_LIST);
/**
 * ARIA lookup, aria-property (key): 'ariaCamelCase' (value)
 * Example: 'valueMax' -> { 'aria-valuemax': 'ariaValueMax' }
 * Useful for converting from normal aria properties to aria camel cased values
 */

const ARIA_TO_CAMEL = getAriaLookup(ARIA_PROP_LIST, 'cc');
/**
 * Set either 'aria-describedby' or 'aria-description' value for accessibility
 * based on the presence of 'description' api value and support of the newer ARIA
 * 'aria-description'.  At launch, Firefox, Safari do not support it (and IE11 never will).
 * https://caniuse.com/mdn-api_element_ariadescription
 * @private
 * @returns {boolean} true indicates aria-description is supported; false, no support
 */
// cached value, so check once and only once

let ariaDescriptionSupported = null;
function isAriaDescriptionSupported() {
  // return previously cached value, don't recheck
  if (ariaDescriptionSupported !== null) {
    return ariaDescriptionSupported;
  } // if not previously set, test for browser support


  const testVal = 'test ability to set';
  const span = document.createElement('span');

  try {
    span.ariaDescription = testVal;
    const ariaDescVal = span.getAttribute(ARIA.DESCRIPTION);
    ariaDescriptionSupported = testVal === ariaDescVal;
  } catch (e) {
    ariaDescriptionSupported = false;
  }

  return ariaDescriptionSupported;
}
function updateAriaInvalidOnElement(element, isInvalid) {
  if (isInvalid) {
    element.setAttribute('aria-invalid', true);
  } else {
    element.removeAttribute('aria-invalid');
  }
}
/**
 * If value is empty, then do no calculate aria-invalid. This is intentional for 240.
 * In the future, we may be removing emptiness this check.
 *
 * Then if isInvalid is truthy, return true else return undefined to remove
 * aria-invalid attribute.
 *
 * @param isInvalid
 * @param value
 * @returns {boolean|undefined}
 */

function computeAriaInvalid(isInvalid, value, ariaInvalid) {
  if (typeof ariaInvalid !== 'undefined') {
    return ariaInvalid;
  }

  if (value === undefined || value === null || value === '') {
    /* To Preserve backward compatibility */
    return undefined;
  }

  return !!isInvalid || undefined;
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/ariaLevelHeadingUtils.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/ariaLevelHeadingUtils.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VALID_HEADING_LEVELS": () => (/* binding */ VALID_HEADING_LEVELS),
/* harmony export */   "isHeadingLevelValid": () => (/* binding */ isHeadingLevelValid)
/* harmony export */ });
/**
 * These are all values that can be set to "aria-level" attribute of h2 tag for the card's title.
 */
const VALID_HEADING_LEVELS = ['1', '2', '3', '4', '5', '6'];
function isHeadingLevelValid(level) {
  return (typeof level === 'string' || typeof level === 'number') && VALID_HEADING_LEVELS.includes(level.toString());
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/assert.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/assert.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assert": () => (/* binding */ assert)
/* harmony export */ });
function assert(condition, message) {
  if (undefined !== 'production') {
    if (!condition) {
      throw new Error(message);
    }
  }
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/browser.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/browser.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isIE11": () => (/* binding */ isIE11),
/* harmony export */   "isChrome": () => (/* binding */ isChrome),
/* harmony export */   "isSafari": () => (/* binding */ isSafari),
/* harmony export */   "isIE11Test": () => (/* binding */ isIE11Test),
/* harmony export */   "isChromeTest": () => (/* binding */ isChromeTest),
/* harmony export */   "isSafariTest": () => (/* binding */ isSafariTest)
/* harmony export */ });
const isIE11 = isIE11Test(navigator);
const isChrome = isChromeTest(navigator);
const isSafari = isSafariTest(navigator); // The following functions are for tests only

function isIE11Test(navigator) {
  // https://stackoverflow.com/questions/17447373/how-can-i-target-only-internet-explorer-11-with-javascript
  return /Trident.*rv[ :]*11\./.test(navigator.userAgent);
}
function isChromeTest(navigator) {
  // https://stackoverflow.com/questions/4565112/javascript-how-to-find-out-if-the-user-browser-is-chrome
  return /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
}
function isSafariTest(navigator) {
  // via https://stackoverflow.com/questions/49872111/detect-safari-and-stop-script
  return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/classListMutation.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/classListMutation.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "classListMutation": () => (/* binding */ classListMutation)
/* harmony export */ });
function classListMutation(classList, config) {
  Object.keys(config).forEach(key => {
    if (typeof key === 'string' && key.length) {
      if (config[key]) {
        classList.add(key);
      } else {
        classList.remove(key);
      }
    }
  });
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/eventEmitter.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/eventEmitter.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventEmitter": () => (/* binding */ EventEmitter)
/* harmony export */ });
/**
An emitter implementation based on the Node.js EventEmitter API:
https://nodejs.org/dist/latest-v6.x/docs/api/events.html#events_class_eventemitter
**/
class EventEmitter {
  constructor() {
    this.registry = {};
  }
  /**
  Registers a listener on the emitter
  @method EventEmitter#on
  @param {String} name - The name of the event
  @param {Function} listener - The callback function
  @return {EventEmitter} - Returns a reference to the `EventEmitter` so that calls can be chained
  **/


  on(name, listener) {
    this.registry[name] = this.registry[name] || [];
    this.registry[name].push(listener);
    return this;
  }
  /**
  Registers a listener on the emitter that only executes once
  @method EventEmitter#once
  @param {String} name - The name of the event
  @param {Function} listener - The callback function
  @return {EventEmitter} - Returns a reference to the `EventEmitter` so that calls can be chained
  **/


  once(name, listener) {
    const doOnce = function () {
      listener.apply(null, arguments);
      this.removeListener(name, doOnce);
    }.bind(this);

    this.on(name, doOnce);
    return this;
  }
  /**
  Synchronously calls each listener registered with the specified event
  @method EventEmitter#emit
  @param {String} name - The name of the event
  @return {Boolean} - Returns `true` if the event had listeners, `false` otherwise
  **/


  emit(name) {
    const args = Array.prototype.slice.call(arguments, 1);
    const listeners = this.registry[name];
    let count = 0;

    if (listeners) {
      listeners.forEach(listener => {
        count += 1;
        listener.apply(null, args);
      });
    }

    return count > 0;
  }
  /**
  Removes the specified `listener` from the listener array for the event named `name`
  @method EventEmitter#removeListener
  @param {String} name - The name of the event
  @param {Function} listener - The callback function
  @return {EventEmitter} - Returns a reference to the `EventEmitter` so that calls can be chained
  **/


  removeListener(name, listener) {
    const listeners = this.registry[name];

    if (listeners) {
      for (let i = 0, len = listeners.length; i < len; i += 1) {
        if (listeners[i] === listener) {
          listeners.splice(i, 1);
          return this;
        }
      }
    }

    return this;
  }

}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/guid.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/guid.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "guid": () => (/* binding */ guid)
/* harmony export */ });
/**
 * Utility function to generate an unique guid.
 * used on state objects to provide a performance aid when iterating
 * through the items and marking them for render
 * @returns {String} an unique string ID
 */
function guid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
  }

  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/inert.js":
/*!************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/inert.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "makeEverythingExceptElementInert": () => (/* binding */ makeEverythingExceptElementInert),
/* harmony export */   "restoreInertness": () => (/* binding */ restoreInertness)
/* harmony export */ });
/**
 * This marks all siblings of the blocking elements and the siblings of all of its parents as inert by setting
 * 'aria-hidden' to 'true'.
 *
 * This assumes that the DOM is not being modified while the blocking element is showing, otherwise observers would
 * be needed.
 *
 * @param {Element} blockingElement The active element that will be be blocking the rest of the page.
 * @returns {Array} An array of {node, ariaHidden} objects, where node is the node that had its ariaHidden set
 * to 'true', and ariaHidden is the previous value of the 'aria-hidden' attribute. Use this to restore inertness.
 */
function makeEverythingExceptElementInert(blockingElement) {
  const savedInertElements = [];
  let nonInertElement = blockingElement;
  let parent = nonInertElement.parentNode.host || nonInertElement.parentNode;

  while (parent != null) {
    if (parent.nodeType === Node.ELEMENT_NODE) {
      // Start with the first child, if the parent blockingElement has a shadow root then use the first child of that
      let child = parent.firstChild;

      if (child === null && parent.shadowRoot) {
        child = parent.shadowRoot.firstChild;
      }

      while (child !== null) {
        // Ignore the blocking elements and all its parents (nonInertElement).
        if (child.nodeType === Node.ELEMENT_NODE && child !== nonInertElement && child.localName !== 'head') {
          savedInertElements.push({
            node: child,
            ariaHidden: child.ariaHidden
          });
          child.ariaHidden = true;
        }

        child = child.nextSibling;
      }

      nonInertElement = parent;
      parent = parent.parentNode;
    } else if (parent.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
      // It maybe a custom component, attempt to get the host
      parent = parent.host;
    } else {
      parent = parent.parentNode;
    }
  }

  return savedInertElements;
}
function restoreInertness(savedInertElements) {
  savedInertElements.forEach(element => {
    if (element.node) {
      element.node.ariaHidden = element.ariaHidden;
    }
  });
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/keyboard.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/keyboard.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "keyCodes": () => (/* binding */ keyCodes),
/* harmony export */   "normalizeKeyValue": () => (/* binding */ normalizeKeyValue),
/* harmony export */   "isShiftMetaOrControlKey": () => (/* binding */ isShiftMetaOrControlKey),
/* harmony export */   "runActionOnBufferedTypedCharacters": () => (/* binding */ runActionOnBufferedTypedCharacters)
/* harmony export */ });
const keyCodes = {
  tab: 9,
  backspace: 8,
  enter: 13,
  escape: 27,
  space: 32,
  pageup: 33,
  pagedown: 34,
  end: 35,
  home: 36,
  left: 37,
  up: 38,
  right: 39,
  down: 40,
  delete: 46,
  shift: 16
}; // Acceptable values are defined here: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values
// remove this function when IE11 support is dropped

function normalizeKeyValue(value) {
  switch (value) {
    case 'Spacebar':
      return ' ';

    case 'Esc':
      return 'Escape';

    case 'Del':
      return 'Delete';

    case 'Left':
      return 'ArrowLeft';

    case 'Right':
      return 'ArrowRight';

    case 'Down':
      return 'ArrowDown';

    case 'Up':
      return 'ArrowUp';

    default:
      return value;
  }
}
const buffer = {};
function isShiftMetaOrControlKey(event) {
  return event.shiftKey || event.metaKey || event.ctrlKey;
}
/**
 * Runs an action and passes the string of buffered keys typed within a short time period.
 * Use for type-ahead like functionality in menus, lists, comboboxes, and similar components.
 *
 * @param {CustomEvent} event A keyboard event
 * @param {Function} action function to run, it's passed the buffered text
 */

function runActionOnBufferedTypedCharacters(event, action) {
  const letter = event.key;

  if (letter && letter.length > 1) {
    // Not an individual character/letter, but rather a special code (like Shift, Backspace, etc.)
    return;
  } // If we were going to clear what keys were typed, don't yet.


  if (buffer._clearBufferId) {
    clearTimeout(buffer._clearBufferId);
  }

  buffer._keyBuffer = buffer._keyBuffer || [];

  buffer._keyBuffer.push(letter);

  const matchText = buffer._keyBuffer.join('').toLowerCase();

  action(matchText); // eslint-disable-next-line @lwc/lwc/no-async-operation

  buffer._clearBufferId = setTimeout(() => {
    buffer._keyBuffer = [];
  }, 700);
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/linkUtils.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/linkUtils.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "urlRegexString": () => (/* binding */ urlRegexString),
/* harmony export */   "emailRegexString": () => (/* binding */ emailRegexString),
/* harmony export */   "newLineRegexString": () => (/* binding */ newLineRegexString),
/* harmony export */   "tagRegexString": () => (/* binding */ tagRegexString),
/* harmony export */   "createHttpHref": () => (/* binding */ createHttpHref),
/* harmony export */   "createEmailHref": () => (/* binding */ createEmailHref)
/* harmony export */ });
/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./url */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/url.js");

const urlRegexString = "((?:(?:https?|ftp):\\/\\/(?:[\\w\\-\\|=%~#\\/+*@\\.,;:\\?!']|&){0,2047}(?:[\\(\\)\\.\\w=\\/+#-]*)[^\\s()\\.<>,;\\[\\]`'\"])|(?:\\b(?:[a-z0-9](?:[-a-z0-9]{0,62}[a-z0-9])?\\.)+(?:AC|AD|AE|AERO|AF|AG|AI|AL|AM|AN|AO|AQ|AR|ARPA|AS|ASIA|AT|AU|AW|AX|AZ|BA|BB|BD|BE|BF|BG|BH|BI|BIZ|BJ|BM|BN|BO|BR|BS|BT|BV|BW|BY|BZ|CA|CAT|CC|CD|CF|CG|CH|CI|CK|CL|CM|CN|CO|COM|COOP|CR|CU|CV|CX|CY|CZ|DE|DJ|DK|DM|DO|DZ|EC|EDU|EE|EG|ER|ES|ET|EU|FI|FJ|FK|FM|FO|FR|GA|GB|GD|GE|GF|GG|GH|GI|GL|GM|GN|GOV|GP|GQ|GR|GS|GT|GU|GW|GY|HK|HM|HN|HR|HT|HU|ID|IE|IL|IM|IN|INFO|INT|IO|IQ|IR|IS|IT|JE|JM|JO|JOBS|JP|KE|KG|KH|KI|KM|KN|KP|KR|KW|KY|KZ|LA|LB|LC|LI|LK|LR|LS|LT|LU|LV|LY|MA|MC|MD|ME|MG|MH|MIL|MK|ML|MM|MN|MO|MOBI|MP|MQ|MR|MS|MT|MU|MUSEUM|MV|MW|MX|MY|MZ|NA|NAME|NC|NE|NET|NF|NG|NI|NL|NO|NP|NR|NU|NZ|OM|ORG|PA|PE|PF|PG|PH|PK|PL|PM|PN|PR|PRO|PS|PT|PW|PY|QA|RE|RO|RS|RU|RW|SA|SB|SC|SD|SE|SG|SH|SI|SJ|SK|SL|SM|SN|SO|SR|ST|SU|SV|SY|SZ|TC|TD|TEL|TF|TG|TH|TJ|TK|TL|TM|TN|TO|TP|TR|TRAVEL|TT|TV|TW|TZ|UA|UG|UK|US|UY|UZ|VA|VC|VE|VG|VI|VN|VU|WF|WS|XN--0ZWM56D|XN--11B5BS3A9AJ6G|XN--80AKHBYKNJ4F|XN--9T4B11YI5A|XN--DEBA0AD|XN--FIQS8S|XN--FIQZ9S|XN--G6W251D|XN--HGBK6AJ7F53BBA|XN--HLCJ6AYA9ESC7A|XN--J6W193G|XN--JXALPDLP|XN--KGBECHTV|XN--KPRW13D|XN--KPRY57D|XN--MGBAAM7A8H|XN--MGBERP4A5D4AR|XN--P1AI|XN--WGBH1C|XN--ZCKZAH|YE|YT|ZA|ZM|ZW)(?!@(?:[a-z0-9](?:[-a-z0-9]{0,62}[a-z0-9])?\\.)+(?:AC|AD|AE|AERO|AF|AG|AI|AL|AM|AN|AO|AQ|AR|ARPA|AS|ASIA|AT|AU|AW|AX|AZ|BA|BB|BD|BE|BF|BG|BH|BI|BIZ|BJ|BM|BN|BO|BR|BS|BT|BV|BW|BY|BZ|CA|CAT|CC|CD|CF|CG|CH|CI|CK|CL|CM|CN|CO|COM|COOP|CR|CU|CV|CX|CY|CZ|DE|DJ|DK|DM|DO|DZ|EC|EDU|EE|EG|ER|ES|ET|EU|FI|FJ|FK|FM|FO|FR|GA|GB|GD|GE|GF|GG|GH|GI|GL|GM|GN|GOV|GP|GQ|GR|GS|GT|GU|GW|GY|HK|HM|HN|HR|HT|HU|ID|IE|IL|IM|IN|INFO|INT|IO|IQ|IR|IS|IT|JE|JM|JO|JOBS|JP|KE|KG|KH|KI|KM|KN|KP|KR|KW|KY|KZ|LA|LB|LC|LI|LK|LR|LS|LT|LU|LV|LY|MA|MC|MD|ME|MG|MH|MIL|MK|ML|MM|MN|MO|MOBI|MP|MQ|MR|MS|MT|MU|MUSEUM|MV|MW|MX|MY|MZ|NA|NAME|NC|NE|NET|NF|NG|NI|NL|NO|NP|NR|NU|NZ|OM|ORG|PA|PE|PF|PG|PH|PK|PL|PM|PN|PR|PRO|PS|PT|PW|PY|QA|RE|RO|RS|RU|RW|SA|SB|SC|SD|SE|SG|SH|SI|SJ|SK|SL|SM|SN|SO|SR|ST|SU|SV|SY|SZ|TC|TD|TEL|TF|TG|TH|TJ|TK|TL|TM|TN|TO|TP|TR|TRAVEL|TT|TV|TW|TZ|UA|UG|UK|US|UY|UZ|VA|VC|VE|VG|VI|VN|VU|WF|WS|XN--0ZWM56D|XN--11B5BS3A9AJ6G|XN--80AKHBYKNJ4F|XN--9T4B11YI5A|XN--DEBA0AD|XN--FIQS8S|XN--FIQZ9S|XN--G6W251D|XN--HGBK6AJ7F53BBA|XN--HLCJ6AYA9ESC7A|XN--J6W193G|XN--JXALPDLP|XN--KGBECHTV|XN--KPRW13D|XN--KPRY57D|XN--MGBAAM7A8H|XN--MGBERP4A5D4AR|XN--P1AI|XN--WGBH1C|XN--ZCKZAH|YE|YT|ZA|ZM|ZW))(?:/[\\w\\-=?/.&;:%~,+@#*]{0,2048}(?:[\\w=/+#-]|\\([^\\s()]*\\)))?(?:$|(?=\\.$)|(?=\\.\\s)|(?=[^\\w\\.]))))";
const emailRegexString = "([\\w-\\.\\+_']{1,64}@(?:[\\w-]){1,255}(?:\\.[\\w-]{1,255}){1,10})";
const newLineRegexString = '(\r\n|\r|\n)';
const tagRegexString = '(<a[\\s]+[^>]+[^/]>[\\s\\S]*?</a>|<a[\\s]+[^>]+/>|' + '<i?frame[\\s]+[^>]+[^/]>[\\s\\S]*?</i?frame>|<i?frame[\\s]+[^>]+/>|' + '<area[\\s]+[^>]+[^/]>[\\s\\S]*?</area>|<area[\\s]+[^>]+/>|' + '<link[\\s]+[^>]+[^/]>[\\s\\S]*?</link>|<link[\\s]+[^>]+/>|' + '<img[\\s]+[^>]+[^/]>[\\s\\S]*?</img>|<img[\\s]+[^>]+>|' + '<form[\\s]+[^>]+[^/]>[\\s\\S]*?</form>|<form[\\s]+[^>]+/>|' + '<body[\\s]+[^>]+[^/]>[\\s\\S]*?</body>|<body[\\s]+[^>]+/>|' + '<head[\\s]+[^>]+[^/]>[\\s\\S]*?</head>|<head[\\s]+[^>]+/>|' + '<input[\\s]+[^>]+[^/]>[\\s\\S]*?</input>|<input[\\s]+[^>]+/>|' + '<button[\\s]+[^>]+[^/]>[\\s\\S]*?</button>|<button[\\s]+[^>]+/>|' + '<blockquote[\\s]+[^>]+[^/]>[\\s\\S]*?</blockquote>|<blockquote[\\s]+[^>]+/>|' + '<q[\\s]+[^>]+[^/]>[\\s\\S]*?</q>|<q[\\s]+[^>]+/>|' + '<del[\\s]+[^>]+[^/]>[\\s\\S]*?</del>|<del[\\s]+[^>]+/>|' + '<ins[\\s]+[^>]+[^/]>[\\s\\S]*?</ins>|<ins[\\s]+[^>]+/>)';
const createHttpHref = function (url) {
  return (0,_url__WEBPACK_IMPORTED_MODULE_0__.makeAbsoluteUrl)(url);
};
const createEmailHref = function (email) {
  return `mailto:${email}`;
};

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/linkify.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/linkify.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parseToFormattedLinkifiedParts": () => (/* binding */ parseToFormattedLinkifiedParts),
/* harmony export */   "parseToFormattedParts": () => (/* binding */ parseToFormattedParts)
/* harmony export */ });
/* harmony import */ var _linkUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linkUtils */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/linkUtils.js");

/*
 * Regex was taken from aura lib and refactored
 */

const linkRegex = new RegExp(`(${_linkUtils__WEBPACK_IMPORTED_MODULE_0__.newLineRegexString})|${_linkUtils__WEBPACK_IMPORTED_MODULE_0__.urlRegexString}|${_linkUtils__WEBPACK_IMPORTED_MODULE_0__.emailRegexString}`, 'gi');
const linkRegexNoNewLine = new RegExp(`${_linkUtils__WEBPACK_IMPORTED_MODULE_0__.urlRegexString}|${_linkUtils__WEBPACK_IMPORTED_MODULE_0__.emailRegexString}`, 'gi');
const emailRegex = new RegExp(`^${_linkUtils__WEBPACK_IMPORTED_MODULE_0__.emailRegexString}$`, 'gi');
const newLineRegex = new RegExp(_linkUtils__WEBPACK_IMPORTED_MODULE_0__.newLineRegexString, 'gi');

function getTextPart(text) {
  return {
    isText: true,
    value: text
  };
}

function getUrlPart(url, index) {
  return {
    isLink: true,
    value: url,
    href: (0,_linkUtils__WEBPACK_IMPORTED_MODULE_0__.createHttpHref)(url),
    key: `${url}-${index}`
  };
}

function getEmailPart(email, index) {
  return {
    isLink: true,
    value: email,
    href: (0,_linkUtils__WEBPACK_IMPORTED_MODULE_0__.createEmailHref)(email),
    key: `${email}-${index}`
  };
}

function getNewlinePart(index) {
  return {
    isNewline: true,
    key: index
  };
}

function getLinkPart(link, index, ignoreNewLines) {
  if (!ignoreNewLines && link.match(newLineRegex)) {
    return getNewlinePart(index);
  } else if (link.match(emailRegex)) {
    return getEmailPart(link, index);
  }

  return getUrlPart(link, index);
}
/**
 * Parse text into parts of text, links, emails, new lines
 * @param text {string} Text to parse into linkified parts
 * @param ignoreNewLines {boolean} Boolean indicating whether to return new line parts or not
 * if true new lines are included in text/url/email parts otherwise they are returned in their
 * own parts by default
 * @returns {[]}
 */


function parseToFormattedLinkifiedParts(text, ignoreNewLines = false) {
  const parts = [];
  const re = ignoreNewLines ? linkRegexNoNewLine : linkRegex;
  let match;
  let index = 0;

  while ((match = re.exec(text)) !== null) {
    let link = match[0];
    const endsWithQuote = link && link.endsWith('&quot'); // If we found an email or url match, then create a text part for everything
    // up to the match and then create the part for the email or url

    if (match.index > 0) {
      parts.push(getTextPart(text.slice(0, match.index)));
    }

    if (endsWithQuote) {
      link = link.slice(0, link.lastIndexOf('&quot'));
    }

    parts.push(getLinkPart(link, index, ignoreNewLines));

    if (endsWithQuote) {
      parts.push(getTextPart('&quot'));
    }

    text = text.substring(re.lastIndex);
    re.lastIndex = 0;
    index = index + 1;
  }

  if (text != null && text !== '') {
    parts.push(getTextPart(text));
  }

  return parts;
}
/**
 * Parse text into parts of text and new lines
 * @param text {string} Text to parse into parts
 * @returns {[]}
 */

function parseToFormattedParts(text) {
  return text.split(newLineRegex).map((part, index) => {
    return index % 2 === 0 ? getTextPart(part) : getNewlinePart(index);
  });
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/normalize.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/normalize.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "normalizeString": () => (/* binding */ normalizeString),
/* harmony export */   "normalizeBoolean": () => (/* binding */ normalizeBoolean),
/* harmony export */   "normalizeNumber": () => (/* binding */ normalizeNumber),
/* harmony export */   "normalizeArray": () => (/* binding */ normalizeArray),
/* harmony export */   "normalizeAriaAttribute": () => (/* binding */ normalizeAriaAttribute)
/* harmony export */ });
/**
A string normalization utility for attributes.
@param {String} value - The value to normalize.
@param {Object} config - The optional configuration object.
@param {String} [config.fallbackValue] - The optional fallback value to use if the given value is not provided or invalid. Defaults to an empty string.
@param {Array} [config.validValues] - An optional array of valid values. Assumes all input is valid if not provided.
@return {String} - The normalized value.
**/
function normalizeString(value, config = {}) {
  const {
    fallbackValue = '',
    validValues,
    toLowerCase = true
  } = config;
  let normalized = typeof value === 'string' && value.trim() || '';
  normalized = toLowerCase ? normalized.toLowerCase() : normalized;

  if (validValues && validValues.indexOf(normalized) === -1) {
    normalized = fallbackValue;
  }

  return normalized;
}
/**
A boolean normalization utility for attributes.
@param {Any} value - The value to normalize.
@return {Boolean} - The normalized value.
**/

function normalizeBoolean(value) {
  return typeof value === 'string' || !!value;
}

const isNotNumber = value => {
  // Need to make sure it is a number than check isNaN
  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#difference_between_number.isnan_and_global_isnan
  if (Number.isNaN(value) || value === null || value === undefined || value === '' || Array.isArray(value)) {
    return true;
  } // to eliminate non numeric string or other non numeric-typed objects


  const convertedNumber = Number(value);
  return Number.isNaN(convertedNumber);
};
/**
 * A number normalization utility for attributes.
 * @param {number} value - The value to normalize.
 * @param {object} config -  The optional configuration object.
 * @param {number} [config.minValue] - The optional min value to check against the given value.
 * @param {number} [config.maxValue] - The optional max value to check against the given value.
 * @param {number} [config.fallbackValue] - The optional fallback value to use if the given value is not provided or outside of the min or max range
 * @return {number} - The normalized value
 */


function normalizeNumber(value, config = {}) {
  const {
    fallbackValue,
    minValue,
    maxValue
  } = config;
  const returnValueIfInvalid = typeof fallbackValue === 'number' && fallbackValue || undefined;

  if (isNotNumber(value)) {
    return returnValueIfInvalid;
  }

  if (!isNotNumber(value) && value < minValue) {
    return returnValueIfInvalid;
  }

  if (!isNotNumber(value) && value > maxValue) {
    return returnValueIfInvalid;
  } // multiplying 1 is to make sure to convert from a numeric string to a number


  return value * 1;
}
function normalizeArray(value) {
  if (Array.isArray(value)) {
    return value;
  }

  return [];
}
/**
A aria attribute normalization utility.
@param {Any} value - A single aria value or an array of aria values
@return {String} - A space separated list of aria values
**/

function normalizeAriaAttribute(value) {
  let arias = Array.isArray(value) ? value : [value];
  arias = arias.map(ariaValue => {
    if (typeof ariaValue === 'string') {
      return ariaValue.replace(/\s+/g, ' ').trim();
    }

    return '';
  }).filter(ariaValue => !!ariaValue);
  return arias.length > 0 ? arias.join(' ') : null;
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/observers.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/observers.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "observePosition": () => (/* binding */ observePosition)
/* harmony export */ });
// hide panel on scroll
const POSITION_CHANGE_THRESHOLD = 5;
function observePosition(target, threshold = POSITION_CHANGE_THRESHOLD, originalRect, callback) {
  // retrieve current bounding client rect of target element
  const newBoundingRect = target.getBoundingClientRect();
  const newLeft = newBoundingRect.left;
  const newTop = newBoundingRect.top; // old bounding rect values

  const oldLeft = originalRect.left;
  const oldTop = originalRect.top; // if we have a position change (horizontal or vertical) equal or greater to the threshold then execute the callback

  const horizontalShiftDelta = Math.abs(newLeft - oldLeft);
  const verticalShiftDelta = Math.abs(newTop - oldTop);

  if (horizontalShiftDelta >= threshold || verticalShiftDelta >= threshold) {
    callback();
  }
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/os.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/os.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isMacOSTest": () => (/* binding */ isMacOSTest),
/* harmony export */   "isiOSTest": () => (/* binding */ isiOSTest),
/* harmony export */   "isWindowsOSTest": () => (/* binding */ isWindowsOSTest),
/* harmony export */   "isAndroidOSTest": () => (/* binding */ isAndroidOSTest),
/* harmony export */   "isMacOS": () => (/* binding */ isMacOS),
/* harmony export */   "isWindowsOS": () => (/* binding */ isWindowsOS),
/* harmony export */   "isiOS": () => (/* binding */ isiOS),
/* harmony export */   "isAndroidOS": () => (/* binding */ isAndroidOS)
/* harmony export */ });
/**
 * Verify if user is using MAC OS or not
 * @returns {boolean} - true if Mac OS
 */
const isMacOSTest = ({
  userAgent
}) => {
  return /(macintosh|macintel|macppc|mac68k|macos)/i.test(userAgent);
};
/**
 * Verify if user is using iOS or not
 * @returns {boolean} - true, if iOS
 */

const isiOSTest = ({
  userAgent
}) => {
  return /(iphone|ipad|ipod)/i.test(userAgent);
};
/**
 * Verify if user is using Windows OS or not
 * @returns {boolean} - true, if Windows OS
 */

const isWindowsOSTest = ({
  userAgent
}) => {
  return /(win32|win64|windows)/i.test(userAgent);
};
/**
 * Verify if user is using Android OS or not
 * @returns {boolean} - true, if Android OS
 */

const isAndroidOSTest = ({
  userAgent
}) => {
  return /android/i.test(userAgent);
};
const isMacOS = isMacOSTest(navigator);
const isWindowsOS = isWindowsOSTest(navigator);
const isiOS = isiOSTest(navigator);
const isAndroidOS = isAndroidOSTest(navigator);

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/pageReference.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/pageReference.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isValidPageReference": () => (/* binding */ isValidPageReference)
/* harmony export */ });
const VALID_PAGE_REFERENCE_PROPERTIES = new Set(['type', 'attributes', 'state']);
function isValidPageReference(object) {
  return object && object.type && typeof object.type === 'string' && object.attributes && typeof object.attributes === 'object' && Object.keys(object).every(prop => VALID_PAGE_REFERENCE_PROPERTIES.has(prop));
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/phonify.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/phonify.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toNorthAmericanPhoneNumber": () => (/* binding */ toNorthAmericanPhoneNumber)
/* harmony export */ });
/* harmony import */ var _salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @salesforce/i18n/locale */ "./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-locale.js");

const NA_PHONE_NUMBER = '($1) $2-$3';
const IS_TEN_DIGITS = /^\d{10}$/;
const TEN_TO_NA = /(\d{3})(\d{3})(\d{4})/;
const IS_ELEVEN_DIGITS = /^1\d{10}$/;
const ELEVEN_TO_NA = /1(\d{3})(\d{3})(\d{4})$/; // The locale argument has been added for tests since there's currently no clean way of mocking the locale

function toNorthAmericanPhoneNumber(value, userLocale) {
  if (!isNorthAmericanCountry(userLocale || _salesforce_i18n_locale__WEBPACK_IMPORTED_MODULE_0__.default)) {
    return value;
  }

  if (IS_TEN_DIGITS.test(value)) {
    return value.replace(TEN_TO_NA, NA_PHONE_NUMBER);
  } else if (IS_ELEVEN_DIGITS.test(value)) {
    return value.replace(ELEVEN_TO_NA, NA_PHONE_NUMBER);
  }

  return value || '';
}

function isNorthAmericanCountry(userLocale) {
  const localeCountry = getLocaleCountry(userLocale);

  if (localeCountry === 'US' || localeCountry === 'CA') {
    return true;
  }

  return false;
}

function getLocaleCountry(userLocale) {
  if (!userLocale) {
    // just adding a guard in case locale is undefined
    return null;
  }

  const [, country] = userLocale.split('-');
  return country;
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/scroll.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/scroll.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "raf": () => (/* binding */ raf)
/* harmony export */ });
function raf(fn) {
  let ticking = false;
  return function (event) {
    if (!ticking) {
      // eslint-disable-next-line @lwc/lwc/no-async-operation
      requestAnimationFrame(() => {
        fn.call(this, event);
        ticking = false;
      });
    }

    ticking = true;
  };
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/smartSetAttribute.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/smartSetAttribute.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "smartSetAttribute": () => (/* binding */ smartSetAttribute)
/* harmony export */ });
/**
 * Set an attribute on an element, if it's a normal element
 * it will use setAttribute, if it's an LWC component
 * it will use the public property
 *
 * @param {HTMLElement} element The element to act on
 * @param {String} attribute the attribute to set
 * @param {Any} value the value to set
 */
function smartSetAttribute(element, attribute, value) {
  if (element.tagName.match(/^LIGHTNING/i)) {
    attribute = attribute.replace(/-\w/g, m => m[1].toUpperCase());
    element[attribute] = value ? value : null;
  } else if (value) {
    element.setAttribute(attribute, value);
  } else {
    element.removeAttribute(attribute);
  }
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/url.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/url.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isAbsoluteUrl": () => (/* binding */ isAbsoluteUrl),
/* harmony export */   "makeAbsoluteUrl": () => (/* binding */ makeAbsoluteUrl),
/* harmony export */   "FALLBACK_URL": () => (/* binding */ FALLBACK_URL),
/* harmony export */   "sanitizeURL": () => (/* binding */ sanitizeURL)
/* harmony export */ });
const URL_CHECK_REGEX = /^(\/+|\.+|ftp|http(s?):\/\/)/i;
function isAbsoluteUrl(url) {
  return URL_CHECK_REGEX.test(url);
}
function makeAbsoluteUrl(url) {
  const protocol = window.location.protocol;
  return isAbsoluteUrl(url) ? url : `${protocol}//${url}`;
}
const FALLBACK_URL = 'about:blank';
const IS_SCRIPT_OR_DATA = /^(?:\w+script|data):/i;
const IS_HTML_ENTITY = /&#(\w+)(^\w|;)?/g;
const htmlCtrlEntityRegex = /&(newline|tab);/gi;
const ctrlCharactersRegex = // eslint-disable-next-line no-control-regex
/[\u0000-\u001F\u007F-\u009F\u2000-\u200D\uFEFF]/gim;

function decodeHtmlCharacters(str) {
  return str.replace(IS_HTML_ENTITY, (match, dec) => {
    return String.fromCharCode(dec);
  });
}
/**
 * Mark sure to preventDefault, when sanitized url matches FALLBACK_URL
 * W-12029667 - Making FALLBACK_URL as '#' causes click action to fail on tests
 * */


function sanitizeURL(url) {
  if (url) {
    // remove html entity characters from url
    const sanitizedUrl = decodeHtmlCharacters(url).replace(htmlCtrlEntityRegex, '').replace(ctrlCharactersRegex, '').trim();
    return sanitizedUrl.match(IS_SCRIPT_OR_DATA) ? FALLBACK_URL : url;
  }

  return FALLBACK_URL;
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utility.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/utility.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deepCopy": () => (/* binding */ deepCopy),
/* harmony export */   "arraysEqual": () => (/* binding */ arraysEqual),
/* harmony export */   "ArraySlice": () => (/* binding */ ArraySlice)
/* harmony export */ });
/**
 * Create a deep copy of an object or array
 * @param {object|array} obj - item to be copied
 * @returns {object|array} copy of the item
 */
function deepCopy(obj) {
  if (Object(obj) !== obj) {
    // primitives
    return obj;
  }

  if (obj instanceof Set) {
    return new Set(obj);
  }

  if (obj instanceof Date) {
    return new Date(obj);
  }

  if (typeof obj === 'function') {
    return obj.bind({});
  }

  if (Array.isArray(obj)) {
    const obj2 = [];
    const len = obj.length;

    for (let i = 0; i < len; i++) {
      obj2.push(deepCopy(obj[i]));
    }

    return obj2;
  }

  const result = Object.create({});
  let keys = Object.keys(obj);

  if (obj instanceof Error) {
    // Error properties are non-enumerable
    keys = Object.getOwnPropertyNames(obj);
  }

  const len = keys.length;

  for (let i = 0; i < len; i++) {
    const key = keys[i];
    result[key] = deepCopy(obj[key]);
  }

  return result;
}
/**
 * Compare two arrays and return true if they are equal
 * @param {array} array1 - first array to compare
 * @param {array} array2 - second array to compare
 * @returns {boolean} if the arrays are identical
 */

function arraysEqual(array1, array2) {
  // if either array is falsey, return false
  if (!array1 || !array2) {
    return false;
  } // if array lengths don't match, return false


  if (array1.length !== array2.length) {
    return false;
  }

  for (let index = 0; index < array1.length; index++) {
    // Check if we have nested arrays
    if (array1[index] instanceof Array && array2[index] instanceof Array) {
      // recurse into the nested arrays
      if (!arraysEqual(array1[index], array2[index])) {
        return false;
      }
    } else if (array1[index] !== array2[index]) {
      // Warning - two different object instances will never be equal: {x:20} != {x:20}
      return false;
    }
  }

  return true;
}
const ArraySlice = Array.prototype.slice;

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assert": () => (/* reexport safe */ _assert__WEBPACK_IMPORTED_MODULE_0__.assert),
/* harmony export */   "ARIA": () => (/* reexport safe */ _aria__WEBPACK_IMPORTED_MODULE_1__.ARIA),
/* harmony export */   "ARIA_TO_CAMEL": () => (/* reexport safe */ _aria__WEBPACK_IMPORTED_MODULE_1__.ARIA_TO_CAMEL),
/* harmony export */   "isAriaDescriptionSupported": () => (/* reexport safe */ _aria__WEBPACK_IMPORTED_MODULE_1__.isAriaDescriptionSupported),
/* harmony export */   "updateAriaInvalidOnElement": () => (/* reexport safe */ _aria__WEBPACK_IMPORTED_MODULE_1__.updateAriaInvalidOnElement),
/* harmony export */   "computeAriaInvalid": () => (/* reexport safe */ _aria__WEBPACK_IMPORTED_MODULE_1__.computeAriaInvalid),
/* harmony export */   "EventEmitter": () => (/* reexport safe */ _eventEmitter__WEBPACK_IMPORTED_MODULE_2__.EventEmitter),
/* harmony export */   "toNorthAmericanPhoneNumber": () => (/* reexport safe */ _phonify__WEBPACK_IMPORTED_MODULE_3__.toNorthAmericanPhoneNumber),
/* harmony export */   "createEmailHref": () => (/* reexport safe */ _linkUtils__WEBPACK_IMPORTED_MODULE_4__.createEmailHref),
/* harmony export */   "createHttpHref": () => (/* reexport safe */ _linkUtils__WEBPACK_IMPORTED_MODULE_4__.createHttpHref),
/* harmony export */   "emailRegexString": () => (/* reexport safe */ _linkUtils__WEBPACK_IMPORTED_MODULE_4__.emailRegexString),
/* harmony export */   "newLineRegexString": () => (/* reexport safe */ _linkUtils__WEBPACK_IMPORTED_MODULE_4__.newLineRegexString),
/* harmony export */   "tagRegexString": () => (/* reexport safe */ _linkUtils__WEBPACK_IMPORTED_MODULE_4__.tagRegexString),
/* harmony export */   "urlRegexString": () => (/* reexport safe */ _linkUtils__WEBPACK_IMPORTED_MODULE_4__.urlRegexString),
/* harmony export */   "isAbsoluteUrl": () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_5__.isAbsoluteUrl),
/* harmony export */   "makeAbsoluteUrl": () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_5__.makeAbsoluteUrl),
/* harmony export */   "sanitizeURL": () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_5__.sanitizeURL),
/* harmony export */   "FALLBACK_URL": () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_5__.FALLBACK_URL),
/* harmony export */   "deepCopy": () => (/* reexport safe */ _utility__WEBPACK_IMPORTED_MODULE_6__.deepCopy),
/* harmony export */   "arraysEqual": () => (/* reexport safe */ _utility__WEBPACK_IMPORTED_MODULE_6__.arraysEqual),
/* harmony export */   "ArraySlice": () => (/* reexport safe */ _utility__WEBPACK_IMPORTED_MODULE_6__.ArraySlice),
/* harmony export */   "guid": () => (/* reexport safe */ _guid__WEBPACK_IMPORTED_MODULE_7__.guid),
/* harmony export */   "classListMutation": () => (/* reexport safe */ _classListMutation__WEBPACK_IMPORTED_MODULE_8__.classListMutation),
/* harmony export */   "makeEverythingExceptElementInert": () => (/* reexport safe */ _inert__WEBPACK_IMPORTED_MODULE_9__.makeEverythingExceptElementInert),
/* harmony export */   "restoreInertness": () => (/* reexport safe */ _inert__WEBPACK_IMPORTED_MODULE_9__.restoreInertness),
/* harmony export */   "hasAnimation": () => (/* reexport safe */ _animation__WEBPACK_IMPORTED_MODULE_10__.hasAnimation),
/* harmony export */   "normalizeBoolean": () => (/* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_11__.normalizeBoolean),
/* harmony export */   "normalizeNumber": () => (/* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_11__.normalizeNumber),
/* harmony export */   "normalizeString": () => (/* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_11__.normalizeString),
/* harmony export */   "normalizeArray": () => (/* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_11__.normalizeArray),
/* harmony export */   "normalizeAriaAttribute": () => (/* reexport safe */ _normalize__WEBPACK_IMPORTED_MODULE_11__.normalizeAriaAttribute),
/* harmony export */   "keyCodes": () => (/* reexport safe */ _keyboard__WEBPACK_IMPORTED_MODULE_12__.keyCodes),
/* harmony export */   "runActionOnBufferedTypedCharacters": () => (/* reexport safe */ _keyboard__WEBPACK_IMPORTED_MODULE_12__.runActionOnBufferedTypedCharacters),
/* harmony export */   "normalizeKeyValue": () => (/* reexport safe */ _keyboard__WEBPACK_IMPORTED_MODULE_12__.normalizeKeyValue),
/* harmony export */   "isShiftMetaOrControlKey": () => (/* reexport safe */ _keyboard__WEBPACK_IMPORTED_MODULE_12__.isShiftMetaOrControlKey),
/* harmony export */   "raf": () => (/* reexport safe */ _scroll__WEBPACK_IMPORTED_MODULE_13__.raf),
/* harmony export */   "isChrome": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_14__.isChrome),
/* harmony export */   "isIE11": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_14__.isIE11),
/* harmony export */   "isSafari": () => (/* reexport safe */ _browser__WEBPACK_IMPORTED_MODULE_14__.isSafari),
/* harmony export */   "observePosition": () => (/* reexport safe */ _observers__WEBPACK_IMPORTED_MODULE_15__.observePosition),
/* harmony export */   "hasOnlyAllowedVideoIframes": () => (/* reexport safe */ _videoUtils__WEBPACK_IMPORTED_MODULE_16__.hasOnlyAllowedVideoIframes),
/* harmony export */   "parseToFormattedLinkifiedParts": () => (/* reexport safe */ _linkify__WEBPACK_IMPORTED_MODULE_17__.parseToFormattedLinkifiedParts),
/* harmony export */   "parseToFormattedParts": () => (/* reexport safe */ _linkify__WEBPACK_IMPORTED_MODULE_17__.parseToFormattedParts),
/* harmony export */   "isValidPageReference": () => (/* reexport safe */ _pageReference__WEBPACK_IMPORTED_MODULE_18__.isValidPageReference),
/* harmony export */   "isMacOS": () => (/* reexport safe */ _os__WEBPACK_IMPORTED_MODULE_19__.isMacOS),
/* harmony export */   "isWindowsOS": () => (/* reexport safe */ _os__WEBPACK_IMPORTED_MODULE_19__.isWindowsOS),
/* harmony export */   "isiOS": () => (/* reexport safe */ _os__WEBPACK_IMPORTED_MODULE_19__.isiOS),
/* harmony export */   "isAndroidOS": () => (/* reexport safe */ _os__WEBPACK_IMPORTED_MODULE_19__.isAndroidOS),
/* harmony export */   "VALID_HEADING_LEVELS": () => (/* reexport safe */ _ariaLevelHeadingUtils_js__WEBPACK_IMPORTED_MODULE_21__.VALID_HEADING_LEVELS),
/* harmony export */   "isHeadingLevelValid": () => (/* reexport safe */ _ariaLevelHeadingUtils_js__WEBPACK_IMPORTED_MODULE_21__.isHeadingLevelValid),
/* harmony export */   "synchronizeAttrs": () => (/* binding */ synchronizeAttrs),
/* harmony export */   "reflectAttribute": () => (/* binding */ reflectAttribute),
/* harmony export */   "getRealDOMId": () => (/* binding */ getRealDOMId),
/* harmony export */   "getShadowActiveElement": () => (/* binding */ getShadowActiveElement),
/* harmony export */   "getShadowActiveElements": () => (/* binding */ getShadowActiveElements),
/* harmony export */   "isRTL": () => (/* binding */ isRTL),
/* harmony export */   "isUndefinedOrNull": () => (/* binding */ isUndefinedOrNull),
/* harmony export */   "isNotUndefinedOrNull": () => (/* binding */ isNotUndefinedOrNull),
/* harmony export */   "getZIndexBaseline": () => (/* binding */ getZIndexBaseline),
/* harmony export */   "timeout": () => (/* binding */ timeout),
/* harmony export */   "animationFrame": () => (/* binding */ animationFrame),
/* harmony export */   "decorateInputForDragon": () => (/* binding */ decorateInputForDragon),
/* harmony export */   "setDecoratedDragonInputValueWithoutEvent": () => (/* binding */ setDecoratedDragonInputValueWithoutEvent),
/* harmony export */   "escapeHTML": () => (/* binding */ escapeHTML),
/* harmony export */   "BUTTON_GROUP_ORDER": () => (/* binding */ BUTTON_GROUP_ORDER),
/* harmony export */   "buttonGroupOrderClass": () => (/* binding */ buttonGroupOrderClass),
/* harmony export */   "isNativeComponent": () => (/* binding */ isNativeComponent)
/* harmony export */ });
/* harmony import */ var _assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/assert.js");
/* harmony import */ var _aria__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aria */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/aria.js");
/* harmony import */ var _eventEmitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./eventEmitter */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/eventEmitter.js");
/* harmony import */ var _phonify__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./phonify */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/phonify.js");
/* harmony import */ var _linkUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./linkUtils */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/linkUtils.js");
/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./url */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/url.js");
/* harmony import */ var _utility__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utility */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/utility.js");
/* harmony import */ var _guid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./guid */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/guid.js");
/* harmony import */ var _classListMutation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./classListMutation */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/classListMutation.js");
/* harmony import */ var _inert__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./inert */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/inert.js");
/* harmony import */ var _animation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./animation */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/animation.js");
/* harmony import */ var _normalize__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./normalize */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/normalize.js");
/* harmony import */ var _keyboard__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./keyboard */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/keyboard.js");
/* harmony import */ var _scroll__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./scroll */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/scroll.js");
/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./browser */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/browser.js");
/* harmony import */ var _observers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./observers */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/observers.js");
/* harmony import */ var _videoUtils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./videoUtils */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/videoUtils.js");
/* harmony import */ var _linkify__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./linkify */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/linkify.js");
/* harmony import */ var _pageReference__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./pageReference */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/pageReference.js");
/* harmony import */ var _os__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./os */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/os.js");
/* harmony import */ var _smartSetAttribute__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./smartSetAttribute */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/smartSetAttribute.js");
/* harmony import */ var _ariaLevelHeadingUtils_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./ariaLevelHeadingUtils.js */ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/ariaLevelHeadingUtils.js");






















/**
 * @param {HTMLElement} element Element to act on
 * @param {Object} values values and attributes to set, if the value is
 *                        falsy it the attribute will be removed
 */

function synchronizeAttrs(element, values) {
  if (!element) {
    return;
  }

  const attributes = Object.keys(values);
  attributes.forEach(attribute => {
    (0,_smartSetAttribute__WEBPACK_IMPORTED_MODULE_20__.smartSetAttribute)(element, attribute, values[attribute]);
  });
}
/**
 * Update the element's attribute with given value.
 * If value is false, the attribute is removed from the element.
 *
 * @param {Object} element - Element
 * @param {string} attrName - Attribute name
 * @param {string|boolean} value - Attribute value
 */

function reflectAttribute(element, attrName, value) {
  if (!element) {
    return;
  }

  if (typeof value === 'string') {
    element.setAttribute(attrName, value);
  } else if (value === true) {
    element.setAttribute(attrName, '');
  } else if (!value) {
    element.removeAttribute(attrName);
  } else {
    console.warn(`Invalid attribute value for "${attrName}": ${value}`);
  }
}
/**
 * Get the actual DOM id for an element
 * @param {HTMLElement|String} el The element to get the id for (string will just be returned)
 *
 * @returns {String} The DOM id or null
 */

function getRealDOMId(el) {
  if (el && typeof el === 'string') {
    return el;
  } else if (el) {
    return el.getAttribute('id');
  }

  return null;
}
/**
 * Returns the active element traversing shadow roots
 * @returns {Element} Active Element inside shadow
 */

function getShadowActiveElement() {
  let activeElement = document.activeElement;

  while (activeElement.shadowRoot && activeElement.shadowRoot.activeElement) {
    activeElement = activeElement.shadowRoot.activeElement;
  }

  return activeElement;
}
/**
 * Returns the active elements at each shadow root level
 * @returns {Array} Active Elements  at each shadow root level
 */

function getShadowActiveElements() {
  let activeElement = document.activeElement;
  const shadowActiveElements = [];

  while (activeElement && activeElement.shadowRoot && activeElement.shadowRoot.activeElement) {
    shadowActiveElements.push(activeElement);
    activeElement = activeElement.shadowRoot.activeElement;
  }

  if (activeElement) {
    shadowActiveElements.push(activeElement);
  }

  return shadowActiveElements;
}
function isRTL() {
  return document.dir === 'rtl';
}
function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}
function isNotUndefinedOrNull(value) {
  return !isUndefinedOrNull(value);
}
const DEFAULT_MODAL_ZINDEX = 9000;
const DEFAULT_ZINDEX_OFFSET = 100;
const DEFAULT_ZINDEX_BASELINE = DEFAULT_MODAL_ZINDEX + DEFAULT_ZINDEX_OFFSET;
/**
 * Returns the zIndex baseline from slds zIndex variable --lwc-zIndexModal.
 * @returns {Number} zIndex baseline
 */

function getZIndexBaseline() {
  // When SLDS styles are present, typically on Core
  // this currently resolves to: '9000' (string)
  const modalZindexValueLwc = (window.getComputedStyle(document.documentElement) || document.documentElement.style).getPropertyValue('--lwc-zIndexModal');
  const baseZindexModalLwc = parseInt(modalZindexValueLwc, 10);
  return isNaN(baseZindexModalLwc) ? DEFAULT_ZINDEX_BASELINE : baseZindexModalLwc + DEFAULT_ZINDEX_OFFSET;
}
function timeout(interval) {
  return new Promise(resolve => {
    // eslint-disable-next-line @lwc/lwc/no-async-operation
    setTimeout(resolve, interval);
  });
}
function animationFrame() {
  return new Promise(resolve => {
    // eslint-disable-next-line @lwc/lwc/no-async-operation
    window.requestAnimationFrame(resolve);
  });
}
/**
 *
 * Decorates an input element to fire an "input"
 * event when the value is directly set.
 *
 * @param {HTMLElement} element The element to decorate.
 *
 */

function decorateInputForDragon(element) {
  const valuePropertyDescriptor = getInputValuePropertyDescriptor(element);
  Object.defineProperty(element, 'value', {
    set(value) {
      valuePropertyDescriptor.set.call(this, value);
      this.dispatchEvent(new CustomEvent('input'));
    },

    get: valuePropertyDescriptor.get,
    enumerable: true,
    configurable: true
  });
}

function getInputValuePropertyDescriptor(element) {
  return Object.getOwnPropertyDescriptor(Object.getPrototypeOf(element), 'value');
}

function setDecoratedDragonInputValueWithoutEvent(element, value) {
  const valuePropertyDescriptor = getInputValuePropertyDescriptor(element);
  return valuePropertyDescriptor.set.call(element, value);
}
/**
 * Escape HTML string
 * @param {String} html An html string
 * @returns {String} The escaped html string
 */

function escapeHTML(html) {
  return html.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#039;');
}
const BUTTON_GROUP_ORDER = {
  FIRST: 'first',
  MIDDLE: 'middle',
  LAST: 'last',
  ONLY: 'only'
};
/**
 * returns the SLDS class for the given group order
 * @param groupOrder
 * @returns {string}
 */

function buttonGroupOrderClass(groupOrder) {
  return {
    [BUTTON_GROUP_ORDER.FIRST]: 'slds-button_first',
    [BUTTON_GROUP_ORDER.MIDDLE]: 'slds-button_middle',
    [BUTTON_GROUP_ORDER.LAST]: 'slds-button_last',
    [BUTTON_GROUP_ORDER.ONLY]: 'single-button'
  }[groupOrder];
}
/**
 * Checks if the given component is native
 * @param {Object} cmp Component instance
 * @returns {Boolean} Whether the component is native
 */

function isNativeComponent(cmp) {
  if (cmp && cmp.template && cmp.template.constructor) {
    return !!String(cmp.template.constructor).match(/\[native code\]/);
  }

  return false;
}

/***/ }),

/***/ "./node_modules/lightning-base-components/src/lightning/utilsPrivate/videoUtils.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/lightning-base-components/src/lightning/utilsPrivate/videoUtils.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hasOnlyAllowedVideoIframes": () => (/* binding */ hasOnlyAllowedVideoIframes)
/* harmony export */ });
const ALLOWED_DOMAINS = new Set(['www.youtube.com', 'www.youtube-nocookie.com', 'www.youtube.ca', 'www.youtube.jp', 'www.youtube.com.br', 'www.youtube.co.uk', 'www.youtube.nl', 'www.youtube.pl', 'www.youtube.es', 'www.youtube.ie', 'www.youtube.fr', 'player.vimeo.com', 'play.vidyard.com', 'players.brightcove.net', 'bcove.video', 'player.cloudinary.com', 'fast.wistia.net', 'i1.adis.ws', 's1.adis.ws', 'scormanywhere.secure.force.com', 'appiniummastertrial.secure.force.com']);
function hasOnlyAllowedVideoIframes(htmlString) {
  if (htmlString && htmlString.indexOf('<iframe') > -1) {
    const parsedHtml = new DOMParser().parseFromString(htmlString, 'text/html');
    const iframesList = Array.prototype.slice.call(parsedHtml.querySelectorAll('iframe'));
    return iframesList.length > 0 && !iframesList.some(iframe => !isUrlAllowed(iframe.src));
  }

  return false;
}

function isUrlAllowed(url) {
  const anchor = document.createElement('a');
  anchor.href = url;
  return anchor.protocol === 'https:' && ALLOWED_DOMAINS.has(anchor.hostname);
}

/***/ }),

/***/ "./src/modules/my/app/app.css":
/*!************************************!*\
  !*** ./src/modules/my/app/app.css ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function stylesheet(useActualHostSelector, token) {
  var shadowSelector = token ? ("[" + token + "]") : "";
  var hostSelector = token ? ("[" + token + "-host]") : "";
  return [".body", shadowSelector, "{background-color: white;height: 100%;max-width: 100%;}button", shadowSelector, " {justify-content: center;align-items: center;padding: 5px 20px;gap: 8px;position: relative;color: #3f3e3e;border-color: #3f3e3e;border-radius: 4px;border-width: 1px;font-family: 'Arial';font-style: normal;font-weight: 600;font-size: 14px;}.body", shadowSelector, " textarea", shadowSelector, " {resize: none;height: 100%;}"].join('');
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([stylesheet]);

/***/ }),

/***/ "./src/modules/my/app/app.html":
/*!*************************************!*\
  !*** ./src/modules/my/app/app.html ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _app_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app.css */ "./src/modules/my/app/app.css");
/* harmony import */ var _app_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./app.scoped.css?scoped=true */ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true");
/* harmony import */ var lightning_input__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightning/input */ "./node_modules/lightning-base-components/src/lightning/input/input.js");
/* harmony import */ var lightning_layoutItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightning/layoutItem */ "./node_modules/lightning-base-components/src/lightning/layoutItem/layoutItem.js");
/* harmony import */ var lightning_layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lightning/layout */ "./node_modules/lightning-base-components/src/lightning/layout/layout.js");
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");








function tmpl($api, $cmp, $slotset, $ctx) {
  const {b: api_bind, t: api_text, h: api_element, c: api_custom_element} = $api;
  const {_m0, _m1, _m2, _m3, _m4, _m5, _m6} = $ctx;
  return [api_element("div", {
    classMap: {
      "slds-var-p-around_medium": true,
      "body": true
    },
    key: 0
  }, [api_element("div", {
    key: 1
  }, [api_element("button", {
    classMap: {
      "slds-var-m-around_xx-small": true
    },
    key: 2,
    on: {
      "click": _m0 || ($ctx._m0 = api_bind($cmp.beautifyJSON))
    }
  }, [api_element("span", {
    classMap: {
      "slds-var-m-horizontal_xx-small": true
    },
    key: 3
  }, [api_text("Beatify")])]), api_element("button", {
    classMap: {
      "slds-var-m-around_xx-small": true
    },
    key: 4,
    on: {
      "click": _m1 || ($ctx._m1 = api_bind($cmp.handleRemoveWhitespace))
    }
  }, [api_element("span", {
    classMap: {
      "slds-var-m-horizontal_xx-small": true
    },
    key: 5
  }, [api_text("Remove Whitespace")])]), api_element("button", {
    classMap: {
      "slds-var-m-around_xx-small": true
    },
    key: 6,
    on: {
      "click": _m2 || ($ctx._m2 = api_bind($cmp.convertJSONToCSV))
    }
  }, [api_element("span", {
    classMap: {
      "slds-var-m-horizontal_xx-small": true
    },
    key: 7
  }, [api_text("Convert to CSV")])]), api_element("button", {
    classMap: {
      "slds-var-m-around_xx-small": true
    },
    attrs: {
      "disabled": $cmp.isDisabledDownload ? "" : null
    },
    key: 8,
    on: {
      "click": _m3 || ($ctx._m3 = api_bind($cmp.downloadCSV))
    }
  }, [api_element("span", {
    classMap: {
      "slds-var-m-horizontal_xx-small": true
    },
    key: 9
  }, [api_text("Download CSV")])]), api_element("button", {
    classMap: {
      "slds-var-m-around_xx-small": true
    },
    key: 10,
    on: {
      "click": _m4 || ($ctx._m4 = api_bind($cmp.handleReset))
    }
  }, [api_element("span", {
    classMap: {
      "slds-var-m-horizontal_xx-small": true
    },
    key: 11
  }, [api_text("Reset")])])]), api_custom_element("lightning-input", lightning_input__WEBPACK_IMPORTED_MODULE_2__.default, {
    props: {
      "type": "text",
      "label": "csv File Name",
      "value": $cmp.fileName
    },
    key: 12,
    on: {
      "change": _m5 || ($ctx._m5 = api_bind($cmp.onFileNameChange))
    }
  }, []), api_custom_element("lightning-layout", lightning_layout__WEBPACK_IMPORTED_MODULE_4__.default, {
    props: {
      "multipleRows": true
    },
    key: 13
  }, [api_custom_element("lightning-layout-item", lightning_layoutItem__WEBPACK_IMPORTED_MODULE_3__.default, {
    props: {
      "size": "6",
      "padding": "around-small"
    },
    key: 14
  }, [api_element("textarea", {
    classMap: {
      "slds-textarea": true
    },
    attrs: {
      "data-id": "area1",
      "name": "JSON String",
      "rows": "30"
    },
    key: 15,
    on: {
      "change": _m6 || ($ctx._m6 = api_bind($cmp.handleJSONStringChange))
    }
  }, [])]), api_custom_element("lightning-layout-item", lightning_layoutItem__WEBPACK_IMPORTED_MODULE_3__.default, {
    props: {
      "size": "6",
      "padding": "around-small"
    },
    key: 16
  }, [api_element("textarea", {
    classMap: {
      "slds-textarea": true
    },
    attrs: {
      "data-id": "area2",
      "name": "CSV String",
      "disabled": "",
      "rows": "30"
    },
    key: 17
  }, [])])])])];
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_5__.registerTemplate)(tmpl));
tmpl.stylesheets = [];


if (_app_css__WEBPACK_IMPORTED_MODULE_0__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _app_css__WEBPACK_IMPORTED_MODULE_0__.default)
}
if (_app_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default) {
  tmpl.stylesheets.push.apply(tmpl.stylesheets, _app_scoped_css_scoped_true__WEBPACK_IMPORTED_MODULE_1__.default)
}
tmpl.stylesheetToken = "my-app_app"


/***/ }),

/***/ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js":
/*!********************************************************************!*\
  !*** ../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.__esModule = true;
exports.default = undefined;


/***/ }),

/***/ "../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true":
/*!********************************************************************************!*\
  !*** ../node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?scoped=true ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.__esModule = true;
exports.default = undefined;


/***/ }),

/***/ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* proxy-compat-disable */


Object.defineProperty(exports, "__esModule", ({ value: true }));

/**
 * Copyright (C) 2018 salesforce.com, inc.
 */
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function invariant(value, msg) {
    if (!value) {
        throw new Error(`Invariant Violation: ${msg}`);
    }
}
function isTrue$1(value, msg) {
    if (!value) {
        throw new Error(`Assert Violation: ${msg}`);
    }
}
function isFalse$1(value, msg) {
    if (value) {
        throw new Error(`Assert Violation: ${msg}`);
    }
}
function fail(msg) {
    throw new Error(msg);
}

var assert = /*#__PURE__*/Object.freeze({
    __proto__: null,
    invariant: invariant,
    isTrue: isTrue$1,
    isFalse: isFalse$1,
    fail: fail
});

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const { assign, create, defineProperties, defineProperty, freeze, getOwnPropertyDescriptor: getOwnPropertyDescriptor$1, getOwnPropertyNames: getOwnPropertyNames$1, getPrototypeOf: getPrototypeOf$1, hasOwnProperty: hasOwnProperty$1, isFrozen, keys, seal, setPrototypeOf, } = Object;
const { isArray: isArray$1 } = Array;
const { filter: ArrayFilter, find: ArrayFind, indexOf: ArrayIndexOf, join: ArrayJoin, map: ArrayMap, push: ArrayPush$1, reduce: ArrayReduce, reverse: ArrayReverse, slice: ArraySlice, splice: ArraySplice, unshift: ArrayUnshift, forEach, } = Array.prototype;
const { fromCharCode: StringFromCharCode } = String;
const { charCodeAt: StringCharCodeAt, replace: StringReplace, slice: StringSlice, toLowerCase: StringToLowerCase, } = String.prototype;
function isUndefined$1(obj) {
    return obj === undefined;
}
function isNull(obj) {
    return obj === null;
}
function isTrue(obj) {
    return obj === true;
}
function isFalse(obj) {
    return obj === false;
}
function isBoolean(obj) {
    return typeof obj === 'boolean';
}
function isFunction$1(obj) {
    return typeof obj === 'function';
}
function isObject(obj) {
    return typeof obj === 'object';
}
function isString(obj) {
    return typeof obj === 'string';
}
function isNumber(obj) {
    return typeof obj === 'number';
}
function noop() {
    /* Do nothing */
}
const OtS$1 = {}.toString;
function toString$1(obj) {
    if (obj && obj.toString) {
        // Arrays might hold objects with "null" prototype So using
        // Array.prototype.toString directly will cause an error Iterate through
        // all the items and handle individually.
        if (isArray$1(obj)) {
            return ArrayJoin.call(ArrayMap.call(obj, toString$1), ',');
        }
        return obj.toString();
    }
    else if (typeof obj === 'object') {
        return OtS$1.call(obj);
    }
    else {
        return obj + '';
    }
}
function getPropertyDescriptor(o, p) {
    do {
        const d = getOwnPropertyDescriptor$1(o, p);
        if (!isUndefined$1(d)) {
            return d;
        }
        o = getPrototypeOf$1(o);
    } while (o !== null);
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
/**
 * According to the following list, there are 48 aria attributes of which two (ariaDropEffect and
 * ariaGrabbed) are deprecated:
 * https://www.w3.org/TR/wai-aria-1.1/#x6-6-definitions-of-states-and-properties-all-aria-attributes
 *
 * The above list of 46 aria attributes is consistent with the following resources:
 * https://github.com/w3c/aria/pull/708/files#diff-eacf331f0ffc35d4b482f1d15a887d3bR11060
 * https://wicg.github.io/aom/spec/aria-reflection.html
 */
const AriaPropertyNames = [
    'ariaActiveDescendant',
    'ariaAtomic',
    'ariaAutoComplete',
    'ariaBusy',
    'ariaChecked',
    'ariaColCount',
    'ariaColIndex',
    'ariaColSpan',
    'ariaControls',
    'ariaCurrent',
    'ariaDescribedBy',
    'ariaDetails',
    'ariaDisabled',
    'ariaErrorMessage',
    'ariaExpanded',
    'ariaFlowTo',
    'ariaHasPopup',
    'ariaHidden',
    'ariaInvalid',
    'ariaKeyShortcuts',
    'ariaLabel',
    'ariaLabelledBy',
    'ariaLevel',
    'ariaLive',
    'ariaModal',
    'ariaMultiLine',
    'ariaMultiSelectable',
    'ariaOrientation',
    'ariaOwns',
    'ariaPlaceholder',
    'ariaPosInSet',
    'ariaPressed',
    'ariaReadOnly',
    'ariaRelevant',
    'ariaRequired',
    'ariaRoleDescription',
    'ariaRowCount',
    'ariaRowIndex',
    'ariaRowSpan',
    'ariaSelected',
    'ariaSetSize',
    'ariaSort',
    'ariaValueMax',
    'ariaValueMin',
    'ariaValueNow',
    'ariaValueText',
    'role',
];
const { AriaAttrNameToPropNameMap, AriaPropNameToAttrNameMap } = /*@__PURE__*/ (() => {
    const AriaAttrNameToPropNameMap = create(null);
    const AriaPropNameToAttrNameMap = create(null);
    // Synthetic creation of all AOM property descriptors for Custom Elements
    forEach.call(AriaPropertyNames, (propName) => {
        const attrName = StringToLowerCase.call(StringReplace.call(propName, /^aria/, () => 'aria-'));
        AriaAttrNameToPropNameMap[attrName] = propName;
        AriaPropNameToAttrNameMap[propName] = attrName;
    });
    return { AriaAttrNameToPropNameMap, AriaPropNameToAttrNameMap };
})();

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
// Inspired from: https://mathiasbynens.be/notes/globalthis
const _globalThis = /*@__PURE__*/ (function () {
    // On recent browsers, `globalThis` is already defined. In this case return it directly.
    if (typeof globalThis === 'object') {
        return globalThis;
    }
    let _globalThis;
    try {
        // eslint-disable-next-line no-extend-native
        Object.defineProperty(Object.prototype, '__magic__', {
            get: function () {
                return this;
            },
            configurable: true,
        });
        // __magic__ is undefined in Safari 10 and IE10 and older.
        // @ts-ignore
        // eslint-disable-next-line no-undef
        _globalThis = __magic__;
        // @ts-ignore
        delete Object.prototype.__magic__;
    }
    catch (ex) {
        // In IE8, Object.defineProperty only works on DOM objects.
    }
    finally {
        // If the magic above fails for some reason we assume that we are in a legacy browser.
        // Assume `window` exists in this case.
        if (typeof _globalThis === 'undefined') {
            // @ts-ignore
            _globalThis = window;
        }
    }
    return _globalThis;
})();

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const KEY__IS_NATIVE_SHADOW_ROOT_DEFINED = '$isNativeShadowRootDefined$';
const KEY__SHADOW_RESOLVER = '$shadowResolver$';
const KEY__SHADOW_TOKEN = '$shadowToken$';
const KEY__SYNTHETIC_MODE = '$$lwc-synthetic-mode';
const KEY__SCOPED_CSS = '$scoped$';
/**
 * Map composed of properties to attributes not following the HTML property to attribute mapping
 * convention.
 */
const NO_STANDARD_PROPERTY_ATTRIBUTE_MAPPING = new Map([
    ['accessKey', 'accesskey'],
    ['readOnly', 'readonly'],
    ['tabIndex', 'tabindex'],
    ['bgColor', 'bgcolor'],
    ['colSpan', 'colspan'],
    ['rowSpan', 'rowspan'],
    ['contentEditable', 'contenteditable'],
    ['crossOrigin', 'crossorigin'],
    ['dateTime', 'datetime'],
    ['formAction', 'formaction'],
    ['isMap', 'ismap'],
    ['maxLength', 'maxlength'],
    ['minLength', 'minlength'],
    ['noValidate', 'novalidate'],
    ['useMap', 'usemap'],
    ['htmlFor', 'for'],
]);
/**
 * Map associating previously transformed HTML property into HTML attribute.
 */
const CACHED_PROPERTY_ATTRIBUTE_MAPPING = new Map();
function htmlPropertyToAttribute(propName) {
    const ariaAttributeName = AriaPropNameToAttrNameMap[propName];
    if (!isUndefined$1(ariaAttributeName)) {
        return ariaAttributeName;
    }
    const specialAttributeName = NO_STANDARD_PROPERTY_ATTRIBUTE_MAPPING.get(propName);
    if (!isUndefined$1(specialAttributeName)) {
        return specialAttributeName;
    }
    const cachedAttributeName = CACHED_PROPERTY_ATTRIBUTE_MAPPING.get(propName);
    if (!isUndefined$1(cachedAttributeName)) {
        return cachedAttributeName;
    }
    let attributeName = '';
    for (let i = 0, len = propName.length; i < len; i++) {
        const code = StringCharCodeAt.call(propName, i);
        if (code >= 65 && // "A"
            code <= 90 // "Z"
        ) {
            attributeName += '-' + StringFromCharCode(code + 32);
        }
        else {
            attributeName += StringFromCharCode(code);
        }
    }
    CACHED_PROPERTY_ATTRIBUTE_MAPPING.set(propName, attributeName);
    return attributeName;
}
/** version: 2.5.13 */

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function detect(propName) {
    return Object.getOwnPropertyDescriptor(Element.prototype, propName) === undefined;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const nodeToAriaPropertyValuesMap = new WeakMap();
function getAriaPropertyMap(elm) {
    let map = nodeToAriaPropertyValuesMap.get(elm);
    if (map === undefined) {
        map = {};
        nodeToAriaPropertyValuesMap.set(elm, map);
    }
    return map;
}
function getNormalizedAriaPropertyValue(value) {
    return value == null ? null : String(value);
}
function createAriaPropertyPropertyDescriptor(propName, attrName) {
    return {
        get() {
            const map = getAriaPropertyMap(this);
            if (hasOwnProperty$1.call(map, propName)) {
                return map[propName];
            }
            // otherwise just reflect what's in the attribute
            return this.hasAttribute(attrName) ? this.getAttribute(attrName) : null;
        },
        set(newValue) {
            const normalizedValue = getNormalizedAriaPropertyValue(newValue);
            const map = getAriaPropertyMap(this);
            map[propName] = normalizedValue;
            // reflect into the corresponding attribute
            if (newValue === null) {
                this.removeAttribute(attrName);
            }
            else {
                this.setAttribute(attrName, newValue);
            }
        },
        configurable: true,
        enumerable: true,
    };
}
function patch(propName) {
    // Typescript is inferring the wrong function type for this particular
    // overloaded method: https://github.com/Microsoft/TypeScript/issues/27972
    // @ts-ignore type-mismatch
    const attrName = AriaPropNameToAttrNameMap[propName];
    const descriptor = createAriaPropertyPropertyDescriptor(propName, attrName);
    Object.defineProperty(Element.prototype, propName, descriptor);
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const ElementPrototypeAriaPropertyNames = keys(AriaPropNameToAttrNameMap);
for (let i = 0, len = ElementPrototypeAriaPropertyNames.length; i < len; i += 1) {
    const propName = ElementPrototypeAriaPropertyNames[i];
    if (detect(propName)) {
        patch(propName);
    }
}

/**
 * Copyright (C) 2018 salesforce.com, inc.
 */

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const features = {
    ENABLE_REACTIVE_SETTER: null,
    ENABLE_HMR: null,
    ENABLE_INNER_OUTER_TEXT_PATCH: null,
    ENABLE_ELEMENT_PATCH: null,
    ENABLE_FORCE_NATIVE_SHADOW_MODE_FOR_TEST: null,
    ENABLE_NODE_LIST_PATCH: null,
    ENABLE_HTML_COLLECTIONS_PATCH: null,
    ENABLE_NODE_PATCH: null,
    ENABLE_NON_COMPOSED_EVENTS_LEAKAGE: null,
    ENABLE_MIXED_SHADOW_MODE: null,
    ENABLE_WIRE_SYNC_EMIT: null,
};
if (!_globalThis.lwcRuntimeFlags) {
    Object.defineProperty(_globalThis, 'lwcRuntimeFlags', { value: create(null) });
}
const runtimeFlags = _globalThis.lwcRuntimeFlags;
/**
 * Set the value at runtime of a given feature flag. This method only be invoked once per feature
 * flag. It is meant to be used during the app initialization.
 */
function setFeatureFlag(name, value) {
    if (!isBoolean(value)) {
        const message = `Failed to set the value "${value}" for the runtime feature flag "${name}". Runtime feature flags can only be set to a boolean value.`;
        if (undefined !== 'production') {
            throw new TypeError(message);
        }
        else {
            // eslint-disable-next-line no-console
            console.error(message);
            return;
        }
    }
    if (isUndefined$1(features[name])) {
        const availableFlags = keys(features)
            .map((name) => `"${name}"`)
            .join(', ');
        // eslint-disable-next-line no-console
        console.warn(`Failed to set the value "${value}" for the runtime feature flag "${name}" because it is undefined. Available flags: ${availableFlags}.`);
        return;
    }
    if (undefined !== 'production') {
        // Allow the same flag to be set more than once outside of production to enable testing
        runtimeFlags[name] = value;
    }
    else {
        // Disallow the same flag to be set more than once in production
        const runtimeValue = runtimeFlags[name];
        if (!isUndefined$1(runtimeValue)) {
            // eslint-disable-next-line no-console
            console.error(`Failed to set the value "${value}" for the runtime feature flag "${name}". "${name}" has already been set with the value "${runtimeValue}".`);
            return;
        }
        defineProperty(runtimeFlags, name, { value });
    }
}
/**
 * Set the value at runtime of a given feature flag. This method should only be used for testing
 * purposes. It is a no-op when invoked in production mode.
 */
function setFeatureFlagForTest(name, value) {
    if (undefined !== 'production') {
        setFeatureFlag(name, value);
    }
}
/** version: 2.5.13 */

/* proxy-compat-disable */

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
let nextTickCallbackQueue = [];
const SPACE_CHAR = 32;
const EmptyObject = seal(create(null));
const EmptyArray = seal([]);

function flushCallbackQueue() {
  if (undefined !== 'production') {
    if (nextTickCallbackQueue.length === 0) {
      throw new Error(`Internal Error: If callbackQueue is scheduled, it is because there must be at least one callback on this pending queue.`);
    }
  }

  const callbacks = nextTickCallbackQueue;
  nextTickCallbackQueue = []; // reset to a new queue

  for (let i = 0, len = callbacks.length; i < len; i += 1) {
    callbacks[i]();
  }
}

function addCallbackToNextTick(callback) {
  if (undefined !== 'production') {
    if (!isFunction$1(callback)) {
      throw new Error(`Internal Error: addCallbackToNextTick() can only accept a function callback`);
    }
  }

  if (nextTickCallbackQueue.length === 0) {
    Promise.resolve().then(flushCallbackQueue);
  }

  ArrayPush$1.call(nextTickCallbackQueue, callback);
}
function guid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
  }

  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
} // Borrowed from Vue template compiler.
// https://github.com/vuejs/vue/blob/531371b818b0e31a989a06df43789728f23dc4e8/src/platforms/web/util/style.js#L5-L16

const DECLARATION_DELIMITER = /;(?![^(]*\))/g;
const PROPERTY_DELIMITER = /:(.+)/;
function parseStyleText(cssText) {
  const styleMap = {};
  const declarations = cssText.split(DECLARATION_DELIMITER);

  for (const declaration of declarations) {
    if (declaration) {
      const [prop, value] = declaration.split(PROPERTY_DELIMITER);

      if (prop !== undefined && value !== undefined) {
        styleMap[prop.trim()] = value.trim();
      }
    }
  }

  return styleMap;
}

/*
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const TargetToReactiveRecordMap = new WeakMap();

function getReactiveRecord(target) {
  let reactiveRecord = TargetToReactiveRecordMap.get(target);

  if (isUndefined$1(reactiveRecord)) {
    const newRecord = create(null);
    reactiveRecord = newRecord;
    TargetToReactiveRecordMap.set(target, newRecord);
  }

  return reactiveRecord;
}

let currentReactiveObserver = null;
function valueMutated(target, key) {
  const reactiveRecord = TargetToReactiveRecordMap.get(target);

  if (!isUndefined$1(reactiveRecord)) {
    const reactiveObservers = reactiveRecord[key];

    if (!isUndefined$1(reactiveObservers)) {
      for (let i = 0, len = reactiveObservers.length; i < len; i += 1) {
        const ro = reactiveObservers[i];
        ro.notify();
      }
    }
  }
}
function valueObserved(target, key) {
  // We should determine if an active Observing Record is present to track mutations.
  if (currentReactiveObserver === null) {
    return;
  }

  const ro = currentReactiveObserver;
  const reactiveRecord = getReactiveRecord(target);
  let reactiveObservers = reactiveRecord[key];

  if (isUndefined$1(reactiveObservers)) {
    reactiveObservers = [];
    reactiveRecord[key] = reactiveObservers;
  } else if (reactiveObservers[0] === ro) {
    return; // perf optimization considering that most subscriptions will come from the same record
  }

  if (ArrayIndexOf.call(reactiveObservers, ro) === -1) {
    ro.link(reactiveObservers);
  }
}
class ReactiveObserver {
  constructor(callback) {
    this.listeners = [];
    this.callback = callback;
  }

  observe(job) {
    const inceptionReactiveRecord = currentReactiveObserver;
    currentReactiveObserver = this;
    let error;

    try {
      job();
    } catch (e) {
      error = Object(e);
    } finally {
      currentReactiveObserver = inceptionReactiveRecord;

      if (error !== undefined) {
        throw error; // eslint-disable-line no-unsafe-finally
      }
    }
  }
  /**
   * This method is responsible for disconnecting the Reactive Observer
   * from any Reactive Record that has a reference to it, to prevent future
   * notifications about previously recorded access.
   */


  reset() {
    const {
      listeners
    } = this;
    const len = listeners.length;

    if (len > 0) {
      for (let i = 0; i < len; i += 1) {
        const set = listeners[i];
        const pos = ArrayIndexOf.call(listeners[i], this);
        ArraySplice.call(set, pos, 1);
      }

      listeners.length = 0;
    }
  } // friend methods


  notify() {
    this.callback.call(undefined, this);
  }

  link(reactiveObservers) {
    ArrayPush$1.call(reactiveObservers, this); // we keep track of observing records where the observing record was added to so we can do some clean up later on

    ArrayPush$1.call(this.listeners, reactiveObservers);
  }

}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function componentValueMutated(vm, key) {
  valueMutated(vm.component, key);
}
function componentValueObserved(vm, key) {
  valueObserved(vm.component, key);
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function getComponentTag(vm) {
  return `<${StringToLowerCase.call(vm.tagName)}>`;
} // TODO [#1695]: Unify getComponentStack and getErrorComponentStack

function getComponentStack(vm) {
  const stack = [];
  let prefix = '';

  while (!isNull(vm.owner)) {
    ArrayPush$1.call(stack, prefix + getComponentTag(vm));
    vm = vm.owner;
    prefix += '\t';
  }

  return ArrayJoin.call(stack, '\n');
}
function getErrorComponentStack(vm) {
  const wcStack = [];
  let currentVm = vm;

  while (!isNull(currentVm)) {
    ArrayPush$1.call(wcStack, getComponentTag(currentVm));
    currentVm = currentVm.owner;
  }

  return wcStack.reverse().join('\n\t');
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function log(method, message, vm) {
  let msg = `[LWC ${method}]: ${message}`;

  if (!isUndefined$1(vm)) {
    msg = `${msg}\n${getComponentStack(vm)}`;
  }

  if (undefined === 'test') {
    /* eslint-disable-next-line no-console */
    console[method](msg);
    return;
  }

  try {
    throw new Error(msg);
  } catch (e) {
    /* eslint-disable-next-line no-console */
    console[method](e);
  }
}

function logError(message, vm) {
  log('error', message, vm);
}
function logWarn(message, vm) {
  log('warn', message, vm);
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function handleEvent(event, vnode) {
  const {
    type
  } = event;
  const {
    data: {
      on
    }
  } = vnode;
  const handler = on && on[type]; // call event handler if exists

  if (handler) {
    handler.call(undefined, event);
  }
}

function createListener() {
  return function handler(event) {
    handleEvent(event, handler.vnode);
  };
}

function updateAllEventListeners(oldVnode, vnode) {
  if (isUndefined$1(oldVnode.listener)) {
    createAllEventListeners(vnode);
  } else {
    vnode.listener = oldVnode.listener;
    vnode.listener.vnode = vnode;
  }
}

function createAllEventListeners(vnode) {
  const {
    elm,
    data: {
      on
    },
    owner: {
      renderer
    }
  } = vnode;

  if (isUndefined$1(on)) {
    return;
  }

  const listener = vnode.listener = createListener();
  listener.vnode = vnode;
  let name;

  for (name in on) {
    renderer.addEventListener(elm, name, listener);
  }
}

var modEvents = {
  update: updateAllEventListeners,
  create: createAllEventListeners
};

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

const defaultDefHTMLPropertyNames = ['accessKey', 'dir', 'draggable', 'hidden', 'id', 'lang', 'spellcheck', 'tabIndex', 'title'];

function offsetPropertyErrorMessage(name) {
  return `Using the \`${name}\` property is an anti-pattern because it rounds the value to an integer. Instead, use the \`getBoundingClientRect\` method to obtain fractional values for the size of an element and its position relative to the viewport.`;
} // Global HTML Attributes & Properties
// https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes
// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement


const globalHTMLProperties = assign(create(null), {
  accessKey: {
    attribute: 'accesskey'
  },
  accessKeyLabel: {
    readOnly: true
  },
  className: {
    attribute: 'class',
    error: 'Using the `className` property is an anti-pattern because of slow runtime behavior and potential conflicts with classes provided by the owner element. Use the `classList` API instead.'
  },
  contentEditable: {
    attribute: 'contenteditable'
  },
  dataset: {
    readOnly: true,
    error: "Using the `dataset` property is an anti-pattern because it can't be statically analyzed. Expose each property individually using the `@api` decorator instead."
  },
  dir: {
    attribute: 'dir'
  },
  draggable: {
    attribute: 'draggable'
  },
  dropzone: {
    attribute: 'dropzone',
    readOnly: true
  },
  hidden: {
    attribute: 'hidden'
  },
  id: {
    attribute: 'id'
  },
  inputMode: {
    attribute: 'inputmode'
  },
  lang: {
    attribute: 'lang'
  },
  slot: {
    attribute: 'slot',
    error: 'Using the `slot` property is an anti-pattern.'
  },
  spellcheck: {
    attribute: 'spellcheck'
  },
  style: {
    attribute: 'style'
  },
  tabIndex: {
    attribute: 'tabindex'
  },
  title: {
    attribute: 'title'
  },
  translate: {
    attribute: 'translate'
  },
  // additional "global attributes" that are not present in the link above.
  isContentEditable: {
    readOnly: true
  },
  offsetHeight: {
    readOnly: true,
    error: offsetPropertyErrorMessage('offsetHeight')
  },
  offsetLeft: {
    readOnly: true,
    error: offsetPropertyErrorMessage('offsetLeft')
  },
  offsetParent: {
    readOnly: true
  },
  offsetTop: {
    readOnly: true,
    error: offsetPropertyErrorMessage('offsetTop')
  },
  offsetWidth: {
    readOnly: true,
    error: offsetPropertyErrorMessage('offsetWidth')
  },
  role: {
    attribute: 'role'
  }
});
let controlledElement = null;
let controlledAttributeName;
function isAttributeLocked(elm, attrName) {
  return elm !== controlledElement || attrName !== controlledAttributeName;
}
function lockAttribute(_elm, _key) {
  controlledElement = null;
  controlledAttributeName = undefined;
}
function unlockAttribute(elm, key) {
  controlledElement = elm;
  controlledAttributeName = key;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const xlinkNS = 'http://www.w3.org/1999/xlink';
const xmlNS = 'http://www.w3.org/XML/1998/namespace';
const ColonCharCode = 58;

function updateAttrs(oldVnode, vnode) {
  const {
    data: {
      attrs
    },
    owner: {
      renderer
    }
  } = vnode;

  if (isUndefined$1(attrs)) {
    return;
  }

  let {
    data: {
      attrs: oldAttrs
    }
  } = oldVnode;

  if (oldAttrs === attrs) {
    return;
  }

  if (undefined !== 'production') {
    assert.invariant(isUndefined$1(oldAttrs) || keys(oldAttrs).join(',') === keys(attrs).join(','), `vnode.data.attrs cannot change shape.`);
  }

  const elm = vnode.elm;
  const {
    setAttribute,
    removeAttribute
  } = renderer;
  let key;
  oldAttrs = isUndefined$1(oldAttrs) ? EmptyObject : oldAttrs; // update modified attributes, add new attributes
  // this routine is only useful for data-* attributes in all kind of elements
  // and aria-* in standard elements (custom elements will use props for these)

  for (key in attrs) {
    const cur = attrs[key];
    const old = oldAttrs[key];

    if (old !== cur) {
      unlockAttribute(elm, key);

      if (StringCharCodeAt.call(key, 3) === ColonCharCode) {
        // Assume xml namespace
        setAttribute(elm, key, cur, xmlNS);
      } else if (StringCharCodeAt.call(key, 5) === ColonCharCode) {
        // Assume xlink namespace
        setAttribute(elm, key, cur, xlinkNS);
      } else if (isNull(cur)) {
        removeAttribute(elm, key);
      } else {
        setAttribute(elm, key, cur);
      }

      lockAttribute();
    }
  }
}

const emptyVNode$3 = {
  data: {}
};
var modAttrs = {
  create: vnode => updateAttrs(emptyVNode$3, vnode),
  update: updateAttrs
};

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function isLiveBindingProp(sel, key) {
  // For properties with live bindings, we read values from the DOM element
  // instead of relying on internally tracked values.
  return sel === 'input' && (key === 'value' || key === 'checked');
}

function update(oldVnode, vnode) {
  const props = vnode.data.props;

  if (isUndefined$1(props)) {
    return;
  }

  const oldProps = oldVnode.data.props;

  if (oldProps === props) {
    return;
  }

  if (undefined !== 'production') {
    assert.invariant(isUndefined$1(oldProps) || keys(oldProps).join(',') === keys(props).join(','), 'vnode.data.props cannot change shape.');
  }

  const isFirstPatch = isUndefined$1(oldProps);
  const {
    elm,
    sel,
    owner: {
      renderer
    }
  } = vnode;

  for (const key in props) {
    const cur = props[key]; // if it is the first time this element is patched, or the current value is different to the previous value...

    if (isFirstPatch || cur !== (isLiveBindingProp(sel, key) ? renderer.getProperty(elm, key) : oldProps[key])) {
      renderer.setProperty(elm, key, cur);
    }
  }
}

const emptyVNode$2 = {
  data: {}
};
var modProps = {
  create: vnode => update(emptyVNode$2, vnode),
  update
};

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const classNameToClassMap = create(null);

function getMapFromClassName(className) {
  // Intentionally using == to match undefined and null values from computed style attribute
  if (className == null) {
    return EmptyObject;
  } // computed class names must be string


  className = isString(className) ? className : className + '';
  let map = classNameToClassMap[className];

  if (map) {
    return map;
  }

  map = create(null);
  let start = 0;
  let o;
  const len = className.length;

  for (o = 0; o < len; o++) {
    if (StringCharCodeAt.call(className, o) === SPACE_CHAR) {
      if (o > start) {
        map[StringSlice.call(className, start, o)] = true;
      }

      start = o + 1;
    }
  }

  if (o > start) {
    map[StringSlice.call(className, start, o)] = true;
  }

  classNameToClassMap[className] = map;

  if (undefined !== 'production') {
    // just to make sure that this object never changes as part of the diffing algo
    freeze(map);
  }

  return map;
}

function updateClassAttribute(oldVnode, vnode) {
  const {
    elm,
    data: {
      className: newClass
    },
    owner: {
      renderer
    }
  } = vnode;
  const {
    data: {
      className: oldClass
    }
  } = oldVnode;

  if (oldClass === newClass) {
    return;
  }

  const classList = renderer.getClassList(elm);
  const newClassMap = getMapFromClassName(newClass);
  const oldClassMap = getMapFromClassName(oldClass);
  let name;

  for (name in oldClassMap) {
    // remove only if it is not in the new class collection and it is not set from within the instance
    if (isUndefined$1(newClassMap[name])) {
      classList.remove(name);
    }
  }

  for (name in newClassMap) {
    if (isUndefined$1(oldClassMap[name])) {
      classList.add(name);
    }
  }
}

const emptyVNode$1 = {
  data: {}
};
var modComputedClassName = {
  create: vnode => updateClassAttribute(emptyVNode$1, vnode),
  update: updateClassAttribute
};

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function updateStyleAttribute(oldVnode, vnode) {
  const {
    elm,
    data: {
      style: newStyle
    },
    owner: {
      renderer
    }
  } = vnode;
  const {
    setAttribute,
    removeAttribute
  } = renderer;

  if (oldVnode.data.style === newStyle) {
    return;
  }

  if (!isString(newStyle) || newStyle === '') {
    removeAttribute(elm, 'style');
  } else {
    setAttribute(elm, 'style', newStyle);
  }
}

const emptyVNode = {
  data: {}
};
var modComputedStyle = {
  create: vnode => updateStyleAttribute(emptyVNode, vnode),
  update: updateStyleAttribute
};

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
// The compiler takes care of transforming the inline classnames into an object. It's faster to set the
// different classnames properties individually instead of via a string.

function createClassAttribute(vnode) {
  const {
    elm,
    data: {
      classMap
    },
    owner: {
      renderer
    }
  } = vnode;

  if (isUndefined$1(classMap)) {
    return;
  }

  const classList = renderer.getClassList(elm);

  for (const name in classMap) {
    classList.add(name);
  }
}

var modStaticClassName = {
  create: createClassAttribute
};

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
// The compiler takes care of transforming the inline style into an object. It's faster to set the
// different style properties individually instead of via a string.

function createStyleAttribute(vnode) {
  const {
    elm,
    data: {
      styleDecls
    },
    owner: {
      renderer
    }
  } = vnode;

  if (isUndefined$1(styleDecls)) {
    return;
  }

  for (let i = 0; i < styleDecls.length; i++) {
    const [prop, value, important] = styleDecls[i];
    renderer.setCSSStyleProperty(elm, prop, value, important);
  }
}

var modStaticStyle = {
  create: createStyleAttribute
};

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

/**
@license
Copyright (c) 2015 Simon Friis Vindum.
This code may only be used under the MIT License found at
https://github.com/snabbdom/snabbdom/blob/master/LICENSE
Code distributed by Snabbdom as part of the Snabbdom project at
https://github.com/snabbdom/snabbdom/
*/
function isUndef(s) {
  return s === undefined;
}

function sameVnode(vnode1, vnode2) {
  return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;
}

function isVNode(vnode) {
  return vnode != null;
}

function createKeyToOldIdx(children, beginIdx, endIdx) {
  const map = {};
  let j, key, ch; // TODO [#1637]: simplify this by assuming that all vnodes has keys

  for (j = beginIdx; j <= endIdx; ++j) {
    ch = children[j];

    if (isVNode(ch)) {
      key = ch.key;

      if (key !== undefined) {
        map[key] = j;
      }
    }
  }

  return map;
}

function addVnodes(parentElm, before, vnodes, startIdx, endIdx) {
  for (; startIdx <= endIdx; ++startIdx) {
    const ch = vnodes[startIdx];

    if (isVNode(ch)) {
      ch.hook.create(ch);
      ch.hook.insert(ch, parentElm, before);
    }
  }
}

function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
  for (; startIdx <= endIdx; ++startIdx) {
    const ch = vnodes[startIdx]; // text nodes do not have logic associated to them

    if (isVNode(ch)) {
      ch.hook.remove(ch, parentElm);
    }
  }
}

function updateDynamicChildren(parentElm, oldCh, newCh) {
  let oldStartIdx = 0;
  let newStartIdx = 0;
  let oldEndIdx = oldCh.length - 1;
  let oldStartVnode = oldCh[0];
  let oldEndVnode = oldCh[oldEndIdx];
  const newChEnd = newCh.length - 1;
  let newEndIdx = newChEnd;
  let newStartVnode = newCh[0];
  let newEndVnode = newCh[newEndIdx];
  let oldKeyToIdx;
  let idxInOld;
  let elmToMove;
  let before;

  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
    if (!isVNode(oldStartVnode)) {
      oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left
    } else if (!isVNode(oldEndVnode)) {
      oldEndVnode = oldCh[--oldEndIdx];
    } else if (!isVNode(newStartVnode)) {
      newStartVnode = newCh[++newStartIdx];
    } else if (!isVNode(newEndVnode)) {
      newEndVnode = newCh[--newEndIdx];
    } else if (sameVnode(oldStartVnode, newStartVnode)) {
      patchVnode(oldStartVnode, newStartVnode);
      oldStartVnode = oldCh[++oldStartIdx];
      newStartVnode = newCh[++newStartIdx];
    } else if (sameVnode(oldEndVnode, newEndVnode)) {
      patchVnode(oldEndVnode, newEndVnode);
      oldEndVnode = oldCh[--oldEndIdx];
      newEndVnode = newCh[--newEndIdx];
    } else if (sameVnode(oldStartVnode, newEndVnode)) {
      // Vnode moved right
      patchVnode(oldStartVnode, newEndVnode);
      newEndVnode.hook.move(oldStartVnode, parentElm, oldEndVnode.owner.renderer.nextSibling(oldEndVnode.elm));
      oldStartVnode = oldCh[++oldStartIdx];
      newEndVnode = newCh[--newEndIdx];
    } else if (sameVnode(oldEndVnode, newStartVnode)) {
      // Vnode moved left
      patchVnode(oldEndVnode, newStartVnode);
      newStartVnode.hook.move(oldEndVnode, parentElm, oldStartVnode.elm);
      oldEndVnode = oldCh[--oldEndIdx];
      newStartVnode = newCh[++newStartIdx];
    } else {
      if (oldKeyToIdx === undefined) {
        oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
      }

      idxInOld = oldKeyToIdx[newStartVnode.key];

      if (isUndef(idxInOld)) {
        // New element
        newStartVnode.hook.create(newStartVnode);
        newStartVnode.hook.insert(newStartVnode, parentElm, oldStartVnode.elm);
        newStartVnode = newCh[++newStartIdx];
      } else {
        elmToMove = oldCh[idxInOld];

        if (isVNode(elmToMove)) {
          if (elmToMove.sel !== newStartVnode.sel) {
            // New element
            newStartVnode.hook.create(newStartVnode);
            newStartVnode.hook.insert(newStartVnode, parentElm, oldStartVnode.elm);
          } else {
            patchVnode(elmToMove, newStartVnode);
            oldCh[idxInOld] = undefined;
            newStartVnode.hook.move(elmToMove, parentElm, oldStartVnode.elm);
          }
        }

        newStartVnode = newCh[++newStartIdx];
      }
    }
  }

  if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {
    if (oldStartIdx > oldEndIdx) {
      // There's some cases in which the sub array of vnodes to be inserted is followed by null(s) and an
      // already processed vnode, in such cases the vnodes to be inserted should be before that processed vnode.
      let i = newEndIdx;
      let n;

      do {
        n = newCh[++i];
      } while (!isVNode(n) && i < newChEnd);

      before = isVNode(n) ? n.elm : null;
      addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx);
    } else {
      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
    }
  }
}
function updateStaticChildren(parentElm, oldCh, newCh) {
  const oldChLength = oldCh.length;
  const newChLength = newCh.length;

  if (oldChLength === 0) {
    // the old list is empty, we can directly insert anything new
    addVnodes(parentElm, null, newCh, 0, newChLength);
    return;
  }

  if (newChLength === 0) {
    // the old list is nonempty and the new list is empty so we can directly remove all old nodes
    // this is the case in which the dynamic children of an if-directive should be removed
    removeVnodes(parentElm, oldCh, 0, oldChLength);
    return;
  } // if the old list is not empty, the new list MUST have the same
  // amount of nodes, that's why we call this static children


  let referenceElm = null;

  for (let i = newChLength - 1; i >= 0; i -= 1) {
    const vnode = newCh[i];
    const oldVNode = oldCh[i];

    if (vnode !== oldVNode) {
      if (isVNode(oldVNode)) {
        if (isVNode(vnode)) {
          // both vnodes must be equivalent, and se just need to patch them
          patchVnode(oldVNode, vnode);
          referenceElm = vnode.elm;
        } else {
          // removing the old vnode since the new one is null
          oldVNode.hook.remove(oldVNode, parentElm);
        }
      } else if (isVNode(vnode)) {
        // this condition is unnecessary
        vnode.hook.create(vnode); // insert the new node one since the old one is null

        vnode.hook.insert(vnode, parentElm, referenceElm);
        referenceElm = vnode.elm;
      }
    }
  }
}

function patchVnode(oldVnode, vnode) {
  if (oldVnode !== vnode) {
    vnode.elm = oldVnode.elm;
    vnode.hook.update(oldVnode, vnode);
  }
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function generateDataDescriptor(options) {
  return assign({
    configurable: true,
    enumerable: true,
    writable: true
  }, options);
}

function generateAccessorDescriptor(options) {
  return assign({
    configurable: true,
    enumerable: true
  }, options);
}

let isDomMutationAllowed = false;
function unlockDomMutation() {
  if (undefined === 'production') {
    // this method should never leak to prod
    throw new ReferenceError();
  }

  isDomMutationAllowed = true;
}
function lockDomMutation() {
  if (undefined === 'production') {
    // this method should never leak to prod
    throw new ReferenceError();
  }

  isDomMutationAllowed = false;
}

function logMissingPortalError(name, type) {
  return logError(`The \`${name}\` ${type} is available only on elements that use the \`lwc:dom="manual"\` directive.`);
}

function patchElementWithRestrictions(elm, options) {
  if (undefined === 'production') {
    // this method should never leak to prod
    throw new ReferenceError();
  }

  const originalOuterHTMLDescriptor = getPropertyDescriptor(elm, 'outerHTML');
  const descriptors = {
    outerHTML: generateAccessorDescriptor({
      get() {
        return originalOuterHTMLDescriptor.get.call(this);
      },

      set(_value) {
        throw new TypeError(`Invalid attempt to set outerHTML on Element.`);
      }

    })
  }; // Apply extra restriction related to DOM manipulation if the element is not a portal.

  if (!options.isLight && !options.isPortal) {
    const {
      appendChild,
      insertBefore,
      removeChild,
      replaceChild
    } = elm;
    const originalNodeValueDescriptor = getPropertyDescriptor(elm, 'nodeValue');
    const originalInnerHTMLDescriptor = getPropertyDescriptor(elm, 'innerHTML');
    const originalTextContentDescriptor = getPropertyDescriptor(elm, 'textContent');
    assign(descriptors, {
      appendChild: generateDataDescriptor({
        value(aChild) {
          logMissingPortalError('appendChild', 'method');
          return appendChild.call(this, aChild);
        }

      }),
      insertBefore: generateDataDescriptor({
        value(newNode, referenceNode) {
          if (!isDomMutationAllowed) {
            logMissingPortalError('insertBefore', 'method');
          }

          return insertBefore.call(this, newNode, referenceNode);
        }

      }),
      removeChild: generateDataDescriptor({
        value(aChild) {
          if (!isDomMutationAllowed) {
            logMissingPortalError('removeChild', 'method');
          }

          return removeChild.call(this, aChild);
        }

      }),
      replaceChild: generateDataDescriptor({
        value(newChild, oldChild) {
          logMissingPortalError('replaceChild', 'method');
          return replaceChild.call(this, newChild, oldChild);
        }

      }),
      nodeValue: generateAccessorDescriptor({
        get() {
          return originalNodeValueDescriptor.get.call(this);
        },

        set(value) {
          if (!isDomMutationAllowed) {
            logMissingPortalError('nodeValue', 'property');
          }

          originalNodeValueDescriptor.set.call(this, value);
        }

      }),
      textContent: generateAccessorDescriptor({
        get() {
          return originalTextContentDescriptor.get.call(this);
        },

        set(value) {
          logMissingPortalError('textContent', 'property');
          originalTextContentDescriptor.set.call(this, value);
        }

      }),
      innerHTML: generateAccessorDescriptor({
        get() {
          return originalInnerHTMLDescriptor.get.call(this);
        },

        set(value) {
          logMissingPortalError('innerHTML', 'property');
          return originalInnerHTMLDescriptor.set.call(this, value);
        }

      })
    });
  }

  defineProperties(elm, descriptors);
}

function getShadowRootRestrictionsDescriptors(sr) {
  if (undefined === 'production') {
    // this method should never leak to prod
    throw new ReferenceError();
  } // Disallowing properties in dev mode only to avoid people doing the wrong
  // thing when using the real shadow root, because if that's the case,
  // the component will not work when running with synthetic shadow.


  const originalAddEventListener = sr.addEventListener;
  const originalInnerHTMLDescriptor = getPropertyDescriptor(sr, 'innerHTML');
  const originalTextContentDescriptor = getPropertyDescriptor(sr, 'textContent');
  return {
    innerHTML: generateAccessorDescriptor({
      get() {
        return originalInnerHTMLDescriptor.get.call(this);
      },

      set(_value) {
        throw new TypeError(`Invalid attempt to set innerHTML on ShadowRoot.`);
      }

    }),
    textContent: generateAccessorDescriptor({
      get() {
        return originalTextContentDescriptor.get.call(this);
      },

      set(_value) {
        throw new TypeError(`Invalid attempt to set textContent on ShadowRoot.`);
      }

    }),
    addEventListener: generateDataDescriptor({
      value(type, listener, options) {
        // TODO [#420]: this is triggered when the component author attempts to add a listener
        // programmatically into its Component's shadow root
        if (!isUndefined$1(options)) {
          logError('The `addEventListener` method on ShadowRoot does not support any options.', getAssociatedVMIfPresent(this));
        } // Typescript does not like it when you treat the `arguments` object as an array
        // @ts-ignore type-mismatch


        return originalAddEventListener.apply(this, arguments);
      }

    })
  };
} // Custom Elements Restrictions:
// -----------------------------


function getCustomElementRestrictionsDescriptors(elm) {
  if (undefined === 'production') {
    // this method should never leak to prod
    throw new ReferenceError();
  }

  const originalAddEventListener = elm.addEventListener;
  const originalInnerHTMLDescriptor = getPropertyDescriptor(elm, 'innerHTML');
  const originalOuterHTMLDescriptor = getPropertyDescriptor(elm, 'outerHTML');
  const originalTextContentDescriptor = getPropertyDescriptor(elm, 'textContent');
  return {
    innerHTML: generateAccessorDescriptor({
      get() {
        return originalInnerHTMLDescriptor.get.call(this);
      },

      set(_value) {
        throw new TypeError(`Invalid attempt to set innerHTML on HTMLElement.`);
      }

    }),
    outerHTML: generateAccessorDescriptor({
      get() {
        return originalOuterHTMLDescriptor.get.call(this);
      },

      set(_value) {
        throw new TypeError(`Invalid attempt to set outerHTML on HTMLElement.`);
      }

    }),
    textContent: generateAccessorDescriptor({
      get() {
        return originalTextContentDescriptor.get.call(this);
      },

      set(_value) {
        throw new TypeError(`Invalid attempt to set textContent on HTMLElement.`);
      }

    }),
    addEventListener: generateDataDescriptor({
      value(type, listener, options) {
        // TODO [#420]: this is triggered when the component author attempts to add a listener
        // programmatically into a lighting element node
        if (!isUndefined$1(options)) {
          logError('The `addEventListener` method in `LightningElement` does not support any options.', getAssociatedVMIfPresent(this));
        } // Typescript does not like it when you treat the `arguments` object as an array
        // @ts-ignore type-mismatch


        return originalAddEventListener.apply(this, arguments);
      }

    })
  };
}

function getComponentRestrictionsDescriptors() {
  if (undefined === 'production') {
    // this method should never leak to prod
    throw new ReferenceError();
  }

  return {
    tagName: generateAccessorDescriptor({
      get() {
        throw new Error(`Usage of property \`tagName\` is disallowed because the component itself does` + ` not know which tagName will be used to create the element, therefore writing` + ` code that check for that value is error prone.`);
      },

      configurable: true,
      enumerable: false // no enumerable properties on component

    })
  };
}

function getLightningElementPrototypeRestrictionsDescriptors(proto) {
  if (undefined === 'production') {
    // this method should never leak to prod
    throw new ReferenceError();
  }

  const originalDispatchEvent = proto.dispatchEvent;
  const descriptors = {
    dispatchEvent: generateDataDescriptor({
      value(event) {
        const vm = getAssociatedVM(this);

        if (!isNull(event) && isObject(event)) {
          const {
            type
          } = event;

          if (!/^[a-z][a-z0-9_]*$/.test(type)) {
            logError(`Invalid event type "${type}" dispatched in element ${getComponentTag(vm)}.` + ` Event name must start with a lowercase letter and followed only lowercase` + ` letters, numbers, and underscores`, vm);
          }
        } // Typescript does not like it when you treat the `arguments` object as an array
        // @ts-ignore type-mismatch


        return originalDispatchEvent.apply(this, arguments);
      }

    })
  };
  forEach.call(getOwnPropertyNames$1(globalHTMLProperties), propName => {
    if (propName in proto) {
      return; // no need to redefine something that we are already exposing
    }

    descriptors[propName] = generateAccessorDescriptor({
      get() {
        const {
          error,
          attribute
        } = globalHTMLProperties[propName];
        const msg = [];
        msg.push(`Accessing the global HTML property "${propName}" is disabled.`);

        if (error) {
          msg.push(error);
        } else if (attribute) {
          msg.push(`Instead access it via \`this.getAttribute("${attribute}")\`.`);
        }

        logError(msg.join('\n'), getAssociatedVM(this));
      },

      set() {
        const {
          readOnly
        } = globalHTMLProperties[propName];

        if (readOnly) {
          logError(`The global HTML property \`${propName}\` is read-only.`, getAssociatedVM(this));
        }
      }

    });
  });
  return descriptors;
} // This routine will prevent access to certain properties on a shadow root instance to guarantee
// that all components will work fine in IE11 and other browsers without shadow dom support.


function patchShadowRootWithRestrictions(sr) {
  defineProperties(sr, getShadowRootRestrictionsDescriptors(sr));
}
function patchCustomElementWithRestrictions(elm) {
  const restrictionsDescriptors = getCustomElementRestrictionsDescriptors(elm);
  const elmProto = getPrototypeOf$1(elm);
  setPrototypeOf(elm, create(elmProto, restrictionsDescriptors));
}
function patchComponentWithRestrictions(cmp) {
  defineProperties(cmp, getComponentRestrictionsDescriptors());
}
function patchLightningElementPrototypeWithRestrictions(proto) {
  defineProperties(proto, getLightningElementPrototypeRestrictionsDescriptors(proto));
}

/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
// This is a temporary workaround to get the @lwc/engine-server to evaluate in node without having
// to inject at runtime.
const HTMLElementConstructor$1 = typeof HTMLElement !== 'undefined' ? HTMLElement : function () {};
const HTMLElementPrototype = HTMLElementConstructor$1.prototype;

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
/**
 * This is a descriptor map that contains
 * all standard properties that a Custom Element can support (including AOM properties), which
 * determines what kind of capabilities the Base HTML Element and
 * Base Lightning Element should support.
 */

const HTMLElementOriginalDescriptors = create(null);
forEach.call(keys(AriaPropNameToAttrNameMap), propName => {
  // Note: intentionally using our in-house getPropertyDescriptor instead of getOwnPropertyDescriptor here because
  // in IE11, some properties are on Element.prototype instead of HTMLElement, just to be sure.
  const descriptor = getPropertyDescriptor(HTMLElementPrototype, propName);

  if (!isUndefined$1(descriptor)) {
    HTMLElementOriginalDescriptors[propName] = descriptor;
  }
});
forEach.call(defaultDefHTMLPropertyNames, propName => {
  // Note: intentionally using our in-house getPropertyDescriptor instead of getOwnPropertyDescriptor here because
  // in IE11, id property is on Element.prototype instead of HTMLElement, and we suspect that more will fall into
  // this category, so, better to be sure.
  const descriptor = getPropertyDescriptor(HTMLElementPrototype, propName);

  if (!isUndefined$1(descriptor)) {
    HTMLElementOriginalDescriptors[propName] = descriptor;
  }
});

/**
 * Copyright (C) 2017 salesforce.com, inc.
 */
const {
  isArray
} = Array;
const {
  getPrototypeOf,
  create: ObjectCreate,
  defineProperty: ObjectDefineProperty,
  isExtensible,
  getOwnPropertyDescriptor,
  getOwnPropertyNames,
  getOwnPropertySymbols,
  preventExtensions,
  hasOwnProperty
} = Object;
const {
  push: ArrayPush,
  concat: ArrayConcat
} = Array.prototype;
const OtS = {}.toString;

function toString(obj) {
  if (obj && obj.toString) {
    return obj.toString();
  } else if (typeof obj === 'object') {
    return OtS.call(obj);
  } else {
    return obj + '';
  }
}

function isUndefined(obj) {
  return obj === undefined;
}

function isFunction(obj) {
  return typeof obj === 'function';
}

const proxyToValueMap = new WeakMap();

function registerProxy(proxy, value) {
  proxyToValueMap.set(proxy, value);
}

const unwrap$1 = replicaOrAny => proxyToValueMap.get(replicaOrAny) || replicaOrAny;

class BaseProxyHandler {
  constructor(membrane, value) {
    this.originalTarget = value;
    this.membrane = membrane;
  } // Shared utility methods


  wrapDescriptor(descriptor) {
    if (hasOwnProperty.call(descriptor, 'value')) {
      descriptor.value = this.wrapValue(descriptor.value);
    } else {
      const {
        set: originalSet,
        get: originalGet
      } = descriptor;

      if (!isUndefined(originalGet)) {
        descriptor.get = this.wrapGetter(originalGet);
      }

      if (!isUndefined(originalSet)) {
        descriptor.set = this.wrapSetter(originalSet);
      }
    }

    return descriptor;
  }

  copyDescriptorIntoShadowTarget(shadowTarget, key) {
    const {
      originalTarget
    } = this; // Note: a property might get defined multiple times in the shadowTarget
    //       but it will always be compatible with the previous descriptor
    //       to preserve the object invariants, which makes these lines safe.

    const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key); // TODO: it should be impossible for the originalDescriptor to ever be undefined, this `if` can be removed

    /* istanbul ignore else */

    if (!isUndefined(originalDescriptor)) {
      const wrappedDesc = this.wrapDescriptor(originalDescriptor);
      ObjectDefineProperty(shadowTarget, key, wrappedDesc);
    }
  }

  lockShadowTarget(shadowTarget) {
    const {
      originalTarget
    } = this;
    const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));
    targetKeys.forEach(key => {
      this.copyDescriptorIntoShadowTarget(shadowTarget, key);
    });
    const {
      membrane: {
        tagPropertyKey
      }
    } = this;

    if (!isUndefined(tagPropertyKey) && !hasOwnProperty.call(shadowTarget, tagPropertyKey)) {
      ObjectDefineProperty(shadowTarget, tagPropertyKey, ObjectCreate(null));
    }

    preventExtensions(shadowTarget);
  } // Shared Traps
  // TODO: apply() is never called

  /* istanbul ignore next */


  apply(shadowTarget, thisArg, argArray) {
    /* No op */
  } // TODO: construct() is never called

  /* istanbul ignore next */


  construct(shadowTarget, argArray, newTarget) {
    /* No op */
  }

  get(shadowTarget, key) {
    const {
      originalTarget,
      membrane: {
        valueObserved
      }
    } = this;
    const value = originalTarget[key];
    valueObserved(originalTarget, key);
    return this.wrapValue(value);
  }

  has(shadowTarget, key) {
    const {
      originalTarget,
      membrane: {
        tagPropertyKey,
        valueObserved
      }
    } = this;
    valueObserved(originalTarget, key); // since key is never going to be undefined, and tagPropertyKey might be undefined
    // we can simply compare them as the second part of the condition.

    return key in originalTarget || key === tagPropertyKey;
  }

  ownKeys(shadowTarget) {
    const {
      originalTarget,
      membrane: {
        tagPropertyKey
      }
    } = this; // if the membrane tag key exists and it is not in the original target, we add it to the keys.

    const keys = isUndefined(tagPropertyKey) || hasOwnProperty.call(originalTarget, tagPropertyKey) ? [] : [tagPropertyKey]; // small perf optimization using push instead of concat to avoid creating an extra array

    ArrayPush.apply(keys, getOwnPropertyNames(originalTarget));
    ArrayPush.apply(keys, getOwnPropertySymbols(originalTarget));
    return keys;
  }

  isExtensible(shadowTarget) {
    const {
      originalTarget
    } = this; // optimization to avoid attempting to lock down the shadowTarget multiple times

    if (!isExtensible(shadowTarget)) {
      return false; // was already locked down
    }

    if (!isExtensible(originalTarget)) {
      this.lockShadowTarget(shadowTarget);
      return false;
    }

    return true;
  }

  getPrototypeOf(shadowTarget) {
    const {
      originalTarget
    } = this;
    return getPrototypeOf(originalTarget);
  }

  getOwnPropertyDescriptor(shadowTarget, key) {
    const {
      originalTarget,
      membrane: {
        valueObserved,
        tagPropertyKey
      }
    } = this; // keys looked up via getOwnPropertyDescriptor need to be reactive

    valueObserved(originalTarget, key);
    let desc = getOwnPropertyDescriptor(originalTarget, key);

    if (isUndefined(desc)) {
      if (key !== tagPropertyKey) {
        return undefined;
      } // if the key is the membrane tag key, and is not in the original target,
      // we produce a synthetic descriptor and install it on the shadow target


      desc = {
        value: undefined,
        writable: false,
        configurable: false,
        enumerable: false
      };
      ObjectDefineProperty(shadowTarget, tagPropertyKey, desc);
      return desc;
    }

    if (desc.configurable === false) {
      // updating the descriptor to non-configurable on the shadow
      this.copyDescriptorIntoShadowTarget(shadowTarget, key);
    } // Note: by accessing the descriptor, the key is marked as observed
    // but access to the value, setter or getter (if available) cannot observe
    // mutations, just like regular methods, in which case we just do nothing.


    return this.wrapDescriptor(desc);
  }

}

const getterMap$1 = new WeakMap();
const setterMap$1 = new WeakMap();
const reverseGetterMap = new WeakMap();
const reverseSetterMap = new WeakMap();

class ReactiveProxyHandler extends BaseProxyHandler {
  wrapValue(value) {
    return this.membrane.getProxy(value);
  }

  wrapGetter(originalGet) {
    const wrappedGetter = getterMap$1.get(originalGet);

    if (!isUndefined(wrappedGetter)) {
      return wrappedGetter;
    }

    const handler = this;

    const get = function () {
      // invoking the original getter with the original target
      return handler.wrapValue(originalGet.call(unwrap$1(this)));
    };

    getterMap$1.set(originalGet, get);
    reverseGetterMap.set(get, originalGet);
    return get;
  }

  wrapSetter(originalSet) {
    const wrappedSetter = setterMap$1.get(originalSet);

    if (!isUndefined(wrappedSetter)) {
      return wrappedSetter;
    }

    const set = function (v) {
      // invoking the original setter with the original target
      originalSet.call(unwrap$1(this), unwrap$1(v));
    };

    setterMap$1.set(originalSet, set);
    reverseSetterMap.set(set, originalSet);
    return set;
  }

  unwrapDescriptor(descriptor) {
    if (hasOwnProperty.call(descriptor, 'value')) {
      // dealing with a data descriptor
      descriptor.value = unwrap$1(descriptor.value);
    } else {
      const {
        set,
        get
      } = descriptor;

      if (!isUndefined(get)) {
        descriptor.get = this.unwrapGetter(get);
      }

      if (!isUndefined(set)) {
        descriptor.set = this.unwrapSetter(set);
      }
    }

    return descriptor;
  }

  unwrapGetter(redGet) {
    const reverseGetter = reverseGetterMap.get(redGet);

    if (!isUndefined(reverseGetter)) {
      return reverseGetter;
    }

    const handler = this;

    const get = function () {
      // invoking the red getter with the proxy of this
      return unwrap$1(redGet.call(handler.wrapValue(this)));
    };

    getterMap$1.set(get, redGet);
    reverseGetterMap.set(redGet, get);
    return get;
  }

  unwrapSetter(redSet) {
    const reverseSetter = reverseSetterMap.get(redSet);

    if (!isUndefined(reverseSetter)) {
      return reverseSetter;
    }

    const handler = this;

    const set = function (v) {
      // invoking the red setter with the proxy of this
      redSet.call(handler.wrapValue(this), handler.wrapValue(v));
    };

    setterMap$1.set(set, redSet);
    reverseSetterMap.set(redSet, set);
    return set;
  }

  set(shadowTarget, key, value) {
    const {
      originalTarget,
      membrane: {
        valueMutated
      }
    } = this;
    const oldValue = originalTarget[key];

    if (oldValue !== value) {
      originalTarget[key] = value;
      valueMutated(originalTarget, key);
    } else if (key === 'length' && isArray(originalTarget)) {
      // fix for issue #236: push will add the new index, and by the time length
      // is updated, the internal length is already equal to the new length value
      // therefore, the oldValue is equal to the value. This is the forking logic
      // to support this use case.
      valueMutated(originalTarget, key);
    }

    return true;
  }

  deleteProperty(shadowTarget, key) {
    const {
      originalTarget,
      membrane: {
        valueMutated
      }
    } = this;
    delete originalTarget[key];
    valueMutated(originalTarget, key);
    return true;
  }

  setPrototypeOf(shadowTarget, prototype) {
    /* istanbul ignore else */
    if (undefined !== 'production') {
      throw new Error(`Invalid setPrototypeOf invocation for reactive proxy ${toString(this.originalTarget)}. Prototype of reactive objects cannot be changed.`);
    }
  }

  preventExtensions(shadowTarget) {
    if (isExtensible(shadowTarget)) {
      const {
        originalTarget
      } = this;
      preventExtensions(originalTarget); // if the originalTarget is a proxy itself, it might reject
      // the preventExtension call, in which case we should not attempt to lock down
      // the shadow target.
      // TODO: It should not actually be possible to reach this `if` statement.
      // If a proxy rejects extensions, then calling preventExtensions will throw an error:
      // https://codepen.io/nolanlawson-the-selector/pen/QWMOjbY

      /* istanbul ignore if */

      if (isExtensible(originalTarget)) {
        return false;
      }

      this.lockShadowTarget(shadowTarget);
    }

    return true;
  }

  defineProperty(shadowTarget, key, descriptor) {
    const {
      originalTarget,
      membrane: {
        valueMutated,
        tagPropertyKey
      }
    } = this;

    if (key === tagPropertyKey && !hasOwnProperty.call(originalTarget, key)) {
      // To avoid leaking the membrane tag property into the original target, we must
      // be sure that the original target doesn't have yet.
      // NOTE: we do not return false here because Object.freeze and equivalent operations
      // will attempt to set the descriptor to the same value, and expect no to throw. This
      // is an small compromise for the sake of not having to diff the descriptors.
      return true;
    }

    ObjectDefineProperty(originalTarget, key, this.unwrapDescriptor(descriptor)); // intentionally testing if false since it could be undefined as well

    if (descriptor.configurable === false) {
      this.copyDescriptorIntoShadowTarget(shadowTarget, key);
    }

    valueMutated(originalTarget, key);
    return true;
  }

}

const getterMap = new WeakMap();
const setterMap = new WeakMap();

class ReadOnlyHandler extends BaseProxyHandler {
  wrapValue(value) {
    return this.membrane.getReadOnlyProxy(value);
  }

  wrapGetter(originalGet) {
    const wrappedGetter = getterMap.get(originalGet);

    if (!isUndefined(wrappedGetter)) {
      return wrappedGetter;
    }

    const handler = this;

    const get = function () {
      // invoking the original getter with the original target
      return handler.wrapValue(originalGet.call(unwrap$1(this)));
    };

    getterMap.set(originalGet, get);
    return get;
  }

  wrapSetter(originalSet) {
    const wrappedSetter = setterMap.get(originalSet);

    if (!isUndefined(wrappedSetter)) {
      return wrappedSetter;
    }

    const handler = this;

    const set = function (v) {
      /* istanbul ignore else */
      if (undefined !== 'production') {
        const {
          originalTarget
        } = handler;
        throw new Error(`Invalid mutation: Cannot invoke a setter on "${originalTarget}". "${originalTarget}" is read-only.`);
      }
    };

    setterMap.set(originalSet, set);
    return set;
  }

  set(shadowTarget, key, value) {
    /* istanbul ignore else */
    if (undefined !== 'production') {
      const {
        originalTarget
      } = this;
      const msg = isArray(originalTarget) ? `Invalid mutation: Cannot mutate array at index ${key.toString()}. Array is read-only.` : `Invalid mutation: Cannot set "${key.toString()}" on "${originalTarget}". "${originalTarget}" is read-only.`;
      throw new Error(msg);
    }
    /* istanbul ignore next */


    return false;
  }

  deleteProperty(shadowTarget, key) {
    /* istanbul ignore else */
    if (undefined !== 'production') {
      const {
        originalTarget
      } = this;
      throw new Error(`Invalid mutation: Cannot delete "${key.toString()}" on "${originalTarget}". "${originalTarget}" is read-only.`);
    }
    /* istanbul ignore next */


    return false;
  }

  setPrototypeOf(shadowTarget, prototype) {
    /* istanbul ignore else */
    if (undefined !== 'production') {
      const {
        originalTarget
      } = this;
      throw new Error(`Invalid prototype mutation: Cannot set prototype on "${originalTarget}". "${originalTarget}" prototype is read-only.`);
    }
  }

  preventExtensions(shadowTarget) {
    /* istanbul ignore else */
    if (undefined !== 'production') {
      const {
        originalTarget
      } = this;
      throw new Error(`Invalid mutation: Cannot preventExtensions on ${originalTarget}". "${originalTarget} is read-only.`);
    }
    /* istanbul ignore next */


    return false;
  }

  defineProperty(shadowTarget, key, descriptor) {
    /* istanbul ignore else */
    if (undefined !== 'production') {
      const {
        originalTarget
      } = this;
      throw new Error(`Invalid mutation: Cannot defineProperty "${key.toString()}" on "${originalTarget}". "${originalTarget}" is read-only.`);
    }
    /* istanbul ignore next */


    return false;
  }

}

function extract(objectOrArray) {
  if (isArray(objectOrArray)) {
    return objectOrArray.map(item => {
      const original = unwrap$1(item);

      if (original !== item) {
        return extract(original);
      }

      return item;
    });
  }

  const obj = ObjectCreate(getPrototypeOf(objectOrArray));
  const names = getOwnPropertyNames(objectOrArray);
  return ArrayConcat.call(names, getOwnPropertySymbols(objectOrArray)).reduce((seed, key) => {
    const item = objectOrArray[key];
    const original = unwrap$1(item);

    if (original !== item) {
      seed[key] = extract(original);
    } else {
      seed[key] = item;
    }

    return seed;
  }, obj);
}

const formatter = {
  header: plainOrProxy => {
    const originalTarget = unwrap$1(plainOrProxy); // if originalTarget is falsy or not unwrappable, exit

    if (!originalTarget || originalTarget === plainOrProxy) {
      return null;
    }

    const obj = extract(plainOrProxy);
    return ['object', {
      object: obj
    }];
  },
  hasBody: () => {
    return false;
  },
  body: () => {
    return null;
  }
}; // Inspired from paulmillr/es6-shim
// https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L176-L185

/* istanbul ignore next */

function getGlobal() {
  // the only reliable means to get the global object is `Function('return this')()`
  // However, this causes CSP violations in Chrome apps.
  if (typeof globalThis !== 'undefined') {
    return globalThis;
  }

  if (typeof self !== 'undefined') {
    return self;
  }

  if (typeof window !== 'undefined') {
    return window;
  }

  if (typeof __webpack_require__.g !== 'undefined') {
    return __webpack_require__.g;
  } // Gracefully degrade if not able to locate the global object


  return {};
}

function init() {
  /* istanbul ignore if */
  if (undefined === 'production') {
    // this method should never leak to prod
    throw new ReferenceError();
  }

  const global = getGlobal(); // Custom Formatter for Dev Tools. To enable this, open Chrome Dev Tools
  //  - Go to Settings,
  //  - Under console, select "Enable custom formatters"
  // For more information, https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview

  const devtoolsFormatters = global.devtoolsFormatters || [];
  ArrayPush.call(devtoolsFormatters, formatter);
  global.devtoolsFormatters = devtoolsFormatters;
}
/* istanbul ignore else */


if (undefined !== 'production') {
  init();
}

const ObjectDotPrototype = Object.prototype;

function defaultValueIsObservable(value) {
  // intentionally checking for null
  if (value === null) {
    return false;
  } // treat all non-object types, including undefined, as non-observable values


  if (typeof value !== 'object') {
    return false;
  }

  if (isArray(value)) {
    return true;
  }

  const proto = getPrototypeOf(value);
  return proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null;
}

const defaultValueObserved = (obj, key) => {
  /* do nothing */
};

const defaultValueMutated = (obj, key) => {
  /* do nothing */
};

const defaultValueDistortion = value => value;

function createShadowTarget(value) {
  return isArray(value) ? [] : {};
}

class ReactiveMembrane {
  constructor(options) {
    this.valueDistortion = defaultValueDistortion;
    this.valueMutated = defaultValueMutated;
    this.valueObserved = defaultValueObserved;
    this.valueIsObservable = defaultValueIsObservable;
    this.readOnlyObjectGraph = new WeakMap();
    this.reactiveObjectGraph = new WeakMap();

    if (!isUndefined(options)) {
      const {
        valueDistortion,
        valueMutated,
        valueObserved,
        valueIsObservable,
        tagPropertyKey
      } = options;
      this.valueDistortion = isFunction(valueDistortion) ? valueDistortion : defaultValueDistortion;
      this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;
      this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;
      this.valueIsObservable = isFunction(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;
      this.tagPropertyKey = tagPropertyKey;
    }
  }

  getProxy(value) {
    const unwrappedValue = unwrap$1(value);
    const distorted = this.valueDistortion(unwrappedValue);

    if (this.valueIsObservable(distorted)) {
      if (this.readOnlyObjectGraph.get(distorted) === value) {
        // when trying to extract the writable version of a readonly
        // we return the readonly.
        return value;
      }

      return this.getReactiveHandler(unwrappedValue, distorted);
    }

    return distorted;
  }

  getReadOnlyProxy(value) {
    value = unwrap$1(value);
    const distorted = this.valueDistortion(value);

    if (this.valueIsObservable(distorted)) {
      return this.getReadOnlyHandler(value, distorted);
    }

    return distorted;
  }

  unwrapProxy(p) {
    return unwrap$1(p);
  }

  getReactiveHandler(value, distortedValue) {
    let proxy = this.reactiveObjectGraph.get(distortedValue);

    if (isUndefined(proxy)) {
      // caching the proxy after the first time it is accessed
      const handler = new ReactiveProxyHandler(this, distortedValue);
      proxy = new Proxy(createShadowTarget(distortedValue), handler);
      registerProxy(proxy, value);
      this.reactiveObjectGraph.set(distortedValue, proxy);
    }

    return proxy;
  }

  getReadOnlyHandler(value, distortedValue) {
    let proxy = this.readOnlyObjectGraph.get(distortedValue);

    if (isUndefined(proxy)) {
      // caching the proxy after the first time it is accessed
      const handler = new ReadOnlyHandler(this, distortedValue);
      proxy = new Proxy(createShadowTarget(distortedValue), handler);
      registerProxy(proxy, value);
      this.readOnlyObjectGraph.set(distortedValue, proxy);
    }

    return proxy;
  }

}
/** version: 1.1.5 */

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const lockerLivePropertyKey = Symbol.for('@@lockerLiveValue');

function valueDistortion(value) {
  return value;
}

const reactiveMembrane = new ReactiveMembrane({
  valueObserved,
  valueMutated,
  valueDistortion,
  tagPropertyKey: lockerLivePropertyKey
});
/**
 * EXPERIMENTAL: This function implements an unwrap mechanism that
 * works for observable membrane objects. This API is subject to
 * change or being removed.
 */

const unwrap = function (value) {
  const unwrapped = reactiveMembrane.unwrapProxy(value);

  if (unwrapped !== value) {
    // if value is a proxy, unwrap to access original value and apply distortion
    return valueDistortion(unwrapped);
  }

  return value;
};

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
/**
 * This operation is called with a descriptor of an standard html property
 * that a Custom Element can support (including AOM properties), which
 * determines what kind of capabilities the Base Lightning Element should support. When producing the new descriptors
 * for the Base Lightning Element, it also include the reactivity bit, so the standard property is reactive.
 */

function createBridgeToElementDescriptor(propName, descriptor) {
  const {
    get,
    set,
    enumerable,
    configurable
  } = descriptor;

  if (!isFunction$1(get)) {
    if (undefined !== 'production') {
      assert.fail(`Detected invalid public property descriptor for HTMLElement.prototype.${propName} definition. Missing the standard getter.`);
    }

    throw new TypeError();
  }

  if (!isFunction$1(set)) {
    if (undefined !== 'production') {
      assert.fail(`Detected invalid public property descriptor for HTMLElement.prototype.${propName} definition. Missing the standard setter.`);
    }

    throw new TypeError();
  }

  return {
    enumerable,
    configurable,

    get() {
      const vm = getAssociatedVM(this);

      if (isBeingConstructed(vm)) {
        if (undefined !== 'production') {
          logError(`The value of property \`${propName}\` can't be read from the constructor because the owner component hasn't set the value yet. Instead, use the constructor to set a default value for the property.`, vm);
        }

        return;
      }

      componentValueObserved(vm, propName);
      return get.call(vm.elm);
    },

    set(newValue) {
      const vm = getAssociatedVM(this);

      if (undefined !== 'production') {
        const vmBeingRendered = getVMBeingRendered();
        assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${propName}`);
        assert.invariant(!isUpdatingTemplate, `When updating the template of ${vmBeingRendered}, one of the accessors used by the template has side effects on the state of ${vm}.${propName}`);
        assert.isFalse(isBeingConstructed(vm), `Failed to construct '${getComponentTag(vm)}': The result must not have attributes.`);
        assert.invariant(!isObject(newValue) || isNull(newValue), `Invalid value "${newValue}" for "${propName}" of ${vm}. Value cannot be an object, must be a primitive value.`);
      }

      if (newValue !== vm.cmpProps[propName]) {
        vm.cmpProps[propName] = newValue;
        componentValueMutated(vm, propName);
      }

      return set.call(vm.elm, newValue);
    }

  };
}
/**
 * This class is the base class for any LWC element.
 * Some elements directly extends this class, others implement it via inheritance.
 **/
// @ts-ignore


const LightningElement = function () {
  var _a; // This should be as performant as possible, while any initialization should be done lazily


  if (isNull(vmBeingConstructed)) {
    throw new ReferenceError('Illegal constructor');
  }

  const vm = vmBeingConstructed;
  const {
    def,
    elm,
    renderer
  } = vm;
  const {
    bridge
  } = def;

  if (undefined !== 'production') {
    (_a = renderer.assertInstanceOfHTMLElement) === null || _a === void 0 ? void 0 : _a.call(renderer, vm.elm, `Component creation requires a DOM element to be associated to ${vm}.`);
  }

  const component = this;
  setPrototypeOf(elm, bridge.prototype);
  vm.component = this; // Locker hooks assignment. When the LWC engine run with Locker, Locker intercepts all the new
  // component creation and passes hooks to instrument all the component interactions with the
  // engine. We are intentionally hiding this argument from the formal API of LightningElement
  // because we don't want folks to know about it just yet.

  if (arguments.length === 1) {
    const {
      callHook,
      setHook,
      getHook
    } = arguments[0];
    vm.callHook = callHook;
    vm.setHook = setHook;
    vm.getHook = getHook;
  } // Making the component instance a live value when using Locker to support expandos.


  this[lockerLivePropertyKey] = undefined; // Linking elm, shadow root and component with the VM.

  associateVM(component, vm);
  associateVM(elm, vm);

  if (vm.renderMode === 1
  /* Shadow */
  ) {
    attachShadow(vm);
  } // Adding extra guard rails in DEV mode.


  if (undefined !== 'production') {
    patchCustomElementWithRestrictions(elm);
    patchComponentWithRestrictions(component);
  }

  return this;
};

function attachShadow(vm) {
  const {
    elm,
    mode,
    renderer,
    shadowMode,
    def: {
      ctor
    }
  } = vm;
  const cmpRoot = renderer.attachShadow(elm, {
    [KEY__SYNTHETIC_MODE]: shadowMode === 1
    /* Synthetic */
    ,
    delegatesFocus: Boolean(ctor.delegatesFocus),
    mode
  });
  vm.cmpRoot = cmpRoot;
  associateVM(cmpRoot, vm);

  if (undefined !== 'production') {
    patchShadowRootWithRestrictions(cmpRoot);
  }
}

function warnIfInvokedDuringConstruction(vm, methodOrPropName) {
  if (isBeingConstructed(vm)) {
    logError(`this.${methodOrPropName} should not be called during the construction of the custom element for ${getComponentTag(vm)} because the element is not yet in the DOM or has no children yet.`);
  }
} // @ts-ignore


LightningElement.prototype = {
  constructor: LightningElement,

  dispatchEvent(event) {
    const {
      elm,
      renderer: {
        dispatchEvent
      }
    } = getAssociatedVM(this);
    return dispatchEvent(elm, event);
  },

  addEventListener(type, listener, options) {
    const vm = getAssociatedVM(this);
    const {
      elm,
      renderer: {
        addEventListener
      }
    } = vm;

    if (undefined !== 'production') {
      const vmBeingRendered = getVMBeingRendered();
      assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm} by adding an event listener for "${type}".`);
      assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm} by adding an event listener for "${type}".`);
      assert.invariant(isFunction$1(listener), `Invalid second argument for this.addEventListener() in ${vm} for event "${type}". Expected an EventListener but received ${listener}.`);
    }

    const wrappedListener = getWrappedComponentsListener(vm, listener);
    addEventListener(elm, type, wrappedListener, options);
  },

  removeEventListener(type, listener, options) {
    const vm = getAssociatedVM(this);
    const {
      elm,
      renderer: {
        removeEventListener
      }
    } = vm;
    const wrappedListener = getWrappedComponentsListener(vm, listener);
    removeEventListener(elm, type, wrappedListener, options);
  },

  hasAttribute(name) {
    const {
      elm,
      renderer: {
        getAttribute
      }
    } = getAssociatedVM(this);
    return !isNull(getAttribute(elm, name));
  },

  hasAttributeNS(namespace, name) {
    const {
      elm,
      renderer: {
        getAttribute
      }
    } = getAssociatedVM(this);
    return !isNull(getAttribute(elm, name, namespace));
  },

  removeAttribute(name) {
    const {
      elm,
      renderer: {
        removeAttribute
      }
    } = getAssociatedVM(this);
    unlockAttribute(elm, name);
    removeAttribute(elm, name);
    lockAttribute();
  },

  removeAttributeNS(namespace, name) {
    const {
      elm,
      renderer: {
        removeAttribute
      }
    } = getAssociatedVM(this);
    unlockAttribute(elm, name);
    removeAttribute(elm, name, namespace);
    lockAttribute();
  },

  getAttribute(name) {
    const {
      elm,
      renderer: {
        getAttribute
      }
    } = getAssociatedVM(this);
    return getAttribute(elm, name);
  },

  getAttributeNS(namespace, name) {
    const {
      elm,
      renderer: {
        getAttribute
      }
    } = getAssociatedVM(this);
    return getAttribute(elm, name, namespace);
  },

  setAttribute(name, value) {
    const vm = getAssociatedVM(this);
    const {
      elm,
      renderer: {
        setAttribute
      }
    } = vm;

    if (undefined !== 'production') {
      assert.isFalse(isBeingConstructed(vm), `Failed to construct '${getComponentTag(vm)}': The result must not have attributes.`);
    }

    unlockAttribute(elm, name);
    setAttribute(elm, name, value);
    lockAttribute();
  },

  setAttributeNS(namespace, name, value) {
    const vm = getAssociatedVM(this);
    const {
      elm,
      renderer: {
        setAttribute
      }
    } = vm;

    if (undefined !== 'production') {
      assert.isFalse(isBeingConstructed(vm), `Failed to construct '${getComponentTag(vm)}': The result must not have attributes.`);
    }

    unlockAttribute(elm, name);
    setAttribute(elm, name, value, namespace);
    lockAttribute();
  },

  getBoundingClientRect() {
    const vm = getAssociatedVM(this);
    const {
      elm,
      renderer: {
        getBoundingClientRect
      }
    } = vm;

    if (undefined !== 'production') {
      warnIfInvokedDuringConstruction(vm, 'getBoundingClientRect()');
    }

    return getBoundingClientRect(elm);
  },

  get isConnected() {
    const {
      elm,
      renderer: {
        isConnected
      }
    } = getAssociatedVM(this);
    return isConnected(elm);
  },

  get classList() {
    const vm = getAssociatedVM(this);
    const {
      elm,
      renderer: {
        getClassList
      }
    } = vm;

    if (undefined !== 'production') {
      // TODO [#1290]: this still fails in dev but works in production, eventually, we should
      // just throw in all modes
      assert.isFalse(isBeingConstructed(vm), `Failed to construct ${vm}: The result must not have attributes. Adding or tampering with classname in constructor is not allowed in a web component, use connectedCallback() instead.`);
    }

    return getClassList(elm);
  },

  get template() {
    const vm = getAssociatedVM(this);

    if (undefined !== 'production') {
      if (vm.renderMode === 0
      /* Light */
      ) {
        logError('`this.template` returns null for light DOM components. Since there is no shadow, the rendered content can be accessed via `this` itself. e.g. instead of `this.template.querySelector`, use `this.querySelector`.');
      }
    }

    return vm.cmpRoot;
  },

  get shadowRoot() {
    // From within the component instance, the shadowRoot is always reported as "closed".
    // Authors should rely on this.template instead.
    return null;
  },

  render() {
    const vm = getAssociatedVM(this);
    return vm.def.template;
  },

  toString() {
    const vm = getAssociatedVM(this);
    return `[object ${vm.def.name}]`;
  }

};
const queryAndChildGetterDescriptors = create(null);
const childGetters = [['children', 'getChildren'], ['childNodes', 'getChildNodes'], ['firstChild', 'getFirstChild'], ['firstElementChild', 'getFirstElementChild'], ['lastChild', 'getLastChild'], ['lastElementChild', 'getLastElementChild']]; // Generic passthrough for child getters on HTMLElement to the relevant Renderer APIs

for (const [elementProp, rendererMethod] of childGetters) {
  queryAndChildGetterDescriptors[elementProp] = {
    get() {
      const vm = getAssociatedVM(this);
      const {
        elm,
        renderer
      } = vm;

      if (undefined !== 'production') {
        warnIfInvokedDuringConstruction(vm, elementProp);
      }

      return renderer[rendererMethod](elm);
    },

    configurable: true,
    enumerable: true
  };
}

const queryMethods = ['getElementsByClassName', 'getElementsByTagName', 'querySelector', 'querySelectorAll']; // Generic passthrough for query APIs on HTMLElement to the relevant Renderer APIs

for (const queryMethod of queryMethods) {
  queryAndChildGetterDescriptors[queryMethod] = {
    value(arg) {
      const vm = getAssociatedVM(this);
      const {
        elm,
        renderer
      } = vm;

      if (undefined !== 'production') {
        warnIfInvokedDuringConstruction(vm, `${queryMethod}()`);
      }

      return renderer[queryMethod](elm, arg);
    },

    configurable: true,
    enumerable: true,
    writable: true
  };
}

defineProperties(LightningElement.prototype, queryAndChildGetterDescriptors);
const lightningBasedDescriptors = create(null);

for (const propName in HTMLElementOriginalDescriptors) {
  lightningBasedDescriptors[propName] = createBridgeToElementDescriptor(propName, HTMLElementOriginalDescriptors[propName]);
}

defineProperties(LightningElement.prototype, lightningBasedDescriptors);
defineProperty(LightningElement, 'CustomElementConstructor', {
  get() {
    // If required, a runtime-specific implementation must be defined.
    throw new ReferenceError('The current runtime does not support CustomElementConstructor.');
  },

  configurable: true
});

if (undefined !== 'production') {
  patchLightningElementPrototypeWithRestrictions(LightningElement.prototype);
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
/**
 * @wire decorator to wire fields and methods to a wire adapter in
 * LWC Components. This function implements the internals of this
 * decorator.
 */

function wire(_adapter, _config) {
  if (undefined !== 'production') {
    assert.fail('@wire(adapter, config?) may only be used as a decorator.');
  }

  throw new Error();
}
function internalWireFieldDecorator(key) {
  return {
    get() {
      const vm = getAssociatedVM(this);
      componentValueObserved(vm, key);
      return vm.cmpFields[key];
    },

    set(value) {
      const vm = getAssociatedVM(this);
      /**
       * Reactivity for wired fields is provided in wiring.
       * We intentionally add reactivity here since this is just
       * letting the author to do the wrong thing, but it will keep our
       * system to be backward compatible.
       */

      if (value !== vm.cmpFields[key]) {
        vm.cmpFields[key] = value;
        componentValueMutated(vm, key);
      }
    },

    enumerable: true,
    configurable: true
  };
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function track(target) {
  if (arguments.length === 1) {
    return reactiveMembrane.getProxy(target);
  }

  if (undefined !== 'production') {
    assert.fail(`@track decorator can only be used with one argument to return a trackable object, or as a decorator function.`);
  }

  throw new Error();
}
function internalTrackDecorator(key) {
  return {
    get() {
      const vm = getAssociatedVM(this);
      componentValueObserved(vm, key);
      return vm.cmpFields[key];
    },

    set(newValue) {
      const vm = getAssociatedVM(this);

      if (undefined !== 'production') {
        const vmBeingRendered = getVMBeingRendered();
        assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${toString$1(key)}`);
        assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm}.${toString$1(key)}`);
      }

      const reactiveOrAnyValue = reactiveMembrane.getProxy(newValue);

      if (reactiveOrAnyValue !== vm.cmpFields[key]) {
        vm.cmpFields[key] = reactiveOrAnyValue;
        componentValueMutated(vm, key);
      }
    },

    enumerable: true,
    configurable: true
  };
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function api$1() {
  if (undefined !== 'production') {
    assert.fail(`@api decorator can only be used as a decorator function.`);
  }

  throw new Error();
}
function createPublicPropertyDescriptor(key) {
  return {
    get() {
      const vm = getAssociatedVM(this);

      if (isBeingConstructed(vm)) {
        if (undefined !== 'production') {
          logError(`Can’t read the value of property \`${toString$1(key)}\` from the constructor because the owner component hasn’t set the value yet. Instead, use the constructor to set a default value for the property.`, vm);
        }

        return;
      }

      componentValueObserved(vm, key);
      return vm.cmpProps[key];
    },

    set(newValue) {
      const vm = getAssociatedVM(this);

      if (undefined !== 'production') {
        const vmBeingRendered = getVMBeingRendered();
        assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${toString$1(key)}`);
        assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm}.${toString$1(key)}`);
      }

      vm.cmpProps[key] = newValue;
      componentValueMutated(vm, key);
    },

    enumerable: true,
    configurable: true
  };
}
class AccessorReactiveObserver extends ReactiveObserver {
  constructor(vm, set) {
    super(() => {
      if (isFalse(this.debouncing)) {
        this.debouncing = true;
        addCallbackToNextTick(() => {
          if (isTrue(this.debouncing)) {
            const {
              value
            } = this;
            const {
              isDirty: dirtyStateBeforeSetterCall,
              component,
              idx
            } = vm;
            set.call(component, value); // de-bouncing after the call to the original setter to prevent
            // infinity loop if the setter itself is mutating things that
            // were accessed during the previous invocation.

            this.debouncing = false;

            if (isTrue(vm.isDirty) && isFalse(dirtyStateBeforeSetterCall) && idx > 0) {
              // immediate rehydration due to a setter driven mutation, otherwise
              // the component will get rendered on the second tick, which it is not
              // desirable.
              rerenderVM(vm);
            }
          }
        });
      }
    });
    this.debouncing = false;
  }

  reset(value) {
    super.reset();
    this.debouncing = false;

    if (arguments.length > 0) {
      this.value = value;
    }
  }

}
function createPublicAccessorDescriptor(key, descriptor) {
  const {
    get,
    set,
    enumerable,
    configurable
  } = descriptor;

  if (!isFunction$1(get)) {
    if (undefined !== 'production') {
      assert.invariant(isFunction$1(get), `Invalid compiler output for public accessor ${toString$1(key)} decorated with @api`);
    }

    throw new Error();
  }

  return {
    get() {
      if (undefined !== 'production') {
        // Assert that the this value is an actual Component with an associated VM.
        getAssociatedVM(this);
      }

      return get.call(this);
    },

    set(newValue) {
      const vm = getAssociatedVM(this);

      if (undefined !== 'production') {
        const vmBeingRendered = getVMBeingRendered();
        assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${toString$1(key)}`);
        assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm}.${toString$1(key)}`);
      }

      if (set) {
        if (runtimeFlags.ENABLE_REACTIVE_SETTER) {
          let ro = vm.oar[key];

          if (isUndefined$1(ro)) {
            ro = vm.oar[key] = new AccessorReactiveObserver(vm, set);
          } // every time we invoke this setter from outside (through this wrapper setter)
          // we should reset the value and then debounce just in case there is a pending
          // invocation the next tick that is not longer relevant since the value is changing
          // from outside.


          ro.reset(newValue);
          ro.observe(() => {
            set.call(this, newValue);
          });
        } else {
          set.call(this, newValue);
        }
      } else if (undefined !== 'production') {
        assert.fail(`Invalid attempt to set a new value for property ${toString$1(key)} of ${vm} that does not has a setter decorated with @api.`);
      }
    },

    enumerable,
    configurable
  };
}

function createObservedFieldPropertyDescriptor(key) {
  return {
    get() {
      const vm = getAssociatedVM(this);
      componentValueObserved(vm, key);
      return vm.cmpFields[key];
    },

    set(newValue) {
      const vm = getAssociatedVM(this);

      if (newValue !== vm.cmpFields[key]) {
        vm.cmpFields[key] = newValue;
        componentValueMutated(vm, key);
      }
    },

    enumerable: true,
    configurable: true
  };
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function getClassDescriptorType(descriptor) {
  if (isFunction$1(descriptor.value)) {
    return "method"
    /* Method */
    ;
  } else if (isFunction$1(descriptor.set) || isFunction$1(descriptor.get)) {
    return "accessor"
    /* Accessor */
    ;
  } else {
    return "field"
    /* Field */
    ;
  }
}

function validateObservedField(Ctor, fieldName, descriptor) {
  if (!isUndefined$1(descriptor)) {
    const type = getClassDescriptorType(descriptor);
    const message = `Invalid observed ${fieldName} field. Found a duplicate ${type} with the same name.`; // [W-9927596] Ideally we always throw an error when detecting duplicate observed field.
    // This branch is only here for backward compatibility reasons.

    if (type === "accessor"
    /* Accessor */
    ) {
      logError(message);
    } else {
      assert.fail(message);
    }
  }
}

function validateFieldDecoratedWithTrack(Ctor, fieldName, descriptor) {
  if (!isUndefined$1(descriptor)) {
    const type = getClassDescriptorType(descriptor);
    assert.fail(`Invalid @track ${fieldName} field. Found a duplicate ${type} with the same name.`);
  }
}

function validateFieldDecoratedWithWire(Ctor, fieldName, descriptor) {
  if (!isUndefined$1(descriptor)) {
    const type = getClassDescriptorType(descriptor);
    assert.fail(`Invalid @wire ${fieldName} field. Found a duplicate ${type} with the same name.`);
  }
}

function validateMethodDecoratedWithWire(Ctor, methodName, descriptor) {
  if (isUndefined$1(descriptor) || !isFunction$1(descriptor.value) || isFalse(descriptor.writable)) {
    assert.fail(`Invalid @wire ${methodName} method.`);
  }
}

function validateFieldDecoratedWithApi(Ctor, fieldName, descriptor) {
  if (!isUndefined$1(descriptor)) {
    const type = getClassDescriptorType(descriptor);
    const message = `Invalid @api ${fieldName} field. Found a duplicate ${type} with the same name.`; // [W-9927596] Ideally we always throw an error when detecting duplicate public properties.
    // This branch is only here for backward compatibility reasons.

    if (type === "accessor"
    /* Accessor */
    ) {
      logError(message);
    } else {
      assert.fail(message);
    }
  }
}

function validateAccessorDecoratedWithApi(Ctor, fieldName, descriptor) {
  if (isUndefined$1(descriptor)) {
    assert.fail(`Invalid @api get ${fieldName} accessor.`);
  } else if (isFunction$1(descriptor.set)) {
    assert.isTrue(isFunction$1(descriptor.get), `Missing getter for property ${fieldName} decorated with @api in ${Ctor}. You cannot have a setter without the corresponding getter.`);
  } else if (!isFunction$1(descriptor.get)) {
    assert.fail(`Missing @api get ${fieldName} accessor.`);
  }
}

function validateMethodDecoratedWithApi(Ctor, methodName, descriptor) {
  if (isUndefined$1(descriptor) || !isFunction$1(descriptor.value) || isFalse(descriptor.writable)) {
    assert.fail(`Invalid @api ${methodName} method.`);
  }
}
/**
 * INTERNAL: This function can only be invoked by compiled code. The compiler
 * will prevent this function from being imported by user-land code.
 */


function registerDecorators(Ctor, meta) {
  const proto = Ctor.prototype;
  const {
    publicProps,
    publicMethods,
    wire,
    track,
    fields
  } = meta;
  const apiMethods = create(null);
  const apiFields = create(null);
  const wiredMethods = create(null);
  const wiredFields = create(null);
  const observedFields = create(null);
  const apiFieldsConfig = create(null);
  let descriptor;

  if (!isUndefined$1(publicProps)) {
    for (const fieldName in publicProps) {
      const propConfig = publicProps[fieldName];
      apiFieldsConfig[fieldName] = propConfig.config;
      descriptor = getOwnPropertyDescriptor$1(proto, fieldName);

      if (propConfig.config > 0) {
        // accessor declaration
        if (undefined !== 'production') {
          validateAccessorDecoratedWithApi(Ctor, fieldName, descriptor);
        }

        if (isUndefined$1(descriptor)) {
          throw new Error();
        }

        descriptor = createPublicAccessorDescriptor(fieldName, descriptor);
      } else {
        // field declaration
        if (undefined !== 'production') {
          validateFieldDecoratedWithApi(Ctor, fieldName, descriptor);
        } // [W-9927596] If a component has both a public property and a private setter/getter
        // with the same name, the property is defined as a public accessor. This branch is
        // only here for backward compatibility reasons.


        if (!isUndefined$1(descriptor) && !isUndefined$1(descriptor.get)) {
          descriptor = createPublicAccessorDescriptor(fieldName, descriptor);
        } else {
          descriptor = createPublicPropertyDescriptor(fieldName);
        }
      }

      apiFields[fieldName] = descriptor;
      defineProperty(proto, fieldName, descriptor);
    }
  }

  if (!isUndefined$1(publicMethods)) {
    forEach.call(publicMethods, methodName => {
      descriptor = getOwnPropertyDescriptor$1(proto, methodName);

      if (undefined !== 'production') {
        validateMethodDecoratedWithApi(Ctor, methodName, descriptor);
      }

      if (isUndefined$1(descriptor)) {
        throw new Error();
      }

      apiMethods[methodName] = descriptor;
    });
  }

  if (!isUndefined$1(wire)) {
    for (const fieldOrMethodName in wire) {
      const {
        adapter,
        method,
        config: configCallback,
        dynamic = []
      } = wire[fieldOrMethodName];
      descriptor = getOwnPropertyDescriptor$1(proto, fieldOrMethodName);

      if (method === 1) {
        if (undefined !== 'production') {
          assert.isTrue(adapter, `@wire on method "${fieldOrMethodName}": adapter id must be truthy.`);
          validateMethodDecoratedWithWire(Ctor, fieldOrMethodName, descriptor);
        }

        if (isUndefined$1(descriptor)) {
          throw new Error();
        }

        wiredMethods[fieldOrMethodName] = descriptor;
        storeWiredMethodMeta(descriptor, adapter, configCallback, dynamic);
      } else {
        if (undefined !== 'production') {
          assert.isTrue(adapter, `@wire on field "${fieldOrMethodName}": adapter id must be truthy.`);
          validateFieldDecoratedWithWire(Ctor, fieldOrMethodName, descriptor);
        }

        descriptor = internalWireFieldDecorator(fieldOrMethodName);
        wiredFields[fieldOrMethodName] = descriptor;
        storeWiredFieldMeta(descriptor, adapter, configCallback, dynamic);
        defineProperty(proto, fieldOrMethodName, descriptor);
      }
    }
  }

  if (!isUndefined$1(track)) {
    for (const fieldName in track) {
      descriptor = getOwnPropertyDescriptor$1(proto, fieldName);

      if (undefined !== 'production') {
        validateFieldDecoratedWithTrack(Ctor, fieldName, descriptor);
      }

      descriptor = internalTrackDecorator(fieldName);
      defineProperty(proto, fieldName, descriptor);
    }
  }

  if (!isUndefined$1(fields)) {
    for (let i = 0, n = fields.length; i < n; i++) {
      const fieldName = fields[i];
      descriptor = getOwnPropertyDescriptor$1(proto, fieldName);

      if (undefined !== 'production') {
        validateObservedField(Ctor, fieldName, descriptor);
      } // [W-9927596] Only mark a field as observed whenever it isn't a duplicated public nor
      // tracked property. This is only here for backward compatibility purposes.


      const isDuplicatePublicProp = !isUndefined$1(publicProps) && fieldName in publicProps;
      const isDuplicateTrackedProp = !isUndefined$1(track) && fieldName in track;

      if (!isDuplicatePublicProp && !isDuplicateTrackedProp) {
        observedFields[fieldName] = createObservedFieldPropertyDescriptor(fieldName);
      }
    }
  }

  setDecoratorsMeta(Ctor, {
    apiMethods,
    apiFields,
    apiFieldsConfig,
    wiredMethods,
    wiredFields,
    observedFields
  });
  return Ctor;
}
const signedDecoratorToMetaMap = new Map();

function setDecoratorsMeta(Ctor, meta) {
  signedDecoratorToMetaMap.set(Ctor, meta);
}

const defaultMeta = {
  apiMethods: EmptyObject,
  apiFields: EmptyObject,
  apiFieldsConfig: EmptyObject,
  wiredMethods: EmptyObject,
  wiredFields: EmptyObject,
  observedFields: EmptyObject
};
function getDecoratorsMeta(Ctor) {
  const meta = signedDecoratorToMetaMap.get(Ctor);
  return isUndefined$1(meta) ? defaultMeta : meta;
}

const signedTemplateSet = new Set();
function defaultEmptyTemplate() {
  return [];
}
signedTemplateSet.add(defaultEmptyTemplate);
function isTemplateRegistered(tpl) {
  return signedTemplateSet.has(tpl);
}
/**
 * INTERNAL: This function can only be invoked by compiled code. The compiler
 * will prevent this function from being imported by userland code.
 */

function registerTemplate(tpl) {
  signedTemplateSet.add(tpl); // chaining this method as a way to wrap existing
  // assignment of templates easily, without too much transformation

  return tpl;
}
/**
 * EXPERIMENTAL: This function acts like a hook for Lightning Locker Service and other similar
 * libraries to sanitize vulnerable attributes.
 */

function sanitizeAttribute(tagName, namespaceUri, attrName, attrValue) {
  // locker-service patches this function during runtime to sanitize vulnerable attributes. When
  // ran off-core this function becomes a noop and returns the user authored value.
  return attrValue;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
// from the element instance, and get the value or set a new value on the component.
// This means that across different elements, similar names can get the exact same
// descriptor, so we can cache them:

const cachedGetterByKey = create(null);
const cachedSetterByKey = create(null);

function createGetter(key) {
  let fn = cachedGetterByKey[key];

  if (isUndefined$1(fn)) {
    fn = cachedGetterByKey[key] = function () {
      const vm = getAssociatedVM(this);
      const {
        getHook
      } = vm;
      return getHook(vm.component, key);
    };
  }

  return fn;
}

function createSetter(key) {
  let fn = cachedSetterByKey[key];

  if (isUndefined$1(fn)) {
    fn = cachedSetterByKey[key] = function (newValue) {
      const vm = getAssociatedVM(this);
      const {
        setHook
      } = vm;
      newValue = reactiveMembrane.getReadOnlyProxy(newValue);
      setHook(vm.component, key, newValue);
    };
  }

  return fn;
}

function createMethodCaller(methodName) {
  return function () {
    const vm = getAssociatedVM(this);
    const {
      callHook,
      component
    } = vm;
    const fn = component[methodName];
    return callHook(vm.component, fn, ArraySlice.call(arguments));
  };
}

function createAttributeChangedCallback(attributeToPropMap, superAttributeChangedCallback) {
  return function attributeChangedCallback(attrName, oldValue, newValue) {
    if (oldValue === newValue) {
      // Ignore same values.
      return;
    }

    const propName = attributeToPropMap[attrName];

    if (isUndefined$1(propName)) {
      if (!isUndefined$1(superAttributeChangedCallback)) {
        // delegate unknown attributes to the super.
        // Typescript does not like it when you treat the `arguments` object as an array
        // @ts-ignore type-mismatch
        superAttributeChangedCallback.apply(this, arguments);
      }

      return;
    }

    if (!isAttributeLocked(this, attrName)) {
      // Ignore changes triggered by the engine itself during:
      // * diffing when public props are attempting to reflect to the DOM
      // * component via `this.setAttribute()`, should never update the prop
      // Both cases, the setAttribute call is always wrapped by the unlocking of the
      // attribute to be changed
      return;
    } // Reflect attribute change to the corresponding property when changed from outside.


    this[propName] = newValue;
  };
}

function HTMLBridgeElementFactory(SuperClass, props, methods) {
  let HTMLBridgeElement;
  /**
   * Modern browsers will have all Native Constructors as regular Classes
   * and must be instantiated with the new keyword. In older browsers,
   * specifically IE11, those are objects with a prototype property defined,
   * since they are not supposed to be extended or instantiated with the
   * new keyword. This forking logic supports both cases, specifically because
   * wc.ts relies on the construction path of the bridges to create new
   * fully qualifying web components.
   */

  if (isFunction$1(SuperClass)) {
    HTMLBridgeElement = class extends SuperClass {};
  } else {
    HTMLBridgeElement = function () {
      // Bridge classes are not supposed to be instantiated directly in
      // browsers that do not support web components.
      throw new TypeError('Illegal constructor');
    }; // prototype inheritance dance


    setPrototypeOf(HTMLBridgeElement, SuperClass);
    setPrototypeOf(HTMLBridgeElement.prototype, SuperClass.prototype);
    defineProperty(HTMLBridgeElement.prototype, 'constructor', {
      writable: true,
      configurable: true,
      value: HTMLBridgeElement
    });
  } // generating the hash table for attributes to avoid duplicate fields and facilitate validation
  // and false positives in case of inheritance.


  const attributeToPropMap = create(null);
  const {
    attributeChangedCallback: superAttributeChangedCallback
  } = SuperClass.prototype;
  const {
    observedAttributes: superObservedAttributes = []
  } = SuperClass;
  const descriptors = create(null); // expose getters and setters for each public props on the new Element Bridge

  for (let i = 0, len = props.length; i < len; i += 1) {
    const propName = props[i];
    attributeToPropMap[htmlPropertyToAttribute(propName)] = propName;
    descriptors[propName] = {
      get: createGetter(propName),
      set: createSetter(propName),
      enumerable: true,
      configurable: true
    };
  } // expose public methods as props on the new Element Bridge


  for (let i = 0, len = methods.length; i < len; i += 1) {
    const methodName = methods[i];
    descriptors[methodName] = {
      value: createMethodCaller(methodName),
      writable: true,
      configurable: true
    };
  } // creating a new attributeChangedCallback per bridge because they are bound to the corresponding
  // map of attributes to props. We do this after all other props and methods to avoid the possibility
  // of getting overrule by a class declaration in user-land, and we make it non-writable, non-configurable
  // to preserve this definition.


  descriptors.attributeChangedCallback = {
    value: createAttributeChangedCallback(attributeToPropMap, superAttributeChangedCallback)
  }; // Specify attributes for which we want to reflect changes back to their corresponding
  // properties via attributeChangedCallback.

  defineProperty(HTMLBridgeElement, 'observedAttributes', {
    get() {
      return [...superObservedAttributes, ...keys(attributeToPropMap)];
    }

  });
  defineProperties(HTMLBridgeElement.prototype, descriptors);
  return HTMLBridgeElement;
}
const BaseBridgeElement = HTMLBridgeElementFactory(HTMLElementConstructor$1, getOwnPropertyNames$1(HTMLElementOriginalDescriptors), []);
freeze(BaseBridgeElement);
seal(BaseBridgeElement.prototype);

/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function resolveCircularModuleDependency(fn) {
  const module = fn();
  return (module === null || module === void 0 ? void 0 : module.__esModule) ? module.default : module;
}
function isCircularModuleDependency(obj) {
  return isFunction$1(obj) && hasOwnProperty$1.call(obj, '__circular__');
}

/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const swappedTemplateMap = new WeakMap();
const swappedComponentMap = new WeakMap();
const swappedStyleMap = new WeakMap();
const activeTemplates = new WeakMap();
const activeComponents = new WeakMap();
const activeStyles = new WeakMap();

function rehydrateHotTemplate(tpl) {
  const list = activeTemplates.get(tpl);

  if (!isUndefined$1(list)) {
    list.forEach(vm => {
      if (isFalse(vm.isDirty)) {
        // forcing the vm to rehydrate in the micro-task:
        markComponentAsDirty(vm);
        scheduleRehydration(vm);
      }
    }); // resetting the Set to release the memory of those vm references
    // since they are not longer related to this template, instead
    // they will get re-associated once these instances are rehydrated.

    list.clear();
  }

  return true;
}

function rehydrateHotStyle(style) {
  const list = activeStyles.get(style);

  if (!isUndefined$1(list)) {
    list.forEach(vm => {
      // if a style definition is swapped, we must reset
      // vm's template content in the next micro-task:
      forceRehydration(vm);
    }); // resetting the Set to release the memory of those vm references
    // since they are not longer related to this style, instead
    // they will get re-associated once these instances are rehydrated.

    list.clear();
  }

  return true;
}

function rehydrateHotComponent(Ctor) {
  const list = activeComponents.get(Ctor);
  let canRefreshAllInstances = true;

  if (!isUndefined$1(list)) {
    list.forEach(vm => {
      const {
        owner
      } = vm;

      if (!isNull(owner)) {
        // if a component class definition is swapped, we must reset
        // owner's template content in the next micro-task:
        forceRehydration(owner);
      } else {
        // the hot swapping for components only work for instances of components
        // created from a template, root elements can't be swapped because we
        // don't have a way to force the creation of the element with the same state
        // of the current element.
        // Instead, we can report the problem to the caller so it can take action,
        // for example: reload the entire page.
        canRefreshAllInstances = false;
      }
    }); // resetting the Set to release the memory of those vm references
    // since they are not longer related to this constructor, instead
    // they will get re-associated once these instances are rehydrated.

    list.clear();
  }

  return canRefreshAllInstances;
}

function flattenStylesheets(stylesheets) {
  const list = [];

  for (const stylesheet of stylesheets) {
    if (!Array.isArray(stylesheet)) {
      list.push(stylesheet);
    } else {
      list.push(...flattenStylesheets(stylesheet));
    }
  }

  return list;
}

function getTemplateOrSwappedTemplate(tpl) {
  if (undefined === 'production') {
    // this method should never leak to prod
    throw new ReferenceError();
  }

  if (runtimeFlags.ENABLE_HMR) {
    const visited = new Set();

    while (swappedTemplateMap.has(tpl) && !visited.has(tpl)) {
      visited.add(tpl);
      tpl = swappedTemplateMap.get(tpl);
    }
  }

  return tpl;
}
function getComponentOrSwappedComponent(Ctor) {
  if (undefined === 'production') {
    // this method should never leak to prod
    throw new ReferenceError();
  }

  if (runtimeFlags.ENABLE_HMR) {
    const visited = new Set();

    while (swappedComponentMap.has(Ctor) && !visited.has(Ctor)) {
      visited.add(Ctor);
      Ctor = swappedComponentMap.get(Ctor);
    }
  }

  return Ctor;
}
function getStyleOrSwappedStyle(style) {
  if (undefined === 'production') {
    // this method should never leak to prod
    throw new ReferenceError();
  }

  if (runtimeFlags.ENABLE_HMR) {
    const visited = new Set();

    while (swappedStyleMap.has(style) && !visited.has(style)) {
      visited.add(style);
      style = swappedStyleMap.get(style);
    }
  }

  return style;
}
function setActiveVM(vm) {
  if (undefined === 'production') {
    // this method should never leak to prod
    throw new ReferenceError();
  }

  if (runtimeFlags.ENABLE_HMR) {
    // tracking active component
    const Ctor = vm.def.ctor;
    let componentVMs = activeComponents.get(Ctor);

    if (isUndefined$1(componentVMs)) {
      componentVMs = new Set();
      activeComponents.set(Ctor, componentVMs);
    } // this will allow us to keep track of the hot components


    componentVMs.add(vm); // tracking active template

    const tpl = vm.cmpTemplate;

    if (tpl) {
      let templateVMs = activeTemplates.get(tpl);

      if (isUndefined$1(templateVMs)) {
        templateVMs = new Set();
        activeTemplates.set(tpl, templateVMs);
      } // this will allow us to keep track of the templates that are
      // being used by a hot component


      templateVMs.add(vm); // tracking active styles associated to template

      const stylesheets = tpl.stylesheets;

      if (!isUndefined$1(stylesheets)) {
        flattenStylesheets(stylesheets).forEach(stylesheet => {
          // this is necessary because we don't hold the list of styles
          // in the vm, we only hold the selected (already swapped template)
          // but the styles attached to the template might not be the actual
          // active ones, but the swapped versions of those.
          stylesheet = getStyleOrSwappedStyle(stylesheet);
          let stylesheetVMs = activeStyles.get(stylesheet);

          if (isUndefined$1(stylesheetVMs)) {
            stylesheetVMs = new Set();
            activeStyles.set(stylesheet, stylesheetVMs);
          } // this will allow us to keep track of the stylesheet that are
          // being used by a hot component


          stylesheetVMs.add(vm);
        });
      }
    }
  }
}
function removeActiveVM(vm) {
  if (undefined === 'production') {
    // this method should never leak to prod
    throw new ReferenceError();
  }

  if (runtimeFlags.ENABLE_HMR) {
    // tracking inactive component
    const Ctor = vm.def.ctor;
    let list = activeComponents.get(Ctor);

    if (!isUndefined$1(list)) {
      // deleting the vm from the set to avoid leaking memory
      list.delete(vm);
    } // removing inactive template


    const tpl = vm.cmpTemplate;

    if (tpl) {
      list = activeTemplates.get(tpl);

      if (!isUndefined$1(list)) {
        // deleting the vm from the set to avoid leaking memory
        list.delete(vm);
      } // removing active styles associated to template


      const styles = tpl.stylesheets;

      if (!isUndefined$1(styles)) {
        flattenStylesheets(styles).forEach(style => {
          list = activeStyles.get(style);

          if (!isUndefined$1(list)) {
            // deleting the vm from the set to avoid leaking memory
            list.delete(vm);
          }
        });
      }
    }
  }
}
function swapTemplate(oldTpl, newTpl) {
  if (undefined !== 'production') {
    if (isTemplateRegistered(oldTpl) && isTemplateRegistered(newTpl)) {
      swappedTemplateMap.set(oldTpl, newTpl);
      return rehydrateHotTemplate(oldTpl);
    } else {
      throw new TypeError(`Invalid Template`);
    }
  }

  if (!runtimeFlags.ENABLE_HMR) {
    throw new Error('HMR is not enabled');
  }

  return false;
}
function swapComponent(oldComponent, newComponent) {
  if (undefined !== 'production') {
    if (isComponentConstructor(oldComponent) && isComponentConstructor(newComponent)) {
      swappedComponentMap.set(oldComponent, newComponent);
      return rehydrateHotComponent(oldComponent);
    } else {
      throw new TypeError(`Invalid Component`);
    }
  }

  if (!runtimeFlags.ENABLE_HMR) {
    throw new Error('HMR is not enabled');
  }

  return false;
}
function swapStyle(oldStyle, newStyle) {
  if (undefined !== 'production') {
    // TODO [#1887]: once the support for registering styles is implemented
    // we can add the validation of both styles around this block.
    swappedStyleMap.set(oldStyle, newStyle);
    return rehydrateHotStyle(oldStyle);
  }

  if (!runtimeFlags.ENABLE_HMR) {
    throw new Error('HMR is not enabled');
  }

  return false;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const CtorToDefMap = new WeakMap();

function getCtorProto(Ctor) {
  let proto = getPrototypeOf$1(Ctor);

  if (isNull(proto)) {
    throw new ReferenceError(`Invalid prototype chain for ${Ctor.name}, you must extend LightningElement.`);
  } // covering the cases where the ref is circular in AMD


  if (isCircularModuleDependency(proto)) {
    const p = resolveCircularModuleDependency(proto);

    if (undefined !== 'production') {
      if (isNull(p)) {
        throw new ReferenceError(`Circular module dependency for ${Ctor.name}, must resolve to a constructor that extends LightningElement.`);
      }
    } // escape hatch for Locker and other abstractions to provide their own base class instead
    // of our Base class without having to leak it to user-land. If the circular function returns
    // itself, that's the signal that we have hit the end of the proto chain, which must always
    // be base.


    proto = p === proto ? LightningElement : p;
  }

  return proto;
}

function createComponentDef(Ctor) {
  const {
    shadowSupportMode: ctorShadowSupportMode,
    renderMode: ctorRenderMode
  } = Ctor;

  if (undefined !== 'production') {
    const ctorName = Ctor.name; // Removing the following assert until https://bugs.webkit.org/show_bug.cgi?id=190140 is fixed.
    // assert.isTrue(ctorName && isString(ctorName), `${toString(Ctor)} should have a "name" property with string value, but found ${ctorName}.`);

    assert.isTrue(Ctor.constructor, `Missing ${ctorName}.constructor, ${ctorName} should have a "constructor" property.`);

    if (!runtimeFlags.ENABLE_MIXED_SHADOW_MODE) {
      assert.isFalse('shadowSupportMode' in Ctor, `${ctorName || 'Anonymous class'} is an invalid LWC component. The shadowSupportMode static property is not available in this environment.`);
    }

    if (!isUndefined$1(ctorShadowSupportMode)) {
      assert.invariant(ctorShadowSupportMode === "any"
      /* Any */
      || ctorShadowSupportMode === "reset"
      /* Default */
      , `Invalid value for static property shadowSupportMode: '${ctorShadowSupportMode}'`);
    }

    if (!isUndefined$1(ctorRenderMode)) {
      assert.invariant(ctorRenderMode === 'light' || ctorRenderMode === 'shadow', `Invalid value for static property renderMode: '${ctorRenderMode}'. renderMode must be either 'light' or 'shadow'.`);
    }
  }

  const decoratorsMeta = getDecoratorsMeta(Ctor);
  const {
    apiFields,
    apiFieldsConfig,
    apiMethods,
    wiredFields,
    wiredMethods,
    observedFields
  } = decoratorsMeta;
  const proto = Ctor.prototype;
  let {
    connectedCallback,
    disconnectedCallback,
    renderedCallback,
    errorCallback,
    render
  } = proto;
  const superProto = getCtorProto(Ctor);
  const superDef = superProto !== LightningElement ? getComponentInternalDef(superProto) : lightingElementDef;
  const bridge = HTMLBridgeElementFactory(superDef.bridge, keys(apiFields), keys(apiMethods));
  const props = assign(create(null), superDef.props, apiFields);
  const propsConfig = assign(create(null), superDef.propsConfig, apiFieldsConfig);
  const methods = assign(create(null), superDef.methods, apiMethods);
  const wire = assign(create(null), superDef.wire, wiredFields, wiredMethods);
  connectedCallback = connectedCallback || superDef.connectedCallback;
  disconnectedCallback = disconnectedCallback || superDef.disconnectedCallback;
  renderedCallback = renderedCallback || superDef.renderedCallback;
  errorCallback = errorCallback || superDef.errorCallback;
  render = render || superDef.render;
  let shadowSupportMode = superDef.shadowSupportMode;

  if (!isUndefined$1(ctorShadowSupportMode)) {
    shadowSupportMode = ctorShadowSupportMode;
  }

  let renderMode = superDef.renderMode;

  if (!isUndefined$1(ctorRenderMode)) {
    renderMode = ctorRenderMode === 'light' ? 0
    /* Light */
    : 1
    /* Shadow */
    ;
  }

  const template = getComponentRegisteredTemplate(Ctor) || superDef.template;
  const name = Ctor.name || superDef.name; // installing observed fields into the prototype.

  defineProperties(proto, observedFields);
  const def = {
    ctor: Ctor,
    name,
    wire,
    props,
    propsConfig,
    methods,
    bridge,
    template,
    renderMode,
    shadowSupportMode,
    connectedCallback,
    disconnectedCallback,
    renderedCallback,
    errorCallback,
    render
  };

  if (undefined !== 'production') {
    freeze(Ctor.prototype);
  }

  return def;
}
/**
 * EXPERIMENTAL: This function allows for the identification of LWC constructors. This API is
 * subject to change or being removed.
 */


function isComponentConstructor(ctor) {
  if (!isFunction$1(ctor)) {
    return false;
  } // Fast path: LightningElement is part of the prototype chain of the constructor.


  if (ctor.prototype instanceof LightningElement) {
    return true;
  } // Slow path: LightningElement is not part of the prototype chain of the constructor, we need
  // climb up the constructor prototype chain to check in case there are circular dependencies
  // to resolve.


  let current = ctor;

  do {
    if (isCircularModuleDependency(current)) {
      const circularResolved = resolveCircularModuleDependency(current); // If the circular function returns itself, that's the signal that we have hit the end
      // of the proto chain, which must always be a valid base constructor.

      if (circularResolved === current) {
        return true;
      }

      current = circularResolved;
    }

    if (current === LightningElement) {
      return true;
    }
  } while (!isNull(current) && (current = getPrototypeOf$1(current))); // Finally return false if the LightningElement is not part of the prototype chain.


  return false;
}
function getComponentInternalDef(Ctor) {
  if (undefined !== 'production') {
    Ctor = getComponentOrSwappedComponent(Ctor);
  }

  let def = CtorToDefMap.get(Ctor);

  if (isUndefined$1(def)) {
    if (isCircularModuleDependency(Ctor)) {
      const resolvedCtor = resolveCircularModuleDependency(Ctor);
      def = getComponentInternalDef(resolvedCtor); // Cache the unresolved component ctor too. The next time if the same unresolved ctor is used,
      // look up the definition in cache instead of re-resolving and recreating the def.

      CtorToDefMap.set(Ctor, def);
      return def;
    }

    if (!isComponentConstructor(Ctor)) {
      throw new TypeError(`${Ctor} is not a valid component, or does not extends LightningElement from "lwc". You probably forgot to add the extend clause on the class declaration.`);
    }

    def = createComponentDef(Ctor);
    CtorToDefMap.set(Ctor, def);
  }

  return def;
}
const lightingElementDef = {
  ctor: LightningElement,
  name: LightningElement.name,
  props: lightningBasedDescriptors,
  propsConfig: EmptyObject,
  methods: EmptyObject,
  renderMode: 1
  /* Shadow */
  ,
  shadowSupportMode: "reset"
  /* Default */
  ,
  wire: EmptyObject,
  bridge: BaseBridgeElement,
  template: defaultEmptyTemplate,
  render: LightningElement.prototype.render
};
/**
 * EXPERIMENTAL: This function allows for the collection of internal component metadata. This API is
 * subject to change or being removed.
 */

function getComponentDef(Ctor) {
  const def = getComponentInternalDef(Ctor); // From the internal def object, we need to extract the info that is useful
  // for some external services, e.g.: Locker Service, usually, all they care
  // is about the shape of the constructor, the internals of it are not relevant
  // because they don't have a way to mess with that.

  const {
    ctor,
    name,
    props,
    propsConfig,
    methods
  } = def;
  const publicProps = {};

  for (const key in props) {
    // avoid leaking the reference to the public props descriptors
    publicProps[key] = {
      config: propsConfig[key] || 0,
      type: "any"
      /* any */
      ,
      attr: htmlPropertyToAttribute(key)
    };
  }

  const publicMethods = {};

  for (const key in methods) {
    // avoid leaking the reference to the public method descriptors
    publicMethods[key] = methods[key].value;
  }

  return {
    ctor,
    name,
    props: publicProps,
    methods: publicMethods
  };
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function observeElementChildNodes(elm) {
  elm.$domManual$ = true;
}

function setElementShadowToken(elm, token) {
  elm.$shadowToken$ = token;
} // Set the scope token class for *.scoped.css styles


function setScopeTokenClassIfNecessary(elm, owner) {
  const {
    cmpTemplate,
    context
  } = owner;
  const token = cmpTemplate === null || cmpTemplate === void 0 ? void 0 : cmpTemplate.stylesheetToken;

  if (!isUndefined$1(token) && context.hasScopedStyles) {
    owner.renderer.getClassList(elm).add(token);
  }
}

function updateNodeHook(oldVnode, vnode) {
  const {
    elm,
    text,
    owner: {
      renderer
    }
  } = vnode;

  if (oldVnode.text !== text) {
    if (undefined !== 'production') {
      unlockDomMutation();
    }

    renderer.setText(elm, text);

    if (undefined !== 'production') {
      lockDomMutation();
    }
  }
}
function insertNodeHook(vnode, parentNode, referenceNode) {
  const {
    renderer
  } = vnode.owner;

  if (undefined !== 'production') {
    unlockDomMutation();
  }

  renderer.insert(vnode.elm, parentNode, referenceNode);

  if (undefined !== 'production') {
    lockDomMutation();
  }
}
function removeNodeHook(vnode, parentNode) {
  const {
    renderer
  } = vnode.owner;

  if (undefined !== 'production') {
    unlockDomMutation();
  }

  renderer.remove(vnode.elm, parentNode);

  if (undefined !== 'production') {
    lockDomMutation();
  }
}
function createElmHook(vnode) {
  modEvents.create(vnode); // Attrs need to be applied to element before props
  // IE11 will wipe out value on radio inputs if value
  // is set before type=radio.

  modAttrs.create(vnode);
  modProps.create(vnode);
  modStaticClassName.create(vnode);
  modStaticStyle.create(vnode);
  modComputedClassName.create(vnode);
  modComputedStyle.create(vnode);
}
function hydrateElmHook(vnode) {
  modEvents.create(vnode); // Attrs are already on the element.
  // modAttrs.create(vnode);

  modProps.create(vnode); // Already set.
  // modStaticClassName.create(vnode);
  // modStaticStyle.create(vnode);
  // modComputedClassName.create(vnode);
  // modComputedStyle.create(vnode);
}
function fallbackElmHook(elm, vnode) {
  const {
    owner
  } = vnode;
  setScopeTokenClassIfNecessary(elm, owner);

  if (owner.shadowMode === 1
  /* Synthetic */
  ) {
    const {
      data: {
        context
      }
    } = vnode;
    const {
      stylesheetToken
    } = owner.context;

    if (!isUndefined$1(context) && !isUndefined$1(context.lwc) && context.lwc.dom === "manual"
    /* manual */
    ) {
      // this element will now accept any manual content inserted into it
      observeElementChildNodes(elm);
    } // when running in synthetic shadow mode, we need to set the shadowToken value
    // into each element from the template, so they can be styled accordingly.


    setElementShadowToken(elm, stylesheetToken);
  }

  if (undefined !== 'production') {
    const {
      data: {
        context
      }
    } = vnode;
    const isPortal = !isUndefined$1(context) && !isUndefined$1(context.lwc) && context.lwc.dom === "manual"
    /* manual */
    ;
    const isLight = owner.renderMode === 0
    /* Light */
    ;
    patchElementWithRestrictions(elm, {
      isPortal,
      isLight
    });
  }
}
function updateElmHook(oldVnode, vnode) {
  // Attrs need to be applied to element before props
  // IE11 will wipe out value on radio inputs if value
  // is set before type=radio.
  modAttrs.update(oldVnode, vnode);
  modProps.update(oldVnode, vnode);
  modComputedClassName.update(oldVnode, vnode);
  modComputedStyle.update(oldVnode, vnode);
}
function updateChildrenHook(oldVnode, vnode) {
  const {
    children,
    owner
  } = vnode;
  const fn = hasDynamicChildren(children) ? updateDynamicChildren : updateStaticChildren;
  runWithBoundaryProtection(owner, owner.owner, noop, () => {
    fn(vnode.elm, oldVnode.children, children);
  }, noop);
}
function allocateChildrenHook(vnode, vm) {
  // A component with slots will re-render because:
  // 1- There is a change of the internal state.
  // 2- There is a change on the external api (ex: slots)
  //
  // In case #1, the vnodes in the cmpSlots will be reused since they didn't changed. This routine emptied the
  // slotted children when those VCustomElement were rendered and therefore in subsequent calls to allocate children
  // in a reused VCustomElement, there won't be any slotted children.
  // For those cases, we will use the reference for allocated children stored when rendering the fresh VCustomElement.
  //
  // In case #2, we will always get a fresh VCustomElement.
  const children = vnode.aChildren || vnode.children;
  vm.aChildren = children;
  const {
    renderMode,
    shadowMode
  } = vm;

  if (shadowMode === 1
  /* Synthetic */
  || renderMode === 0
  /* Light */
  ) {
    // slow path
    allocateInSlot(vm, children); // save the allocated children in case this vnode is reused.

    vnode.aChildren = children; // every child vnode is now allocated, and the host should receive none directly, it receives them via the shadow!

    vnode.children = EmptyArray;
  }
}
function createViewModelHook(elm, vnode) {
  if (!isUndefined$1(getAssociatedVMIfPresent(elm))) {
    // There is a possibility that a custom element is registered under tagName,
    // in which case, the initialization is already carry on, and there is nothing else
    // to do here since this hook is called right after invoking `document.createElement`.
    return;
  }

  const {
    sel,
    mode,
    ctor,
    owner
  } = vnode;
  setScopeTokenClassIfNecessary(elm, owner);

  if (owner.shadowMode === 1
  /* Synthetic */
  ) {
    const {
      stylesheetToken
    } = owner.context; // when running in synthetic shadow mode, we need to set the shadowToken value
    // into each element from the template, so they can be styled accordingly.

    setElementShadowToken(elm, stylesheetToken);
  }

  const def = getComponentInternalDef(ctor);
  createVM(elm, def, {
    mode,
    owner,
    tagName: sel,
    renderer: owner.renderer
  });

  if (undefined !== 'production') {
    assert.isTrue(isArray$1(vnode.children), `Invalid vnode for a custom element, it must have children defined.`);
  }
}
function createCustomElmHook(vnode) {
  modEvents.create(vnode); // Attrs need to be applied to element before props
  // IE11 will wipe out value on radio inputs if value
  // is set before type=radio.

  modAttrs.create(vnode);
  modProps.create(vnode);
  modStaticClassName.create(vnode);
  modStaticStyle.create(vnode);
  modComputedClassName.create(vnode);
  modComputedStyle.create(vnode);
}
function createChildrenHook(vnode) {
  const {
    elm,
    children
  } = vnode;

  for (let j = 0; j < children.length; ++j) {
    const ch = children[j];

    if (ch != null) {
      ch.hook.create(ch);
      ch.hook.insert(ch, elm, null);
    }
  }
}

function isElementNode(node) {
  // eslint-disable-next-line lwc-internal/no-global-node
  return node.nodeType === Node.ELEMENT_NODE;
}

function vnodesAndElementHaveCompatibleAttrs(vnode, elm) {
  const {
    data: {
      attrs = {}
    },
    owner: {
      renderer
    }
  } = vnode;
  let nodesAreCompatible = true; // Validate attributes, though we could always recovery from those by running the update mods.
  // Note: intentionally ONLY matching vnodes.attrs to elm.attrs, in case SSR is adding extra attributes.

  for (const [attrName, attrValue] of Object.entries(attrs)) {
    const elmAttrValue = renderer.getAttribute(elm, attrName);

    if (String(attrValue) !== elmAttrValue) {
      logError(`Mismatch hydrating element <${elm.tagName.toLowerCase()}>: attribute "${attrName}" has different values, expected "${attrValue}" but found "${elmAttrValue}"`, vnode.owner);
      nodesAreCompatible = false;
    }
  }

  return nodesAreCompatible;
}

function vnodesAndElementHaveCompatibleClass(vnode, elm) {
  const {
    data: {
      className,
      classMap
    },
    owner: {
      renderer
    }
  } = vnode;
  let nodesAreCompatible = true;
  let vnodeClassName;

  if (!isUndefined$1(className) && String(className) !== elm.className) {
    // className is used when class is bound to an expr.
    nodesAreCompatible = false;
    vnodeClassName = className;
  } else if (!isUndefined$1(classMap)) {
    // classMap is used when class is set to static value.
    const classList = renderer.getClassList(elm);
    let computedClassName = ''; // all classes from the vnode should be in the element.classList

    for (const name in classMap) {
      computedClassName += ' ' + name;

      if (!classList.contains(name)) {
        nodesAreCompatible = false;
      }
    }

    vnodeClassName = computedClassName.trim();

    if (classList.length > keys(classMap).length) {
      nodesAreCompatible = false;
    }
  }

  if (!nodesAreCompatible) {
    logError(`Mismatch hydrating element <${elm.tagName.toLowerCase()}>: attribute "class" has different values, expected "${vnodeClassName}" but found "${elm.className}"`, vnode.owner);
  }

  return nodesAreCompatible;
}

function vnodesAndElementHaveCompatibleStyle(vnode, elm) {
  const {
    data: {
      style,
      styleDecls
    },
    owner: {
      renderer
    }
  } = vnode;
  const elmStyle = renderer.getAttribute(elm, 'style') || '';
  let vnodeStyle;
  let nodesAreCompatible = true;

  if (!isUndefined$1(style) && style !== elmStyle) {
    nodesAreCompatible = false;
    vnodeStyle = style;
  } else if (!isUndefined$1(styleDecls)) {
    const parsedVnodeStyle = parseStyleText(elmStyle);
    const expectedStyle = []; // styleMap is used when style is set to static value.

    for (let i = 0, n = styleDecls.length; i < n; i++) {
      const [prop, value, important] = styleDecls[i];
      expectedStyle.push(`${prop}: ${value + (important ? ' important!' : '')}`);
      const parsedPropValue = parsedVnodeStyle[prop];

      if (isUndefined$1(parsedPropValue)) {
        nodesAreCompatible = false;
      } else if (!parsedPropValue.startsWith(value)) {
        nodesAreCompatible = false;
      } else if (important && !parsedPropValue.endsWith('!important')) {
        nodesAreCompatible = false;
      }
    }

    if (keys(parsedVnodeStyle).length > styleDecls.length) {
      nodesAreCompatible = false;
    }

    vnodeStyle = ArrayJoin.call(expectedStyle, ';');
  }

  if (!nodesAreCompatible) {
    // style is used when class is bound to an expr.
    logError(`Mismatch hydrating element <${elm.tagName.toLowerCase()}>: attribute "style" has different values, expected "${vnodeStyle}" but found "${elmStyle}".`, vnode.owner);
  }

  return nodesAreCompatible;
}

function throwHydrationError() {
  assert.fail('Server rendered elements do not match client side generated elements');
}

function hydrateChildrenHook(elmChildren, children, vm) {
  var _a, _b;

  if (undefined !== 'production') {
    const filteredVNodes = ArrayFilter.call(children, vnode => !!vnode);

    if (elmChildren.length !== filteredVNodes.length) {
      logError(`Hydration mismatch: incorrect number of rendered nodes, expected ${filteredVNodes.length} but found ${elmChildren.length}.`, vm);
      throwHydrationError();
    }
  }

  let elmCurrentChildIdx = 0;

  for (let j = 0, n = children.length; j < n; j++) {
    const ch = children[j];

    if (ch != null) {
      const childNode = elmChildren[elmCurrentChildIdx];

      if (undefined !== 'production') {
        // VComments and VTexts validation is handled in their hooks
        if (isElementNode(childNode)) {
          if (((_a = ch.sel) === null || _a === void 0 ? void 0 : _a.toLowerCase()) !== childNode.tagName.toLowerCase()) {
            logError(`Hydration mismatch: expecting element with tag "${(_b = ch.sel) === null || _b === void 0 ? void 0 : _b.toLowerCase()}" but found "${childNode.tagName.toLowerCase()}".`, vm);
            throwHydrationError();
          } // Note: props are not yet set


          const hasIncompatibleAttrs = vnodesAndElementHaveCompatibleAttrs(ch, childNode);
          const hasIncompatibleClass = vnodesAndElementHaveCompatibleClass(ch, childNode);
          const hasIncompatibleStyle = vnodesAndElementHaveCompatibleStyle(ch, childNode);
          const isVNodeAndElementCompatible = hasIncompatibleAttrs && hasIncompatibleClass && hasIncompatibleStyle;

          if (!isVNodeAndElementCompatible) {
            throwHydrationError();
          }
        }
      }

      ch.hook.hydrate(ch, childNode);
      elmCurrentChildIdx++;
    }
  }
}
function updateCustomElmHook(oldVnode, vnode) {
  // Attrs need to be applied to element before props
  // IE11 will wipe out value on radio inputs if value
  // is set before type=radio.
  modAttrs.update(oldVnode, vnode);
  modProps.update(oldVnode, vnode);
  modComputedClassName.update(oldVnode, vnode);
  modComputedStyle.update(oldVnode, vnode);
}
function removeElmHook(vnode) {
  // this method only needs to search on child vnodes from template
  // to trigger the remove hook just in case some of those children
  // are custom elements.
  const {
    children,
    elm
  } = vnode;

  for (let j = 0, len = children.length; j < len; ++j) {
    const ch = children[j];

    if (!isNull(ch)) {
      ch.hook.remove(ch, elm);
    }
  }
} // Using a WeakMap instead of a WeakSet because this one works in IE11 :(

const FromIteration = new WeakMap(); // dynamic children means it was generated by an iteration
// in a template, and will require a more complex diffing algo.

function markAsDynamicChildren(children) {
  FromIteration.set(children, 1);
}
function hasDynamicChildren(children) {
  return FromIteration.has(children);
}

/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function getUpgradableConstructor(tagName, renderer) {
  // Should never get a tag with upper case letter at this point, the compiler should
  // produce only tags with lowercase letters
  // But, for backwards compatibility, we will lower case the tagName
  tagName = tagName.toLowerCase();
  let CE = renderer.getCustomElement(tagName);

  if (!isUndefined$1(CE)) {
    return CE;
  }
  /**
   * LWC Upgradable Element reference to an element that was created
   * via the scoped registry mechanism, and that is ready to be upgraded.
   */


  CE = class LWCUpgradableElement extends renderer.HTMLElement {
    constructor(upgradeCallback) {
      super();

      if (isFunction$1(upgradeCallback)) {
        upgradeCallback(this); // nothing to do with the result for now
      }
    }

  };
  renderer.defineCustomElement(tagName, CE);
  return CE;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
const SymbolIterator = Symbol.iterator;
const TextHook = {
  create: vnode => {
    const {
      owner
    } = vnode;
    const {
      renderer
    } = owner;
    const elm = renderer.createText(vnode.text);
    linkNodeToShadow(elm, owner);
    vnode.elm = elm;
  },
  update: updateNodeHook,
  insert: insertNodeHook,
  move: insertNodeHook,
  remove: removeNodeHook,
  hydrate: (vNode, node) => {
    var _a;

    if (undefined !== 'production') {
      // eslint-disable-next-line lwc-internal/no-global-node
      if (node.nodeType !== Node.TEXT_NODE) {
        logError('Hydration mismatch: incorrect node type received', vNode.owner);
        assert.fail('Hydration mismatch: incorrect node type received.');
      }

      if (node.nodeValue !== vNode.text) {
        logWarn('Hydration mismatch: text values do not match, will recover from the difference', vNode.owner);
      }
    } // always set the text value to the one from the vnode.


    node.nodeValue = (_a = vNode.text) !== null && _a !== void 0 ? _a : null;
    vNode.elm = node;
  }
};
const CommentHook = {
  create: vnode => {
    const {
      owner,
      text
    } = vnode;
    const {
      renderer
    } = owner;
    const elm = renderer.createComment(text);
    linkNodeToShadow(elm, owner);
    vnode.elm = elm;
  },
  update: updateNodeHook,
  insert: insertNodeHook,
  move: insertNodeHook,
  remove: removeNodeHook,
  hydrate: (vNode, node) => {
    var _a;

    if (undefined !== 'production') {
      // eslint-disable-next-line lwc-internal/no-global-node
      if (node.nodeType !== Node.COMMENT_NODE) {
        logError('Hydration mismatch: incorrect node type received', vNode.owner);
        assert.fail('Hydration mismatch: incorrect node type received.');
      }

      if (node.nodeValue !== vNode.text) {
        logWarn('Hydration mismatch: comment values do not match, will recover from the difference', vNode.owner);
      }
    } // always set the text value to the one from the vnode.


    node.nodeValue = (_a = vNode.text) !== null && _a !== void 0 ? _a : null;
    vNode.elm = node;
  }
}; // insert is called after update, which is used somewhere else (via a module)
// to mark the vm as inserted, that means we cannot use update as the main channel
// to rehydrate when dirty, because sometimes the element is not inserted just yet,
// which breaks some invariants. For that reason, we have the following for any
// Custom Element that is inserted via a template.

const ElementHook = {
  create: vnode => {
    const {
      sel,
      owner,
      data: {
        svg
      }
    } = vnode;
    const {
      renderer
    } = owner;
    const namespace = isTrue(svg) ? SVG_NAMESPACE : undefined;
    const elm = renderer.createElement(sel, namespace);
    linkNodeToShadow(elm, owner);
    fallbackElmHook(elm, vnode);
    vnode.elm = elm;
    createElmHook(vnode);
  },
  update: (oldVnode, vnode) => {
    updateElmHook(oldVnode, vnode);
    updateChildrenHook(oldVnode, vnode);
  },
  insert: (vnode, parentNode, referenceNode) => {
    insertNodeHook(vnode, parentNode, referenceNode);
    createChildrenHook(vnode);
  },
  move: (vnode, parentNode, referenceNode) => {
    insertNodeHook(vnode, parentNode, referenceNode);
  },
  remove: (vnode, parentNode) => {
    removeNodeHook(vnode, parentNode);
    removeElmHook(vnode);
  },
  hydrate: (vnode, node) => {
    const elm = node;
    vnode.elm = elm;
    const {
      context
    } = vnode.data;
    const isDomManual = Boolean(!isUndefined$1(context) && !isUndefined$1(context.lwc) && context.lwc.dom === "manual"
    /* manual */
    );

    if (isDomManual) {
      // it may be that this element has lwc:inner-html, we need to diff and in case are the same,
      // remove the innerHTML from props so it reuses the existing dom elements.
      const {
        props
      } = vnode.data;

      if (!isUndefined$1(props) && !isUndefined$1(props.innerHTML)) {
        if (elm.innerHTML === props.innerHTML) {
          delete props.innerHTML;
        } else {
          logWarn(`Mismatch hydrating element <${elm.tagName.toLowerCase()}>: innerHTML values do not match for element, will recover from the difference`, vnode.owner);
        }
      }
    }

    hydrateElmHook(vnode);

    if (!isDomManual) {
      hydrateChildrenHook(vnode.elm.childNodes, vnode.children, vnode.owner);
    }
  }
};
const CustomElementHook = {
  create: vnode => {
    const {
      sel,
      owner
    } = vnode;
    const {
      renderer
    } = owner;
    const UpgradableConstructor = getUpgradableConstructor(sel, renderer);
    /**
     * Note: if the upgradable constructor does not expect, or throw when we new it
     * with a callback as the first argument, we could implement a more advanced
     * mechanism that only passes that argument if the constructor is known to be
     * an upgradable custom element.
     */

    const elm = new UpgradableConstructor(elm => {
      // the custom element from the registry is expecting an upgrade callback
      createViewModelHook(elm, vnode);
    });
    linkNodeToShadow(elm, owner);
    vnode.elm = elm;
    const vm = getAssociatedVMIfPresent(elm);

    if (vm) {
      allocateChildrenHook(vnode, vm);
    } else if (vnode.ctor !== UpgradableConstructor) {
      throw new TypeError(`Incorrect Component Constructor`);
    }

    createCustomElmHook(vnode);
  },
  update: (oldVnode, vnode) => {
    updateCustomElmHook(oldVnode, vnode);
    const vm = getAssociatedVMIfPresent(vnode.elm);

    if (vm) {
      // in fallback mode, the allocation will always set children to
      // empty and delegate the real allocation to the slot elements
      allocateChildrenHook(vnode, vm);
    } // in fallback mode, the children will be always empty, so, nothing
    // will happen, but in native, it does allocate the light dom


    updateChildrenHook(oldVnode, vnode);

    if (vm) {
      if (undefined !== 'production') {
        assert.isTrue(isArray$1(vnode.children), `Invalid vnode for a custom element, it must have children defined.`);
      } // this will probably update the shadowRoot, but only if the vm is in a dirty state
      // this is important to preserve the top to bottom synchronous rendering phase.


      rerenderVM(vm);
    }
  },
  insert: (vnode, parentNode, referenceNode) => {
    insertNodeHook(vnode, parentNode, referenceNode);
    const vm = getAssociatedVMIfPresent(vnode.elm);

    if (vm) {
      if (undefined !== 'production') {
        assert.isTrue(vm.state === 0
        /* created */
        , `${vm} cannot be recycled.`);
      }

      runConnectedCallback(vm);
    }

    createChildrenHook(vnode);

    if (vm) {
      appendVM(vm);
    }
  },
  move: (vnode, parentNode, referenceNode) => {
    insertNodeHook(vnode, parentNode, referenceNode);
  },
  remove: (vnode, parentNode) => {
    removeNodeHook(vnode, parentNode);
    const vm = getAssociatedVMIfPresent(vnode.elm);

    if (vm) {
      // for custom elements we don't have to go recursively because the removeVM routine
      // will take care of disconnecting any child VM attached to its shadow as well.
      removeVM(vm);
    }
  },
  hydrate: (vnode, elm) => {
    // the element is created, but the vm is not
    const {
      sel,
      mode,
      ctor,
      owner
    } = vnode;
    const def = getComponentInternalDef(ctor);
    createVM(elm, def, {
      mode,
      owner,
      tagName: sel,
      renderer: owner.renderer
    });
    vnode.elm = elm;
    const vm = getAssociatedVM(elm);
    allocateChildrenHook(vnode, vm);
    hydrateElmHook(vnode); // Insert hook section:

    if (undefined !== 'production') {
      assert.isTrue(vm.state === 0
      /* created */
      , `${vm} cannot be recycled.`);
    }

    runConnectedCallback(vm);

    if (vm.renderMode !== 0
    /* Light */
    ) {
      // VM is not rendering in Light DOM, we can proceed and hydrate the slotted content.
      // Note: for Light DOM, this is handled while hydrating the VM
      hydrateChildrenHook(vnode.elm.childNodes, vnode.children, vm);
    }

    hydrateVM(vm);
  }
};

function linkNodeToShadow(elm, owner) {
  const {
    renderer,
    renderMode,
    shadowMode
  } = owner; // TODO [#1164]: this should eventually be done by the polyfill directly

  if (renderer.isSyntheticShadowDefined) {
    if (shadowMode === 1
    /* Synthetic */
    || renderMode === 0
    /* Light */
    ) {
      elm[KEY__SHADOW_RESOLVER] = getRenderRoot(owner)[KEY__SHADOW_RESOLVER];
    }
  }
}

function addVNodeToChildLWC(vnode) {
  ArrayPush$1.call(getVMBeingRendered().velements, vnode);
} // [h]tml node


function h(sel, data, children) {
  const vmBeingRendered = getVMBeingRendered();

  if (undefined !== 'production') {
    assert.isTrue(isString(sel), `h() 1st argument sel must be a string.`);
    assert.isTrue(isObject(data), `h() 2nd argument data must be an object.`);
    assert.isTrue(isArray$1(children), `h() 3rd argument children must be an array.`);
    assert.isTrue('key' in data, ` <${sel}> "key" attribute is invalid or missing for ${vmBeingRendered}. Key inside iterator is either undefined or null.`); // checking reserved internal data properties

    assert.isFalse(data.className && data.classMap, `vnode.data.className and vnode.data.classMap ambiguous declaration.`);
    assert.isFalse(data.styleDecls && data.style, `vnode.data.styleDecls and vnode.data.style ambiguous declaration.`);

    if (data.style && !isString(data.style)) {
      logError(`Invalid 'style' attribute passed to <${sel}> is ignored. This attribute must be a string value.`, vmBeingRendered);
    }

    forEach.call(children, childVnode => {
      if (childVnode != null) {
        assert.isTrue(childVnode && 'sel' in childVnode && 'data' in childVnode && 'children' in childVnode && 'text' in childVnode && 'elm' in childVnode && 'key' in childVnode, `${childVnode} is not a vnode.`);
      }
    });
  }

  let text, elm;
  const {
    key
  } = data;
  return {
    sel,
    data,
    children,
    text,
    elm,
    key,
    hook: ElementHook,
    owner: vmBeingRendered
  };
} // [t]ab[i]ndex function


function ti(value) {
  // if value is greater than 0, we normalize to 0
  // If value is an invalid tabIndex value (null, undefined, string, etc), we let that value pass through
  // If value is less than -1, we don't care
  const shouldNormalize = value > 0 && !(isTrue(value) || isFalse(value));

  if (undefined !== 'production') {
    const vmBeingRendered = getVMBeingRendered();

    if (shouldNormalize) {
      logError(`Invalid tabindex value \`${toString$1(value)}\` in template for ${vmBeingRendered}. This attribute must be set to 0 or -1.`, vmBeingRendered);
    }
  }

  return shouldNormalize ? 0 : value;
} // [s]lot element node


function s(slotName, data, children, slotset) {
  if (undefined !== 'production') {
    assert.isTrue(isString(slotName), `s() 1st argument slotName must be a string.`);
    assert.isTrue(isObject(data), `s() 2nd argument data must be an object.`);
    assert.isTrue(isArray$1(children), `h() 3rd argument children must be an array.`);
  }

  if (!isUndefined$1(slotset) && !isUndefined$1(slotset[slotName]) && slotset[slotName].length !== 0) {
    children = slotset[slotName];
  }

  const vmBeingRendered = getVMBeingRendered();
  const {
    renderMode,
    shadowMode
  } = vmBeingRendered;

  if (renderMode === 0
  /* Light */
  ) {
    sc(children);
    return children;
  }

  if (shadowMode === 1
  /* Synthetic */
  ) {
    // TODO [#1276]: compiler should give us some sort of indicator when a vnodes collection is dynamic
    sc(children);
  }

  return h('slot', data, children);
} // [c]ustom element node


function c(sel, Ctor, data, children = EmptyArray) {
  const vmBeingRendered = getVMBeingRendered();

  if (undefined !== 'production') {
    assert.isTrue(isString(sel), `c() 1st argument sel must be a string.`);
    assert.isTrue(isFunction$1(Ctor), `c() 2nd argument Ctor must be a function.`);
    assert.isTrue(isObject(data), `c() 3nd argument data must be an object.`);
    assert.isTrue(arguments.length === 3 || isArray$1(children), `c() 4nd argument data must be an array.`); // checking reserved internal data properties

    assert.isFalse(data.className && data.classMap, `vnode.data.className and vnode.data.classMap ambiguous declaration.`);
    assert.isFalse(data.styleDecls && data.style, `vnode.data.styleDecls and vnode.data.style ambiguous declaration.`);

    if (data.style && !isString(data.style)) {
      logError(`Invalid 'style' attribute passed to <${sel}> is ignored. This attribute must be a string value.`, vmBeingRendered);
    }

    if (arguments.length === 4) {
      forEach.call(children, childVnode => {
        if (childVnode != null) {
          assert.isTrue(childVnode && 'sel' in childVnode && 'data' in childVnode && 'children' in childVnode && 'text' in childVnode && 'elm' in childVnode && 'key' in childVnode, `${childVnode} is not a vnode.`);
        }
      });
    }
  }

  const {
    key
  } = data;
  let text, elm;
  const vnode = {
    sel,
    data,
    children,
    text,
    elm,
    key,
    hook: CustomElementHook,
    ctor: Ctor,
    owner: vmBeingRendered,
    mode: 'open' // TODO [#1294]: this should be defined in Ctor

  };
  addVNodeToChildLWC(vnode);
  return vnode;
} // [i]terable node


function i(iterable, factory) {
  const list = []; // TODO [#1276]: compiler should give us some sort of indicator when a vnodes collection is dynamic

  sc(list);
  const vmBeingRendered = getVMBeingRendered();

  if (isUndefined$1(iterable) || iterable === null) {
    if (undefined !== 'production') {
      logError(`Invalid template iteration for value "${toString$1(iterable)}" in ${vmBeingRendered}. It must be an Array or an iterable Object.`, vmBeingRendered);
    }

    return list;
  }

  if (undefined !== 'production') {
    assert.isFalse(isUndefined$1(iterable[SymbolIterator]), `Invalid template iteration for value \`${toString$1(iterable)}\` in ${vmBeingRendered}. It must be an array-like object and not \`null\` nor \`undefined\`.`);
  }

  const iterator = iterable[SymbolIterator]();

  if (undefined !== 'production') {
    assert.isTrue(iterator && isFunction$1(iterator.next), `Invalid iterator function for "${toString$1(iterable)}" in ${vmBeingRendered}.`);
  }

  let next = iterator.next();
  let j = 0;
  let {
    value,
    done: last
  } = next;
  let keyMap;
  let iterationError;

  if (undefined !== 'production') {
    keyMap = create(null);
  }

  while (last === false) {
    // implementing a look-back-approach because we need to know if the element is the last
    next = iterator.next();
    last = next.done; // template factory logic based on the previous collected value

    const vnode = factory(value, j, j === 0, last === true);

    if (isArray$1(vnode)) {
      ArrayPush$1.apply(list, vnode);
    } else {
      ArrayPush$1.call(list, vnode);
    }

    if (undefined !== 'production') {
      const vnodes = isArray$1(vnode) ? vnode : [vnode];
      forEach.call(vnodes, childVnode => {
        if (!isNull(childVnode) && isObject(childVnode) && !isUndefined$1(childVnode.sel)) {
          const {
            key
          } = childVnode;

          if (isString(key) || isNumber(key)) {
            if (keyMap[key] === 1 && isUndefined$1(iterationError)) {
              iterationError = `Duplicated "key" attribute value for "<${childVnode.sel}>" in ${vmBeingRendered} for item number ${j}. A key with value "${childVnode.key}" appears more than once in the iteration. Key values must be unique numbers or strings.`;
            }

            keyMap[key] = 1;
          } else if (isUndefined$1(iterationError)) {
            iterationError = `Invalid "key" attribute value in "<${childVnode.sel}>" in ${vmBeingRendered} for item number ${j}. Set a unique "key" value on all iterated child elements.`;
          }
        }
      });
    } // preparing next value


    j += 1;
    value = next.value;
  }

  if (undefined !== 'production') {
    if (!isUndefined$1(iterationError)) {
      logError(iterationError, vmBeingRendered);
    }
  }

  return list;
}
/**
 * [f]lattening
 */


function f(items) {
  if (undefined !== 'production') {
    assert.isTrue(isArray$1(items), 'flattening api can only work with arrays.');
  }

  const len = items.length;
  const flattened = []; // TODO [#1276]: compiler should give us some sort of indicator when a vnodes collection is dynamic

  sc(flattened);

  for (let j = 0; j < len; j += 1) {
    const item = items[j];

    if (isArray$1(item)) {
      ArrayPush$1.apply(flattened, item);
    } else {
      ArrayPush$1.call(flattened, item);
    }
  }

  return flattened;
} // [t]ext node


function t(text) {
  const data = EmptyObject;
  let sel, children, key, elm;
  return {
    sel,
    data,
    children,
    text,
    elm,
    key,
    hook: TextHook,
    owner: getVMBeingRendered()
  };
} // [co]mment node


function co(text) {
  const data = EmptyObject;
  let sel, children, key, elm;
  return {
    sel,
    data,
    children,
    text,
    elm,
    key,
    hook: CommentHook,
    owner: getVMBeingRendered()
  };
} // [d]ynamic text


function d(value) {
  return value == null ? '' : String(value);
} // [b]ind function


function b(fn) {
  const vmBeingRendered = getVMBeingRendered();

  if (isNull(vmBeingRendered)) {
    throw new Error();
  }

  const vm = vmBeingRendered;
  return function (event) {
    invokeEventListener(vm, fn, vm.component, event);
  };
} // [k]ey function


function k(compilerKey, obj) {
  switch (typeof obj) {
    case 'number':
    case 'string':
      return compilerKey + ':' + obj;

    case 'object':
      if (undefined !== 'production') {
        assert.fail(`Invalid key value "${obj}" in ${getVMBeingRendered()}. Key must be a string or number.`);
      }

  }
} // [g]lobal [id] function


function gid(id) {
  const vmBeingRendered = getVMBeingRendered();

  if (isUndefined$1(id) || id === '') {
    if (undefined !== 'production') {
      logError(`Invalid id value "${id}". The id attribute must contain a non-empty string.`, vmBeingRendered);
    }

    return id;
  } // We remove attributes when they are assigned a value of null


  if (isNull(id)) {
    return null;
  }

  const {
    idx,
    shadowMode
  } = vmBeingRendered;

  if (shadowMode === 1
  /* Synthetic */
  ) {
    return StringReplace.call(id, /\S+/g, id => `${id}-${idx}`);
  }

  return id;
} // [f]ragment [id] function


function fid(url) {
  const vmBeingRendered = getVMBeingRendered();

  if (isUndefined$1(url) || url === '') {
    if (undefined !== 'production') {
      if (isUndefined$1(url)) {
        logError(`Undefined url value for "href" or "xlink:href" attribute. Expected a non-empty string.`, vmBeingRendered);
      }
    }

    return url;
  } // We remove attributes when they are assigned a value of null


  if (isNull(url)) {
    return null;
  }

  const {
    idx,
    shadowMode
  } = vmBeingRendered; // Apply transformation only for fragment-only-urls, and only in shadow DOM

  if (shadowMode === 1
  /* Synthetic */
  && /^#/.test(url)) {
    return `${url}-${idx}`;
  }

  return url;
}
/**
 * Map to store an index value assigned to any dynamic component reference ingested
 * by dc() api. This allows us to generate a unique unique per template per dynamic
 * component reference to avoid diffing algo mismatches.
 */


const DynamicImportedComponentMap = new Map();
let dynamicImportedComponentCounter = 0;
/**
 * create a dynamic component via `<x-foo lwc:dynamic={Ctor}>`
 */

function dc(sel, Ctor, data, children) {
  if (undefined !== 'production') {
    assert.isTrue(isString(sel), `dc() 1st argument sel must be a string.`);
    assert.isTrue(isObject(data), `dc() 3nd argument data must be an object.`);
    assert.isTrue(arguments.length === 3 || isArray$1(children), `dc() 4nd argument data must be an array.`);
  } // null or undefined values should produce a null value in the VNodes


  if (Ctor == null) {
    return null;
  }

  if (!isComponentConstructor(Ctor)) {
    throw new Error(`Invalid LWC Constructor ${toString$1(Ctor)} for custom element <${sel}>.`);
  }

  let idx = DynamicImportedComponentMap.get(Ctor);

  if (isUndefined$1(idx)) {
    idx = dynamicImportedComponentCounter++;
    DynamicImportedComponentMap.set(Ctor, idx);
  } // the new vnode key is a mix of idx and compiler key, this is required by the diffing algo
  // to identify different constructors as vnodes with different keys to avoid reusing the
  // element used for previous constructors.


  data.key = `dc:${idx}:${data.key}`;
  return c(sel, Ctor, data, children);
}
/**
 * slow children collection marking mechanism. this API allows the compiler to signal
 * to the engine that a particular collection of children must be diffed using the slow
 * algo based on keys due to the nature of the list. E.g.:
 *
 *   - slot element's children: the content of the slot has to be dynamic when in synthetic
 *                              shadow mode because the `vnode.children` might be the slotted
 *                              content vs default content, in which case the size and the
 *                              keys are not matching.
 *   - children that contain dynamic components
 *   - children that are produced by iteration
 *
 */


function sc(vnodes) {
  if (undefined !== 'production') {
    assert.isTrue(isArray$1(vnodes), 'sc() api can only work with arrays.');
  } // We have to mark the vnodes collection as dynamic so we can later on
  // choose to use the snabbdom virtual dom diffing algo instead of our
  // static dummy algo.


  markAsDynamicChildren(vnodes);
  return vnodes;
}
/**
 * EXPERIMENTAL: This function acts like a hook for Lightning Locker Service and other similar
 * libraries to sanitize HTML content. This hook process the content passed via the template to
 * lwc:inner-html directive.
 * It is meant to be overridden with setSanitizeHtmlContentHook, it throws an error by default.
 */


let sanitizeHtmlContentHook = () => {
  // locker-service patches this function during runtime to sanitize HTML content.
  throw new Error('sanitizeHtmlContent hook must be implemented.');
};
/**
 * Sets the sanitizeHtmlContentHook.
 */


function setSanitizeHtmlContentHook(newHookImpl) {
  sanitizeHtmlContentHook = newHookImpl;
} // [s]anitize [h]tml [c]ontent

function shc(content) {
  return sanitizeHtmlContentHook(content);
}

const api = freeze({
  s,
  h,
  c,
  i,
  f,
  t,
  d,
  b,
  k,
  co,
  dc,
  ti,
  gid,
  fid,
  shc
});

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function makeHostToken(token) {
  return `${token}-host`;
}

function createInlineStyleVNode(content) {
  return api.h('style', {
    key: 'style',
    attrs: {
      type: 'text/css'
    }
  }, [api.t(content)]);
}

function updateStylesheetToken(vm, template) {
  const {
    elm,
    context,
    renderer,
    renderMode,
    shadowMode
  } = vm;
  const {
    stylesheets: newStylesheets,
    stylesheetToken: newStylesheetToken
  } = template;
  const isSyntheticShadow = renderMode === 1
  /* Shadow */
  && shadowMode === 1
  /* Synthetic */
  ;
  const {
    hasScopedStyles
  } = context;
  let newToken;
  let newHasTokenInClass;
  let newHasTokenInAttribute; // Reset the styling token applied to the host element.

  const {
    stylesheetToken: oldToken,
    hasTokenInClass: oldHasTokenInClass,
    hasTokenInAttribute: oldHasTokenInAttribute
  } = context;

  if (oldHasTokenInClass) {
    renderer.getClassList(elm).remove(makeHostToken(oldToken));
  }

  if (oldHasTokenInAttribute) {
    renderer.removeAttribute(elm, makeHostToken(oldToken));
  } // Apply the new template styling token to the host element, if the new template has any
  // associated stylesheets. In the case of light DOM, also ensure there is at least one scoped stylesheet.


  if (!isUndefined$1(newStylesheets) && newStylesheets.length !== 0) {
    newToken = newStylesheetToken;
  } // Set the new styling token on the host element


  if (!isUndefined$1(newToken)) {
    if (hasScopedStyles) {
      renderer.getClassList(elm).add(makeHostToken(newToken));
      newHasTokenInClass = true;
    }

    if (isSyntheticShadow) {
      renderer.setAttribute(elm, makeHostToken(newToken), '');
      newHasTokenInAttribute = true;
    }
  } // Update the styling tokens present on the context object.


  context.stylesheetToken = newToken;
  context.hasTokenInClass = newHasTokenInClass;
  context.hasTokenInAttribute = newHasTokenInAttribute;
}

function evaluateStylesheetsContent(stylesheets, stylesheetToken, vm) {
  const content = [];

  for (let i = 0; i < stylesheets.length; i++) {
    let stylesheet = stylesheets[i];

    if (isArray$1(stylesheet)) {
      ArrayPush$1.apply(content, evaluateStylesheetsContent(stylesheet, stylesheetToken, vm));
    } else {
      if (undefined !== 'production') {
        // in dev-mode, we support hot swapping of stylesheet, which means that
        // the component instance might be attempting to use an old version of
        // the stylesheet, while internally, we have a replacement for it.
        stylesheet = getStyleOrSwappedStyle(stylesheet);
      } // Use the actual `:host` selector if we're rendering global CSS for light DOM, or if we're rendering
      // native shadow DOM. Synthetic shadow DOM never uses `:host`.


      const isScopedCss = stylesheet[KEY__SCOPED_CSS];
      const useActualHostSelector = vm.renderMode === 0
      /* Light */
      ? !isScopedCss : vm.shadowMode === 0
      /* Native */
      ; // Apply the scope token only if the stylesheet itself is scoped, or if we're rendering synthetic shadow.

      const scopeToken = isScopedCss || vm.shadowMode === 1
      /* Synthetic */
      && vm.renderMode === 1
      /* Shadow */
      ? stylesheetToken : undefined;
      ArrayPush$1.call(content, stylesheet(useActualHostSelector, scopeToken));
    }
  }

  return content;
}

function getStylesheetsContent(vm, template) {
  const {
    stylesheets,
    stylesheetToken
  } = template;
  let content = [];

  if (!isUndefined$1(stylesheets) && stylesheets.length !== 0) {
    content = evaluateStylesheetsContent(stylesheets, stylesheetToken, vm);
  }

  return content;
} // It might be worth caching this to avoid doing the lookup repeatedly, but
// perf testing has not shown it to be a huge improvement yet:
// https://github.com/salesforce/lwc/pull/2460#discussion_r691208892

function getNearestNativeShadowComponent(vm) {
  let owner = vm;

  while (!isNull(owner)) {
    if (owner.renderMode === 1
    /* Shadow */
    && owner.shadowMode === 0
    /* Native */
    ) {
      return owner;
    }

    owner = owner.owner;
  }

  return owner;
}

function createStylesheet(vm, stylesheets) {
  const {
    renderer,
    renderMode,
    shadowMode
  } = vm;

  if (renderMode === 1
  /* Shadow */
  && shadowMode === 1
  /* Synthetic */
  ) {
    for (let i = 0; i < stylesheets.length; i++) {
      renderer.insertGlobalStylesheet(stylesheets[i]);
    }
  } else if (renderer.ssr || renderer.isHydrating()) {
    // Note: We need to ensure that during hydration, the stylesheets method is the same as those in ssr.
    //       This works in the client, because the stylesheets are created, and cached in the VM
    //       the first time the VM renders.
    // native shadow or light DOM, SSR
    const combinedStylesheetContent = ArrayJoin.call(stylesheets, '\n');
    return createInlineStyleVNode(combinedStylesheetContent);
  } else {
    // native shadow or light DOM, DOM renderer
    const root = getNearestNativeShadowComponent(vm);
    const isGlobal = isNull(root);

    for (let i = 0; i < stylesheets.length; i++) {
      if (isGlobal) {
        renderer.insertGlobalStylesheet(stylesheets[i]);
      } else {
        // local level
        renderer.insertStylesheet(stylesheets[i], root.cmpRoot);
      }
    }
  }

  return null;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const operationIdNameMapping = ['constructor', 'render', 'patch', 'connectedCallback', 'renderedCallback', 'disconnectedCallback', 'errorCallback', 'lwc-hydrate', 'lwc-rehydrate']; // Even if all the browser the engine supports implements the UserTiming API, we need to guard the measure APIs.
// JSDom (used in Jest) for example doesn't implement the UserTiming APIs.

const isUserTimingSupported = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';
const start = !isUserTimingSupported ? noop : markName => {
  performance.mark(markName);
};
const end = !isUserTimingSupported ? noop : (measureName, markName) => {
  performance.measure(measureName, markName); // Clear the created marks and measure to avoid filling the performance entries buffer.
  // Note: Even if the entries get deleted, existing PerformanceObservers preserve a copy of those entries.

  performance.clearMarks(markName);
  performance.clearMeasures(measureName);
};

function getOperationName(opId) {
  return operationIdNameMapping[opId];
}

function getMeasureName(opId, vm) {
  return `${getComponentTag(vm)} - ${getOperationName(opId)}`;
}

function getMarkName(opId, vm) {
  // Adding the VM idx to the mark name creates a unique mark name component instance. This is necessary to produce
  // the right measures for components that are recursive.
  return `${getMeasureName(opId, vm)} - ${vm.idx}`;
}
/** Indicates if operations should be logged via the User Timing API. */


const isMeasureEnabled = undefined !== 'production';
/** Indicates if operations should be logged by the profiler. */

let isProfilerEnabled = false;
/** The currently assigned profiler dispatcher. */

let currentDispatcher = noop;
const profilerControl = {
  enableProfiler() {
    isProfilerEnabled = true;
  },

  disableProfiler() {
    isProfilerEnabled = false;
  },

  attachDispatcher(dispatcher) {
    currentDispatcher = dispatcher;
    this.enableProfiler();
  },

  detachDispatcher() {
    const dispatcher = currentDispatcher;
    currentDispatcher = noop;
    this.disableProfiler();
    return dispatcher;
  }

};
function logOperationStart(opId, vm) {
  if (isMeasureEnabled) {
    const markName = getMarkName(opId, vm);
    start(markName);
  }

  if (isProfilerEnabled) {
    currentDispatcher(opId, 0
    /* Start */
    , vm.tagName, vm.idx);
  }
}
function logOperationEnd(opId, vm) {
  if (isMeasureEnabled) {
    const markName = getMarkName(opId, vm);
    const measureName = getMeasureName(opId, vm);
    end(measureName, markName);
  }

  if (isProfilerEnabled) {
    currentDispatcher(opId, 1
    /* Stop */
    , vm.tagName, vm.idx);
  }
}
function logGlobalOperationStart(opId, vm) {
  if (isMeasureEnabled) {
    const opName = getOperationName(opId);
    const markName = isUndefined$1(vm) ? opName : getMarkName(opId, vm);
    start(markName);
  }

  if (isProfilerEnabled) {
    currentDispatcher(opId, 0
    /* Start */
    , vm === null || vm === void 0 ? void 0 : vm.tagName, vm === null || vm === void 0 ? void 0 : vm.idx);
  }
}
function logGlobalOperationEnd(opId, vm) {
  if (isMeasureEnabled) {
    const opName = getOperationName(opId);
    const markName = isUndefined$1(vm) ? opName : getMarkName(opId, vm);
    end(opName, markName);
  }

  if (isProfilerEnabled) {
    currentDispatcher(opId, 1
    /* Stop */
    , vm === null || vm === void 0 ? void 0 : vm.tagName, vm === null || vm === void 0 ? void 0 : vm.idx);
  }
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
let isUpdatingTemplate = false;
let vmBeingRendered = null;
function getVMBeingRendered() {
  return vmBeingRendered;
}
function setVMBeingRendered(vm) {
  vmBeingRendered = vm;
}

function validateSlots(vm, html) {
  if (undefined === 'production') {
    // this method should never leak to prod
    throw new ReferenceError();
  }

  const {
    cmpSlots
  } = vm;
  const {
    slots = EmptyArray
  } = html;

  for (const slotName in cmpSlots) {
    // eslint-disable-next-line lwc-internal/no-production-assert
    assert.isTrue(isArray$1(cmpSlots[slotName]), `Slots can only be set to an array, instead received ${toString$1(cmpSlots[slotName])} for slot "${slotName}" in ${vm}.`);

    if (slotName !== '' && ArrayIndexOf.call(slots, slotName) === -1) {
      // TODO [#1297]: this should never really happen because the compiler should always validate
      // eslint-disable-next-line lwc-internal/no-production-assert
      logError(`Ignoring unknown provided slot name "${slotName}" in ${vm}. Check for a typo on the slot attribute.`, vm);
    }
  }
}

function validateLightDomTemplate(template, vm) {
  if (template === defaultEmptyTemplate) return;

  if (vm.renderMode === 0
  /* Light */
  ) {
    assert.isTrue(template.renderMode === 'light', `Light DOM components can't render shadow DOM templates. Add an 'lwc:render-mode="light"' directive to the root template tag of ${getComponentTag(vm)}.`);
  } else {
    assert.isTrue(isUndefined$1(template.renderMode), `Shadow DOM components template can't render light DOM templates. Either remove the 'lwc:render-mode' directive from ${getComponentTag(vm)} or set it to 'lwc:render-mode="shadow"`);
  }
}

function evaluateTemplate(vm, html) {
  if (undefined !== 'production') {
    assert.isTrue(isFunction$1(html), `evaluateTemplate() second argument must be an imported template instead of ${toString$1(html)}`); // in dev-mode, we support hot swapping of templates, which means that
    // the component instance might be attempting to use an old version of
    // the template, while internally, we have a replacement for it.

    html = getTemplateOrSwappedTemplate(html);
  }

  const isUpdatingTemplateInception = isUpdatingTemplate;
  const vmOfTemplateBeingUpdatedInception = vmBeingRendered;
  let vnodes = [];
  runWithBoundaryProtection(vm, vm.owner, () => {
    // pre
    vmBeingRendered = vm;
    logOperationStart(1
    /* Render */
    , vm);
  }, () => {
    // job
    const {
      component,
      context,
      cmpSlots,
      cmpTemplate,
      tro
    } = vm;
    tro.observe(() => {
      // Reset the cache memoizer for template when needed.
      if (html !== cmpTemplate) {
        if (undefined !== 'production') {
          validateLightDomTemplate(html, vm);
        } // Perf opt: do not reset the shadow root during the first rendering (there is
        // nothing to reset).


        if (!isNull(cmpTemplate)) {
          // It is important to reset the content to avoid reusing similar elements
          // generated from a different template, because they could have similar IDs,
          // and snabbdom just rely on the IDs.
          resetComponentRoot(vm);
        } // Check that the template was built by the compiler.


        if (!isTemplateRegistered(html)) {
          throw new TypeError(`Invalid template returned by the render() method on ${vm}. It must return an imported template (e.g.: \`import html from "./${vm.def.name}.html"\`), instead, it has returned: ${toString$1(html)}.`);
        }

        vm.cmpTemplate = html; // Create a brand new template cache for the swapped templated.

        context.tplCache = create(null); // Set the computeHasScopedStyles property in the context, to avoid recomputing it repeatedly.

        context.hasScopedStyles = computeHasScopedStyles(html); // Update the scoping token on the host element.

        updateStylesheetToken(vm, html); // Evaluate, create stylesheet and cache the produced VNode for future
        // re-rendering.

        const stylesheetsContent = getStylesheetsContent(vm, html);
        context.styleVNode = stylesheetsContent.length === 0 ? null : createStylesheet(vm, stylesheetsContent);
      }

      if (undefined !== 'production') {
        // validating slots in every rendering since the allocated content might change over time
        validateSlots(vm, html); // add the VM to the list of host VMs that can be re-rendered if html is swapped

        setActiveVM(vm);
      } // right before producing the vnodes, we clear up all internal references
      // to custom elements from the template.


      vm.velements = []; // Set the global flag that template is being updated

      isUpdatingTemplate = true;
      vnodes = html.call(undefined, api, component, cmpSlots, context.tplCache);
      const {
        styleVNode
      } = context;

      if (!isNull(styleVNode)) {
        ArrayUnshift.call(vnodes, styleVNode);
      }
    });
  }, () => {
    // post
    isUpdatingTemplate = isUpdatingTemplateInception;
    vmBeingRendered = vmOfTemplateBeingUpdatedInception;
    logOperationEnd(1
    /* Render */
    , vm);
  });

  if (undefined !== 'production') {
    assert.invariant(isArray$1(vnodes), `Compiler should produce html functions that always return an array.`);
  }

  return vnodes;
}
function computeHasScopedStyles(template) {
  const {
    stylesheets
  } = template;

  if (!isUndefined$1(stylesheets)) {
    for (let i = 0; i < stylesheets.length; i++) {
      if (isTrue(stylesheets[i][KEY__SCOPED_CSS])) {
        return true;
      }
    }
  }

  return false;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function addErrorComponentStack(vm, error) {
  if (!isFrozen(error) && isUndefined$1(error.wcStack)) {
    const wcStack = getErrorComponentStack(vm);
    defineProperty(error, 'wcStack', {
      get() {
        return wcStack;
      }

    });
  }
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
let isInvokingRender = false;
let vmBeingConstructed = null;
function isBeingConstructed(vm) {
  return vmBeingConstructed === vm;
}
function invokeComponentCallback(vm, fn, args) {
  const {
    component,
    callHook,
    owner
  } = vm;
  runWithBoundaryProtection(vm, owner, noop, () => {
    callHook(component, fn, args);
  }, noop);
}
function invokeComponentConstructor(vm, Ctor) {
  const vmBeingConstructedInception = vmBeingConstructed;
  let error;
  logOperationStart(0
  /* Constructor */
  , vm);
  vmBeingConstructed = vm;
  /**
   * Constructors don't need to be wrapped with a boundary because for root elements
   * it should throw, while elements from template are already wrapped by a boundary
   * associated to the diffing algo.
   */

  try {
    // job
    const result = new Ctor(); // Check indirectly if the constructor result is an instance of LightningElement. Using
    // the "instanceof" operator would not work here since Locker Service provides its own
    // implementation of LightningElement, so we indirectly check if the base constructor is
    // invoked by accessing the component on the vm.

    if (vmBeingConstructed.component !== result) {
      throw new TypeError('Invalid component constructor, the class should extend LightningElement.');
    }
  } catch (e) {
    error = Object(e);
  } finally {
    logOperationEnd(0
    /* Constructor */
    , vm);
    vmBeingConstructed = vmBeingConstructedInception;

    if (!isUndefined$1(error)) {
      addErrorComponentStack(vm, error); // re-throwing the original error annotated after restoring the context

      throw error; // eslint-disable-line no-unsafe-finally
    }
  }
}
function invokeComponentRenderMethod(vm) {
  const {
    def: {
      render
    },
    callHook,
    component,
    owner
  } = vm;
  const isRenderBeingInvokedInception = isInvokingRender;
  const vmBeingRenderedInception = getVMBeingRendered();
  let html;
  let renderInvocationSuccessful = false;
  runWithBoundaryProtection(vm, owner, () => {
    // pre
    isInvokingRender = true;
    setVMBeingRendered(vm);
  }, () => {
    // job
    vm.tro.observe(() => {
      html = callHook(component, render);
      renderInvocationSuccessful = true;
    });
  }, () => {
    // post
    isInvokingRender = isRenderBeingInvokedInception;
    setVMBeingRendered(vmBeingRenderedInception);
  }); // If render() invocation failed, process errorCallback in boundary and return an empty template

  return renderInvocationSuccessful ? evaluateTemplate(vm, html) : [];
}
function invokeEventListener(vm, fn, thisValue, event) {
  const {
    callHook,
    owner
  } = vm;
  runWithBoundaryProtection(vm, owner, noop, () => {
    // job
    if (undefined !== 'production') {
      assert.isTrue(isFunction$1(fn), `Invalid event handler for event '${event.type}' on ${vm}.`);
    }

    callHook(thisValue, fn, [event]);
  }, noop);
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const signedTemplateMap = new Map();
/**
 * INTERNAL: This function can only be invoked by compiled code. The compiler
 * will prevent this function from being imported by userland code.
 */

function registerComponent(Ctor, {
  tmpl
}) {
  signedTemplateMap.set(Ctor, tmpl); // chaining this method as a way to wrap existing assignment of component constructor easily,
  // without too much transformation

  return Ctor;
}
function getComponentRegisteredTemplate(Ctor) {
  return signedTemplateMap.get(Ctor);
}
function getTemplateReactiveObserver(vm) {
  return new ReactiveObserver(() => {
    const {
      isDirty
    } = vm;

    if (isFalse(isDirty)) {
      markComponentAsDirty(vm);
      scheduleRehydration(vm);
    }
  });
}
function renderComponent(vm) {
  if (undefined !== 'production') {
    assert.invariant(vm.isDirty, `${vm} is not dirty.`);
  }

  vm.tro.reset();
  const vnodes = invokeComponentRenderMethod(vm);
  vm.isDirty = false;
  vm.isScheduled = false;
  return vnodes;
}
function markComponentAsDirty(vm) {
  if (undefined !== 'production') {
    const vmBeingRendered = getVMBeingRendered();
    assert.isFalse(vm.isDirty, `markComponentAsDirty() for ${vm} should not be called when the component is already dirty.`);
    assert.isFalse(isInvokingRender, `markComponentAsDirty() for ${vm} cannot be called during rendering of ${vmBeingRendered}.`);
    assert.isFalse(isUpdatingTemplate, `markComponentAsDirty() for ${vm} cannot be called while updating template of ${vmBeingRendered}.`);
  }

  vm.isDirty = true;
}
const cmpEventListenerMap = new WeakMap();
function getWrappedComponentsListener(vm, listener) {
  if (!isFunction$1(listener)) {
    throw new TypeError(); // avoiding problems with non-valid listeners
  }

  let wrappedListener = cmpEventListenerMap.get(listener);

  if (isUndefined$1(wrappedListener)) {
    wrappedListener = function (event) {
      invokeEventListener(vm, listener, undefined, event);
    };

    cmpEventListenerMap.set(listener, wrappedListener);
  }

  return wrappedListener;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const Services = create(null);
const hooks = ['rendered', 'connected', 'disconnected'];
/**
 * EXPERIMENTAL: This function allows for the registration of "services"
 * in LWC by exposing hooks into the component life-cycle. This API is
 * subject to change or being removed.
 */

function register(service) {
  if (undefined !== 'production') {
    assert.isTrue(isObject(service), `Invalid service declaration, ${service}: service must be an object`);
  }

  for (let i = 0; i < hooks.length; ++i) {
    const hookName = hooks[i];

    if (hookName in service) {
      let l = Services[hookName];

      if (isUndefined$1(l)) {
        Services[hookName] = l = [];
      }

      ArrayPush$1.call(l, service[hookName]);
    }
  }
}
function invokeServiceHook(vm, cbs) {
  if (undefined !== 'production') {
    assert.isTrue(isArray$1(cbs) && cbs.length > 0, `Optimize invokeServiceHook() to be invoked only when needed`);
  }

  const {
    component,
    def,
    context
  } = vm;

  for (let i = 0, len = cbs.length; i < len; ++i) {
    cbs[i].call(undefined, component, {}, def, context);
  }
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
let idx = 0;
/** The internal slot used to associate different objects the engine manipulates with the VM */

const ViewModelReflection = new WeakMap();

function callHook(cmp, fn, args = []) {
  return fn.apply(cmp, args);
}

function setHook(cmp, prop, newValue) {
  cmp[prop] = newValue;
}

function getHook(cmp, prop) {
  return cmp[prop];
}

function rerenderVM(vm) {
  rehydrate(vm);
}
function connectRootElement(elm) {
  const vm = getAssociatedVM(elm);
  logGlobalOperationStart(7
  /* GlobalHydrate */
  , vm); // Usually means moving the element from one place to another, which is observable via
  // life-cycle hooks.

  if (vm.state === 1
  /* connected */
  ) {
    disconnectRootElement(elm);
  }

  runConnectedCallback(vm);
  rehydrate(vm);
  logGlobalOperationEnd(7
  /* GlobalHydrate */
  , vm);
}
function hydrateRootElement(elm) {
  const vm = getAssociatedVM(elm);
  runConnectedCallback(vm);
  hydrateVM(vm);
}
function disconnectRootElement(elm) {
  const vm = getAssociatedVM(elm);
  resetComponentStateWhenRemoved(vm);
}
function appendVM(vm) {
  rehydrate(vm);
}
function hydrateVM(vm) {
  hydrate(vm);
} // just in case the component comes back, with this we guarantee re-rendering it
// while preventing any attempt to rehydration until after reinsertion.

function resetComponentStateWhenRemoved(vm) {
  const {
    state
  } = vm;

  if (state !== 2
  /* disconnected */
  ) {
    const {
      oar,
      tro
    } = vm; // Making sure that any observing record will not trigger the rehydrated on this vm

    tro.reset(); // Making sure that any observing accessor record will not trigger the setter to be reinvoked

    for (const key in oar) {
      oar[key].reset();
    }

    runDisconnectedCallback(vm); // Spec: https://dom.spec.whatwg.org/#concept-node-remove (step 14-15)

    runChildNodesDisconnectedCallback(vm);
    runLightChildNodesDisconnectedCallback(vm);
  }

  if (undefined !== 'production') {
    removeActiveVM(vm);
  }
} // this method is triggered by the diffing algo only when a vnode from the
// old vnode.children is removed from the DOM.


function removeVM(vm) {
  if (undefined !== 'production') {
    assert.isTrue(vm.state === 1
    /* connected */
    || vm.state === 2
    /* disconnected */
    , `${vm} must have been connected.`);
  }

  resetComponentStateWhenRemoved(vm);
}

function getNearestShadowAncestor(vm) {
  let ancestor = vm.owner;

  while (!isNull(ancestor) && ancestor.renderMode === 0
  /* Light */
  ) {
    ancestor = ancestor.owner;
  }

  return ancestor;
}

function createVM(elm, def, options) {
  const {
    mode,
    owner,
    renderer,
    tagName
  } = options;
  const vm = {
    elm,
    def,
    idx: idx++,
    state: 0
    /* created */
    ,
    isScheduled: false,
    isDirty: true,
    tagName,
    mode,
    owner,
    renderer,
    children: EmptyArray,
    aChildren: EmptyArray,
    velements: EmptyArray,
    cmpProps: create(null),
    cmpFields: create(null),
    cmpSlots: create(null),
    oar: create(null),
    cmpTemplate: null,
    renderMode: def.renderMode,
    shadowMode: null,
    context: {
      stylesheetToken: undefined,
      hasTokenInClass: undefined,
      hasTokenInAttribute: undefined,
      hasScopedStyles: undefined,
      styleVNode: null,
      tplCache: EmptyObject,
      wiredConnecting: EmptyArray,
      wiredDisconnecting: EmptyArray
    },
    tro: null,
    component: null,
    cmpRoot: null,
    callHook,
    setHook,
    getHook
  };
  vm.shadowMode = computeShadowMode(vm);
  vm.tro = getTemplateReactiveObserver(vm);

  if (undefined !== 'production') {
    vm.toString = () => {
      return `[object:vm ${def.name} (${vm.idx})]`;
    };

    if (runtimeFlags.ENABLE_FORCE_NATIVE_SHADOW_MODE_FOR_TEST) {
      vm.shadowMode = 0
      /* Native */
      ;
    }
  } // Create component instance associated to the vm and the element.


  invokeComponentConstructor(vm, def.ctor); // Initializing the wire decorator per instance only when really needed

  if (hasWireAdapters(vm)) {
    installWireAdapters(vm);
  }

  return vm;
}

function computeShadowMode(vm) {
  const {
    def,
    renderer
  } = vm;
  const {
    isNativeShadowDefined,
    isSyntheticShadowDefined
  } = renderer;
  let shadowMode;

  if (isSyntheticShadowDefined) {
    if (def.renderMode === 0
    /* Light */
    ) {
      // ShadowMode.Native implies "not synthetic shadow" which is consistent with how
      // everything defaults to native when the synthetic shadow polyfill is unavailable.
      shadowMode = 0
      /* Native */
      ;
    } else if (isNativeShadowDefined) {
      if (def.shadowSupportMode === "any"
      /* Any */
      ) {
        shadowMode = 0
        /* Native */
        ;
      } else {
        const shadowAncestor = getNearestShadowAncestor(vm);

        if (!isNull(shadowAncestor) && shadowAncestor.shadowMode === 0
        /* Native */
        ) {
          // Transitive support for native Shadow DOM. A component in native mode
          // transitively opts all of its descendants into native.
          shadowMode = 0
          /* Native */
          ;
        } else {
          // Synthetic if neither this component nor any of its ancestors are configured
          // to be native.
          shadowMode = 1
          /* Synthetic */
          ;
        }
      }
    } else {
      // Synthetic if there is no native Shadow DOM support.
      shadowMode = 1
      /* Synthetic */
      ;
    }
  } else {
    // Native if the synthetic shadow polyfill is unavailable.
    shadowMode = 0
    /* Native */
    ;
  }

  return shadowMode;
}

function assertIsVM(obj) {
  if (isNull(obj) || !isObject(obj) || !('cmpRoot' in obj)) {
    throw new TypeError(`${obj} is not a VM.`);
  }
}

function associateVM(obj, vm) {
  ViewModelReflection.set(obj, vm);
}
function getAssociatedVM(obj) {
  const vm = ViewModelReflection.get(obj);

  if (undefined !== 'production') {
    assertIsVM(vm);
  }

  return vm;
}
function getAssociatedVMIfPresent(obj) {
  const maybeVm = ViewModelReflection.get(obj);

  if (undefined !== 'production') {
    if (!isUndefined$1(maybeVm)) {
      assertIsVM(maybeVm);
    }
  }

  return maybeVm;
}

function rehydrate(vm) {
  if (isTrue(vm.isDirty)) {
    const children = renderComponent(vm);
    patchShadowRoot(vm, children);
  }
}

function hydrate(vm) {
  if (isTrue(vm.isDirty)) {
    // manually diffing/patching here.
    // This routine is:
    // patchShadowRoot(vm, children);
    //  -> addVnodes.
    const children = renderComponent(vm);
    vm.children = children;
    const vmChildren = vm.renderMode === 0
    /* Light */
    ? vm.elm.childNodes : vm.elm.shadowRoot.childNodes;
    hydrateChildrenHook(vmChildren, children, vm);
    runRenderedCallback(vm);
  }
}

function patchShadowRoot(vm, newCh) {
  const {
    children: oldCh
  } = vm; // caching the new children collection

  vm.children = newCh;

  if (newCh.length > 0 || oldCh.length > 0) {
    // patch function mutates vnodes by adding the element reference,
    // however, if patching fails it contains partial changes.
    if (oldCh !== newCh) {
      const fn = hasDynamicChildren(newCh) ? updateDynamicChildren : updateStaticChildren;
      runWithBoundaryProtection(vm, vm, () => {
        // pre
        logOperationStart(2
        /* Patch */
        , vm);
      }, () => {
        // job
        const elementToRenderTo = getRenderRoot(vm);
        fn(elementToRenderTo, oldCh, newCh);
      }, () => {
        // post
        logOperationEnd(2
        /* Patch */
        , vm);
      });
    }
  }

  if (vm.state === 1
  /* connected */
  ) {
    // If the element is connected, that means connectedCallback was already issued, and
    // any successive rendering should finish with the call to renderedCallback, otherwise
    // the connectedCallback will take care of calling it in the right order at the end of
    // the current rehydration process.
    runRenderedCallback(vm);
  }
}

function runRenderedCallback(vm) {
  const {
    renderer,
    def: {
      renderedCallback
    }
  } = vm;

  if (isTrue(renderer.ssr)) {
    return;
  }

  const {
    rendered
  } = Services;

  if (rendered) {
    invokeServiceHook(vm, rendered);
  }

  if (!isUndefined$1(renderedCallback)) {
    logOperationStart(4
    /* RenderedCallback */
    , vm);
    invokeComponentCallback(vm, renderedCallback);
    logOperationEnd(4
    /* RenderedCallback */
    , vm);
  }
}

let rehydrateQueue = [];

function flushRehydrationQueue() {
  logGlobalOperationStart(8
  /* GlobalRehydrate */
  );

  if (undefined !== 'production') {
    assert.invariant(rehydrateQueue.length, `If rehydrateQueue was scheduled, it is because there must be at least one VM on this pending queue instead of ${rehydrateQueue}.`);
  }

  const vms = rehydrateQueue.sort((a, b) => a.idx - b.idx);
  rehydrateQueue = []; // reset to a new queue

  for (let i = 0, len = vms.length; i < len; i += 1) {
    const vm = vms[i];

    try {
      rehydrate(vm);
    } catch (error) {
      if (i + 1 < len) {
        // pieces of the queue are still pending to be rehydrated, those should have priority
        if (rehydrateQueue.length === 0) {
          addCallbackToNextTick(flushRehydrationQueue);
        }

        ArrayUnshift.apply(rehydrateQueue, ArraySlice.call(vms, i + 1));
      } // we need to end the measure before throwing.


      logGlobalOperationEnd(8
      /* GlobalRehydrate */
      ); // re-throwing the original error will break the current tick, but since the next tick is
      // already scheduled, it should continue patching the rest.

      throw error; // eslint-disable-line no-unsafe-finally
    }
  }

  logGlobalOperationEnd(8
  /* GlobalRehydrate */
  );
}

function runConnectedCallback(vm) {
  const {
    state
  } = vm;

  if (state === 1
  /* connected */
  ) {
    return; // nothing to do since it was already connected
  }

  vm.state = 1
  /* connected */
  ; // reporting connection

  const {
    connected
  } = Services;

  if (connected) {
    invokeServiceHook(vm, connected);
  }

  if (hasWireAdapters(vm)) {
    connectWireAdapters(vm);
  }

  const {
    connectedCallback
  } = vm.def;

  if (!isUndefined$1(connectedCallback)) {
    logOperationStart(3
    /* ConnectedCallback */
    , vm);
    invokeComponentCallback(vm, connectedCallback);
    logOperationEnd(3
    /* ConnectedCallback */
    , vm);
  }
}

function hasWireAdapters(vm) {
  return getOwnPropertyNames$1(vm.def.wire).length > 0;
}

function runDisconnectedCallback(vm) {
  if (undefined !== 'production') {
    assert.isTrue(vm.state !== 2
    /* disconnected */
    , `${vm} must be inserted.`);
  }

  if (isFalse(vm.isDirty)) {
    // this guarantees that if the component is reused/reinserted,
    // it will be re-rendered because we are disconnecting the reactivity
    // linking, so mutations are not automatically reflected on the state
    // of disconnected components.
    vm.isDirty = true;
  }

  vm.state = 2
  /* disconnected */
  ; // reporting disconnection

  const {
    disconnected
  } = Services;

  if (disconnected) {
    invokeServiceHook(vm, disconnected);
  }

  if (hasWireAdapters(vm)) {
    disconnectWireAdapters(vm);
  }

  const {
    disconnectedCallback
  } = vm.def;

  if (!isUndefined$1(disconnectedCallback)) {
    logOperationStart(5
    /* DisconnectedCallback */
    , vm);
    invokeComponentCallback(vm, disconnectedCallback);
    logOperationEnd(5
    /* DisconnectedCallback */
    , vm);
  }
}

function runChildNodesDisconnectedCallback(vm) {
  const {
    velements: vCustomElementCollection
  } = vm; // Reporting disconnection for every child in inverse order since they are
  // inserted in reserved order.

  for (let i = vCustomElementCollection.length - 1; i >= 0; i -= 1) {
    const {
      elm
    } = vCustomElementCollection[i]; // There are two cases where the element could be undefined:
    // * when there is an error during the construction phase, and an error
    //   boundary picks it, there is a possibility that the VCustomElement
    //   is not properly initialized, and therefore is should be ignored.
    // * when slotted custom element is not used by the element where it is
    //   slotted into it, as  a result, the custom element was never
    //   initialized.

    if (!isUndefined$1(elm)) {
      const childVM = getAssociatedVMIfPresent(elm); // The VM associated with the element might be associated undefined
      // in the case where the VM failed in the middle of its creation,
      // eg: constructor throwing before invoking super().

      if (!isUndefined$1(childVM)) {
        resetComponentStateWhenRemoved(childVM);
      }
    }
  }
}

function runLightChildNodesDisconnectedCallback(vm) {
  const {
    aChildren: adoptedChildren
  } = vm;
  recursivelyDisconnectChildren(adoptedChildren);
}
/**
 * The recursion doesn't need to be a complete traversal of the vnode graph,
 * instead it can be partial, when a custom element vnode is found, we don't
 * need to continue into its children because by attempting to disconnect the
 * custom element itself will trigger the removal of anything slotted or anything
 * defined on its shadow.
 */


function recursivelyDisconnectChildren(vnodes) {
  for (let i = 0, len = vnodes.length; i < len; i += 1) {
    const vnode = vnodes[i];

    if (!isNull(vnode) && isArray$1(vnode.children) && !isUndefined$1(vnode.elm)) {
      // vnode is a VElement with children
      if (isUndefined$1(vnode.ctor)) {
        // it is a VElement, just keep looking (recursively)
        recursivelyDisconnectChildren(vnode.children);
      } else {
        // it is a VCustomElement, disconnect it and ignore its children
        resetComponentStateWhenRemoved(getAssociatedVM(vnode.elm));
      }
    }
  }
} // This is a super optimized mechanism to remove the content of the root node (shadow root
// for shadow DOM components and the root element itself for light DOM) without having to go
// into snabbdom. Especially useful when the reset is a consequence of an error, in which case the
// children VNodes might not be representing the current state of the DOM.


function resetComponentRoot(vm) {
  const {
    children,
    renderer
  } = vm;
  const rootNode = getRenderRoot(vm);

  for (let i = 0, len = children.length; i < len; i++) {
    const child = children[i];

    if (!isNull(child) && !isUndefined$1(child.elm)) {
      renderer.remove(child.elm, rootNode);
    }
  }

  vm.children = EmptyArray;
  runChildNodesDisconnectedCallback(vm);
  vm.velements = EmptyArray;
}
function scheduleRehydration(vm) {
  if (isTrue(vm.renderer.ssr) || isTrue(vm.isScheduled)) {
    return;
  }

  vm.isScheduled = true;

  if (rehydrateQueue.length === 0) {
    addCallbackToNextTick(flushRehydrationQueue);
  }

  ArrayPush$1.call(rehydrateQueue, vm);
}

function getErrorBoundaryVM(vm) {
  let currentVm = vm;

  while (!isNull(currentVm)) {
    if (!isUndefined$1(currentVm.def.errorCallback)) {
      return currentVm;
    }

    currentVm = currentVm.owner;
  }
} // slow path routine
// NOTE: we should probably more this routine to the synthetic shadow folder
// and get the allocation to be cached by in the elm instead of in the VM


function allocateInSlot(vm, children) {
  const {
    cmpSlots: oldSlots
  } = vm;
  const cmpSlots = vm.cmpSlots = create(null);

  for (let i = 0, len = children.length; i < len; i += 1) {
    const vnode = children[i];

    if (isNull(vnode)) {
      continue;
    }

    const {
      data
    } = vnode;
    const slotName = data.attrs && data.attrs.slot || '';
    const vnodes = cmpSlots[slotName] = cmpSlots[slotName] || []; // re-keying the vnodes is necessary to avoid conflicts with default content for the slot
    // which might have similar keys. Each vnode will always have a key that
    // starts with a numeric character from compiler. In this case, we add a unique
    // notation for slotted vnodes keys, e.g.: `@foo:1:1`

    if (!isUndefined$1(vnode.key)) {
      vnode.key = `@${slotName}:${vnode.key}`;
    }

    ArrayPush$1.call(vnodes, vnode);
  }

  if (isFalse(vm.isDirty)) {
    // We need to determine if the old allocation is really different from the new one
    // and mark the vm as dirty
    const oldKeys = keys(oldSlots);

    if (oldKeys.length !== keys(cmpSlots).length) {
      markComponentAsDirty(vm);
      return;
    }

    for (let i = 0, len = oldKeys.length; i < len; i += 1) {
      const key = oldKeys[i];

      if (isUndefined$1(cmpSlots[key]) || oldSlots[key].length !== cmpSlots[key].length) {
        markComponentAsDirty(vm);
        return;
      }

      const oldVNodes = oldSlots[key];
      const vnodes = cmpSlots[key];

      for (let j = 0, a = cmpSlots[key].length; j < a; j += 1) {
        if (oldVNodes[j] !== vnodes[j]) {
          markComponentAsDirty(vm);
          return;
        }
      }
    }
  }
}
function runWithBoundaryProtection(vm, owner, pre, job, post) {
  let error;
  pre();

  try {
    job();
  } catch (e) {
    error = Object(e);
  } finally {
    post();

    if (!isUndefined$1(error)) {
      addErrorComponentStack(vm, error);
      const errorBoundaryVm = isNull(owner) ? undefined : getErrorBoundaryVM(owner);

      if (isUndefined$1(errorBoundaryVm)) {
        throw error; // eslint-disable-line no-unsafe-finally
      }

      resetComponentRoot(vm); // remove offenders

      logOperationStart(6
      /* ErrorCallback */
      , vm); // error boundaries must have an ErrorCallback

      const errorCallback = errorBoundaryVm.def.errorCallback;
      invokeComponentCallback(errorBoundaryVm, errorCallback, [error, error.wcStack]);
      logOperationEnd(6
      /* ErrorCallback */
      , vm);
    }
  }
}
function forceRehydration(vm) {
  // if we must reset the shadowRoot content and render the template
  // from scratch on an active instance, the way to force the reset
  // is by replacing the value of old template, which is used during
  // to determine if the template has changed or not during the rendering
  // process. If the template returned by render() is different from the
  // previous stored template, the styles will be reset, along with the
  // content of the shadowRoot, this way we can guarantee that all children
  // elements will be throw away, and new instances will be created.
  vm.cmpTemplate = () => [];

  if (isFalse(vm.isDirty)) {
    // forcing the vm to rehydrate in the next tick
    markComponentAsDirty(vm);
    scheduleRehydration(vm);
  }
}
function getRenderRoot(vm) {
  return vm.renderMode === 1
  /* Shadow */
  ? vm.cmpRoot : vm.elm;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const DeprecatedWiredElementHost = '$$DeprecatedWiredElementHostKey$$';
const DeprecatedWiredParamsMeta = '$$DeprecatedWiredParamsMetaKey$$';
const WireMetaMap = new Map();
class WireContextRegistrationEvent extends CustomEvent {
  constructor(adapterToken, {
    setNewContext,
    setDisconnectedCallback
  }) {
    super(adapterToken, {
      bubbles: true,
      composed: true
    });
    defineProperties(this, {
      setNewContext: {
        value: setNewContext
      },
      setDisconnectedCallback: {
        value: setDisconnectedCallback
      }
    });
  }

}

function createFieldDataCallback(vm, name) {
  const {
    cmpFields
  } = vm;
  return value => {
    if (value !== vm.cmpFields[name]) {
      // storing the value in the underlying storage
      cmpFields[name] = value;
      componentValueMutated(vm, name);
    }
  };
}

function createMethodDataCallback(vm, method) {
  return value => {
    // dispatching new value into the wired method
    runWithBoundaryProtection(vm, vm.owner, noop, () => {
      // job
      method.call(vm.component, value);
    }, noop);
  };
}

function createConfigWatcher(component, configCallback, callbackWhenConfigIsReady) {
  let hasPendingConfig = false; // creating the reactive observer for reactive params when needed

  const ro = new ReactiveObserver(() => {
    if (hasPendingConfig === false) {
      hasPendingConfig = true; // collect new config in the micro-task

      Promise.resolve().then(() => {
        hasPendingConfig = false; // resetting current reactive params

        ro.reset(); // dispatching a new config due to a change in the configuration

        computeConfigAndUpdate();
      });
    }
  });

  const computeConfigAndUpdate = () => {
    let config;
    ro.observe(() => config = configCallback(component)); // eslint-disable-next-line lwc-internal/no-invalid-todo
    // TODO: dev-mode validation of config based on the adapter.configSchema
    // @ts-ignore it is assigned in the observe() callback

    callbackWhenConfigIsReady(config);
  };

  return {
    computeConfigAndUpdate,
    ro
  };
}

function createContextWatcher(vm, wireDef, callbackWhenContextIsReady) {
  const {
    adapter
  } = wireDef;
  const adapterContextToken = getAdapterToken(adapter);

  if (isUndefined$1(adapterContextToken)) {
    return; // no provider found, nothing to be done
  }

  const {
    elm,
    renderer,
    context: {
      wiredConnecting,
      wiredDisconnecting
    }
  } = vm; // waiting for the component to be connected to formally request the context via the token

  ArrayPush$1.call(wiredConnecting, () => {
    // This event is responsible for connecting the host element with another
    // element in the composed path that is providing contextual data. The provider
    // must be listening for a special dom event with the name corresponding to the value of
    // `adapterContextToken`, which will remain secret and internal to this file only to
    // guarantee that the linkage can be forged.
    const contextRegistrationEvent = new WireContextRegistrationEvent(adapterContextToken, {
      setNewContext(newContext) {
        // eslint-disable-next-line lwc-internal/no-invalid-todo
        // TODO: dev-mode validation of config based on the adapter.contextSchema
        callbackWhenContextIsReady(newContext);
      },

      setDisconnectedCallback(disconnectCallback) {
        // adds this callback into the disconnect bucket so it gets disconnected from parent
        // the the element hosting the wire is disconnected
        ArrayPush$1.call(wiredDisconnecting, disconnectCallback);
      }

    });
    renderer.dispatchEvent(elm, contextRegistrationEvent);
  });
}

function createConnector(vm, name, wireDef) {
  const {
    method,
    adapter,
    configCallback,
    dynamic
  } = wireDef;
  const dataCallback = isUndefined$1(method) ? createFieldDataCallback(vm, name) : createMethodDataCallback(vm, method);
  let context;
  let connector; // Workaround to pass the component element associated to this wire adapter instance.

  defineProperty(dataCallback, DeprecatedWiredElementHost, {
    value: vm.elm
  });
  defineProperty(dataCallback, DeprecatedWiredParamsMeta, {
    value: dynamic
  });
  runWithBoundaryProtection(vm, vm, noop, () => {
    // job
    connector = new adapter(dataCallback);
  }, noop);

  const updateConnectorConfig = config => {
    // every time the config is recomputed due to tracking,
    // this callback will be invoked with the new computed config
    runWithBoundaryProtection(vm, vm, noop, () => {
      // job
      connector.update(config, context);
    }, noop);
  }; // Computes the current wire config and calls the update method on the wire adapter.
  // If it has params, we will need to observe changes in the next tick.


  const {
    computeConfigAndUpdate,
    ro
  } = createConfigWatcher(vm.component, configCallback, updateConnectorConfig); // if the adapter needs contextualization, we need to watch for new context and push it alongside the config

  if (!isUndefined$1(adapter.contextSchema)) {
    createContextWatcher(vm, wireDef, newContext => {
      // every time the context is pushed into this component,
      // this callback will be invoked with the new computed context
      if (context !== newContext) {
        context = newContext; // Note: when new context arrives, the config will be recomputed and pushed along side the new
        // context, this is to preserve the identity characteristics, config should not have identity
        // (ever), while context can have identity

        if (vm.state === 1
        /* connected */
        ) {
          computeConfigAndUpdate();
        }
      }
    });
  }

  return {
    // @ts-ignore the boundary protection executes sync, connector is always defined
    connector,
    computeConfigAndUpdate,
    resetConfigWatcher: () => ro.reset()
  };
}

const AdapterToTokenMap = new Map();
function getAdapterToken(adapter) {
  return AdapterToTokenMap.get(adapter);
}
function setAdapterToken(adapter, token) {
  AdapterToTokenMap.set(adapter, token);
}
function storeWiredMethodMeta(descriptor, adapter, configCallback, dynamic) {
  // support for callable adapters
  if (adapter.adapter) {
    adapter = adapter.adapter;
  }

  const method = descriptor.value;
  const def = {
    adapter,
    method,
    configCallback,
    dynamic
  };
  WireMetaMap.set(descriptor, def);
}
function storeWiredFieldMeta(descriptor, adapter, configCallback, dynamic) {
  // support for callable adapters
  if (adapter.adapter) {
    adapter = adapter.adapter;
  }

  const def = {
    adapter,
    configCallback,
    dynamic
  };
  WireMetaMap.set(descriptor, def);
}
function installWireAdapters(vm) {
  const {
    context,
    def: {
      wire
    }
  } = vm;
  const wiredConnecting = context.wiredConnecting = [];
  const wiredDisconnecting = context.wiredDisconnecting = [];

  for (const fieldNameOrMethod in wire) {
    const descriptor = wire[fieldNameOrMethod];
    const wireDef = WireMetaMap.get(descriptor);

    if (undefined !== 'production') {
      assert.invariant(wireDef, `Internal Error: invalid wire definition found.`);
    }

    if (!isUndefined$1(wireDef)) {
      const {
        connector,
        computeConfigAndUpdate,
        resetConfigWatcher
      } = createConnector(vm, fieldNameOrMethod, wireDef);
      const hasDynamicParams = wireDef.dynamic.length > 0;
      ArrayPush$1.call(wiredConnecting, () => {
        connector.connect();

        if (!runtimeFlags.ENABLE_WIRE_SYNC_EMIT) {
          if (hasDynamicParams) {
            Promise.resolve().then(computeConfigAndUpdate);
            return;
          }
        }

        computeConfigAndUpdate();
      });
      ArrayPush$1.call(wiredDisconnecting, () => {
        connector.disconnect();
        resetConfigWatcher();
      });
    }
  }
}
function connectWireAdapters(vm) {
  const {
    wiredConnecting
  } = vm.context;

  for (let i = 0, len = wiredConnecting.length; i < len; i += 1) {
    wiredConnecting[i]();
  }
}
function disconnectWireAdapters(vm) {
  const {
    wiredDisconnecting
  } = vm.context;
  runWithBoundaryProtection(vm, vm, noop, () => {
    // job
    for (let i = 0, len = wiredDisconnecting.length; i < len; i += 1) {
      wiredDisconnecting[i]();
    }
  }, noop);
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function createContextProvider(adapter) {
  let adapterContextToken = getAdapterToken(adapter);

  if (!isUndefined$1(adapterContextToken)) {
    throw new Error(`Adapter already has a context provider.`);
  }

  adapterContextToken = guid();
  setAdapterToken(adapter, adapterContextToken);
  const providers = new WeakSet();
  return (elm, options) => {
    if (providers.has(elm)) {
      throw new Error(`Adapter was already installed on ${elm}.`);
    }

    providers.add(elm);
    const {
      consumerConnectedCallback,
      consumerDisconnectedCallback
    } = options;
    elm.addEventListener(adapterContextToken, evt => {
      const {
        setNewContext,
        setDisconnectedCallback
      } = evt;
      const consumer = {
        provide(newContext) {
          setNewContext(newContext);
        }

      };

      const disconnectCallback = () => {
        if (!isUndefined$1(consumerDisconnectedCallback)) {
          consumerDisconnectedCallback(consumer);
        }
      };

      setDisconnectedCallback(disconnectCallback);
      consumerConnectedCallback(consumer);
      evt.stopImmediatePropagation();
    });
  };
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
/**
 * EXPERIMENTAL: This function allows you to create a reactive readonly
 * membrane around any object value. This API is subject to change or
 * being removed.
 */

function readonly(obj) {
  if (undefined !== 'production') {
    // TODO [#1292]: Remove the readonly decorator
    if (arguments.length !== 1) {
      assert.fail('@readonly cannot be used as a decorator just yet, use it as a function with one argument to produce a readonly version of the provided value.');
    }
  }

  return reactiveMembrane.getReadOnlyProxy(obj);
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
let hooksAreSet = false;
function setHooks(hooks) {
  assert.isFalse(hooksAreSet, 'Hooks are already overridden, only one definition is allowed.');
  hooksAreSet = true;
  setSanitizeHtmlContentHook(hooks.sanitizeHtmlContent);
}
/* version: 2.5.13 */

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const globalStylesheets = create(null);
if (undefined === 'development') {
    // @ts-ignore
    window.__lwcResetGlobalStylesheets = () => {
        for (const key of Object.keys(globalStylesheets)) {
            delete globalStylesheets[key];
        }
    };
}
const globalStylesheetsParentElement = document.head || document.body || document;
// This check for constructable stylesheets is similar to Fast's:
// https://github.com/microsoft/fast/blob/d49d1ec/packages/web-components/fast-element/src/dom.ts#L51-L53
// See also: https://github.com/whatwg/webidl/issues/1027#issuecomment-934510070
const supportsConstructableStyleSheets = isFunction$1(CSSStyleSheet.prototype.replaceSync) &&
    isArray$1(document.adoptedStyleSheets);
const styleElements = create(null);
const styleSheets = create(null);
const nodesToStyleSheets = new WeakMap();
let getCustomElement, defineCustomElement, HTMLElementConstructor;
function isCustomElementRegistryAvailable() {
    if (typeof customElements === 'undefined') {
        return false;
    }
    try {
        // dereference HTMLElement global because babel wraps globals in compat mode with a
        // _wrapNativeSuper()
        // This is a problem because LWCUpgradableElement extends renderer.HTMLElement which does not
        // get wrapped by babel.
        const HTMLElementAlias = HTMLElement;
        // In case we use compat mode with a modern browser, the compat mode transformation
        // invokes the DOM api with an .apply() or .call() to initialize any DOM api sub-classing,
        // which are not equipped to be initialized that way.
        class clazz extends HTMLElementAlias {
        }
        customElements.define('lwc-test-' + Math.floor(Math.random() * 1000000), clazz);
        new clazz();
        return true;
    }
    catch (_a) {
        return false;
    }
}
function insertConstructableStyleSheet(content, target) {
    // It's important for CSSStyleSheets to be unique based on their content, so that
    // `shadowRoot.adoptedStyleSheets.includes(sheet)` works.
    let styleSheet = styleSheets[content];
    if (isUndefined$1(styleSheet)) {
        styleSheet = new CSSStyleSheet();
        styleSheet.replaceSync(content);
        styleSheets[content] = styleSheet;
    }
    if (!target.adoptedStyleSheets.includes(styleSheet)) {
        target.adoptedStyleSheets = [...target.adoptedStyleSheets, styleSheet];
    }
}
function insertStyleElement(content, target) {
    // Avoid inserting duplicate `<style>`s
    let sheets = nodesToStyleSheets.get(target);
    if (isUndefined$1(sheets)) {
        sheets = create(null);
        nodesToStyleSheets.set(target, sheets);
    }
    if (sheets[content]) {
        return;
    }
    sheets[content] = true;
    // This `<style>` may be repeated multiple times in the DOM, so cache it. It's a bit
    // faster to call `cloneNode()` on an existing node than to recreate it every time.
    let elm = styleElements[content];
    if (isUndefined$1(elm)) {
        elm = document.createElement('style');
        elm.type = 'text/css';
        elm.textContent = content;
        styleElements[content] = elm;
    }
    else {
        elm = elm.cloneNode(true);
    }
    target.appendChild(elm);
}
if (isCustomElementRegistryAvailable()) {
    getCustomElement = customElements.get.bind(customElements);
    defineCustomElement = customElements.define.bind(customElements);
    HTMLElementConstructor = HTMLElement;
}
else {
    const registry = create(null);
    const reverseRegistry = new WeakMap();
    defineCustomElement = function define(name, ctor) {
        if (name !== StringToLowerCase.call(name) || registry[name]) {
            throw new TypeError(`Invalid Registration`);
        }
        registry[name] = ctor;
        reverseRegistry.set(ctor, name);
    };
    getCustomElement = function get(name) {
        return registry[name];
    };
    HTMLElementConstructor = function HTMLElement() {
        if (!(this instanceof HTMLElement)) {
            throw new TypeError(`Invalid Invocation`);
        }
        const { constructor } = this;
        const name = reverseRegistry.get(constructor);
        if (!name) {
            throw new TypeError(`Invalid Construction`);
        }
        const elm = document.createElement(name);
        setPrototypeOf(elm, constructor.prototype);
        return elm;
    };
    HTMLElementConstructor.prototype = HTMLElement.prototype;
}
let isHydrating = false;
function setIsHydrating(v) {
    isHydrating = v;
}
const renderer = {
    ssr: false,
    isHydrating() {
        return isHydrating;
    },
    isNativeShadowDefined: _globalThis[KEY__IS_NATIVE_SHADOW_ROOT_DEFINED],
    isSyntheticShadowDefined: hasOwnProperty$1.call(Element.prototype, KEY__SHADOW_TOKEN),
    createElement(tagName, namespace) {
        return isUndefined$1(namespace)
            ? document.createElement(tagName)
            : document.createElementNS(namespace, tagName);
    },
    createText(content) {
        return document.createTextNode(content);
    },
    createComment(content) {
        return document.createComment(content);
    },
    insert(node, parent, anchor) {
        parent.insertBefore(node, anchor);
    },
    remove(node, parent) {
        parent.removeChild(node);
    },
    nextSibling(node) {
        return node.nextSibling;
    },
    attachShadow(element, options) {
        if (isHydrating) {
            return element.shadowRoot;
        }
        return element.attachShadow(options);
    },
    setText(node, content) {
        node.nodeValue = content;
    },
    getProperty(node, key) {
        return node[key];
    },
    setProperty(node, key, value) {
        if (undefined !== 'production') {
            if (node instanceof Element && !(key in node)) {
                // TODO [#1297]: Move this validation to the compiler
                assert.fail(`Unknown public property "${key}" of element <${node.tagName}>. This is likely a typo on the corresponding attribute "${htmlPropertyToAttribute(key)}".`);
            }
        }
        node[key] = value;
    },
    getAttribute(element, name, namespace) {
        return isUndefined$1(namespace)
            ? element.getAttribute(name)
            : element.getAttributeNS(namespace, name);
    },
    setAttribute(element, name, value, namespace) {
        return isUndefined$1(namespace)
            ? element.setAttribute(name, value)
            : element.setAttributeNS(namespace, name, value);
    },
    removeAttribute(element, name, namespace) {
        if (isUndefined$1(namespace)) {
            element.removeAttribute(name);
        }
        else {
            element.removeAttributeNS(namespace, name);
        }
    },
    addEventListener(target, type, callback, options) {
        target.addEventListener(type, callback, options);
    },
    removeEventListener(target, type, callback, options) {
        target.removeEventListener(type, callback, options);
    },
    dispatchEvent(target, event) {
        return target.dispatchEvent(event);
    },
    getClassList(element) {
        return element.classList;
    },
    setCSSStyleProperty(element, name, value, important) {
        // TODO [#0]: How to avoid this type casting? Shall we use a different type interface to
        // represent elements in the engine?
        element.style.setProperty(name, value, important ? 'important' : '');
    },
    getBoundingClientRect(element) {
        return element.getBoundingClientRect();
    },
    querySelector(element, selectors) {
        return element.querySelector(selectors);
    },
    querySelectorAll(element, selectors) {
        return element.querySelectorAll(selectors);
    },
    getElementsByTagName(element, tagNameOrWildCard) {
        return element.getElementsByTagName(tagNameOrWildCard);
    },
    getElementsByClassName(element, names) {
        return element.getElementsByClassName(names);
    },
    getChildren(element) {
        return element.children;
    },
    getChildNodes(element) {
        return element.childNodes;
    },
    getFirstChild(element) {
        return element.firstChild;
    },
    getFirstElementChild(element) {
        return element.firstElementChild;
    },
    getLastChild(element) {
        return element.lastChild;
    },
    getLastElementChild(element) {
        return element.lastElementChild;
    },
    isConnected(node) {
        return node.isConnected;
    },
    insertGlobalStylesheet(content) {
        if (!isUndefined$1(globalStylesheets[content])) {
            return;
        }
        globalStylesheets[content] = true;
        const elm = document.createElement('style');
        elm.type = 'text/css';
        elm.textContent = content;
        globalStylesheetsParentElement.appendChild(elm);
    },
    insertStylesheet(content, target) {
        if (supportsConstructableStyleSheets) {
            insertConstructableStyleSheet(content, target);
        }
        else {
            // Fall back to <style> element
            insertStyleElement(content, target);
        }
    },
    assertInstanceOfHTMLElement(elm, msg) {
        assert.invariant(elm instanceof HTMLElement, msg);
    },
    defineCustomElement,
    getCustomElement,
    HTMLElement: HTMLElementConstructor,
};

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
// TODO [#2472]: Remove this workaround when appropriate.
// eslint-disable-next-line lwc-internal/no-global-node
const _Node$1 = Node;
const ConnectingSlot = new WeakMap();
const DisconnectingSlot = new WeakMap();
function callNodeSlot(node, slot) {
    if (undefined !== 'production') {
        assert.isTrue(node, `callNodeSlot() should not be called for a non-object`);
    }
    const fn = slot.get(node);
    if (!isUndefined$1(fn)) {
        fn(node);
    }
    return node; // for convenience
}
// Monkey patching Node methods to be able to detect the insertions and removal of root elements
// created via createElement.
const { appendChild, insertBefore, removeChild, replaceChild } = _Node$1.prototype;
assign(_Node$1.prototype, {
    appendChild(newChild) {
        const appendedNode = appendChild.call(this, newChild);
        return callNodeSlot(appendedNode, ConnectingSlot);
    },
    insertBefore(newChild, referenceNode) {
        const insertedNode = insertBefore.call(this, newChild, referenceNode);
        return callNodeSlot(insertedNode, ConnectingSlot);
    },
    removeChild(oldChild) {
        const removedNode = removeChild.call(this, oldChild);
        return callNodeSlot(removedNode, DisconnectingSlot);
    },
    replaceChild(newChild, oldChild) {
        const replacedNode = replaceChild.call(this, newChild, oldChild);
        callNodeSlot(replacedNode, DisconnectingSlot);
        callNodeSlot(newChild, ConnectingSlot);
        return replacedNode;
    },
});
/**
 * EXPERIMENTAL: This function is almost identical to document.createElement with the slightly
 * difference that in the options, you can pass the `is` property set to a Constructor instead of
 * just a string value. The intent is to allow the creation of an element controlled by LWC without
 * having to register the element as a custom element.
 *
 * @example
 * ```
 * const el = createElement('x-foo', { is: FooCtor });
 * ```
 */
function createElement(sel, options) {
    if (!isObject(options) || isNull(options)) {
        throw new TypeError(`"createElement" function expects an object as second parameter but received "${toString$1(options)}".`);
    }
    const Ctor = options.is;
    if (!isFunction$1(Ctor)) {
        throw new TypeError(`"createElement" function expects an "is" option with a valid component constructor.`);
    }
    const UpgradableConstructor = getUpgradableConstructor(sel, renderer);
    let wasComponentUpgraded = false;
    // the custom element from the registry is expecting an upgrade callback
    /**
     * Note: if the upgradable constructor does not expect, or throw when we new it
     * with a callback as the first argument, we could implement a more advanced
     * mechanism that only passes that argument if the constructor is known to be
     * an upgradable custom element.
     */
    const element = new UpgradableConstructor((elm) => {
        const def = getComponentInternalDef(Ctor);
        createVM(elm, def, {
            tagName: sel,
            mode: options.mode !== 'closed' ? 'open' : 'closed',
            owner: null,
            renderer,
        });
        ConnectingSlot.set(elm, connectRootElement);
        DisconnectingSlot.set(elm, disconnectRootElement);
        wasComponentUpgraded = true;
    });
    if (!wasComponentUpgraded) {
        /* eslint-disable-next-line no-console */
        console.error(`Unexpected tag name "${sel}". This name is a registered custom element, preventing LWC to upgrade the element.`);
    }
    return element;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function hydrateComponent(element, Ctor, props = {}) {
    if (!isFunction$1(Ctor)) {
        throw new TypeError(`"hydrateComponent" expects a valid component constructor as the second parameter but instead received ${Ctor}.`);
    }
    if (!isObject(props) || isNull(props)) {
        throw new TypeError(`"hydrateComponent" expects an object as the third parameter but instead received ${props}.`);
    }
    const def = getComponentInternalDef(Ctor);
    try {
        // Let the renderer know we are hydrating, so it does not replace the existing shadowRoot
        // and uses the same algo to create the stylesheets as in SSR.
        setIsHydrating(true);
        createVM(element, def, {
            mode: 'open',
            owner: null,
            renderer,
            tagName: element.tagName.toLowerCase(),
        });
        for (const [key, value] of Object.entries(props)) {
            element[key] = value;
        }
        hydrateRootElement(element);
        // set it back since now we finished hydration.
        setIsHydrating(false);
    }
    catch (e) {
        // Fallback: In case there's an error while hydrating, let's log the error, and replace the element with
        //           the client generated DOM.
        /* eslint-disable-next-line no-console */
        console.error('Recovering from error while hydrating: ', e);
        setIsHydrating(false);
        const newElem = createElement(element.tagName, {
            is: Ctor,
            mode: 'open',
        });
        for (const [key, value] of Object.entries(props)) {
            newElem[key] = value;
        }
        element.parentNode.replaceChild(newElem, element);
    }
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
/**
 * This function builds a Web Component class from a LWC constructor so it can be
 * registered as a new element via customElements.define() at any given time.
 *
 * @deprecated since version 1.3.11
 *
 * @example
 * ```
 * import { buildCustomElementConstructor } from 'lwc';
 * import Foo from 'ns/foo';
 * const WC = buildCustomElementConstructor(Foo);
 * customElements.define('x-foo', WC);
 * const elm = document.createElement('x-foo');
 * ```
 */
function deprecatedBuildCustomElementConstructor(Ctor) {
    if (undefined !== 'production') {
        /* eslint-disable-next-line no-console */
        console.warn('Deprecated function called: "buildCustomElementConstructor" function is deprecated and it will be removed.' +
            `Use "${Ctor.name}.CustomElementConstructor" static property of the component constructor to access the corresponding custom element constructor instead.`);
    }
    return Ctor.CustomElementConstructor;
}
function buildCustomElementConstructor(Ctor) {
    const def = getComponentInternalDef(Ctor);
    return class extends def.bridge {
        constructor() {
            super();
            createVM(this, def, {
                mode: 'open',
                owner: null,
                tagName: this.tagName,
                renderer,
            });
        }
        connectedCallback() {
            connectRootElement(this);
        }
        disconnectedCallback() {
            disconnectRootElement(this);
        }
    };
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
/**
 * EXPERIMENTAL: This function provides access to the component constructor, given an HTMLElement.
 * This API is subject to change or being removed.
 */
function getComponentConstructor(elm) {
    let ctor = null;
    if (elm instanceof HTMLElement) {
        const vm = getAssociatedVMIfPresent(elm);
        if (!isUndefined$1(vm)) {
            ctor = vm.def.ctor;
        }
    }
    return ctor;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
// TODO [#2472]: Remove this workaround when appropriate.
// eslint-disable-next-line lwc-internal/no-global-node
const _Node = Node;
/**
 * EXPERIMENTAL: This function detects whether or not a Node is controlled by a LWC template. This
 * API is subject to change or being removed.
 */
function isNodeFromTemplate(node) {
    if (isFalse(node instanceof _Node)) {
        return false;
    }
    // TODO [#1250]: skipping the shadowRoot instances itself makes no sense, we need to revisit
    // this with locker
    if (node instanceof ShadowRoot) {
        return false;
    }
    if (renderer.isSyntheticShadowDefined) {
        // TODO [#1252]: old behavior that is still used by some pieces of the platform,
        // specifically, nodes inserted manually on places where `lwc:dom="manual"` directive is not
        // used, will be considered global elements.
        return !isUndefined$1(node[KEY__SHADOW_RESOLVER]);
    }
    const root = node.getRootNode();
    return root instanceof ShadowRoot;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const ComponentConstructorToCustomElementConstructorMap = new Map();
function getCustomElementConstructor(Ctor) {
    if (Ctor === LightningElement) {
        throw new TypeError(`Invalid Constructor. LightningElement base class can't be claimed as a custom element.`);
    }
    let ce = ComponentConstructorToCustomElementConstructorMap.get(Ctor);
    if (isUndefined$1(ce)) {
        ce = buildCustomElementConstructor(Ctor);
        ComponentConstructorToCustomElementConstructorMap.set(Ctor, ce);
    }
    return ce;
}
/**
 * This static getter builds a Web Component class from a LWC constructor so it can be registered
 * as a new element via customElements.define() at any given time. E.g.:
 *
 *      import Foo from 'ns/foo';
 *      customElements.define('x-foo', Foo.CustomElementConstructor);
 *      const elm = document.createElement('x-foo');
 *
 */
defineProperty(LightningElement, 'CustomElementConstructor', {
    get() {
        return getCustomElementConstructor(this);
    },
});
freeze(LightningElement);
seal(LightningElement.prototype);

exports.LightningElement = LightningElement;
exports.__unstable__ProfilerControl = profilerControl;
exports.api = api$1;
exports.buildCustomElementConstructor = deprecatedBuildCustomElementConstructor;
exports.createContextProvider = createContextProvider;
exports.createElement = createElement;
exports.getComponentConstructor = getComponentConstructor;
exports.getComponentDef = getComponentDef;
exports.hydrateComponent = hydrateComponent;
exports.isComponentConstructor = isComponentConstructor;
exports.isNodeFromTemplate = isNodeFromTemplate;
exports.readonly = readonly;
exports.register = register;
exports.registerComponent = registerComponent;
exports.registerDecorators = registerDecorators;
exports.registerTemplate = registerTemplate;
exports.sanitizeAttribute = sanitizeAttribute;
exports.setFeatureFlag = setFeatureFlag;
exports.setFeatureFlagForTest = setFeatureFlagForTest;
exports.setHooks = setHooks;
exports.swapComponent = swapComponent;
exports.swapStyle = swapStyle;
exports.swapTemplate = swapTemplate;
exports.track = track;
exports.unwrap = unwrap;
exports.wire = wire;
/* version: 2.5.13 */


/***/ }),

/***/ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/synthetic-shadow/dist/synthetic-shadow.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/lwc-webpack-plugin/node_modules/@lwc/synthetic-shadow/dist/synthetic-shadow.js ***!
  \******************************************************************************************************/
/***/ (() => {

/* proxy-compat-disable */
/**
 * Copyright (C) 2018 salesforce.com, inc.
 */

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function invariant(value, msg) {
  if (!value) {
    throw new Error(`Invariant Violation: ${msg}`);
  }
}

function isTrue$1(value, msg) {
  if (!value) {
    throw new Error(`Assert Violation: ${msg}`);
  }
}

function isFalse$1(value, msg) {
  if (value) {
    throw new Error(`Assert Violation: ${msg}`);
  }
}

function fail(msg) {
  throw new Error(msg);
}

var assert = /*#__PURE__*/Object.freeze({
  __proto__: null,
  invariant: invariant,
  isTrue: isTrue$1,
  isFalse: isFalse$1,
  fail: fail
});
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

const {
  assign,
  create,
  defineProperties,
  defineProperty,
  freeze,
  getOwnPropertyDescriptor,
  getOwnPropertyNames,
  getPrototypeOf,
  hasOwnProperty,
  isFrozen,
  keys,
  seal,
  setPrototypeOf
} = Object;
const {
  isArray
} = Array;
const {
  filter: ArrayFilter,
  find: ArrayFind,
  indexOf: ArrayIndexOf,
  join: ArrayJoin,
  map: ArrayMap,
  push: ArrayPush,
  reduce: ArrayReduce,
  reverse: ArrayReverse,
  slice: ArraySlice,
  splice: ArraySplice,
  unshift: ArrayUnshift,
  forEach
} = Array.prototype;
const {
  charCodeAt: StringCharCodeAt,
  replace: StringReplace,
  slice: StringSlice,
  toLowerCase: StringToLowerCase
} = String.prototype;

function isUndefined(obj) {
  return obj === undefined;
}

function isNull(obj) {
  return obj === null;
}

function isTrue(obj) {
  return obj === true;
}

function isFalse(obj) {
  return obj === false;
}

function isFunction(obj) {
  return typeof obj === 'function';
}

function isObject(obj) {
  return typeof obj === 'object';
}

const OtS = {}.toString;

function toString(obj) {
  if (obj && obj.toString) {
    // Arrays might hold objects with "null" prototype So using
    // Array.prototype.toString directly will cause an error Iterate through
    // all the items and handle individually.
    if (isArray(obj)) {
      return ArrayJoin.call(ArrayMap.call(obj, toString), ',');
    }

    return obj.toString();
  } else if (typeof obj === 'object') {
    return OtS.call(obj);
  } else {
    return obj + '';
  }
}
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
// Inspired from: https://mathiasbynens.be/notes/globalthis


const _globalThis = /*@__PURE__*/function () {
  // On recent browsers, `globalThis` is already defined. In this case return it directly.
  if (typeof globalThis === 'object') {
    return globalThis;
  }

  let _globalThis;

  try {
    // eslint-disable-next-line no-extend-native
    Object.defineProperty(Object.prototype, '__magic__', {
      get: function () {
        return this;
      },
      configurable: true
    }); // __magic__ is undefined in Safari 10 and IE10 and older.
    // @ts-ignore
    // eslint-disable-next-line no-undef

    _globalThis = __magic__; // @ts-ignore

    delete Object.prototype.__magic__;
  } catch (ex) {// In IE8, Object.defineProperty only works on DOM objects.
  } finally {
    // If the magic above fails for some reason we assume that we are in a legacy browser.
    // Assume `window` exists in this case.
    if (typeof _globalThis === 'undefined') {
      // @ts-ignore
      _globalThis = window;
    }
  }

  return _globalThis;
}();
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */


const KEY__IS_NATIVE_SHADOW_ROOT_DEFINED = '$isNativeShadowRootDefined$';
const KEY__SHADOW_RESOLVER = '$shadowResolver$';
const KEY__SHADOW_RESOLVER_PRIVATE = '$$ShadowResolverKey$$';
const KEY__SHADOW_TOKEN = '$shadowToken$';
const KEY__SHADOW_TOKEN_PRIVATE = '$$ShadowTokenKey$$';
const KEY__SYNTHETIC_MODE = '$$lwc-synthetic-mode';
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
// We use this to detect symbol support in order to avoid the expensive symbol polyfill. Note that
// we can't use typeof since it will fail when transpiling.


const hasNativeSymbolSupport = /*@__PURE__*/(() => Symbol('x').toString() === 'Symbol(x)')();
/** version: 2.5.13 */

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
// eslint-disable-next-line lwc-internal/no-global-node

const _Node = Node;
const nodePrototype = _Node.prototype;
const {
  DOCUMENT_POSITION_CONTAINED_BY,
  DOCUMENT_POSITION_CONTAINS,
  DOCUMENT_POSITION_PRECEDING,
  DOCUMENT_POSITION_FOLLOWING,
  ELEMENT_NODE,
  TEXT_NODE,
  CDATA_SECTION_NODE,
  PROCESSING_INSTRUCTION_NODE,
  COMMENT_NODE,
  DOCUMENT_FRAGMENT_NODE
} = _Node;
const {
  appendChild,
  cloneNode,
  compareDocumentPosition,
  insertBefore,
  removeChild,
  replaceChild,
  hasChildNodes
} = nodePrototype;
const {
  contains
} = HTMLElement.prototype;
const firstChildGetter = getOwnPropertyDescriptor(nodePrototype, 'firstChild').get;
const lastChildGetter = getOwnPropertyDescriptor(nodePrototype, 'lastChild').get;
const textContentGetter = getOwnPropertyDescriptor(nodePrototype, 'textContent').get;
const parentNodeGetter = getOwnPropertyDescriptor(nodePrototype, 'parentNode').get;
const ownerDocumentGetter = getOwnPropertyDescriptor(nodePrototype, 'ownerDocument').get;
const parentElementGetter = hasOwnProperty.call(nodePrototype, 'parentElement') ? getOwnPropertyDescriptor(nodePrototype, 'parentElement').get : getOwnPropertyDescriptor(HTMLElement.prototype, 'parentElement').get; // IE11

const textContextSetter = getOwnPropertyDescriptor(nodePrototype, 'textContent').set;
const childNodesGetter = hasOwnProperty.call(nodePrototype, 'childNodes') ? getOwnPropertyDescriptor(nodePrototype, 'childNodes').get : getOwnPropertyDescriptor(HTMLElement.prototype, 'childNodes').get; // IE11

const isConnected = hasOwnProperty.call(nodePrototype, 'isConnected') ? getOwnPropertyDescriptor(nodePrototype, 'isConnected').get : function () {
  const doc = ownerDocumentGetter.call(this); // IE11

  return (// if doc is null, it means `this` is actually a document instance which
    // is always connected
    doc === null || (compareDocumentPosition.call(doc, this) & DOCUMENT_POSITION_CONTAINED_BY) !== 0
  );
};

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const {
  getAttribute,
  getBoundingClientRect,
  getElementsByTagName: getElementsByTagName$1,
  getElementsByTagNameNS: getElementsByTagNameNS$1,
  hasAttribute,
  querySelector,
  querySelectorAll: querySelectorAll$1,
  removeAttribute,
  setAttribute
} = Element.prototype;
const attachShadow$1 = hasOwnProperty.call(Element.prototype, 'attachShadow') ? Element.prototype.attachShadow : () => {
  throw new TypeError('attachShadow() is not supported in current browser. Load the @lwc/synthetic-shadow polyfill and use Lightning Web Components');
};
const childElementCountGetter = getOwnPropertyDescriptor(Element.prototype, 'childElementCount').get;
const firstElementChildGetter = getOwnPropertyDescriptor(Element.prototype, 'firstElementChild').get;
const lastElementChildGetter = getOwnPropertyDescriptor(Element.prototype, 'lastElementChild').get;
const innerTextDescriptor = getOwnPropertyDescriptor(HTMLElement.prototype, 'innerText');
const innerTextGetter = innerTextDescriptor ? innerTextDescriptor.get : null;
const innerTextSetter = innerTextDescriptor ? innerTextDescriptor.set : null; // Note: Firefox does not have outerText, https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/outerText

const outerTextDescriptor = getOwnPropertyDescriptor(HTMLElement.prototype, 'outerText');
const outerTextGetter = outerTextDescriptor ? outerTextDescriptor.get : null;
const outerTextSetter = outerTextDescriptor ? outerTextDescriptor.set : null;
const innerHTMLDescriptor = hasOwnProperty.call(Element.prototype, 'innerHTML') ? getOwnPropertyDescriptor(Element.prototype, 'innerHTML') : getOwnPropertyDescriptor(HTMLElement.prototype, 'innerHTML'); // IE11

const innerHTMLGetter = innerHTMLDescriptor.get;
const innerHTMLSetter = innerHTMLDescriptor.set;
const outerHTMLDescriptor = hasOwnProperty.call(Element.prototype, 'outerHTML') ? getOwnPropertyDescriptor(Element.prototype, 'outerHTML') : getOwnPropertyDescriptor(HTMLElement.prototype, 'outerHTML'); // IE11

const outerHTMLGetter = outerHTMLDescriptor.get;
const outerHTMLSetter = outerHTMLDescriptor.set;
const tagNameGetter = getOwnPropertyDescriptor(Element.prototype, 'tagName').get;
const tabIndexDescriptor = getOwnPropertyDescriptor(HTMLElement.prototype, 'tabIndex');
const tabIndexGetter = tabIndexDescriptor.get;
const tabIndexSetter = tabIndexDescriptor.set;
const matches = hasOwnProperty.call(Element.prototype, 'matches') ? Element.prototype.matches : Element.prototype.msMatchesSelector; // IE11

const childrenGetter = hasOwnProperty.call(Element.prototype, 'children') ? getOwnPropertyDescriptor(Element.prototype, 'children').get : getOwnPropertyDescriptor(HTMLElement.prototype, 'children').get; // IE11
// for IE11, access from HTMLElement
// for all other browsers access the method from the parent Element interface

const {
  getElementsByClassName: getElementsByClassName$1
} = HTMLElement.prototype;
const shadowRootGetter = hasOwnProperty.call(Element.prototype, 'shadowRoot') ? getOwnPropertyDescriptor(Element.prototype, 'shadowRoot').get : () => null;

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
let assignedNodes, assignedElements;

if (typeof HTMLSlotElement !== 'undefined') {
  assignedNodes = HTMLSlotElement.prototype.assignedNodes;
  assignedElements = HTMLSlotElement.prototype.assignedElements;
} else {
  assignedNodes = () => {
    throw new TypeError("assignedNodes() is not supported in current browser. Load the @lwc/synthetic-shadow polyfill to start using <slot> elements in your Lightning Web Component's template");
  };

  assignedElements = () => {
    throw new TypeError("assignedElements() is not supported in current browser. Load the @lwc/synthetic-shadow polyfill to start using <slot> elements in your Lightning Web Component's template");
  };
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const eventTargetGetter = getOwnPropertyDescriptor(Event.prototype, 'target').get;
const eventCurrentTargetGetter = getOwnPropertyDescriptor(Event.prototype, 'currentTarget').get;
const focusEventRelatedTargetGetter = getOwnPropertyDescriptor(FocusEvent.prototype, 'relatedTarget').get; // IE does not implement composedPath() but that's ok because we only use this instead of our
// composedPath() polyfill when dealing with native shadow DOM components in mixed mode. Defaulting
// to a NOOP just to be safe, even though this is almost guaranteed to be defined such a scenario.

const composedPath = hasOwnProperty.call(Event.prototype, 'composedPath') ? Event.prototype.composedPath : () => [];

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const DocumentPrototypeActiveElement = getOwnPropertyDescriptor(Document.prototype, 'activeElement').get;
const elementFromPoint = hasOwnProperty.call(Document.prototype, 'elementFromPoint') ? Document.prototype.elementFromPoint : Document.prototype.msElementFromPoint; // IE11

const elementsFromPoint = hasOwnProperty.call(Document.prototype, 'elementsFromPoint') ? Document.prototype.elementsFromPoint : Document.prototype.msElementsFromPoint; // IE11
// defaultView can be null when a document has no browsing context. For example, the owner document
// of a node in a template doesn't have a default view: https://jsfiddle.net/hv9z0q5a/

const defaultViewGetter = getOwnPropertyDescriptor(Document.prototype, 'defaultView').get;
const {
  createComment,
  querySelectorAll,
  getElementById,
  getElementsByClassName,
  getElementsByTagName,
  getElementsByTagNameNS
} = Document.prototype; // In Firefox v57 and lower, getElementsByName is defined on HTMLDocument.prototype
// In all other browsers have the method on Document.prototype

const {
  getElementsByName
} = HTMLDocument.prototype;

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const {
  addEventListener: windowAddEventListener,
  removeEventListener: windowRemoveEventListener,
  getComputedStyle: windowGetComputedStyle,
  getSelection: windowGetSelection
} = window;

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
// There is code in the polyfills that requires access to the unpatched
// Mutation Observer constructor, this the code for that.
// Eventually, the polyfill should uses the patched version, and this file can be removed.
const MO = MutationObserver;
const MutationObserverObserve = MO.prototype.observe;

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
let NativeShadowRoot = null;

if (typeof ShadowRoot !== 'undefined') {
  NativeShadowRoot = ShadowRoot;
}

const isNativeShadowRootDefined = !isNull(NativeShadowRoot);
const isInstanceOfNativeShadowRoot = isNull(NativeShadowRoot) ? () => false : node => node instanceof NativeShadowRoot;

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function detect$4 () {
  return typeof HTMLSlotElement === 'undefined';
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const {
  createElement
} = Document.prototype;
const CHAR_S = 115;
const CHAR_L = 108;
const CHAR_O = 111;
const CHAR_T = 116;
function apply$4() {
  // IE11 does not have this element definition
  // we don't care much about the construction phase, just the prototype
  class HTMLSlotElement {} // prototype inheritance dance


  setPrototypeOf(HTMLSlotElement, HTMLElement.constructor);
  setPrototypeOf(HTMLSlotElement.prototype, HTMLElement.prototype);
  Window.prototype.HTMLSlotElement = HTMLSlotElement; // IE11 doesn't have HTMLSlotElement, in which case we
  // need to patch Document.prototype.createElement to remap `slot`
  // elements to the right prototype

  defineProperty(Document.prototype, 'createElement', {
    value: function (tagName, _options) {
      const elm = createElement.apply(this, ArraySlice.call(arguments));

      if (tagName.length === 4 && StringCharCodeAt.call(tagName, 0) === CHAR_S && StringCharCodeAt.call(tagName, 1) === CHAR_L && StringCharCodeAt.call(tagName, 2) === CHAR_O && StringCharCodeAt.call(tagName, 3) === CHAR_T) {
        // the new element is the `slot`, resetting the proto chain
        // the new newly created global HTMLSlotElement.prototype
        setPrototypeOf(elm, HTMLSlotElement.prototype);
      }

      return elm;
    }
  });
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

if (detect$4()) {
  apply$4();
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function getOwnerDocument(node) {
  const doc = ownerDocumentGetter.call(node); // if doc is null, it means `this` is actually a document instance

  return doc === null ? node : doc;
}
function getOwnerWindow(node) {
  const doc = getOwnerDocument(node);
  const win = defaultViewGetter.call(doc);

  if (win === null) {
    // this method should never be called with a node that is not part
    // of a qualifying connected node.
    throw new TypeError();
  }

  return win;
}
let skipGlobalPatching; // TODO [#1222]: remove global bypass

function isGlobalPatchingSkipped(node) {
  // we lazily compute this value instead of doing it during evaluation, this helps
  // for apps that are setting this after the engine code is evaluated.
  if (isUndefined(skipGlobalPatching)) {
    const ownerDocument = getOwnerDocument(node);
    skipGlobalPatching = ownerDocument.body && getAttribute.call(ownerDocument.body, 'data-global-patching-bypass') === 'temporary-bypass';
  }

  return isTrue(skipGlobalPatching);
}
function arrayFromCollection(collection) {
  const size = collection.length;
  const cloned = [];

  if (size > 0) {
    for (let i = 0; i < size; i++) {
      cloned[i] = collection[i];
    }
  }

  return cloned;
}

/**
 * Copyright (C) 2018 salesforce.com, inc.
 */

if (!_globalThis.lwcRuntimeFlags) {
  Object.defineProperty(_globalThis, 'lwcRuntimeFlags', {
    value: create(null)
  });
}

const runtimeFlags = _globalThis.lwcRuntimeFlags;
/** version: 2.5.13 */

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const eventTargetPrototype = typeof EventTarget !== 'undefined' ? EventTarget.prototype : _Node.prototype;
const {
  addEventListener,
  dispatchEvent,
  removeEventListener
} = eventTargetPrototype;

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const EventListenerMap = new WeakMap();
const ComposedPathMap = new WeakMap();

function isEventListenerOrEventListenerObject(fnOrObj) {
  return isFunction(fnOrObj) || isObject(fnOrObj) && !isNull(fnOrObj) && isFunction(fnOrObj.handleEvent);
}

function shouldInvokeListener(event, target, currentTarget) {
  // Subsequent logic assumes that `currentTarget` must be contained in the composed path for the listener to be
  // invoked, but this is not always the case. `composedPath()` will sometimes return an empty array, even when the
  // listener should be invoked (e.g., a disconnected instance of EventTarget, an instance of XMLHttpRequest, etc).
  if (target === currentTarget) {
    return true;
  }

  let composedPath = ComposedPathMap.get(event);

  if (isUndefined(composedPath)) {
    composedPath = event.composedPath();
    ComposedPathMap.set(event, composedPath);
  }

  return composedPath.includes(currentTarget);
}
function getEventListenerWrapper(fnOrObj) {
  if (!isEventListenerOrEventListenerObject(fnOrObj)) {
    return fnOrObj;
  }

  let wrapperFn = EventListenerMap.get(fnOrObj);

  if (isUndefined(wrapperFn)) {
    wrapperFn = function (event) {
      // This function is invoked from an event listener and currentTarget is always defined.
      const currentTarget = eventCurrentTargetGetter.call(event);

      if (undefined !== 'production') {
        assert.invariant(isFalse(isSyntheticShadowHost(currentTarget)), 'This routine should not be used to wrap event listeners for host elements and shadow roots.');
      }

      const {
        composed
      } = event;
      let shouldInvoke;

      if (runtimeFlags.ENABLE_NON_COMPOSED_EVENTS_LEAKAGE) {
        shouldInvoke = !(eventToShadowRootMap.has(event) && isFalse(composed));
      } else {
        const actualTarget = getActualTarget(event);
        shouldInvoke = shouldInvokeListener(event, actualTarget, currentTarget);
      }

      if (!shouldInvoke) {
        return;
      }

      return isFunction(fnOrObj) ? fnOrObj.call(this, event) : fnOrObj.handleEvent && fnOrObj.handleEvent(event);
    };

    EventListenerMap.set(fnOrObj, wrapperFn);
  }

  return wrapperFn;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const eventToContextMap = new WeakMap();

function isChildNode(root, node) {
  return !!(compareDocumentPosition.call(root, node) & DOCUMENT_POSITION_CONTAINED_BY);
}

const GET_ROOT_NODE_CONFIG_FALSE = {
  composed: false
};

function getRootNodeHost(node, options) {
  let rootNode = node.getRootNode(options);

  if (isSyntheticShadowRoot(rootNode)) {
    rootNode = getHost(rootNode);
  }

  return rootNode;
}

const customElementToWrappedListeners = new WeakMap();

function getEventMap(elm) {
  let listenerInfo = customElementToWrappedListeners.get(elm);

  if (isUndefined(listenerInfo)) {
    listenerInfo = create(null);
    customElementToWrappedListeners.set(elm, listenerInfo);
  }

  return listenerInfo;
}
/**
 * Events dispatched on shadow roots actually end up being dispatched on their hosts. This means that the event.target
 * property of events dispatched on shadow roots always resolve to their host. This function understands this
 * abstraction and properly returns a reference to the shadow root when appropriate.
 */


function getActualTarget(event) {
  var _a;

  return (_a = eventToShadowRootMap.get(event)) !== null && _a !== void 0 ? _a : eventTargetGetter.call(event);
}
const shadowRootEventListenerMap = new WeakMap();

function getWrappedShadowRootListener(listener) {
  if (!isFunction(listener)) {
    throw new TypeError(); // avoiding problems with non-valid listeners
  }

  let shadowRootWrappedListener = shadowRootEventListenerMap.get(listener);

  if (isUndefined(shadowRootWrappedListener)) {
    shadowRootWrappedListener = function (event) {
      // currentTarget is always defined inside an event listener
      let currentTarget = eventCurrentTargetGetter.call(event); // If currentTarget is not an instance of a native shadow root then we're dealing with a
      // host element whose synthetic shadow root must be accessed via getShadowRoot().

      if (!isInstanceOfNativeShadowRoot(currentTarget)) {
        currentTarget = getShadowRoot(currentTarget);
      }

      let shouldInvoke;

      if (runtimeFlags.ENABLE_NON_COMPOSED_EVENTS_LEAKAGE) {
        shouldInvoke = shouldInvokeShadowRootListener(event);
      } else {
        const actualTarget = getActualTarget(event);
        shouldInvoke = shouldInvokeListener(event, actualTarget, currentTarget);
      }

      if (shouldInvoke) {
        listener.call(currentTarget, event);
      }
    };

    shadowRootWrappedListener.placement = 1
    /* SHADOW_ROOT_LISTENER */
    ;
    shadowRootEventListenerMap.set(listener, shadowRootWrappedListener);
  }

  return shadowRootWrappedListener;
}

const customElementEventListenerMap = new WeakMap();

function getWrappedCustomElementListener(listener) {
  if (!isFunction(listener)) {
    throw new TypeError(); // avoiding problems with non-valid listeners
  }

  let customElementWrappedListener = customElementEventListenerMap.get(listener);

  if (isUndefined(customElementWrappedListener)) {
    customElementWrappedListener = function (event) {
      // currentTarget is always defined inside an event listener
      const currentTarget = eventCurrentTargetGetter.call(event);
      let shouldInvoke;

      if (runtimeFlags.ENABLE_NON_COMPOSED_EVENTS_LEAKAGE) {
        shouldInvoke = shouldInvokeCustomElementListener(event);
      } else {
        const actualTarget = getActualTarget(event);
        shouldInvoke = shouldInvokeListener(event, actualTarget, currentTarget);
      }

      if (shouldInvoke) {
        listener.call(currentTarget, event);
      }
    };

    customElementWrappedListener.placement = 0
    /* CUSTOM_ELEMENT_LISTENER */
    ;
    customElementEventListenerMap.set(listener, customElementWrappedListener);
  }

  return customElementWrappedListener;
}

function domListener(evt) {
  let immediatePropagationStopped = false;
  let propagationStopped = false;
  const {
    type,
    stopImmediatePropagation,
    stopPropagation
  } = evt; // currentTarget is always defined

  const currentTarget = eventCurrentTargetGetter.call(evt);
  const listenerMap = getEventMap(currentTarget);
  const listeners = listenerMap[type]; // it must have listeners at this point

  defineProperty(evt, 'stopImmediatePropagation', {
    value() {
      immediatePropagationStopped = true;
      stopImmediatePropagation.call(evt);
    },

    writable: true,
    enumerable: true,
    configurable: true
  });
  defineProperty(evt, 'stopPropagation', {
    value() {
      propagationStopped = true;
      stopPropagation.call(evt);
    },

    writable: true,
    enumerable: true,
    configurable: true
  }); // in case a listener adds or removes other listeners during invocation

  const bookkeeping = ArraySlice.call(listeners);

  function invokeListenersByPlacement(placement) {
    forEach.call(bookkeeping, listener => {
      if (isFalse(immediatePropagationStopped) && listener.placement === placement) {
        // making sure that the listener was not removed from the original listener queue
        if (ArrayIndexOf.call(listeners, listener) !== -1) {
          // all handlers on the custom element should be called with undefined 'this'
          listener.call(undefined, evt);
        }
      }
    });
  }

  eventToContextMap.set(evt, 1
  /* SHADOW_ROOT_LISTENER */
  );
  invokeListenersByPlacement(1
  /* SHADOW_ROOT_LISTENER */
  );

  if (isFalse(immediatePropagationStopped) && isFalse(propagationStopped)) {
    // doing the second iteration only if the first one didn't interrupt the event propagation
    eventToContextMap.set(evt, 0
    /* CUSTOM_ELEMENT_LISTENER */
    );
    invokeListenersByPlacement(0
    /* CUSTOM_ELEMENT_LISTENER */
    );
  }

  eventToContextMap.set(evt, 2
  /* UNKNOWN_LISTENER */
  );
}

function attachDOMListener(elm, type, wrappedListener) {
  const listenerMap = getEventMap(elm);
  let cmpEventHandlers = listenerMap[type];

  if (isUndefined(cmpEventHandlers)) {
    cmpEventHandlers = listenerMap[type] = [];
  } // Prevent identical listeners from subscribing to the same event type.
  // TODO [#1824]: Options will also play a factor when we introduce support for them (#1824).


  if (ArrayIndexOf.call(cmpEventHandlers, wrappedListener) !== -1) {
    return;
  } // only add to DOM if there is no other listener on the same placement yet


  if (cmpEventHandlers.length === 0) {
    // super.addEventListener() - this will not work on
    addEventListener.call(elm, type, domListener);
  }

  ArrayPush.call(cmpEventHandlers, wrappedListener);
}

function detachDOMListener(elm, type, wrappedListener) {
  const listenerMap = getEventMap(elm);
  let p;
  let listeners;

  if (!isUndefined(listeners = listenerMap[type]) && (p = ArrayIndexOf.call(listeners, wrappedListener)) !== -1) {
    ArraySplice.call(listeners, p, 1); // only remove from DOM if there is no other listener on the same placement

    if (listeners.length === 0) {
      removeEventListener.call(elm, type, domListener);
    }
  }
}

function shouldInvokeCustomElementListener(event) {
  const {
    composed
  } = event;

  if (isTrue(composed)) {
    // Listeners on host elements should always be invoked for {composed: true} events.
    return true;
  } // If this {composed: false} event was dispatched on any root.


  if (eventToShadowRootMap.has(event)) {
    return false;
  }

  const target = eventTargetGetter.call(event);
  const currentTarget = eventCurrentTargetGetter.call(event); // If this {composed: false} event was dispatched on the current target host.

  if (target === currentTarget) {
    return true;
  } // At this point the event must be {bubbles: true, composed: false} and was dispatched from a
  // shadow-excluding descendant node. In this case, we only invoke the listener if the target
  // host was assigned to a slot in the composed subtree of the current target host.


  const targetHost = getRootNodeHost(target, GET_ROOT_NODE_CONFIG_FALSE);
  const currentTargetHost = currentTarget;
  return isChildNode(targetHost, currentTargetHost);
}

function shouldInvokeShadowRootListener(event) {
  const {
    composed
  } = event;
  const target = eventTargetGetter.call(event);
  const currentTarget = eventCurrentTargetGetter.call(event); // If the event was dispatched on the host or its root.

  if (target === currentTarget) {
    // Invoke the listener if the event was dispatched directly on the root.
    return eventToShadowRootMap.get(event) === getShadowRoot(target);
  } // At this point the event is {bubbles: true} and was dispatched from a shadow-including descendant node.


  if (isTrue(composed)) {
    // Invoke the listener if the event is {composed: true}.
    return true;
  } // At this point the event must be {bubbles: true, composed: false}.


  if (isTrue(eventToShadowRootMap.has(event))) {
    // Don't invoke the listener because the event was dispatched on a descendant root.
    return false;
  }

  const targetHost = getRootNodeHost(target, GET_ROOT_NODE_CONFIG_FALSE);
  const currentTargetHost = currentTarget;
  const isCurrentTargetSlotted = isChildNode(targetHost, currentTargetHost); // At this point the event must be {bubbles: true, composed: false} and was dispatched from a
  // shadow-excluding descendant node. In this case, we only invoke the listener if the target
  // host was assigned to a slot in the composed subtree of the current target host, or the
  // descendant node is in the shadow tree of the current root.

  return isCurrentTargetSlotted || targetHost === currentTargetHost;
}

function addCustomElementEventListener(type, listener, _options) {
  if (undefined !== 'production') {
    if (!isFunction(listener)) {
      throw new TypeError(`Invalid second argument for Element.addEventListener() in ${toString(this)} for event "${type}". Expected an EventListener but received ${listener}.`);
    }
  } // TODO [#1824]: Lift this restriction on the option parameter


  if (isFunction(listener)) {
    const wrappedListener = getWrappedCustomElementListener(listener);
    attachDOMListener(this, type, wrappedListener);
  }
}
function removeCustomElementEventListener(type, listener, _options) {
  // TODO [#1824]: Lift this restriction on the option parameter
  if (isFunction(listener)) {
    const wrappedListener = getWrappedCustomElementListener(listener);
    detachDOMListener(this, type, wrappedListener);
  }
}
function addShadowRootEventListener(sr, type, listener, _options) {
  if (undefined !== 'production') {
    if (!isFunction(listener)) {
      throw new TypeError(`Invalid second argument for ShadowRoot.addEventListener() in ${toString(sr)} for event "${type}". Expected an EventListener but received ${listener}.`);
    }
  } // TODO [#1824]: Lift this restriction on the option parameter


  if (isFunction(listener)) {
    const elm = getHost(sr);
    const wrappedListener = getWrappedShadowRootListener(listener);
    attachDOMListener(elm, type, wrappedListener);
  }
}
function removeShadowRootEventListener(sr, type, listener, _options) {
  // TODO [#1824]: Lift this restriction on the option parameter
  if (isFunction(listener)) {
    const elm = getHost(sr);
    const wrappedListener = getWrappedShadowRootListener(listener);
    detachDOMListener(elm, type, wrappedListener);
  }
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

const HostElementKey = '$$HostElementKey$$';
const ShadowedNodeKey = '$$ShadowedNodeKey$$';

function fastDefineProperty(node, propName, config) {
  const shadowedNode = node;

  if (undefined !== 'production') {
    // in dev, we are more restrictive
    defineProperty(shadowedNode, propName, config);
  } else {
    const {
      value
    } = config; // in prod, we prioritize performance

    shadowedNode[propName] = value;
  }
}

function setNodeOwnerKey(node, value) {
  fastDefineProperty(node, HostElementKey, {
    value,
    configurable: true
  });
}
function setNodeKey(node, value) {
  fastDefineProperty(node, ShadowedNodeKey, {
    value
  });
}
function getNodeOwnerKey(node) {
  return node[HostElementKey];
}
function getNodeNearestOwnerKey(node) {
  let host = node;
  let hostKey; // search for the first element with owner identity (just in case of manually inserted elements)

  while (!isNull(host)) {
    hostKey = getNodeOwnerKey(host);

    if (!isUndefined(hostKey)) {
      return hostKey;
    }

    host = parentNodeGetter.call(host);
  }
}
function getNodeKey(node) {
  return node[ShadowedNodeKey];
}
/**
 * This function does not traverse up for performance reasons, but is sufficient for most use
 * cases. If we need to traverse up and verify those nodes that don't have owner key, use
 * isNodeDeepShadowed instead.
 */

function isNodeShadowed(node) {
  return !isUndefined(getNodeOwnerKey(node));
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
// inside another slot.

function foldSlotElement(slot) {
  let parent = parentElementGetter.call(slot);

  while (!isNull(parent) && isSlotElement(parent)) {
    slot = parent;
    parent = parentElementGetter.call(slot);
  }

  return slot;
}

function isNodeSlotted(host, node) {
  if (undefined !== 'production') {
    assert.invariant(host instanceof HTMLElement, `isNodeSlotted() should be called with a host as the first argument instead of ${host}`);
    assert.invariant(node instanceof _Node, `isNodeSlotted() should be called with a node as the second argument instead of ${node}`);
    assert.invariant(compareDocumentPosition.call(node, host) & DOCUMENT_POSITION_CONTAINS, `isNodeSlotted() should never be called with a node that is not a child node of ${host}`);
  }

  const hostKey = getNodeKey(host); // this routine assumes that the node is coming from a different shadow (it is not owned by the host)
  // just in case the provided node is not an element

  let currentElement = node instanceof Element ? node : parentElementGetter.call(node);

  while (!isNull(currentElement) && currentElement !== host) {
    const elmOwnerKey = getNodeNearestOwnerKey(currentElement);
    const parent = parentElementGetter.call(currentElement);

    if (elmOwnerKey === hostKey) {
      // we have reached an element inside the host's template, and only if
      // that element is an slot, then the node is considered slotted
      return isSlotElement(currentElement);
    } else if (parent === host) {
      return false;
    } else if (!isNull(parent) && getNodeNearestOwnerKey(parent) !== elmOwnerKey) {
      // we are crossing a boundary of some sort since the elm and its parent
      // have different owner key. for slotted elements, this is possible
      // if the parent happens to be a slot.
      if (isSlotElement(parent)) {
        /**
         * the slot parent might be allocated inside another slot, think of:
         * <x-root> (<--- root element)
         *    <x-parent> (<--- own by x-root)
         *       <x-child> (<--- own by x-root)
         *           <slot> (<--- own by x-child)
         *               <slot> (<--- own by x-parent)
         *                  <div> (<--- own by x-root)
         *
         * while checking if x-parent has the div slotted, we need to traverse
         * up, but when finding the first slot, we skip that one in favor of the
         * most outer slot parent before jumping into its corresponding host.
         */
        currentElement = getNodeOwner(foldSlotElement(parent));

        if (!isNull(currentElement)) {
          if (currentElement === host) {
            // the slot element is a top level element inside the shadow
            // of a host that was allocated into host in question
            return true;
          } else if (getNodeNearestOwnerKey(currentElement) === hostKey) {
            // the slot element is an element inside the shadow
            // of a host that was allocated into host in question
            return true;
          }
        }
      } else {
        return false;
      }
    } else {
      currentElement = parent;
    }
  }

  return false;
}

function getNodeOwner(node) {
  if (!(node instanceof _Node)) {
    return null;
  }

  const ownerKey = getNodeNearestOwnerKey(node);

  if (isUndefined(ownerKey)) {
    return null;
  }

  let nodeOwner = node; // At this point, node is a valid node with owner identity, now we need to find the owner node
  // search for a custom element with a VM that owns the first element with owner identity attached to it

  while (!isNull(nodeOwner) && getNodeKey(nodeOwner) !== ownerKey) {
    nodeOwner = parentNodeGetter.call(nodeOwner);
  }

  if (isNull(nodeOwner)) {
    return null;
  }

  return nodeOwner;
}
function isSyntheticSlotElement(node) {
  return isSlotElement(node) && isNodeShadowed(node);
}
function isSlotElement(node) {
  return node instanceof HTMLSlotElement;
}
function isNodeOwnedBy(owner, node) {
  if (undefined !== 'production') {
    assert.invariant(owner instanceof HTMLElement, `isNodeOwnedBy() should be called with an element as the first argument instead of ${owner}`);
    assert.invariant(node instanceof _Node, `isNodeOwnedBy() should be called with a node as the second argument instead of ${node}`);
    assert.invariant(compareDocumentPosition.call(node, owner) & DOCUMENT_POSITION_CONTAINS, `isNodeOwnedBy() should never be called with a node that is not a child node of ${owner}`);
  }

  const ownerKey = getNodeNearestOwnerKey(node);
  return isUndefined(ownerKey) || getNodeKey(owner) === ownerKey;
}
function shadowRootChildNodes(root) {
  const elm = getHost(root);
  return getAllMatches(elm, arrayFromCollection(childNodesGetter.call(elm)));
}
function getAllSlottedMatches(host, nodeList) {
  const filteredAndPatched = [];

  for (let i = 0, len = nodeList.length; i < len; i += 1) {
    const node = nodeList[i];

    if (!isNodeOwnedBy(host, node) && isNodeSlotted(host, node)) {
      ArrayPush.call(filteredAndPatched, node);
    }
  }

  return filteredAndPatched;
}
function getFirstSlottedMatch(host, nodeList) {
  for (let i = 0, len = nodeList.length; i < len; i += 1) {
    const node = nodeList[i];

    if (!isNodeOwnedBy(host, node) && isNodeSlotted(host, node)) {
      return node;
    }
  }

  return null;
}
function getAllMatches(owner, nodeList) {
  const filteredAndPatched = [];

  for (let i = 0, len = nodeList.length; i < len; i += 1) {
    const node = nodeList[i];
    const isOwned = isNodeOwnedBy(owner, node);

    if (isOwned) {
      // Patch querySelector, querySelectorAll, etc
      // if element is owned by VM
      ArrayPush.call(filteredAndPatched, node);
    }
  }

  return filteredAndPatched;
}
function getFirstMatch(owner, nodeList) {
  for (let i = 0, len = nodeList.length; i < len; i += 1) {
    if (isNodeOwnedBy(owner, nodeList[i])) {
      return nodeList[i];
    }
  }

  return null;
}
function shadowRootQuerySelector(root, selector) {
  const elm = getHost(root);
  const nodeList = arrayFromCollection(querySelectorAll$1.call(elm, selector));
  return getFirstMatch(elm, nodeList);
}
function shadowRootQuerySelectorAll(root, selector) {
  const elm = getHost(root);
  const nodeList = querySelectorAll$1.call(elm, selector);
  return getAllMatches(elm, arrayFromCollection(nodeList));
}
function getFilteredChildNodes(node) {
  if (!isSyntheticShadowHost(node) && !isSlotElement(node)) {
    // regular element - fast path
    const children = childNodesGetter.call(node);
    return arrayFromCollection(children);
  }

  if (isSyntheticShadowHost(node)) {
    // we need to get only the nodes that were slotted
    const slots = arrayFromCollection(querySelectorAll$1.call(node, 'slot'));
    const resolver = getShadowRootResolver(getShadowRoot(node)); // Typescript is inferring the wrong function type for this particular
    // overloaded method: https://github.com/Microsoft/TypeScript/issues/27972
    // @ts-ignore type-mismatch

    return ArrayReduce.call(slots, (seed, slot) => {
      if (resolver === getShadowRootResolver(slot)) {
        ArrayPush.apply(seed, getFilteredSlotAssignedNodes(slot));
      }

      return seed;
    }, []);
  } else {
    // slot element
    const children = arrayFromCollection(childNodesGetter.call(node));
    const resolver = getShadowRootResolver(node);
    return ArrayFilter.call(children, child => resolver === getShadowRootResolver(child));
  }
}
function getFilteredSlotAssignedNodes(slot) {
  const owner = getNodeOwner(slot);

  if (isNull(owner)) {
    return [];
  }

  const childNodes = arrayFromCollection(childNodesGetter.call(slot));
  return ArrayFilter.call(childNodes, child => !isNodeShadowed(child) || !isNodeOwnedBy(owner, child));
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function getTextContent(node) {
  switch (node.nodeType) {
    case ELEMENT_NODE:
      {
        const childNodes = getFilteredChildNodes(node);
        let content = '';

        for (let i = 0, len = childNodes.length; i < len; i += 1) {
          const currentNode = childNodes[i];

          if (currentNode.nodeType !== COMMENT_NODE) {
            content += getTextContent(currentNode);
          }
        }

        return content;
      }

    default:
      return node.nodeValue;
  }
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const Items$1 = new WeakMap();

function StaticNodeList() {
  throw new TypeError('Illegal constructor');
}

StaticNodeList.prototype = create(NodeList.prototype, {
  constructor: {
    writable: true,
    configurable: true,
    value: StaticNodeList
  },
  item: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(index) {
      return this[index];
    }

  },
  length: {
    enumerable: true,
    configurable: true,

    get() {
      return Items$1.get(this).length;
    }

  },
  // Iterator protocol
  forEach: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(cb, thisArg) {
      forEach.call(Items$1.get(this), cb, thisArg);
    }

  },
  entries: {
    writable: true,
    enumerable: true,
    configurable: true,

    value() {
      return ArrayMap.call(Items$1.get(this), (v, i) => [i, v]);
    }

  },
  keys: {
    writable: true,
    enumerable: true,
    configurable: true,

    value() {
      return ArrayMap.call(Items$1.get(this), (_v, i) => i);
    }

  },
  values: {
    writable: true,
    enumerable: true,
    configurable: true,

    value() {
      return Items$1.get(this);
    }

  },
  [Symbol.iterator]: {
    writable: true,
    configurable: true,

    value() {
      let nextIndex = 0;
      return {
        next: () => {
          const items = Items$1.get(this);
          return nextIndex < items.length ? {
            value: items[nextIndex++],
            done: false
          } : {
            done: true
          };
        }
      };
    }

  },
  [Symbol.toStringTag]: {
    configurable: true,

    get() {
      return 'NodeList';
    }

  },
  // IE11 doesn't support Symbol.toStringTag, in which case we
  // provide the regular toString method.
  toString: {
    writable: true,
    configurable: true,

    value() {
      return '[object NodeList]';
    }

  }
}); // prototype inheritance dance

setPrototypeOf(StaticNodeList, NodeList);
function createStaticNodeList(items) {
  const nodeList = create(StaticNodeList.prototype);
  Items$1.set(nodeList, items); // setting static indexes

  forEach.call(items, (item, index) => {
    defineProperty(nodeList, index, {
      value: item,
      enumerable: true,
      configurable: true
    });
  });
  return nodeList;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const Items = new WeakMap();

function StaticHTMLCollection() {
  throw new TypeError('Illegal constructor');
}

StaticHTMLCollection.prototype = create(HTMLCollection.prototype, {
  constructor: {
    writable: true,
    configurable: true,
    value: StaticHTMLCollection
  },
  item: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(index) {
      return this[index];
    }

  },
  length: {
    enumerable: true,
    configurable: true,

    get() {
      return Items.get(this).length;
    }

  },
  // https://dom.spec.whatwg.org/#dom-htmlcollection-nameditem-key
  namedItem: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(name) {
      if (name === '') {
        return null;
      }

      const items = Items.get(this);

      for (let i = 0, len = items.length; i < len; i++) {
        const item = items[len];

        if (name === getAttribute.call(item, 'id') || name === getAttribute.call(item, 'name')) {
          return item;
        }
      }

      return null;
    }

  },
  [Symbol.toStringTag]: {
    configurable: true,

    get() {
      return 'HTMLCollection';
    }

  },
  // IE11 doesn't support Symbol.toStringTag, in which case we
  // provide the regular toString method.
  toString: {
    writable: true,
    configurable: true,

    value() {
      return '[object HTMLCollection]';
    }

  }
}); // prototype inheritance dance

setPrototypeOf(StaticHTMLCollection, HTMLCollection);
function createStaticHTMLCollection(items) {
  const collection = create(StaticHTMLCollection.prototype);
  Items.set(collection, items); // setting static indexes

  forEach.call(items, (item, index) => {
    defineProperty(collection, index, {
      value: item,
      enumerable: true,
      configurable: true
    });
  });
  return collection;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function getInnerHTML(node) {
  let s = '';
  const childNodes = getFilteredChildNodes(node);

  for (let i = 0, len = childNodes.length; i < len; i += 1) {
    s += getOuterHTML(childNodes[i]);
  }

  return s;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

const escapeAttrRegExp = /[&\u00A0"]/g;
const escapeDataRegExp = /[&\u00A0<>]/g;
const {
  replace,
  toLowerCase
} = String.prototype;

function escapeReplace(c) {
  switch (c) {
    case '&':
      return '&amp;';

    case '<':
      return '&lt;';

    case '>':
      return '&gt;';

    case '"':
      return '&quot;';

    case '\u00A0':
      return '&nbsp;';

    default:
      return '';
  }
}

function escapeAttr(s) {
  return replace.call(s, escapeAttrRegExp, escapeReplace);
}

function escapeData(s) {
  return replace.call(s, escapeDataRegExp, escapeReplace);
} // http://www.whatwg.org/specs/web-apps/current-work/#void-elements


const voidElements = new Set(['AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT', 'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR']);
const plaintextParents = new Set(['STYLE', 'SCRIPT', 'XMP', 'IFRAME', 'NOEMBED', 'NOFRAMES', 'PLAINTEXT', 'NOSCRIPT']);
function getOuterHTML(node) {
  switch (node.nodeType) {
    case ELEMENT_NODE:
      {
        const {
          attributes: attrs
        } = node;
        const tagName = tagNameGetter.call(node);
        let s = '<' + toLowerCase.call(tagName);

        for (let i = 0, attr; attr = attrs[i]; i++) {
          s += ' ' + attr.name + '="' + escapeAttr(attr.value) + '"';
        }

        s += '>';

        if (voidElements.has(tagName)) {
          return s;
        }

        return s + getInnerHTML(node) + '</' + toLowerCase.call(tagName) + '>';
      }

    case TEXT_NODE:
      {
        const {
          data,
          parentNode
        } = node;

        if (parentNode instanceof Element && plaintextParents.has(tagNameGetter.call(parentNode))) {
          return data;
        }

        return escapeData(data);
      }

    case CDATA_SECTION_NODE:
      {
        return `<!CDATA[[${node.data}]]>`;
      }

    case PROCESSING_INSTRUCTION_NODE:
      {
        return `<?${node.target} ${node.data}?>`;
      }

    case COMMENT_NODE:
      {
        return `<!--${node.data}-->`;
      }

    default:
      {
        // intentionally ignoring unknown node types
        // Note: since this routine is always invoked for childNodes
        // we can safety ignore type 9, 10 and 99 (document, fragment and doctype)
        return '';
      }
  }
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
/**
 * This method checks whether or not the content of the node is computed
 * based on the light-dom slotting mechanism. This applies to synthetic slot elements
 * and elements with shadow dom attached to them. It doesn't apply to native slot elements
 * because we don't want to patch the children getters for those elements.
 */

function hasMountedChildren(node) {
  return isSyntheticSlotElement(node) || isSyntheticShadowHost(node);
}

function getShadowParent(node, value) {
  const owner = getNodeOwner(node);

  if (value === owner) {
    // walking up via parent chain might end up in the shadow root element
    return getShadowRoot(owner);
  } else if (value instanceof Element) {
    if (getNodeNearestOwnerKey(node) === getNodeNearestOwnerKey(value)) {
      // the element and its parent node belong to the same shadow root
      return value;
    } else if (!isNull(owner) && isSlotElement(value)) {
      // slotted elements must be top level childNodes of the slot element
      // where they slotted into, but its shadowed parent is always the
      // owner of the slot.
      const slotOwner = getNodeOwner(value);

      if (!isNull(slotOwner) && isNodeOwnedBy(owner, slotOwner)) {
        // it is a slotted element, and therefore its parent is always going to be the host of the slot
        return slotOwner;
      }
    }
  }

  return null;
}

function hasChildNodesPatched() {
  return getInternalChildNodes(this).length > 0;
}

function firstChildGetterPatched() {
  const childNodes = getInternalChildNodes(this);
  return childNodes[0] || null;
}

function lastChildGetterPatched() {
  const childNodes = getInternalChildNodes(this);
  return childNodes[childNodes.length - 1] || null;
}

function textContentGetterPatched() {
  return getTextContent(this);
}

function textContentSetterPatched(value) {
  textContextSetter.call(this, value);
}

function parentNodeGetterPatched() {
  const value = parentNodeGetter.call(this);

  if (isNull(value)) {
    return value;
  } // TODO [#1635]: this needs optimization, maybe implementing it based on this.assignedSlot


  return getShadowParent(this, value);
}

function parentElementGetterPatched() {
  const value = parentNodeGetter.call(this);

  if (isNull(value)) {
    return null;
  }

  const parentNode = getShadowParent(this, value); // it could be that the parentNode is the shadowRoot, in which case
  // we need to return null.
  // TODO [#1635]: this needs optimization, maybe implementing it based on this.assignedSlot

  return parentNode instanceof Element ? parentNode : null;
}

function compareDocumentPositionPatched(otherNode) {
  if (this.getRootNode() === otherNode) {
    // "this" is in a shadow tree where the shadow root is the "otherNode".
    return 10; // Node.DOCUMENT_POSITION_CONTAINS | Node.DOCUMENT_POSITION_PRECEDING
  } else if (getNodeOwnerKey(this) !== getNodeOwnerKey(otherNode)) {
    // "this" and "otherNode" belongs to 2 different shadow tree.
    return 35; // Node.DOCUMENT_POSITION_DISCONNECTED | Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC | Node.DOCUMENT_POSITION_PRECEDING
  } // Since "this" and "otherNode" are part of the same shadow tree we can safely rely to the native
  // Node.compareDocumentPosition implementation.


  return compareDocumentPosition.call(this, otherNode);
}

function containsPatched(otherNode) {
  if (otherNode == null || getNodeOwnerKey(this) !== getNodeOwnerKey(otherNode)) {
    // it is from another shadow
    return false;
  }

  return (compareDocumentPosition.call(this, otherNode) & DOCUMENT_POSITION_CONTAINED_BY) !== 0;
}

function cloneNodePatched(deep) {
  const clone = cloneNode.call(this, false); // Per spec, browsers only care about truthy values
  // Not strict true or false

  if (!deep) {
    return clone;
  }

  const childNodes = getInternalChildNodes(this);

  for (let i = 0, len = childNodes.length; i < len; i += 1) {
    clone.appendChild(childNodes[i].cloneNode(true));
  }

  return clone;
}
/**
 * This method only applies to elements with a shadow or slots
 */


function childNodesGetterPatched() {
  if (isSyntheticShadowHost(this)) {
    const owner = getNodeOwner(this);
    const childNodes = isNull(owner) ? [] : getAllMatches(owner, getFilteredChildNodes(this));

    if (undefined !== 'production' && isFalse(hasNativeSymbolSupport) && isExternalChildNodeAccessorFlagOn()) {
      // inserting a comment node as the first childNode to trick the IE11
      // DevTool to show the content of the shadowRoot, this should only happen
      // in dev-mode and in IE11 (which we detect by looking at the symbol).
      // Plus it should only be in place if we know it is an external invoker.
      ArrayUnshift.call(childNodes, getIE11FakeShadowRootPlaceholder(this));
    }

    return createStaticNodeList(childNodes);
  } // nothing to do here since this does not have a synthetic shadow attached to it
  // TODO [#1636]: what about slot elements?


  return childNodesGetter.call(this);
}

const nativeGetRootNode = _Node.prototype.getRootNode;
/**
 * Get the root by climbing up the dom tree, beyond the shadow root
 * If Node.prototype.getRootNode is supported, use it
 * else, assume we are working in non-native shadow mode and climb using parentNode
 */

const getDocumentOrRootNode = !isUndefined(nativeGetRootNode) ? nativeGetRootNode : function () {
  let node = this;
  let nodeParent;

  while (!isNull(nodeParent = parentNodeGetter.call(node))) {
    node = nodeParent;
  }

  return node;
};
/**
 * Get the shadow root
 * getNodeOwner() returns the host element that owns the given node
 * Note: getNodeOwner() returns null when running in native-shadow mode.
 *  Fallback to using the native getRootNode() to discover the root node.
 *  This is because, it is not possible to inspect the node and decide if it is part
 *  of a native shadow or the synthetic shadow.
 * @param {Node} node
 */

function getNearestRoot(node) {
  const ownerNode = getNodeOwner(node);

  if (isNull(ownerNode)) {
    // we hit a wall, either we are in native shadow mode or the node is not in lwc boundary.
    return getDocumentOrRootNode.call(node);
  }

  return getShadowRoot(ownerNode);
}
/**
 * If looking for a root node beyond shadow root by calling `node.getRootNode({composed: true})`, use the original `Node.prototype.getRootNode` method
 * to return the root of the dom tree. In IE11 and Edge, Node.prototype.getRootNode is
 * [not supported](https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode#Browser_compatibility). The root node is discovered by manually
 * climbing up the dom tree.
 *
 * If looking for a shadow root of a node by calling `node.getRootNode({composed: false})` or `node.getRootNode()`,
 *
 *  1. Try to identify the host element that owns the give node.
 *     i. Identify the shadow tree that the node belongs to
 *     ii. If the node belongs to a shadow tree created by engine, return the shadowRoot of the host element that owns the shadow tree
 *  2. The host identification logic returns null in two cases:
 *     i. The node does not belong to a shadow tree created by engine
 *     ii. The engine is running in native shadow dom mode
 *     If so, use the original Node.prototype.getRootNode to fetch the root node(or manually climb up the dom tree where getRootNode() is unsupported)
 *
 * _Spec_: https://dom.spec.whatwg.org/#dom-node-getrootnode
 *
 **/


function getRootNodePatched(options) {
  const composed = isUndefined(options) ? false : !!options.composed;
  return isTrue(composed) ? getDocumentOrRootNode.call(this, options) : getNearestRoot(this);
} // Non-deep-traversing patches: this descriptor map includes all descriptors that
// do not give access to nodes beyond the immediate children.


defineProperties(_Node.prototype, {
  firstChild: {
    get() {
      if (hasMountedChildren(this)) {
        return firstChildGetterPatched.call(this);
      }

      return firstChildGetter.call(this);
    },

    enumerable: true,
    configurable: true
  },
  lastChild: {
    get() {
      if (hasMountedChildren(this)) {
        return lastChildGetterPatched.call(this);
      }

      return lastChildGetter.call(this);
    },

    enumerable: true,
    configurable: true
  },
  textContent: {
    get() {
      if (!runtimeFlags.ENABLE_NODE_PATCH) {
        if (isNodeShadowed(this) || isSyntheticShadowHost(this)) {
          return textContentGetterPatched.call(this);
        }

        return textContentGetter.call(this);
      } // TODO [#1222]: remove global bypass


      if (isGlobalPatchingSkipped(this)) {
        return textContentGetter.call(this);
      }

      return textContentGetterPatched.call(this);
    },

    set: textContentSetterPatched,
    enumerable: true,
    configurable: true
  },
  parentNode: {
    get() {
      if (isNodeShadowed(this)) {
        return parentNodeGetterPatched.call(this);
      }

      const parentNode = parentNodeGetter.call(this); // Handle the case where a top level light DOM element is slotted into a synthetic
      // shadow slot.

      if (!isNull(parentNode) && isSyntheticSlotElement(parentNode)) {
        return getNodeOwner(parentNode);
      }

      return parentNode;
    },

    enumerable: true,
    configurable: true
  },
  parentElement: {
    get() {
      if (isNodeShadowed(this)) {
        return parentElementGetterPatched.call(this);
      }

      const parentElement = parentElementGetter.call(this); // Handle the case where a top level light DOM element is slotted into a synthetic
      // shadow slot.

      if (!isNull(parentElement) && isSyntheticSlotElement(parentElement)) {
        return getNodeOwner(parentElement);
      }

      return parentElement;
    },

    enumerable: true,
    configurable: true
  },
  childNodes: {
    get() {
      if (hasMountedChildren(this)) {
        return childNodesGetterPatched.call(this);
      }

      return childNodesGetter.call(this);
    },

    enumerable: true,
    configurable: true
  },
  hasChildNodes: {
    value() {
      if (hasMountedChildren(this)) {
        return hasChildNodesPatched.call(this);
      }

      return hasChildNodes.call(this);
    },

    enumerable: true,
    writable: true,
    configurable: true
  },
  compareDocumentPosition: {
    value(otherNode) {
      // TODO [#1222]: remove global bypass
      if (isGlobalPatchingSkipped(this)) {
        return compareDocumentPosition.call(this, otherNode);
      }

      return compareDocumentPositionPatched.call(this, otherNode);
    },

    enumerable: true,
    writable: true,
    configurable: true
  },
  contains: {
    value(otherNode) {
      // 1. Node.prototype.contains() returns true if otherNode is an inclusive descendant
      //    spec: https://dom.spec.whatwg.org/#dom-node-contains
      // 2. This normalizes the behavior of this api across all browsers.
      //    In IE11, a disconnected dom element without children invoking contains() on self, returns false
      if (this === otherNode) {
        return true;
      }

      if (!runtimeFlags.ENABLE_NODE_PATCH) {
        if (otherNode == null) {
          return false;
        }

        if (isNodeShadowed(this) || isSyntheticShadowHost(this)) {
          return containsPatched.call(this, otherNode);
        }

        return contains.call(this, otherNode);
      } // TODO [#1222]: remove global bypass


      if (isGlobalPatchingSkipped(this)) {
        return contains.call(this, otherNode);
      }

      return containsPatched.call(this, otherNode);
    },

    enumerable: true,
    writable: true,
    configurable: true
  },
  cloneNode: {
    value(deep) {
      if (!runtimeFlags.ENABLE_NODE_PATCH) {
        if (isNodeShadowed(this) || isSyntheticShadowHost(this)) {
          return cloneNodePatched.call(this, deep);
        }

        return cloneNode.call(this, deep);
      }

      if (isTrue(deep)) {
        // TODO [#1222]: remove global bypass
        if (isGlobalPatchingSkipped(this)) {
          return cloneNode.call(this, deep);
        }

        return cloneNodePatched.call(this, deep);
      }

      return cloneNode.call(this, deep);
    },

    enumerable: true,
    writable: true,
    configurable: true
  },
  getRootNode: {
    value: getRootNodePatched,
    enumerable: true,
    configurable: true,
    writable: true
  },
  isConnected: {
    enumerable: true,
    configurable: true,

    get() {
      return isConnected.call(this);
    }

  }
});
let internalChildNodeAccessorFlag = false;
/**
 * These 2 methods are providing a machinery to understand who is accessing the
 * .childNodes member property of a node. If it is used from inside the synthetic shadow
 * or from an external invoker. This helps to produce the right output in one very peculiar
 * case, the IE11 debugging comment for shadowRoot representation on the devtool.
 */

function isExternalChildNodeAccessorFlagOn() {
  return !internalChildNodeAccessorFlag;
}
const getInternalChildNodes = undefined !== 'production' && isFalse(hasNativeSymbolSupport) ? function (node) {
  internalChildNodeAccessorFlag = true;
  let childNodes;
  let error = null;

  try {
    childNodes = node.childNodes;
  } catch (e) {
    // childNodes accessor should never throw, but just in case!
    error = e;
  } finally {
    internalChildNodeAccessorFlag = false;

    if (!isNull(error)) {
      // re-throwing after restoring the state machinery for setInternalChildNodeAccessorFlag
      throw error; // eslint-disable-line no-unsafe-finally
    }
  }

  return childNodes;
} : function (node) {
  return node.childNodes;
}; // IE11 extra patches for wrong prototypes

if (hasOwnProperty.call(HTMLElement.prototype, 'contains')) {
  defineProperty(HTMLElement.prototype, 'contains', getOwnPropertyDescriptor(_Node.prototype, 'contains'));
}

if (hasOwnProperty.call(HTMLElement.prototype, 'parentElement')) {
  defineProperty(HTMLElement.prototype, 'parentElement', getOwnPropertyDescriptor(_Node.prototype, 'parentElement'));
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function getAllRootNodes(node) {
  var _a;

  const rootNodes = [];
  let currentRootNode = node.getRootNode();

  while (!isUndefined(currentRootNode)) {
    rootNodes.push(currentRootNode);
    currentRootNode = (_a = currentRootNode.host) === null || _a === void 0 ? void 0 : _a.getRootNode();
  }

  return rootNodes;
}

function fauxElementsFromPoint(context, doc, left, top) {
  const elements = elementsFromPoint.call(doc, left, top);
  const result = [];
  const rootNodes = getAllRootNodes(context); // Filter the elements array to only include those elements that are in this shadow root or in one of its
  // ancestor roots. This matches Chrome and Safari's implementation (but not Firefox's, which only includes
  // elements in the immediate shadow root: https://crbug.com/1207863#c4).

  if (!isNull(elements)) {
    // can be null in IE https://developer.mozilla.org/en-US/docs/Web/API/Document/elementsFromPoint#browser_compatibility
    for (let i = 0; i < elements.length; i++) {
      const element = elements[i];

      if (rootNodes.indexOf(element.getRootNode()) !== -1 && !isSyntheticSlotElement(element)) {
        result.push(element);
      }
    }
  }

  return result;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const InternalSlot = new WeakMap();
const {
  createDocumentFragment
} = document;
function hasInternalSlot(root) {
  return InternalSlot.has(root);
}

function getInternalSlot(root) {
  const record = InternalSlot.get(root);

  if (isUndefined(record)) {
    throw new TypeError();
  }

  return record;
}

defineProperty(_Node.prototype, KEY__SHADOW_RESOLVER, {
  set(fn) {
    if (isUndefined(fn)) return;
    this[KEY__SHADOW_RESOLVER_PRIVATE] = fn; // TODO [#1164]: temporary propagation of the key

    setNodeOwnerKey(this, fn.nodeKey);
  },

  get() {
    return this[KEY__SHADOW_RESOLVER_PRIVATE];
  },

  configurable: true,
  enumerable: true
});
defineProperty(_globalThis, KEY__IS_NATIVE_SHADOW_ROOT_DEFINED, {
  value: isNativeShadowRootDefined
});
function getShadowRootResolver(node) {
  return node[KEY__SHADOW_RESOLVER];
}
function setShadowRootResolver(node, fn) {
  node[KEY__SHADOW_RESOLVER] = fn;
}
function isDelegatingFocus(host) {
  return getInternalSlot(host).delegatesFocus;
}
function getHost(root) {
  return getInternalSlot(root).host;
}
function getShadowRoot(elm) {
  return getInternalSlot(elm).shadowRoot;
} // Intentionally adding `Node` here in addition to `Element` since this check is harmless for nodes
// and we can avoid having to cast the type before calling this method in a few places.

function isSyntheticShadowHost(node) {
  const shadowRootRecord = InternalSlot.get(node);
  return !isUndefined(shadowRootRecord) && node === shadowRootRecord.host;
}
function isSyntheticShadowRoot(node) {
  const shadowRootRecord = InternalSlot.get(node);
  return !isUndefined(shadowRootRecord) && node === shadowRootRecord.shadowRoot;
}
let uid = 0;
function attachShadow(elm, options) {
  if (InternalSlot.has(elm)) {
    throw new Error(`Failed to execute 'attachShadow' on 'Element': Shadow root cannot be created on a host which already hosts a shadow tree.`);
  }

  const {
    mode,
    delegatesFocus
  } = options; // creating a real fragment for shadowRoot instance

  const doc = getOwnerDocument(elm);
  const sr = createDocumentFragment.call(doc); // creating shadow internal record

  const record = {
    mode,
    delegatesFocus: !!delegatesFocus,
    host: elm,
    shadowRoot: sr
  };
  InternalSlot.set(sr, record);
  InternalSlot.set(elm, record);

  const shadowResolver = () => sr;

  const x = shadowResolver.nodeKey = uid++;
  setNodeKey(elm, x);
  setShadowRootResolver(sr, shadowResolver); // correcting the proto chain

  setPrototypeOf(sr, SyntheticShadowRoot.prototype);
  return sr;
}
const SyntheticShadowRootDescriptors = {
  constructor: {
    writable: true,
    configurable: true,
    value: SyntheticShadowRoot
  },
  toString: {
    writable: true,
    configurable: true,

    value() {
      return `[object ShadowRoot]`;
    }

  }
};
const ShadowRootDescriptors = {
  activeElement: {
    enumerable: true,
    configurable: true,

    get() {
      const host = getHost(this);
      const doc = getOwnerDocument(host);
      const activeElement = DocumentPrototypeActiveElement.call(doc);

      if (isNull(activeElement)) {
        return activeElement;
      }

      if ((compareDocumentPosition.call(host, activeElement) & DOCUMENT_POSITION_CONTAINED_BY) === 0) {
        return null;
      } // activeElement must be child of the host and owned by it


      let node = activeElement;

      while (!isNodeOwnedBy(host, node)) {
        // parentElement is always an element because we are talking up the tree knowing
        // that it is a child of the host.
        node = parentElementGetter.call(node);
      } // If we have a slot element here that means that we were dealing
      // with an element that was passed to one of our slots. In this
      // case, activeElement returns null.


      if (isSlotElement(node)) {
        return null;
      }

      return node;
    }

  },
  delegatesFocus: {
    configurable: true,

    get() {
      return getInternalSlot(this).delegatesFocus;
    }

  },
  elementFromPoint: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(left, top) {
      const host = getHost(this);
      const doc = getOwnerDocument(host);
      return fauxElementFromPoint(this, doc, left, top);
    }

  },
  elementsFromPoint: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(left, top) {
      const host = getHost(this);
      const doc = getOwnerDocument(host);
      return fauxElementsFromPoint(this, doc, left, top);
    }

  },
  getSelection: {
    writable: true,
    enumerable: true,
    configurable: true,

    value() {
      throw new Error('Disallowed method "getSelection" on ShadowRoot.');
    }

  },
  host: {
    enumerable: true,
    configurable: true,

    get() {
      return getHost(this);
    }

  },
  mode: {
    configurable: true,

    get() {
      return getInternalSlot(this).mode;
    }

  },
  styleSheets: {
    enumerable: true,
    configurable: true,

    get() {
      throw new Error();
    }

  }
};
const eventToShadowRootMap = new WeakMap();
const NodePatchDescriptors = {
  insertBefore: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(newChild, refChild) {
      insertBefore.call(getHost(this), newChild, refChild);
      return newChild;
    }

  },
  removeChild: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(oldChild) {
      removeChild.call(getHost(this), oldChild);
      return oldChild;
    }

  },
  appendChild: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(newChild) {
      appendChild.call(getHost(this), newChild);
      return newChild;
    }

  },
  replaceChild: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(newChild, oldChild) {
      replaceChild.call(getHost(this), newChild, oldChild);
      return oldChild;
    }

  },
  addEventListener: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(type, listener, options) {
      addShadowRootEventListener(this, type, listener);
    }

  },
  dispatchEvent: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(evt) {
      eventToShadowRootMap.set(evt, this); // Typescript does not like it when you treat the `arguments` object as an array
      // @ts-ignore type-mismatch

      return dispatchEvent.apply(getHost(this), arguments);
    }

  },
  removeEventListener: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(type, listener, options) {
      removeShadowRootEventListener(this, type, listener);
    }

  },
  baseURI: {
    enumerable: true,
    configurable: true,

    get() {
      return getHost(this).baseURI;
    }

  },
  childNodes: {
    enumerable: true,
    configurable: true,

    get() {
      return createStaticNodeList(shadowRootChildNodes(this));
    }

  },
  cloneNode: {
    writable: true,
    enumerable: true,
    configurable: true,

    value() {
      throw new Error('Disallowed method "cloneNode" on ShadowRoot.');
    }

  },
  compareDocumentPosition: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(otherNode) {
      const host = getHost(this);

      if (this === otherNode) {
        // "this" and "otherNode" are the same shadow root.
        return 0;
      } else if (this.contains(otherNode)) {
        // "otherNode" belongs to the shadow tree where "this" is the shadow root.
        return 20; // Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_FOLLOWING
      } else if (compareDocumentPosition.call(host, otherNode) & DOCUMENT_POSITION_CONTAINED_BY) {
        // "otherNode" is in a different shadow tree contained by the shadow tree where "this" is the shadow root.
        return 37; // Node.DOCUMENT_POSITION_DISCONNECTED | Node.DOCUMENT_POSITION_FOLLOWING | Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC
      } else {
        // "otherNode" is in a different shadow tree that is not contained by the shadow tree where "this" is the shadow root.
        return 35; // Node.DOCUMENT_POSITION_DISCONNECTED | Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC
      }
    }

  },
  contains: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(otherNode) {
      if (this === otherNode) {
        return true;
      }

      const host = getHost(this); // must be child of the host and owned by it.

      return (compareDocumentPosition.call(host, otherNode) & DOCUMENT_POSITION_CONTAINED_BY) !== 0 && isNodeOwnedBy(host, otherNode);
    }

  },
  firstChild: {
    enumerable: true,
    configurable: true,

    get() {
      const childNodes = getInternalChildNodes(this);
      return childNodes[0] || null;
    }

  },
  lastChild: {
    enumerable: true,
    configurable: true,

    get() {
      const childNodes = getInternalChildNodes(this);
      return childNodes[childNodes.length - 1] || null;
    }

  },
  hasChildNodes: {
    writable: true,
    enumerable: true,
    configurable: true,

    value() {
      const childNodes = getInternalChildNodes(this);
      return childNodes.length > 0;
    }

  },
  isConnected: {
    enumerable: true,
    configurable: true,

    get() {
      return isConnected.call(getHost(this));
    }

  },
  nextSibling: {
    enumerable: true,
    configurable: true,

    get() {
      return null;
    }

  },
  previousSibling: {
    enumerable: true,
    configurable: true,

    get() {
      return null;
    }

  },
  nodeName: {
    enumerable: true,
    configurable: true,

    get() {
      return '#document-fragment';
    }

  },
  nodeType: {
    enumerable: true,
    configurable: true,

    get() {
      return 11; // Node.DOCUMENT_FRAGMENT_NODE
    }

  },
  nodeValue: {
    enumerable: true,
    configurable: true,

    get() {
      return null;
    }

  },
  ownerDocument: {
    enumerable: true,
    configurable: true,

    get() {
      return getHost(this).ownerDocument;
    }

  },
  parentElement: {
    enumerable: true,
    configurable: true,

    get() {
      return null;
    }

  },
  parentNode: {
    enumerable: true,
    configurable: true,

    get() {
      return null;
    }

  },
  textContent: {
    enumerable: true,
    configurable: true,

    get() {
      const childNodes = getInternalChildNodes(this);
      let textContent = '';

      for (let i = 0, len = childNodes.length; i < len; i += 1) {
        const currentNode = childNodes[i];

        if (currentNode.nodeType !== COMMENT_NODE) {
          textContent += getTextContent(currentNode);
        }
      }

      return textContent;
    },

    set(v) {
      const host = getHost(this);
      textContextSetter.call(host, v);
    }

  },
  // Since the synthetic shadow root is a detached DocumentFragment, short-circuit the getRootNode behavior
  getRootNode: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(options) {
      return !isUndefined(options) && isTrue(options.composed) ? getHost(this).getRootNode(options) : this;
    }

  }
};
const ElementPatchDescriptors = {
  innerHTML: {
    enumerable: true,
    configurable: true,

    get() {
      const childNodes = getInternalChildNodes(this);
      let innerHTML = '';

      for (let i = 0, len = childNodes.length; i < len; i += 1) {
        innerHTML += getOuterHTML(childNodes[i]);
      }

      return innerHTML;
    },

    set(v) {
      const host = getHost(this);
      innerHTMLSetter.call(host, v);
    }

  }
};
const ParentNodePatchDescriptors = {
  childElementCount: {
    enumerable: true,
    configurable: true,

    get() {
      return this.children.length;
    }

  },
  children: {
    enumerable: true,
    configurable: true,

    get() {
      return createStaticHTMLCollection(ArrayFilter.call(shadowRootChildNodes(this), elm => elm instanceof Element));
    }

  },
  firstElementChild: {
    enumerable: true,
    configurable: true,

    get() {
      return this.children[0] || null;
    }

  },
  lastElementChild: {
    enumerable: true,
    configurable: true,

    get() {
      const {
        children
      } = this;
      return children.item(children.length - 1) || null;
    }

  },
  getElementById: {
    writable: true,
    enumerable: true,
    configurable: true,

    value() {
      throw new Error('Disallowed method "getElementById" on ShadowRoot.');
    }

  },
  querySelector: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(selectors) {
      return shadowRootQuerySelector(this, selectors);
    }

  },
  querySelectorAll: {
    writable: true,
    enumerable: true,
    configurable: true,

    value(selectors) {
      return createStaticNodeList(shadowRootQuerySelectorAll(this, selectors));
    }

  }
};
assign(SyntheticShadowRootDescriptors, NodePatchDescriptors, ParentNodePatchDescriptors, ElementPatchDescriptors, ShadowRootDescriptors);
function SyntheticShadowRoot() {
  throw new TypeError('Illegal constructor');
}
SyntheticShadowRoot.prototype = create(DocumentFragment.prototype, SyntheticShadowRootDescriptors); // `this.shadowRoot instanceof ShadowRoot` should evaluate to true even for synthetic shadow

defineProperty(SyntheticShadowRoot, Symbol.hasInstance, {
  value: function (object) {
    // Technically we should walk up the entire prototype chain, but with SyntheticShadowRoot
    // it's reasonable to assume that no one is doing any deep subclasses here.
    return isObject(object) && !isNull(object) && (isInstanceOfNativeShadowRoot(object) || getPrototypeOf(object) === SyntheticShadowRoot.prototype);
  }
});
/**
 * This method is only intended to be used in non-production mode in IE11
 * and its role is to produce a 1-1 mapping between a shadowRoot instance
 * and a comment node that is intended to use to trick the IE11 DevTools
 * to show the content of the shadowRoot in the DOM Explorer.
 */

function getIE11FakeShadowRootPlaceholder(host) {
  const shadowRoot = getShadowRoot(host); // @ts-ignore this $$placeholder$$ is not a security issue because you must
  // have access to the shadowRoot in order to extract the fake node, which give
  // you access to the same childNodes of the shadowRoot, so, who cares.

  let c = shadowRoot.$$placeholder$$;

  if (!isUndefined(c)) {
    return c;
  }

  const doc = getOwnerDocument(host); // @ts-ignore $$placeholder$$ is fine, read the node above.

  c = shadowRoot.$$placeholder$$ = createComment.call(doc, '');
  defineProperties(c, {
    childNodes: {
      get() {
        return shadowRoot.childNodes;
      },

      enumerable: true,
      configurable: true
    },
    tagName: {
      get() {
        return `#shadow-root (${shadowRoot.mode})`;
      },

      enumerable: true,
      configurable: true
    }
  });
  return c;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function pathComposer(startNode, composed) {
  const composedPath = [];
  let startRoot;

  if (startNode instanceof Window) {
    startRoot = startNode;
  } else if (startNode instanceof _Node) {
    startRoot = startNode.getRootNode();
  } else {
    return composedPath;
  }

  let current = startNode;

  while (!isNull(current)) {
    composedPath.push(current);

    if (current instanceof Element || current instanceof Text) {
      const assignedSlot = current.assignedSlot;

      if (!isNull(assignedSlot)) {
        current = assignedSlot;
      } else {
        current = current.parentNode;
      }
    } else if ((isSyntheticShadowRoot(current) || isInstanceOfNativeShadowRoot(current)) && (composed || current !== startRoot)) {
      current = current.host;
    } else if (current instanceof _Node) {
      current = current.parentNode;
    } else {
      // could be Window
      current = null;
    }
  }

  let doc;

  if (startNode instanceof Window) {
    doc = startNode.document;
  } else {
    doc = getOwnerDocument(startNode);
  } // event composedPath includes window when startNode's ownerRoot is document


  if (composedPath[composedPath.length - 1] === doc) {
    composedPath.push(window);
  }

  return composedPath;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
/**
@license
Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/

function retarget(refNode, path) {
  if (isNull(refNode)) {
    return null;
  } // If ANCESTOR's root is not a shadow root or ANCESTOR's root is BASE's
  // shadow-including inclusive ancestor, return ANCESTOR.


  const refNodePath = pathComposer(refNode, true);
  const p$ = path;

  for (let i = 0, ancestor, lastRoot, root, rootIdx; i < p$.length; i++) {
    ancestor = p$[i];
    root = ancestor instanceof Window ? ancestor : ancestor.getRootNode();

    if (root !== lastRoot) {
      rootIdx = refNodePath.indexOf(root);
      lastRoot = root;
    }

    if (!isSyntheticShadowRoot(root) || !isUndefined(rootIdx) && rootIdx > -1) {
      return ancestor;
    }
  }

  return null;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function fauxElementFromPoint(context, doc, left, top) {
  const element = elementFromPoint.call(doc, left, top);

  if (isNull(element)) {
    return element;
  }

  return retarget(context, pathComposer(element, true));
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function elemFromPoint(left, top) {
  return fauxElementFromPoint(this, this, left, top);
}

Document.prototype.elementFromPoint = elemFromPoint;

function elemsFromPoint(left, top) {
  return fauxElementsFromPoint(this, this, left, top);
}

Document.prototype.elementsFromPoint = elemsFromPoint; // Go until we reach to top of the LWC tree

defineProperty(Document.prototype, 'activeElement', {
  get() {
    let node = DocumentPrototypeActiveElement.call(this);

    if (isNull(node)) {
      return node;
    }

    while (!isUndefined(getNodeOwnerKey(node))) {
      node = parentElementGetter.call(node);

      if (isNull(node)) {
        return null;
      }
    }

    if (node.tagName === 'HTML') {
      // IE 11. Active element should never be html element
      node = this.body;
    }

    return node;
  },

  enumerable: true,
  configurable: true
}); // The following patched methods hide shadowed elements from global
// traversing mechanisms. They are simplified for performance reasons to
// filter by ownership and do not account for slotted elements. This
// compromise is fine for our synthetic shadow dom because root elements
// cannot have slotted elements.
// Another compromise here is that all these traversing methods will return
// static HTMLCollection or static NodeList. We decided that this compromise
// is not a big problem considering the amount of code that is relying on
// the liveliness of these results are rare.

defineProperty(Document.prototype, 'getElementById', {
  value() {
    const elm = getElementById.apply(this, ArraySlice.call(arguments));

    if (isNull(elm)) {
      return null;
    } // TODO [#1222]: remove global bypass


    return isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(elm) ? elm : null;
  },

  writable: true,
  enumerable: true,
  configurable: true
});
defineProperty(Document.prototype, 'querySelector', {
  value() {
    const elements = arrayFromCollection(querySelectorAll.apply(this, ArraySlice.call(arguments)));
    const filtered = ArrayFind.call(elements, // TODO [#1222]: remove global bypass
    elm => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(elm));
    return !isUndefined(filtered) ? filtered : null;
  },

  writable: true,
  enumerable: true,
  configurable: true
});
defineProperty(Document.prototype, 'querySelectorAll', {
  value() {
    const elements = arrayFromCollection(querySelectorAll.apply(this, ArraySlice.call(arguments)));
    const filtered = ArrayFilter.call(elements, // TODO [#1222]: remove global bypass
    elm => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(elm));
    return createStaticNodeList(filtered);
  },

  writable: true,
  enumerable: true,
  configurable: true
});
defineProperty(Document.prototype, 'getElementsByClassName', {
  value() {
    const elements = arrayFromCollection(getElementsByClassName.apply(this, ArraySlice.call(arguments)));
    const filtered = ArrayFilter.call(elements, // TODO [#1222]: remove global bypass
    elm => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(elm));
    return createStaticHTMLCollection(filtered);
  },

  writable: true,
  enumerable: true,
  configurable: true
});
defineProperty(Document.prototype, 'getElementsByTagName', {
  value() {
    const elements = arrayFromCollection(getElementsByTagName.apply(this, ArraySlice.call(arguments)));
    const filtered = ArrayFilter.call(elements, // TODO [#1222]: remove global bypass
    elm => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(elm));
    return createStaticHTMLCollection(filtered);
  },

  writable: true,
  enumerable: true,
  configurable: true
});
defineProperty(Document.prototype, 'getElementsByTagNameNS', {
  value() {
    const elements = arrayFromCollection(getElementsByTagNameNS.apply(this, ArraySlice.call(arguments)));
    const filtered = ArrayFilter.call(elements, // TODO [#1222]: remove global bypass
    elm => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(elm));
    return createStaticHTMLCollection(filtered);
  },

  writable: true,
  enumerable: true,
  configurable: true
});
defineProperty( // In Firefox v57 and lower, getElementsByName is defined on HTMLDocument.prototype
getOwnPropertyDescriptor(HTMLDocument.prototype, 'getElementsByName') ? HTMLDocument.prototype : Document.prototype, 'getElementsByName', {
  value() {
    const elements = arrayFromCollection(getElementsByName.apply(this, ArraySlice.call(arguments)));
    const filtered = ArrayFilter.call(elements, // TODO [#1222]: remove global bypass
    elm => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(elm));
    return createStaticNodeList(filtered);
  },

  writable: true,
  enumerable: true,
  configurable: true
});

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
Object.defineProperty(window, 'ShadowRoot', {
  value: SyntheticShadowRoot,
  configurable: true,
  writable: true
});

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const composedDescriptor = Object.getOwnPropertyDescriptor(Event.prototype, 'composed');
function detect$3() {
  if (!composedDescriptor) {
    // No need to apply this polyfill if this client completely lacks
    // support for the composed property.
    return false;
  } // Assigning a throwaway click event here to suppress a ts error when we
  // pass clickEvent into the composed getter below. The error is:
  // [ts] Variable 'clickEvent' is used before being assigned.


  let clickEvent = new Event('click');
  const button = document.createElement('button');
  button.addEventListener('click', event => clickEvent = event);
  button.click();
  return !composedDescriptor.get.call(clickEvent);
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const originalClickDescriptor = Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'click');

function handleClick(event) {
  Object.defineProperty(event, 'composed', {
    configurable: true,
    enumerable: true,

    get() {
      return true;
    }

  });
}

function apply$3() {
  HTMLElement.prototype.click = function () {
    addEventListener.call(this, 'click', handleClick);

    try {
      originalClickDescriptor.value.call(this);
    } finally {
      removeEventListener.call(this, 'click', handleClick);
    }
  };
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

if (detect$3()) {
  apply$3();
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function detect$2() {
  return new Event('test', {
    composed: true
  }).composed !== true;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function apply$2() {
  // https://github.com/w3c/webcomponents/issues/513#issuecomment-224183937
  const composedEvents = assign(create(null), {
    beforeinput: 1,
    blur: 1,
    click: 1,
    compositionend: 1,
    compositionstart: 1,
    compositionupdate: 1,
    copy: 1,
    cut: 1,
    dblclick: 1,
    DOMActivate: 1,
    DOMFocusIn: 1,
    DOMFocusOut: 1,
    drag: 1,
    dragend: 1,
    dragenter: 1,
    dragleave: 1,
    dragover: 1,
    dragstart: 1,
    drop: 1,
    focus: 1,
    focusin: 1,
    focusout: 1,
    gotpointercapture: 1,
    input: 1,
    keydown: 1,
    keypress: 1,
    keyup: 1,
    lostpointercapture: 1,
    mousedown: 1,
    mouseenter: 1,
    mouseleave: 1,
    mousemove: 1,
    mouseout: 1,
    mouseover: 1,
    mouseup: 1,
    paste: 1,
    pointercancel: 1,
    pointerdown: 1,
    pointerenter: 1,
    pointerleave: 1,
    pointermove: 1,
    pointerout: 1,
    pointerover: 1,
    pointerup: 1,
    touchcancel: 1,
    touchend: 1,
    touchmove: 1,
    touchstart: 1,
    wheel: 1
  });
  const EventConstructor = Event; // Patch Event constructor to add the composed property on events created via new Event.

  function PatchedEvent(type, eventInitDict) {
    const event = new EventConstructor(type, eventInitDict);
    const isComposed = !!(eventInitDict && eventInitDict.composed);
    Object.defineProperties(event, {
      composed: {
        get() {
          return isComposed;
        },

        configurable: true,
        enumerable: true
      }
    });
    return event;
  }

  PatchedEvent.prototype = EventConstructor.prototype;
  PatchedEvent.AT_TARGET = EventConstructor.AT_TARGET;
  PatchedEvent.BUBBLING_PHASE = EventConstructor.BUBBLING_PHASE;
  PatchedEvent.CAPTURING_PHASE = EventConstructor.CAPTURING_PHASE;
  PatchedEvent.NONE = EventConstructor.NONE;
  window.Event = PatchedEvent; // Patch the Event prototype to add the composed property on user agent dispatched event.

  Object.defineProperties(Event.prototype, {
    composed: {
      get() {
        const {
          type
        } = this;
        return composedEvents[type] === 1;
      },

      configurable: true,
      enumerable: true
    }
  });
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

if (detect$2()) {
  apply$2();
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

const CustomEventConstructor = CustomEvent;

function PatchedCustomEvent(type, eventInitDict) {
  const event = new CustomEventConstructor(type, eventInitDict);
  const isComposed = !!(eventInitDict && eventInitDict.composed);
  Object.defineProperties(event, {
    composed: {
      get() {
        return isComposed;
      },

      configurable: true,
      enumerable: true
    }
  });
  return event;
}

PatchedCustomEvent.prototype = CustomEventConstructor.prototype;
window.CustomEvent = PatchedCustomEvent;

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

if (typeof ClipboardEvent !== 'undefined') {
  const isComposedType = assign(create(null), {
    copy: 1,
    cut: 1,
    paste: 1
  }); // Patch the prototype to override the composed property on user-agent dispatched events

  defineProperties(ClipboardEvent.prototype, {
    composed: {
      get() {
        const {
          type
        } = this;
        return isComposedType[type] === 1;
      },

      configurable: true,
      enumerable: true
    }
  });
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function detect$1() {
  // Note: when using this in mobile apps, we might have a DOM that does not support iframes.
  return typeof HTMLIFrameElement !== 'undefined';
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function apply$1() {
  // the iframe property descriptor for `contentWindow` should always be available, otherwise this method should never be called
  const desc = getOwnPropertyDescriptor(HTMLIFrameElement.prototype, 'contentWindow');
  const {
    get: originalGetter
  } = desc;

  desc.get = function () {
    const original = originalGetter.call(this); // If the original iframe element is not a keyed node, then do not wrap it

    if (isNull(original) || isUndefined(getNodeOwnerKey(this))) {
      return original;
    } // only if the element is an iframe inside a shadowRoot, we care about this problem
    // because in that case, the code that is accessing the iframe, is very likely code
    // compiled with proxy-compat transformation. It is true that other code without those
    // transformations might also access an iframe from within a shadowRoot, but in that,
    // case, which is more rare, we still return the wrapper, and it should work the same,
    // this part is just an optimization.


    return wrapIframeWindow(original);
  };

  defineProperty(HTMLIFrameElement.prototype, 'contentWindow', desc);
}

function wrapIframeWindow(win) {
  return {
    addEventListener() {
      // Typescript does not like it when you treat the `arguments` object as an array
      // @ts-ignore type-mismatch
      return win.addEventListener.apply(win, arguments);
    },

    blur() {
      // Typescript does not like it when you treat the `arguments` object as an array
      // @ts-ignore type-mismatch
      return win.blur.apply(win, arguments);
    },

    close() {
      // Typescript does not like it when you treat the `arguments` object as an array
      // @ts-ignore type-mismatch
      return win.close.apply(win, arguments);
    },

    focus() {
      // Typescript does not like it when you treat the `arguments` object as an array
      // @ts-ignore type-mismatch
      return win.focus.apply(win, arguments);
    },

    postMessage() {
      // Typescript does not like it when you treat the `arguments` object as an array
      // @ts-ignore type-mismatch
      return win.postMessage.apply(win, arguments);
    },

    removeEventListener() {
      // Typescript does not like it when you treat the `arguments` object as an array
      // @ts-ignore type-mismatch
      return win.removeEventListener.apply(win, arguments);
    },

    get closed() {
      return win.closed;
    },

    get frames() {
      return win.frames;
    },

    get length() {
      return win.length;
    },

    get location() {
      return win.location;
    },

    set location(value) {
      win.location = value;
    },

    get opener() {
      return win.opener;
    },

    get parent() {
      return win.parent;
    },

    get self() {
      return win.self;
    },

    get top() {
      return win.top;
    },

    get window() {
      return win.window;
    }

  }; // this is limited
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

if (detect$1()) {
  apply$1();
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const OriginalMutationObserver = MutationObserver;
const {
  disconnect: originalDisconnect,
  observe: originalObserve,
  takeRecords: originalTakeRecords
} = OriginalMutationObserver.prototype; // Internal fields to maintain relationships

const wrapperLookupField = '$$lwcObserverCallbackWrapper$$';
const observerLookupField = '$$lwcNodeObservers$$';
const observerToNodesMap = new WeakMap();

function getNodeObservers(node) {
  return node[observerLookupField];
}

function setNodeObservers(node, observers) {
  node[observerLookupField] = observers;
}
/**
 * Retarget the mutation record's target value to its shadowRoot
 * @param {MutationRecord} originalRecord
 */


function retargetMutationRecord(originalRecord) {
  const {
    addedNodes,
    removedNodes,
    target,
    type
  } = originalRecord;
  const retargetedRecord = create(MutationRecord.prototype);
  defineProperties(retargetedRecord, {
    addedNodes: {
      get() {
        return addedNodes;
      },

      enumerable: true,
      configurable: true
    },
    removedNodes: {
      get() {
        return removedNodes;
      },

      enumerable: true,
      configurable: true
    },
    type: {
      get() {
        return type;
      },

      enumerable: true,
      configurable: true
    },
    target: {
      get() {
        return target.shadowRoot;
      },

      enumerable: true,
      configurable: true
    }
  });
  return retargetedRecord;
}
/**
 * Utility to identify if a target node is being observed by the given observer
 * Start at the current node, if the observer is registered to observe the current node, the mutation qualifies
 * @param {MutationObserver} observer
 * @param {Node} target
 */


function isQualifiedObserver(observer, target) {
  let parentNode = target;

  while (!isNull(parentNode)) {
    const parentNodeObservers = getNodeObservers(parentNode);

    if (!isUndefined(parentNodeObservers) && (parentNodeObservers[0] === observer || // perf optimization to check for the first item is a match
    ArrayIndexOf.call(parentNodeObservers, observer) !== -1)) {
      return true;
    }

    parentNode = parentNode.parentNode;
  }

  return false;
}
/**
 * This function provides a shadow dom compliant filtered view of mutation records for a given observer.
 *
 * The key logic here is to determine if a given observer has been registered to observe any nodes
 * between the target node of a mutation record to the target's root node.
 * This function also retargets records when mutations occur directly under the shadow root
 * @param {MutationRecords[]} mutations
 * @param {MutationObserver} observer
 */


function filterMutationRecords(mutations, observer) {
  return ArrayReduce.call(mutations, (filteredSet, record) => {
    const {
      target,
      addedNodes,
      removedNodes,
      type
    } = record; // If target is an lwc host,
    // Determine if the mutations affected the host or the shadowRoot
    // Mutations affecting host: changes to slot content
    // Mutations affecting shadowRoot: changes to template content

    if (type === 'childList' && !isUndefined(getNodeKey(target))) {
      // In case of added nodes, we can climb up the tree and determine eligibility
      if (addedNodes.length > 0) {
        // Optimization: Peek in and test one node to decide if the MutationRecord qualifies
        // The remaining nodes in this MutationRecord will have the same ownerKey
        const sampleNode = addedNodes[0];

        if (isQualifiedObserver(observer, sampleNode)) {
          // If the target was being observed, then return record as-is
          // this will be the case for slot content
          const nodeObservers = getNodeObservers(target);

          if (nodeObservers && (nodeObservers[0] === observer || ArrayIndexOf.call(nodeObservers, observer) !== -1)) {
            ArrayPush.call(filteredSet, record);
          } else {
            // else, must be observing the shadowRoot
            ArrayPush.call(filteredSet, retargetMutationRecord(record));
          }
        }
      } else {
        // In the case of removed nodes, climbing the tree is not an option as the nodes are disconnected
        // We can only check if either the host or shadow root was observed and qualify the record
        const shadowRoot = target.shadowRoot;
        const sampleNode = removedNodes[0];

        if (getNodeNearestOwnerKey(target) === getNodeNearestOwnerKey(sampleNode) && // trickery: sampleNode is slot content
        isQualifiedObserver(observer, target) // use target as a close enough reference to climb up
        ) {
          ArrayPush.call(filteredSet, record);
        } else if (shadowRoot) {
          const shadowRootObservers = getNodeObservers(shadowRoot);

          if (shadowRootObservers && (shadowRootObservers[0] === observer || ArrayIndexOf.call(shadowRootObservers, observer) !== -1)) {
            ArrayPush.call(filteredSet, retargetMutationRecord(record));
          }
        }
      }
    } else {
      // Mutation happened under a root node(shadow root or document) and the decision is straighforward
      // Ascend the tree starting from target and check if observer is qualified
      if (isQualifiedObserver(observer, target)) {
        ArrayPush.call(filteredSet, record);
      }
    }

    return filteredSet;
  }, []);
}

function getWrappedCallback(callback) {
  let wrappedCallback = callback[wrapperLookupField];

  if (isUndefined(wrappedCallback)) {
    wrappedCallback = callback[wrapperLookupField] = (mutations, observer) => {
      // Filter mutation records
      const filteredRecords = filterMutationRecords(mutations, observer); // If not records are eligible for the observer, do not invoke callback

      if (filteredRecords.length === 0) {
        return;
      }

      callback.call(observer, filteredRecords, observer);
    };
  }

  return wrappedCallback;
}
/**
 * Patched MutationObserver constructor.
 * 1. Wrap the callback to filter out MutationRecords based on dom ownership
 * 2. Add a property field to track all observed targets of the observer instance
 * @param {MutationCallback} callback
 */


function PatchedMutationObserver(callback) {
  const wrappedCallback = getWrappedCallback(callback);
  const observer = new OriginalMutationObserver(wrappedCallback);
  return observer;
}

function patchedDisconnect() {
  originalDisconnect.call(this); // Clear the node to observer reference which is a strong references

  const observedNodes = observerToNodesMap.get(this);

  if (!isUndefined(observedNodes)) {
    forEach.call(observedNodes, observedNode => {
      const observers = observedNode[observerLookupField];

      if (!isUndefined(observers)) {
        const index = ArrayIndexOf.call(observers, this);

        if (index !== -1) {
          ArraySplice.call(observers, index, 1);
        }
      }
    });
    observedNodes.length = 0;
  }
}
/**
 * A single mutation observer can observe multiple nodes(target).
 * Maintain a list of all targets that the observer chooses to observe
 * @param {Node} target
 * @param {Object} options
 */


function patchedObserve(target, options) {
  let targetObservers = getNodeObservers(target); // Maintain a list of all observers that want to observe a node

  if (isUndefined(targetObservers)) {
    targetObservers = [];
    setNodeObservers(target, targetObservers);
  } // Same observer trying to observe the same node


  if (ArrayIndexOf.call(targetObservers, this) === -1) {
    ArrayPush.call(targetObservers, this);
  } // else There is more bookkeeping to do here https://dom.spec.whatwg.org/#dom-mutationobserver-observe Step #7
  // SyntheticShadowRoot instances are not actually a part of the DOM so observe the host instead.


  if (isSyntheticShadowRoot(target)) {
    target = target.host;
  } // maintain a list of all nodes observed by this observer


  if (observerToNodesMap.has(this)) {
    const observedNodes = observerToNodesMap.get(this);

    if (ArrayIndexOf.call(observedNodes, target) === -1) {
      ArrayPush.call(observedNodes, target);
    }
  } else {
    observerToNodesMap.set(this, [target]);
  }

  return originalObserve.call(this, target, options);
}
/**
 * Patch the takeRecords() api to filter MutationRecords based on the observed targets
 */


function patchedTakeRecords() {
  return filterMutationRecords(originalTakeRecords.call(this), this);
}

PatchedMutationObserver.prototype = OriginalMutationObserver.prototype;
PatchedMutationObserver.prototype.disconnect = patchedDisconnect;
PatchedMutationObserver.prototype.observe = patchedObserve;
PatchedMutationObserver.prototype.takeRecords = patchedTakeRecords;
defineProperty(window, 'MutationObserver', {
  value: PatchedMutationObserver,
  configurable: true,
  writable: true
});

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function patchedAddEventListener$1(type, listener, optionsOrCapture) {
  if (isSyntheticShadowHost(this)) {
    // Typescript does not like it when you treat the `arguments` object as an array
    // @ts-ignore type-mismatch
    return addCustomElementEventListener.apply(this, arguments);
  }

  if (arguments.length < 2) {
    // Slow path, unlikely to be called frequently. We expect modern browsers to throw:
    // https://googlechrome.github.io/samples/event-listeners-mandatory-arguments/
    const args = ArraySlice.call(arguments);

    if (args.length > 1) {
      args[1] = getEventListenerWrapper(args[1]);
    } // Ignore types because we're passing through to native method
    // @ts-ignore type-mismatch


    return addEventListener.apply(this, args);
  } // Fast path. This function is optimized to avoid ArraySlice because addEventListener is called
  // very frequently, and it provides a measurable perf boost to avoid so much array cloning.


  const wrappedListener = getEventListenerWrapper(listener); // The third argument is optional, so passing in `undefined` for `optionsOrCapture` gives capture=false

  return addEventListener.call(this, type, wrappedListener, optionsOrCapture);
}

function patchedRemoveEventListener$1(_type, _listener, _optionsOrCapture) {
  if (isSyntheticShadowHost(this)) {
    // Typescript does not like it when you treat the `arguments` object as an array
    // @ts-ignore type-mismatch
    return removeCustomElementEventListener.apply(this, arguments);
  }

  const args = ArraySlice.call(arguments);

  if (arguments.length > 1) {
    args[1] = getEventListenerWrapper(args[1]);
  } // Ignore types because we're passing through to native method
  // @ts-ignore type-mismatch


  removeEventListener.apply(this, args); // Account for listeners that were added before this polyfill was applied
  // Typescript does not like it when you treat the `arguments` object as an array
  // @ts-ignore type-mismatch

  removeEventListener.apply(this, arguments);
}

defineProperties(eventTargetPrototype, {
  addEventListener: {
    value: patchedAddEventListener$1,
    enumerable: true,
    writable: true,
    configurable: true
  },
  removeEventListener: {
    value: patchedRemoveEventListener$1,
    enumerable: true,
    writable: true,
    configurable: true
  }
});

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function detect() {
  return typeof EventTarget === 'undefined';
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function patchedAddEventListener(_type, _listener, _options) {
  if (arguments.length > 1) {
    const args = ArraySlice.call(arguments);
    args[1] = getEventListenerWrapper(args[1]); // Ignore types because we're passing through to native method
    // @ts-ignore type-mismatch

    return windowAddEventListener.apply(this, args);
  } // Typescript does not like it when you treat the `arguments` object as an array
  // @ts-ignore type-mismatch


  return windowAddEventListener.apply(this, arguments);
}

function patchedRemoveEventListener(_type, _listener, _options) {
  if (arguments.length > 1) {
    const args = ArraySlice.call(arguments);
    args[1] = getEventListenerWrapper(args[1]); // Ignore types because we're passing through to native method
    // @ts-ignore type-mismatch

    windowRemoveEventListener.apply(this, args);
  } // Account for listeners that were added before this polyfill was applied
  // Typescript does not like it when you treat the `arguments` object as an array
  // @ts-ignore type-mismatch


  windowRemoveEventListener.apply(this, arguments);
}

function apply() {
  defineProperties(Window.prototype, {
    addEventListener: {
      value: patchedAddEventListener,
      enumerable: true,
      writable: true,
      configurable: true
    },
    removeEventListener: {
      value: patchedRemoveEventListener,
      enumerable: true,
      writable: true,
      configurable: true
    }
  });
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

if (detect()) {
  apply();
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function patchedCurrentTargetGetter() {
  const currentTarget = eventCurrentTargetGetter.call(this);

  if (isNull(currentTarget)) {
    return null;
  }

  if (eventToContextMap.get(this) === 1
  /* SHADOW_ROOT_LISTENER */
  ) {
    return getShadowRoot(currentTarget);
  }

  return currentTarget;
}

function patchedTargetGetter() {
  const originalTarget = eventTargetGetter.call(this);

  if (!(originalTarget instanceof _Node)) {
    return originalTarget;
  }

  const doc = getOwnerDocument(originalTarget);
  const composedPath = pathComposer(originalTarget, this.composed);
  const originalCurrentTarget = eventCurrentTargetGetter.call(this); // Handle cases where the currentTarget is null (for async events), and when an event has been
  // added to Window

  if (!(originalCurrentTarget instanceof _Node)) {
    // TODO [#1511]: Special escape hatch to support legacy behavior. Should be fixed.
    // If the event's target is being accessed async and originalTarget is not a keyed element, do not retarget
    if (isNull(originalCurrentTarget) && isUndefined(getNodeOwnerKey(originalTarget))) {
      return originalTarget;
    }

    return retarget(doc, composedPath);
  } else if (originalCurrentTarget === doc || originalCurrentTarget === doc.body) {
    // TODO [#1530]: If currentTarget is document or document.body (Third party libraries that have global event listeners)
    // and the originalTarget is not a keyed element, do not retarget
    if (isUndefined(getNodeOwnerKey(originalTarget))) {
      return originalTarget;
    }

    return retarget(doc, composedPath);
  }

  let actualCurrentTarget = originalCurrentTarget;
  let actualPath = composedPath; // Address the possibility that `currentTarget` is a shadow root

  if (isSyntheticShadowHost(originalCurrentTarget)) {
    const context = eventToContextMap.get(this);

    if (context === 1
    /* SHADOW_ROOT_LISTENER */
    ) {
      actualCurrentTarget = getShadowRoot(originalCurrentTarget);
    }
  } // Address the possibility that `target` is a shadow root


  if (isSyntheticShadowHost(originalTarget) && eventToShadowRootMap.has(this)) {
    actualPath = pathComposer(getShadowRoot(originalTarget), this.composed);
  }

  return retarget(actualCurrentTarget, actualPath);
}

function patchedComposedPathValue() {
  const originalTarget = eventTargetGetter.call(this); // Account for events with targets that are not instances of Node (e.g., when a readystatechange
  // handler is listening on an instance of XMLHttpRequest).

  if (!(originalTarget instanceof _Node)) {
    return [];
  } // If the original target is inside a native shadow root, then just call the native
  // composePath() method. The event is already retargeted and this causes our composedPath()
  // polyfill to compute the wrong value. This is only an issue when you have a native web
  // component inside an LWC component (see test in same commit) but this scenario is unlikely
  // because we don't yet support that. Workaround specifically for W-9846457. Mixed mode solution
  // will likely be more involved.


  const hasShadowRoot = Boolean(originalTarget.shadowRoot);
  const hasSyntheticShadowRootAttached = hasInternalSlot(originalTarget);

  if (hasShadowRoot && !hasSyntheticShadowRootAttached) {
    return composedPath.call(this);
  }

  const originalCurrentTarget = eventCurrentTargetGetter.call(this); // If the event has completed propagation, the composedPath should be an empty array.

  if (isNull(originalCurrentTarget)) {
    return [];
  } // Address the possibility that `target` is a shadow root


  let actualTarget = originalTarget;

  if (isSyntheticShadowHost(originalTarget) && eventToShadowRootMap.has(this)) {
    actualTarget = getShadowRoot(originalTarget);
  }

  return pathComposer(actualTarget, this.composed);
}

defineProperties(Event.prototype, {
  target: {
    get: patchedTargetGetter,
    enumerable: true,
    configurable: true
  },
  currentTarget: {
    get: patchedCurrentTargetGetter,
    enumerable: true,
    configurable: true
  },
  composedPath: {
    value: patchedComposedPathValue,
    writable: true,
    enumerable: true,
    configurable: true
  },
  // Non-standard but widely supported for backwards-compatibility
  srcElement: {
    get: patchedTargetGetter,
    enumerable: true,
    configurable: true
  },
  // Non-standard but implemented in Chrome and continues to exist for backwards-compatibility
  // https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/core/dom/events/event.idl;l=58?q=event.idl&ss=chromium
  path: {
    get: patchedComposedPathValue,
    enumerable: true,
    configurable: true
  }
});

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function retargetRelatedTarget(Ctor) {
  const relatedTargetGetter = getOwnPropertyDescriptor(Ctor.prototype, 'relatedTarget').get;
  defineProperty(Ctor.prototype, 'relatedTarget', {
    get() {
      const relatedTarget = relatedTargetGetter.call(this);

      if (isNull(relatedTarget)) {
        return null;
      }

      if (!(relatedTarget instanceof _Node) || !isNodeShadowed(relatedTarget)) {
        return relatedTarget;
      }

      let pointOfReference = eventCurrentTargetGetter.call(this);

      if (isNull(pointOfReference)) {
        pointOfReference = getOwnerDocument(relatedTarget);
      }

      return retarget(pointOfReference, pathComposer(relatedTarget, true));
    },

    enumerable: true,
    configurable: true
  });
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
retargetRelatedTarget(FocusEvent);

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
retargetRelatedTarget(MouseEvent);

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
// "Registered observers in a node’s registered observer list have a weak
// reference to the node."
// https://dom.spec.whatwg.org/#garbage-collection

let observer;
const observerConfig = {
  childList: true
};
const SlotChangeKey = new WeakMap();

function initSlotObserver() {
  return new MO(mutations => {
    const slots = [];
    forEach.call(mutations, mutation => {
      if (undefined !== 'production') {
        assert.invariant(mutation.type === 'childList', `Invalid mutation type: ${mutation.type}. This mutation handler for slots should only handle "childList" mutations.`);
      }

      const {
        target: slot
      } = mutation;

      if (ArrayIndexOf.call(slots, slot) === -1) {
        ArrayPush.call(slots, slot);
        dispatchEvent.call(slot, new CustomEvent('slotchange'));
      }
    });
  });
}

function getFilteredSlotFlattenNodes(slot) {
  const childNodes = arrayFromCollection(childNodesGetter.call(slot)); // Typescript is inferring the wrong function type for this particular
  // overloaded method: https://github.com/Microsoft/TypeScript/issues/27972
  // @ts-ignore type-mismatch

  return ArrayReduce.call(childNodes, (seed, child) => {
    if (child instanceof Element && isSlotElement(child)) {
      ArrayPush.apply(seed, getFilteredSlotFlattenNodes(child));
    } else {
      ArrayPush.call(seed, child);
    }

    return seed;
  }, []);
}

function assignedSlotGetterPatched() {
  const parentNode = parentNodeGetter.call(this);
  /**
   * The node is assigned to a slot if:
   *  - it has a parent and it parent its parent is a slot element
   *  - and if the slot owner key is different than the node owner key.
   *
   * When the slot and the slotted node are 2 different shadow trees, the owner keys will be
   * different. When the slot is in a shadow tree and the slotted content is a light DOM node,
   * the light DOM node doesn't have an owner key and therefor the slot owner key will be
   * different than the node owner key (always `undefined`).
   */

  if (!isNull(parentNode) && isSlotElement(parentNode) && getNodeOwnerKey(parentNode) !== getNodeOwnerKey(this)) {
    return parentNode;
  }

  return null;
}
defineProperties(HTMLSlotElement.prototype, {
  addEventListener: {
    value(type, listener, options) {
      // super.addEventListener - but that doesn't work with typescript
      HTMLElement.prototype.addEventListener.call(this, type, listener, options);

      if (type === 'slotchange' && !SlotChangeKey.get(this)) {
        SlotChangeKey.set(this, true);

        if (!observer) {
          observer = initSlotObserver();
        }

        MutationObserverObserve.call(observer, this, observerConfig);
      }
    },

    writable: true,
    enumerable: true,
    configurable: true
  },
  assignedElements: {
    value(options) {
      if (isNodeShadowed(this)) {
        const flatten = !isUndefined(options) && isTrue(options.flatten);
        const nodes = flatten ? getFilteredSlotFlattenNodes(this) : getFilteredSlotAssignedNodes(this);
        return ArrayFilter.call(nodes, node => node instanceof Element);
      } else {
        return assignedElements.apply(this, ArraySlice.call(arguments));
      }
    },

    writable: true,
    enumerable: true,
    configurable: true
  },
  assignedNodes: {
    value(options) {
      if (isNodeShadowed(this)) {
        const flatten = !isUndefined(options) && isTrue(options.flatten);
        return flatten ? getFilteredSlotFlattenNodes(this) : getFilteredSlotAssignedNodes(this);
      } else {
        return assignedNodes.apply(this, ArraySlice.call(arguments));
      }
    },

    writable: true,
    enumerable: true,
    configurable: true
  },
  name: {
    get() {
      const name = getAttribute.call(this, 'name');
      return isNull(name) ? '' : name;
    },

    set(value) {
      setAttribute.call(this, 'name', value);
    },

    enumerable: true,
    configurable: true
  },
  childNodes: {
    get() {
      if (isNodeShadowed(this)) {
        const owner = getNodeOwner(this);
        const childNodes = isNull(owner) ? [] : getAllMatches(owner, getFilteredChildNodes(this));
        return createStaticNodeList(childNodes);
      }

      return childNodesGetter.call(this);
    },

    enumerable: true,
    configurable: true
  }
});

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
// do not five access to nodes beyond the immediate children.

defineProperties(Text.prototype, {
  assignedSlot: {
    get: assignedSlotGetterPatched,
    enumerable: true,
    configurable: true
  }
});

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
/**
 * This methods filters out elements that are not in the same shadow root of context.
 * It does not enforce shadow dom semantics if $context is not managed by LWC
 */

function getNonPatchedFilteredArrayOfNodes(context, unfilteredNodes) {
  let filtered;
  const ownerKey = getNodeOwnerKey(context); // a node inside a shadow.

  if (!isUndefined(ownerKey)) {
    if (isSyntheticShadowHost(context)) {
      // element with shadowRoot attached
      const owner = getNodeOwner(context);

      if (isNull(owner)) {
        filtered = [];
      } else if (getNodeKey(context)) {
        // it is a custom element, and we should then filter by slotted elements
        filtered = getAllSlottedMatches(context, unfilteredNodes);
      } else {
        // regular element, we should then filter by ownership
        filtered = getAllMatches(owner, unfilteredNodes);
      }
    } else {
      // context is handled by lwc, using getNodeNearestOwnerKey to include manually inserted elements in the same shadow.
      filtered = ArrayFilter.call(unfilteredNodes, elm => getNodeNearestOwnerKey(elm) === ownerKey);
    }
  } else if (context instanceof HTMLBodyElement) {
    // `context` is document.body which is already patched.
    filtered = ArrayFilter.call(unfilteredNodes, // TODO [#1222]: remove global bypass
    elm => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(context));
  } else {
    // `context` is outside the lwc boundary, return unfiltered list.
    filtered = ArraySlice.call(unfilteredNodes);
  }

  return filtered;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function innerHTMLGetterPatched() {
  const childNodes = getInternalChildNodes(this);
  let innerHTML = '';

  for (let i = 0, len = childNodes.length; i < len; i += 1) {
    innerHTML += getOuterHTML(childNodes[i]);
  }

  return innerHTML;
}

function outerHTMLGetterPatched() {
  return getOuterHTML(this);
}

function attachShadowPatched(options) {
  // To retain native behavior of the API, provide synthetic shadowRoot only when specified
  if (options[KEY__SYNTHETIC_MODE]) {
    return attachShadow(this, options);
  }

  return attachShadow$1.call(this, options);
}

function shadowRootGetterPatched() {
  if (isSyntheticShadowHost(this)) {
    const shadow = getShadowRoot(this);

    if (shadow.mode === 'open') {
      return shadow;
    }
  }

  return shadowRootGetter.call(this);
}

function childrenGetterPatched() {
  const owner = getNodeOwner(this);
  const childNodes = isNull(owner) ? [] : getAllMatches(owner, getFilteredChildNodes(this));
  return createStaticHTMLCollection(ArrayFilter.call(childNodes, node => node instanceof Element));
}

function childElementCountGetterPatched() {
  return this.children.length;
}

function firstElementChildGetterPatched() {
  return this.children[0] || null;
}

function lastElementChildGetterPatched() {
  const {
    children
  } = this;
  return children.item(children.length - 1) || null;
} // Non-deep-traversing patches: this descriptor map includes all descriptors that
// do not five access to nodes beyond the immediate children.


defineProperties(Element.prototype, {
  innerHTML: {
    get() {
      if (!runtimeFlags.ENABLE_ELEMENT_PATCH) {
        if (isNodeShadowed(this) || isSyntheticShadowHost(this)) {
          return innerHTMLGetterPatched.call(this);
        }

        return innerHTMLGetter.call(this);
      } // TODO [#1222]: remove global bypass


      if (isGlobalPatchingSkipped(this)) {
        return innerHTMLGetter.call(this);
      }

      return innerHTMLGetterPatched.call(this);
    },

    set(v) {
      innerHTMLSetter.call(this, v);
    },

    enumerable: true,
    configurable: true
  },
  outerHTML: {
    get() {
      if (!runtimeFlags.ENABLE_ELEMENT_PATCH) {
        if (isNodeShadowed(this) || isSyntheticShadowHost(this)) {
          return outerHTMLGetterPatched.call(this);
        }

        return outerHTMLGetter.call(this);
      } // TODO [#1222]: remove global bypass


      if (isGlobalPatchingSkipped(this)) {
        return outerHTMLGetter.call(this);
      }

      return outerHTMLGetterPatched.call(this);
    },

    set(v) {
      outerHTMLSetter.call(this, v);
    },

    enumerable: true,
    configurable: true
  },
  attachShadow: {
    value: attachShadowPatched,
    enumerable: true,
    writable: true,
    configurable: true
  },
  shadowRoot: {
    get: shadowRootGetterPatched,
    enumerable: true,
    configurable: true
  },
  // patched in HTMLElement if exists (IE11 is the one off here)
  children: {
    get() {
      if (hasMountedChildren(this)) {
        return childrenGetterPatched.call(this);
      }

      return childrenGetter.call(this);
    },

    enumerable: true,
    configurable: true
  },
  childElementCount: {
    get() {
      if (hasMountedChildren(this)) {
        return childElementCountGetterPatched.call(this);
      }

      return childElementCountGetter.call(this);
    },

    enumerable: true,
    configurable: true
  },
  firstElementChild: {
    get() {
      if (hasMountedChildren(this)) {
        return firstElementChildGetterPatched.call(this);
      }

      return firstElementChildGetter.call(this);
    },

    enumerable: true,
    configurable: true
  },
  lastElementChild: {
    get() {
      if (hasMountedChildren(this)) {
        return lastElementChildGetterPatched.call(this);
      }

      return lastElementChildGetter.call(this);
    },

    enumerable: true,
    configurable: true
  },
  assignedSlot: {
    get: assignedSlotGetterPatched,
    enumerable: true,
    configurable: true
  }
}); // IE11 extra patches for wrong prototypes

if (hasOwnProperty.call(HTMLElement.prototype, 'innerHTML')) {
  defineProperty(HTMLElement.prototype, 'innerHTML', getOwnPropertyDescriptor(Element.prototype, 'innerHTML'));
}

if (hasOwnProperty.call(HTMLElement.prototype, 'outerHTML')) {
  defineProperty(HTMLElement.prototype, 'outerHTML', getOwnPropertyDescriptor(Element.prototype, 'outerHTML'));
}

if (hasOwnProperty.call(HTMLElement.prototype, 'children')) {
  defineProperty(HTMLElement.prototype, 'children', getOwnPropertyDescriptor(Element.prototype, 'children'));
} // Deep-traversing patches from this point on:


function querySelectorPatched() {
  const nodeList = arrayFromCollection(querySelectorAll$1.apply(this, ArraySlice.call(arguments)));

  if (isSyntheticShadowHost(this)) {
    // element with shadowRoot attached
    const owner = getNodeOwner(this);

    if (isNull(owner)) {
      return null;
    } else if (getNodeKey(this)) {
      // it is a custom element, and we should then filter by slotted elements
      return getFirstSlottedMatch(this, nodeList);
    } else {
      // regular element, we should then filter by ownership
      return getFirstMatch(owner, nodeList);
    }
  } else if (isNodeShadowed(this)) {
    // element inside a shadowRoot
    const ownerKey = getNodeOwnerKey(this);

    if (!isUndefined(ownerKey)) {
      // `this` is handled by lwc, using getNodeNearestOwnerKey to include manually inserted elements in the same shadow.
      const elm = ArrayFind.call(nodeList, elm => getNodeNearestOwnerKey(elm) === ownerKey);
      return isUndefined(elm) ? null : elm;
    } else {
      if (!runtimeFlags.ENABLE_NODE_LIST_PATCH) {
        // `this` is a manually inserted element inside a shadowRoot, return the first element.
        return nodeList.length === 0 ? null : nodeList[0];
      } // Element is inside a shadow but we dont know which one. Use the
      // "nearest" owner key to filter by ownership.


      const contextNearestOwnerKey = getNodeNearestOwnerKey(this);
      const elm = ArrayFind.call(nodeList, elm => getNodeNearestOwnerKey(elm) === contextNearestOwnerKey);
      return isUndefined(elm) ? null : elm;
    }
  } else {
    if (!runtimeFlags.ENABLE_NODE_LIST_PATCH) {
      if (!(this instanceof HTMLBodyElement)) {
        const elm = nodeList[0];
        return isUndefined(elm) ? null : elm;
      }
    } // element belonging to the document


    const elm = ArrayFind.call(nodeList, // TODO [#1222]: remove global bypass
    elm => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(this));
    return isUndefined(elm) ? null : elm;
  }
}

function getFilteredArrayOfNodes(context, unfilteredNodes, shadowDomSemantic) {
  let filtered;

  if (isSyntheticShadowHost(context)) {
    // element with shadowRoot attached
    const owner = getNodeOwner(context);

    if (isNull(owner)) {
      filtered = [];
    } else if (getNodeKey(context)) {
      // it is a custom element, and we should then filter by slotted elements
      filtered = getAllSlottedMatches(context, unfilteredNodes);
    } else {
      // regular element, we should then filter by ownership
      filtered = getAllMatches(owner, unfilteredNodes);
    }
  } else if (isNodeShadowed(context)) {
    // element inside a shadowRoot
    const ownerKey = getNodeOwnerKey(context);

    if (!isUndefined(ownerKey)) {
      // context is handled by lwc, using getNodeNearestOwnerKey to include manually inserted elements in the same shadow.
      filtered = ArrayFilter.call(unfilteredNodes, elm => getNodeNearestOwnerKey(elm) === ownerKey);
    } else if (shadowDomSemantic === 1
    /* Enabled */
    ) {
      // context is inside a shadow, we dont know which one.
      const contextNearestOwnerKey = getNodeNearestOwnerKey(context);
      filtered = ArrayFilter.call(unfilteredNodes, elm => getNodeNearestOwnerKey(elm) === contextNearestOwnerKey);
    } else {
      // context is manually inserted without lwc:dom-manual and ShadowDomSemantics is off, return everything
      filtered = ArraySlice.call(unfilteredNodes);
    }
  } else {
    if (context instanceof HTMLBodyElement || shadowDomSemantic === 1
    /* Enabled */
    ) {
      // `context` is document.body or element belonging to the document with the patch enabled
      filtered = ArrayFilter.call(unfilteredNodes, // TODO [#1222]: remove global bypass
      elm => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(context));
    } else {
      // `context` is outside the lwc boundary and patch is not enabled.
      filtered = ArraySlice.call(unfilteredNodes);
    }
  }

  return filtered;
} // The following patched methods hide shadowed elements from global
// traversing mechanisms. They are simplified for performance reasons to
// filter by ownership and do not account for slotted elements. This
// compromise is fine for our synthetic shadow dom because root elements
// cannot have slotted elements.
// Another compromise here is that all these traversing methods will return
// static HTMLCollection or static NodeList. We decided that this compromise
// is not a big problem considering the amount of code that is relying on
// the liveliness of these results are rare.


defineProperties(Element.prototype, {
  querySelector: {
    value: querySelectorPatched,
    writable: true,
    enumerable: true,
    configurable: true
  },
  querySelectorAll: {
    value() {
      const nodeList = arrayFromCollection(querySelectorAll$1.apply(this, ArraySlice.call(arguments)));

      if (!runtimeFlags.ENABLE_NODE_LIST_PATCH) {
        const filteredResults = getFilteredArrayOfNodes(this, nodeList, 0
        /* Disabled */
        );
        return createStaticNodeList(filteredResults);
      }

      return createStaticNodeList(getFilteredArrayOfNodes(this, nodeList, 1
      /* Enabled */
      ));
    },

    writable: true,
    enumerable: true,
    configurable: true
  }
}); // The following APIs are used directly by Jest internally so we avoid patching them during testing.

if (undefined !== 'test') {
  defineProperties(Element.prototype, {
    getElementsByClassName: {
      value() {
        const elements = arrayFromCollection(getElementsByClassName$1.apply(this, ArraySlice.call(arguments)));

        if (!runtimeFlags.ENABLE_HTML_COLLECTIONS_PATCH) {
          return createStaticHTMLCollection(getNonPatchedFilteredArrayOfNodes(this, elements));
        }

        const filteredResults = getFilteredArrayOfNodes(this, elements, 1
        /* Enabled */
        );
        return createStaticHTMLCollection(filteredResults);
      },

      writable: true,
      enumerable: true,
      configurable: true
    },
    getElementsByTagName: {
      value() {
        const elements = arrayFromCollection(getElementsByTagName$1.apply(this, ArraySlice.call(arguments)));

        if (!runtimeFlags.ENABLE_HTML_COLLECTIONS_PATCH) {
          return createStaticHTMLCollection(getNonPatchedFilteredArrayOfNodes(this, elements));
        }

        const filteredResults = getFilteredArrayOfNodes(this, elements, 1
        /* Enabled */
        );
        return createStaticHTMLCollection(filteredResults);
      },

      writable: true,
      enumerable: true,
      configurable: true
    },
    getElementsByTagNameNS: {
      value() {
        const elements = arrayFromCollection(getElementsByTagNameNS$1.apply(this, ArraySlice.call(arguments)));

        if (!runtimeFlags.ENABLE_HTML_COLLECTIONS_PATCH) {
          return createStaticHTMLCollection(getNonPatchedFilteredArrayOfNodes(this, elements));
        }

        const filteredResults = getFilteredArrayOfNodes(this, elements, 1
        /* Enabled */
        );
        return createStaticHTMLCollection(filteredResults);
      },

      writable: true,
      enumerable: true,
      configurable: true
    }
  });
} // IE11 extra patches for wrong prototypes


if (hasOwnProperty.call(HTMLElement.prototype, 'getElementsByClassName')) {
  defineProperty(HTMLElement.prototype, 'getElementsByClassName', getOwnPropertyDescriptor(Element.prototype, 'getElementsByClassName'));
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const FocusableSelector = `
    [contenteditable],
    [tabindex],
    a[href],
    area[href],
    audio[controls],
    button,
    iframe,
    input,
    select,
    textarea,
    video[controls]
`;
const formElementTagNames = new Set(['BUTTON', 'INPUT', 'SELECT', 'TEXTAREA']);

function filterSequentiallyFocusableElements(elements) {
  return elements.filter(element => {
    if (hasAttribute.call(element, 'tabindex')) {
      // Even though LWC only supports tabindex values of 0 or -1,
      // passing through elements with tabindex="0" is a tighter criteria
      // than filtering out elements based on tabindex="-1".
      return getAttribute.call(element, 'tabindex') === '0';
    }

    if (formElementTagNames.has(tagNameGetter.call(element))) {
      return !hasAttribute.call(element, 'disabled');
    }

    return true;
  });
}

const DidAddMouseEventListeners = new WeakMap(); // Due to browser differences, it is impossible to know what is focusable until
// we actually try to focus it. We need to refactor our focus delegation logic
// to verify whether or not the target was actually focused instead of trying
// to predict focusability like we do here.

function isVisible(element) {
  const {
    width,
    height
  } = getBoundingClientRect.call(element);
  const noZeroSize = width > 0 || height > 0; // The area element can be 0x0 and focusable. Hardcoding this is not ideal
  // but it will minimize changes in the current behavior.

  const isAreaElement = element.tagName === 'AREA';
  return (noZeroSize || isAreaElement) && getComputedStyle(element).visibility !== 'hidden';
} // This function based on https://allyjs.io/data-tables/focusable.html
// It won't catch everything, but should be good enough
// There are a lot of edge cases here that we can't realistically handle
// Determines if a particular element is tabbable, as opposed to simply focusable


function isTabbable(element) {
  if (isSyntheticShadowHost(element) && isDelegatingFocus(element)) {
    return false;
  }

  return matches.call(element, FocusableSelector) && isVisible(element);
}

function hostElementFocus() {
  const _rootNode = this.getRootNode();

  if (_rootNode === this) {
    // We invoke the focus() method even if the host is disconnected in order to eliminate
    // observable differences for component authors between synthetic and native.
    const focusable = querySelector.call(this, FocusableSelector);

    if (!isNull(focusable)) {
      // @ts-ignore type-mismatch
      focusable.focus.apply(focusable, arguments);
    }

    return;
  } // If the root node is not the host element then it's either the document or a shadow root.


  const rootNode = _rootNode;

  if (rootNode.activeElement === this) {
    // The focused element should not change if the focus method is invoked
    // on the shadow-including ancestor of the currently focused element.
    return;
  }

  const focusables = arrayFromCollection(querySelectorAll$1.call(this, FocusableSelector));
  let didFocus = false;

  while (!didFocus && focusables.length !== 0) {
    const focusable = focusables.shift(); // @ts-ignore type-mismatch

    focusable.focus.apply(focusable, arguments); // Get the root node of the current focusable in case it was slotted.

    const currentRootNode = focusable.getRootNode();
    didFocus = currentRootNode.activeElement === focusable;
  }
}

function getTabbableSegments(host) {
  const doc = getOwnerDocument(host);
  const all = filterSequentiallyFocusableElements(arrayFromCollection(querySelectorAll.call(doc, FocusableSelector)));
  const inner = filterSequentiallyFocusableElements(arrayFromCollection(querySelectorAll$1.call(host, FocusableSelector)));

  if (undefined !== 'production') {
    assert.invariant(getAttribute.call(host, 'tabindex') === '-1' || isDelegatingFocus(host), `The focusin event is only relevant when the tabIndex property is -1 on the host.`);
  }

  const firstChild = inner[0];
  const lastChild = inner[inner.length - 1];
  const hostIndex = ArrayIndexOf.call(all, host); // Host element can show up in our "previous" section if its tabindex is 0
  // We want to filter that out here

  const firstChildIndex = hostIndex > -1 ? hostIndex : ArrayIndexOf.call(all, firstChild); // Account for an empty inner list

  const lastChildIndex = inner.length === 0 ? firstChildIndex + 1 : ArrayIndexOf.call(all, lastChild) + 1;
  const prev = ArraySlice.call(all, 0, firstChildIndex);
  const next = ArraySlice.call(all, lastChildIndex);
  return {
    prev,
    inner,
    next
  };
}

function getActiveElement(host) {
  const doc = getOwnerDocument(host);
  const activeElement = DocumentPrototypeActiveElement.call(doc);

  if (isNull(activeElement)) {
    return activeElement;
  } // activeElement must be child of the host and owned by it


  return (compareDocumentPosition.call(host, activeElement) & DOCUMENT_POSITION_CONTAINED_BY) !== 0 ? activeElement : null;
}

function relatedTargetPosition(host, relatedTarget) {
  // assert: target must be child of host
  const pos = compareDocumentPosition.call(host, relatedTarget);

  if (pos & DOCUMENT_POSITION_CONTAINED_BY) {
    // focus remains inside the host
    return 0;
  } else if (pos & DOCUMENT_POSITION_PRECEDING) {
    // focus is coming from above
    return 1;
  } else if (pos & DOCUMENT_POSITION_FOLLOWING) {
    // focus is coming from below
    return 2;
  } // we don't know what's going on.


  return -1;
}

function muteEvent(event) {
  event.preventDefault();
  event.stopPropagation();
}

function muteFocusEventsDuringExecution(win, func) {
  windowAddEventListener.call(win, 'focusin', muteEvent, true);
  windowAddEventListener.call(win, 'focusout', muteEvent, true);
  func();
  windowRemoveEventListener.call(win, 'focusin', muteEvent, true);
  windowRemoveEventListener.call(win, 'focusout', muteEvent, true);
}

function focusOnNextOrBlur(segment, target, relatedTarget) {
  const win = getOwnerWindow(relatedTarget);
  const next = getNextTabbable(segment, relatedTarget);

  if (isNull(next)) {
    // nothing to focus on, blur to invalidate the operation
    muteFocusEventsDuringExecution(win, () => {
      target.blur();
    });
  } else {
    muteFocusEventsDuringExecution(win, () => {
      next.focus();
    });
  }
}

let letBrowserHandleFocus = false;
function disableKeyboardFocusNavigationRoutines() {
  letBrowserHandleFocus = true;
}
function enableKeyboardFocusNavigationRoutines() {
  letBrowserHandleFocus = false;
}
function isKeyboardFocusNavigationRoutineEnabled() {
  return !letBrowserHandleFocus;
}

function skipHostHandler(event) {
  if (letBrowserHandleFocus) {
    return;
  }

  const host = eventCurrentTargetGetter.call(event);
  const target = eventTargetGetter.call(event); // If the host delegating focus with tabindex=0 is not the target, we know
  // that the event was dispatched on a descendant node of the host. This
  // means the focus is coming from below and we don't need to do anything.

  if (host !== target) {
    // Focus is coming from above
    return;
  }

  const relatedTarget = focusEventRelatedTargetGetter.call(event);

  if (isNull(relatedTarget)) {
    // If relatedTarget is null, the user is most likely tabbing into the document from the
    // browser chrome. We could probably deduce whether focus is coming in from the top or the
    // bottom by comparing the position of the target to all tabbable elements. This is an edge
    // case and only comes up if the custom element is the first or last tabbable element in the
    // document.
    return;
  }

  const segments = getTabbableSegments(host);
  const position = relatedTargetPosition(host, relatedTarget);

  if (position === 1) {
    // Focus is coming from above
    const findTabbableElms = isTabbableFrom.bind(null, host.getRootNode());
    const first = ArrayFind.call(segments.inner, findTabbableElms);

    if (!isUndefined(first)) {
      const win = getOwnerWindow(first);
      muteFocusEventsDuringExecution(win, () => {
        first.focus();
      });
    } else {
      focusOnNextOrBlur(segments.next, target, relatedTarget);
    }
  } else if (host === target) {
    // Host is receiving focus from below, either from its shadow or from a sibling
    focusOnNextOrBlur(ArrayReverse.call(segments.prev), target, relatedTarget);
  }
}

function skipShadowHandler(event) {
  if (letBrowserHandleFocus) {
    return;
  }

  const relatedTarget = focusEventRelatedTargetGetter.call(event);

  if (isNull(relatedTarget)) {
    // If relatedTarget is null, the user is most likely tabbing into the document from the
    // browser chrome. We could probably deduce whether focus is coming in from the top or the
    // bottom by comparing the position of the target to all tabbable elements. This is an edge
    // case and only comes up if the custom element is the first or last tabbable element in the
    // document.
    return;
  }

  const host = eventCurrentTargetGetter.call(event);
  const segments = getTabbableSegments(host);

  if (ArrayIndexOf.call(segments.inner, relatedTarget) !== -1) {
    // If relatedTarget is contained by the host's subtree we can assume that the user is
    // tabbing between elements inside of the shadow. Do nothing.
    return;
  }

  const target = eventTargetGetter.call(event); // Determine where the focus is coming from (Tab or Shift+Tab)

  const position = relatedTargetPosition(host, relatedTarget);

  if (position === 1) {
    // Focus is coming from above
    focusOnNextOrBlur(segments.next, target, relatedTarget);
  }

  if (position === 2) {
    // Focus is coming from below
    focusOnNextOrBlur(ArrayReverse.call(segments.prev), target, relatedTarget);
  }
} // Use this function to determine whether you can start from one root and end up
// at another element via tabbing.


function isTabbableFrom(fromRoot, toElm) {
  if (!isTabbable(toElm)) {
    return false;
  }

  const ownerDocument = getOwnerDocument(toElm);
  let root = toElm.getRootNode();

  while (root !== ownerDocument && root !== fromRoot) {
    const sr = root;
    const host = sr.host;

    if (getAttribute.call(host, 'tabindex') === '-1') {
      return false;
    }

    root = host && host.getRootNode();
  }

  return true;
}

function getNextTabbable(tabbables, relatedTarget) {
  const len = tabbables.length;

  if (len > 0) {
    for (let i = 0; i < len; i += 1) {
      const next = tabbables[i];

      if (isTabbableFrom(relatedTarget.getRootNode(), next)) {
        return next;
      }
    }
  }

  return null;
} // Skips the host element


function handleFocus(elm) {
  if (undefined !== 'production') {
    assert.invariant(isDelegatingFocus(elm), `Invalid attempt to handle focus event for ${toString(elm)}. ${toString(elm)} should have delegates focus true, but is not delegating focus`);
  }

  bindDocumentMousedownMouseupHandlers(elm); // Unbind any focusin listeners we may have going on

  ignoreFocusIn(elm);
  addEventListener.call(elm, 'focusin', skipHostHandler, true);
}
function ignoreFocus(elm) {
  removeEventListener.call(elm, 'focusin', skipHostHandler, true);
}

function bindDocumentMousedownMouseupHandlers(elm) {
  const ownerDocument = getOwnerDocument(elm);

  if (!DidAddMouseEventListeners.get(ownerDocument)) {
    DidAddMouseEventListeners.set(ownerDocument, true);
    addEventListener.call(ownerDocument, 'mousedown', disableKeyboardFocusNavigationRoutines, true);
    addEventListener.call(ownerDocument, 'mouseup', () => {
      // We schedule this as an async task in the mouseup handler (as
      // opposed to the mousedown handler) because we want to guarantee
      // that it will never run before the focusin handler:
      //
      // Click form element   | Click form element label
      // ==================================================
      // mousedown            | mousedown
      // FOCUSIN              | mousedown-setTimeout
      // mousedown-setTimeout | mouseup
      // mouseup              | FOCUSIN
      // mouseup-setTimeout   | mouseup-setTimeout
      setTimeout(enableKeyboardFocusNavigationRoutines);
    }, true); // [W-7824445] If the element is draggable, the mousedown event is dispatched before the
    // element is starting to be dragged, which disable the keyboard focus navigation routine.
    // But by specification, the mouseup event is never dispatched once the element is dropped.
    //
    // For all draggable element, we need to add an event listener to re-enable the keyboard
    // navigation routine after dragging starts.

    addEventListener.call(ownerDocument, 'dragstart', enableKeyboardFocusNavigationRoutines, true);
  }
} // Skips the shadow tree


function handleFocusIn(elm) {
  if (undefined !== 'production') {
    assert.invariant(tabIndexGetter.call(elm) === -1, `Invalid attempt to handle focus in  ${toString(elm)}. ${toString(elm)} should have tabIndex -1, but has tabIndex ${tabIndexGetter.call(elm)}`);
  }

  bindDocumentMousedownMouseupHandlers(elm); // Unbind any focus listeners we may have going on

  ignoreFocus(elm); // This focusin listener is to catch focusin events from keyboard interactions
  // A better solution would perhaps be to listen for keydown events, but
  // the keydown event happens on whatever element already has focus (or no element
  // at all in the case of the location bar. So, instead we have to assume that focusin
  // without a mousedown means keyboard navigation

  addEventListener.call(elm, 'focusin', skipShadowHandler, true);
}
function ignoreFocusIn(elm) {
  removeEventListener.call(elm, 'focusin', skipShadowHandler, true);
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

function getElementComputedStyle(element) {
  const win = getOwnerWindow(element);
  return windowGetComputedStyle.call(win, element);
}

function getWindowSelection(node) {
  const win = getOwnerWindow(node);
  return windowGetSelection.call(win);
}

function nodeIsBeingRendered(nodeComputedStyle) {
  return nodeComputedStyle.visibility === 'visible' && nodeComputedStyle.display !== 'none';
}

function getSelectionState(element) {
  const win = getOwnerWindow(element);
  const selection = getWindowSelection(element);

  if (selection === null) {
    return null;
  }

  const ranges = [];

  for (let i = 0; i < selection.rangeCount; i++) {
    ranges.push(selection.getRangeAt(i));
  }

  const state = {
    element,
    onselect: win.onselect,
    onselectstart: win.onselectstart,
    onselectionchange: win.onselectionchange,
    ranges
  };
  win.onselect = null;
  win.onselectstart = null;
  win.onselectionchange = null;
  return state;
}

function restoreSelectionState(state) {
  if (state === null) {
    return;
  }

  const {
    element,
    onselect,
    onselectstart,
    onselectionchange,
    ranges
  } = state;
  const win = getOwnerWindow(element);
  const selection = getWindowSelection(element);
  selection.removeAllRanges();

  for (let i = 0; i < ranges.length; i++) {
    selection.addRange(ranges[i]);
  }

  win.onselect = onselect;
  win.onselectstart = onselectstart;
  win.onselectionchange = onselectionchange;
}
/**
 * Gets the "innerText" of a text node using the Selection API
 *
 * NOTE: For performance reasons, since this function will be called multiple times while calculating the innerText of
 *       an element, it does not restore the current selection.
 */


function getTextNodeInnerText(textNode) {
  const selection = getWindowSelection(textNode);

  if (selection === null) {
    return textNode.textContent || '';
  }

  const range = document.createRange();
  range.selectNodeContents(textNode);
  const domRect = range.getBoundingClientRect();

  if (domRect.height <= 0 || domRect.width <= 0) {
    // the text node is not rendered
    return '';
  } // Needed to remove non rendered characters from the text node.


  selection.removeAllRanges();
  selection.addRange(range);
  const selectionText = selection.toString(); // The textNode is visible, but it may not be selectable. When the text is not selectable,
  // textContent is the nearest approximation to innerText.

  return selectionText ? selectionText : textNode.textContent || '';
}

const nodeIsElement = node => node.nodeType === ELEMENT_NODE;

const nodeIsText = node => node.nodeType === TEXT_NODE;
/**
 * Spec: https://html.spec.whatwg.org/multipage/dom.html#inner-text-collection-steps
 * One spec implementation: https://github.com/servo/servo/blob/721271dcd3c20db5ca8cf146e2b5907647afb4d6/components/layout/query.rs#L1132
 */


function innerTextCollectionSteps(node) {
  const items = [];

  if (nodeIsElement(node)) {
    const {
      tagName
    } = node;
    const computedStyle = getElementComputedStyle(node);

    if (tagName === 'OPTION') {
      // For options, is hard to get the "rendered" text, let's use the original getter.
      return [1, innerTextGetter.call(node), 1];
    } else if (tagName === 'TEXTAREA') {
      return [];
    } else {
      const childNodes = node.childNodes;

      for (let i = 0, n = childNodes.length; i < n; i++) {
        ArrayPush.apply(items, innerTextCollectionSteps(childNodes[i]));
      }
    }

    if (!nodeIsBeingRendered(computedStyle)) {
      if (tagName === 'SELECT' || tagName === 'DATALIST') {
        // the select is either: .visibility != 'visible' or .display === hidden, therefore this select should
        // not display any value.
        return [];
      }

      return items;
    }

    if (tagName === 'BR') {
      items.push('\u{000A}'
      /* line feed */
      );
    }

    const {
      display
    } = computedStyle;

    if (display === 'table-cell') {
      // omitting case: and node's CSS box is not the last 'table-cell' box of its enclosing 'table-row' box
      items.push('\u{0009}'
      /* tab */
      );
    }

    if (display === 'table-row') {
      // omitting case: and node's CSS box is not the last 'table-row' box of the nearest ancestor 'table' box
      items.push('\u{000A}'
      /* line feed */
      );
    }

    if (tagName === 'P') {
      items.unshift(2);
      items.push(2);
    }

    if (display === 'block' || display === 'table-caption' || display === 'flex' || display === 'table') {
      items.unshift(1);
      items.push(1);
    }
  } else if (nodeIsText(node)) {
    items.push(getTextNodeInnerText(node));
  }

  return items;
}
/**
 * InnerText getter spec: https://html.spec.whatwg.org/multipage/dom.html#the-innertext-idl-attribute
 *
 * One spec implementation: https://github.com/servo/servo/blob/721271dcd3c20db5ca8cf146e2b5907647afb4d6/components/layout/query.rs#L1087
 */


function getInnerText(element) {
  const thisComputedStyle = getElementComputedStyle(element);

  if (!nodeIsBeingRendered(thisComputedStyle)) {
    return getTextContent(element) || '';
  }

  const selectionState = getSelectionState(element);
  const results = [];
  const childNodes = element.childNodes;

  for (let i = 0, n = childNodes.length; i < n; i++) {
    ArrayPush.apply(results, innerTextCollectionSteps(childNodes[i]));
  }

  restoreSelectionState(selectionState);
  let elementInnerText = '';
  let maxReqLineBreakCount = 0;

  for (let i = 0, n = results.length; i < n; i++) {
    const item = results[i];

    if (typeof item === 'string') {
      if (maxReqLineBreakCount > 0) {
        for (let j = 0; j < maxReqLineBreakCount; j++) {
          elementInnerText += '\u{000A}';
        }

        maxReqLineBreakCount = 0;
      }

      if (item.length > 0) {
        elementInnerText += item;
      }
    } else {
      if (elementInnerText.length == 0) {
        // Remove required line break count at the start.
        continue;
      } // Store the count if it's the max of this run,
      // but it may be ignored if no text item is found afterwards,
      // which means that these are consecutive line breaks at the end.


      if (item > maxReqLineBreakCount) {
        maxReqLineBreakCount = item;
      }
    }
  }

  return elementInnerText;
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const {
  blur,
  focus
} = HTMLElement.prototype;
/**
 * This method only applies to elements with a shadow attached to them
 */

function tabIndexGetterPatched() {
  if (isDelegatingFocus(this) && isFalse(hasAttribute.call(this, 'tabindex'))) {
    // this covers the case where the default tabindex should be 0 because the
    // custom element is delegating its focus
    return 0;
  }

  return tabIndexGetter.call(this);
}
/**
 * This method only applies to elements with a shadow attached to them
 */


function tabIndexSetterPatched(value) {
  // This tabIndex setter might be confusing unless it is understood that HTML
  // elements have default tabIndex property values. Natively focusable elements have
  // a default tabIndex value of 0 and all other elements have a default tabIndex
  // value of -1. For example, the tabIndex property value is -1 for both <x-foo> and
  // <x-foo tabindex="-1">, but our delegatesFocus polyfill should only kick in for
  // the latter case when the value of the tabindex attribute is -1.
  const delegatesFocus = isDelegatingFocus(this); // Record the state of things before invoking component setter.

  const prevValue = tabIndexGetter.call(this);
  const prevHasAttr = hasAttribute.call(this, 'tabindex');
  tabIndexSetter.call(this, value); // Record the state of things after invoking component setter.

  const currValue = tabIndexGetter.call(this);
  const currHasAttr = hasAttribute.call(this, 'tabindex');
  const didValueChange = prevValue !== currValue; // If the tabindex attribute is initially rendered, we can assume that this setter has
  // previously executed and a listener has been added. We must remove that listener if
  // the tabIndex property value has changed or if the component no longer renders a
  // tabindex attribute.

  if (prevHasAttr && (didValueChange || isFalse(currHasAttr))) {
    if (prevValue === -1) {
      ignoreFocusIn(this);
    }

    if (prevValue === 0 && delegatesFocus) {
      ignoreFocus(this);
    }
  } // If a tabindex attribute was not rendered after invoking its setter, it means the
  // component is taking control. Do nothing.


  if (isFalse(currHasAttr)) {
    return;
  } // If the tabindex attribute is initially rendered, we can assume that this setter has
  // previously executed and a listener has been added. If the tabindex attribute is still
  // rendered after invoking the setter AND the tabIndex property value has not changed,
  // we don't need to do any work.


  if (prevHasAttr && currHasAttr && isFalse(didValueChange)) {
    return;
  } // At this point we know that a tabindex attribute was rendered after invoking the
  // setter and that either:
  // 1) This is the first time this setter is being invoked.
  // 2) This is not the first time this setter is being invoked and the value is changing.
  // We need to add the appropriate listeners in either case.


  if (currValue === -1) {
    // Add the magic to skip the shadow tree
    handleFocusIn(this);
  }

  if (currValue === 0 && delegatesFocus) {
    // Add the magic to skip the host element
    handleFocus(this);
  }
}
/**
 * This method only applies to elements with a shadow attached to them
 */


function blurPatched() {
  if (isDelegatingFocus(this)) {
    const currentActiveElement = getActiveElement(this);

    if (!isNull(currentActiveElement)) {
      // if there is an active element, blur it (intentionally using the dot notation in case the user defines the blur routine)
      currentActiveElement.blur();
      return;
    }
  }

  return blur.call(this);
}

function focusPatched() {
  // Save enabled state
  const originallyEnabled = isKeyboardFocusNavigationRoutineEnabled(); // Change state by disabling if originally enabled

  if (originallyEnabled) {
    disableKeyboardFocusNavigationRoutines();
  }

  if (isSyntheticShadowHost(this) && isDelegatingFocus(this)) {
    hostElementFocus.call(this);
    return;
  } // Typescript does not like it when you treat the `arguments` object as an array
  // @ts-ignore type-mismatch


  focus.apply(this, arguments); // Restore state by enabling if originally enabled

  if (originallyEnabled) {
    enableKeyboardFocusNavigationRoutines();
  }
} // Non-deep-traversing patches: this descriptor map includes all descriptors that
// do not five access to nodes beyond the immediate children.


defineProperties(HTMLElement.prototype, {
  tabIndex: {
    get() {
      if (isSyntheticShadowHost(this)) {
        return tabIndexGetterPatched.call(this);
      }

      return tabIndexGetter.call(this);
    },

    set(v) {
      if (isSyntheticShadowHost(this)) {
        return tabIndexSetterPatched.call(this, v);
      }

      return tabIndexSetter.call(this, v);
    },

    enumerable: true,
    configurable: true
  },
  blur: {
    value() {
      if (isSyntheticShadowHost(this)) {
        return blurPatched.call(this);
      }

      blur.call(this);
    },

    enumerable: true,
    writable: true,
    configurable: true
  },
  focus: {
    value() {
      // Typescript does not like it when you treat the `arguments` object as an array
      // @ts-ignore type-mismatch
      focusPatched.apply(this, arguments);
    },

    enumerable: true,
    writable: true,
    configurable: true
  }
}); // Note: In JSDOM innerText is not implemented: https://github.com/jsdom/jsdom/issues/1245

if (innerTextGetter !== null && innerTextSetter !== null) {
  defineProperty(HTMLElement.prototype, 'innerText', {
    get() {
      if (!runtimeFlags.ENABLE_INNER_OUTER_TEXT_PATCH) {
        return innerTextGetter.call(this);
      }

      if (!runtimeFlags.ENABLE_ELEMENT_PATCH) {
        if (isNodeShadowed(this) || isSyntheticShadowHost(this)) {
          return getInnerText(this);
        }

        return innerTextGetter.call(this);
      } // TODO [#1222]: remove global bypass


      if (isGlobalPatchingSkipped(this)) {
        return innerTextGetter.call(this);
      }

      return getInnerText(this);
    },

    set(v) {
      innerTextSetter.call(this, v);
    },

    enumerable: true,
    configurable: true
  });
} // Note: Firefox does not have outerText, https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/outerText


if (outerTextGetter !== null && outerTextSetter !== null) {
  // From https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/outerText :
  // HTMLElement.outerText is a non-standard property. As a getter, it returns the same value as Node.innerText.
  // As a setter, it removes the current node and replaces it with the given text.
  defineProperty(HTMLElement.prototype, 'outerText', {
    get() {
      if (!runtimeFlags.ENABLE_INNER_OUTER_TEXT_PATCH) {
        return outerTextGetter.call(this);
      }

      if (!runtimeFlags.ENABLE_ELEMENT_PATCH) {
        if (isNodeShadowed(this) || isSyntheticShadowHost(this)) {
          return getInnerText(this);
        }

        return outerTextGetter.call(this);
      } // TODO [#1222]: remove global bypass


      if (isGlobalPatchingSkipped(this)) {
        return outerTextGetter.call(this);
      }

      return getInnerText(this);
    },

    set(v) {
      // Invoking the `outerText` setter on a host element should trigger its disconnection, but until we merge node reactions, it will not work.
      // We could reimplement the outerText setter in JavaScript ([blink implementation](https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/core/html/html_element.cc;l=841-879;drc=6e8b402a6231405b753919029c9027404325ea00;bpv=0;bpt=1))
      // but the benefits don't worth the efforts.
      outerTextSetter.call(this, v);
    },

    enumerable: true,
    configurable: true
  });
}

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
function getShadowToken(node) {
  return node[KEY__SHADOW_TOKEN];
}
function setShadowToken(node, shadowToken) {
  node[KEY__SHADOW_TOKEN] = shadowToken;
}
/**
 * Patching Element.prototype.$shadowToken$ to mark elements a portal:
 *
 *  - we use a property to allow engines to set a custom attribute that should be
 *    placed into the element to sandbox the css rules defined for the template.
 *
 *  - this custom attribute must be unique.
 *
 **/

defineProperty(Element.prototype, KEY__SHADOW_TOKEN, {
  set(shadowToken) {
    const oldShadowToken = this[KEY__SHADOW_TOKEN_PRIVATE];

    if (!isUndefined(oldShadowToken) && oldShadowToken !== shadowToken) {
      removeAttribute.call(this, oldShadowToken);
    }

    if (!isUndefined(shadowToken)) {
      setAttribute.call(this, shadowToken, '');
    }

    this[KEY__SHADOW_TOKEN_PRIVATE] = shadowToken;
  },

  get() {
    return this[KEY__SHADOW_TOKEN_PRIVATE];
  },

  configurable: true
});

/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const DomManualPrivateKey = '$$DomManualKey$$'; // Resolver function used when a node is removed from within a portal

const DocumentResolverFn = function () {}; // We can use a single observer without having to worry about leaking because
// "Registered observers in a node’s registered observer list have a weak
// reference to the node."
// https://dom.spec.whatwg.org/#garbage-collection


let portalObserver;
const portalObserverConfig = {
  childList: true
};

function adoptChildNode(node, fn, shadowToken) {
  const previousNodeShadowResolver = getShadowRootResolver(node);

  if (previousNodeShadowResolver === fn) {
    return; // nothing to do here, it is already correctly patched
  }

  setShadowRootResolver(node, fn);

  if (node instanceof Element) {
    setShadowToken(node, shadowToken);

    if (isSyntheticShadowHost(node)) {
      // Root LWC elements can't get content slotted into them, therefore we don't observe their children.
      return;
    }

    if (isUndefined(previousNodeShadowResolver)) {
      // we only care about Element without shadowResolver (no MO.observe has been called)
      MutationObserverObserve.call(portalObserver, node, portalObserverConfig);
    } // recursively patching all children as well


    const childNodes = childNodesGetter.call(node);

    for (let i = 0, len = childNodes.length; i < len; i += 1) {
      adoptChildNode(childNodes[i], fn, shadowToken);
    }
  }
}

function initPortalObserver() {
  return new MO(mutations => {
    forEach.call(mutations, mutation => {
      /**
       * This routine will process all nodes added or removed from elm (which is marked as a portal)
       * When adding a node to the portal element, we should add the ownership.
       * When removing a node from the portal element, this ownership should be removed.
       *
       * There is some special cases in which MutationObserver may call with stacked mutations (the same node
       * will be in addedNodes and removedNodes) or with false positives (a node that is removed and re-appended
       * in the same tick) for those cases, we cover by checking that the node is contained
       * (or not in the case of removal) by the element.
       */
      const {
        target: elm,
        addedNodes,
        removedNodes
      } = mutation; // the target of the mutation should always have a ShadowRootResolver attached to it

      const fn = getShadowRootResolver(elm);
      const shadowToken = getShadowToken(elm); // Process removals first to handle the case where an element is removed and reinserted

      for (let i = 0, len = removedNodes.length; i < len; i += 1) {
        const node = removedNodes[i];

        if (!(compareDocumentPosition.call(elm, node) & _Node.DOCUMENT_POSITION_CONTAINED_BY)) {
          adoptChildNode(node, DocumentResolverFn, undefined);
        }
      }

      for (let i = 0, len = addedNodes.length; i < len; i += 1) {
        const node = addedNodes[i];

        if (compareDocumentPosition.call(elm, node) & _Node.DOCUMENT_POSITION_CONTAINED_BY) {
          adoptChildNode(node, fn, shadowToken);
        }
      }
    });
  });
}

function markElementAsPortal(elm) {
  if (isUndefined(portalObserver)) {
    portalObserver = initPortalObserver();
  }

  if (isUndefined(getShadowRootResolver(elm))) {
    // only an element from a within a shadowRoot should be used here
    throw new Error(`Invalid Element`);
  } // install mutation observer for portals


  MutationObserverObserve.call(portalObserver, elm, portalObserverConfig); // TODO [#1253]: optimization to synchronously adopt new child nodes added
  // to this elm, we can do that by patching the most common operations
  // on the node itself
}
/**
 * Patching Element.prototype.$domManual$ to mark elements as portal:
 *
 *  - we use a property to allow engines to signal that a particular element in
 *    a shadow supports manual insertion of child nodes.
 *
 *  - this signal comes as a boolean value, and we use it to install the MO instance
 *    onto the element, to propagate the $ownerKey$ and $shadowToken$ to all new
 *    child nodes.
 *
 *  - at the moment, there is no way to undo this operation, once the element is
 *    marked as $domManual$, setting it to false does nothing.
 *
 **/
// TODO [#1306]: rename this to $observerConnection$


defineProperty(Element.prototype, '$domManual$', {
  set(v) {
    this[DomManualPrivateKey] = v;

    if (isTrue(v)) {
      markElementAsPortal(this);
    }
  },

  get() {
    return this[DomManualPrivateKey];
  },

  configurable: true
});
/** version: 2.5.13 */


/***/ }),

/***/ "../node_modules/react-dev-utils/launchEditorEndpoint.js":
/*!***************************************************************!*\
  !*** ../node_modules/react-dev-utils/launchEditorEndpoint.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


// TODO: we might want to make this injectable to support DEV-time non-root URLs.
module.exports = '/__open-stack-frame-in-editor';


/***/ }),

/***/ "../node_modules/react-error-overlay/lib/index.js":
/*!********************************************************!*\
  !*** ../node_modules/react-error-overlay/lib/index.js ***!
  \********************************************************/
/***/ ((module) => {

!function(e,t){ true?module.exports=t():0}(self,(function(){return(()=>{var e={162:(e,t,r)=>{e.exports=r(47)},47:e=>{var t=function(e){"use strict";var t,r=Object.prototype,n=r.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",i=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag";function u(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,r){return e[t]=r}}function s(e,t,r,n){var o=t&&t.prototype instanceof m?t:m,a=Object.create(o.prototype),i=new T(n||[]);return a._invoke=function(e,t,r){var n=f;return function(o,a){if(n===p)throw new Error("Generator is already running");if(n===h){if("throw"===o)throw a;return L()}for(r.method=o,r.arg=a;;){var i=r.delegate;if(i){var l=_(i,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(n===f)throw n=h,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n=p;var u=c(e,t,r);if("normal"===u.type){if(n=r.done?h:d,u.arg===g)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(n=h,r.method="throw",r.arg=u.arg)}}}(e,r,i),a}function c(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=s;var f="suspendedStart",d="suspendedYield",p="executing",h="completed",g={};function m(){}function v(){}function y(){}var b={};u(b,a,(function(){return this}));var w=Object.getPrototypeOf,x=w&&w(w(R([])));x&&x!==r&&n.call(x,a)&&(b=x);var E=y.prototype=m.prototype=Object.create(b);function k(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){function r(o,a,i,l){var u=c(e[o],e,a);if("throw"!==u.type){var s=u.arg,f=s.value;return f&&"object"==typeof f&&n.call(f,"__await")?t.resolve(f.__await).then((function(e){r("next",e,i,l)}),(function(e){r("throw",e,i,l)})):t.resolve(f).then((function(e){s.value=e,i(s)}),(function(e){return r("throw",e,i,l)}))}l(u.arg)}var o;this._invoke=function(e,n){function a(){return new t((function(t,o){r(e,n,t,o)}))}return o=o?o.then(a,a):a()}}function _(e,r){var n=e.iterator[r.method];if(n===t){if(r.delegate=null,"throw"===r.method){if(e.iterator.return&&(r.method="return",r.arg=t,_(e,r),"throw"===r.method))return g;r.method="throw",r.arg=new TypeError("The iterator does not provide a 'throw' method")}return g}var o=c(n,e.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,g;var a=o.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,g):a:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,g)}function C(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function O(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function T(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(C,this),this.reset(!0)}function R(e){if(e){var r=e[a];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return i.next=i}}return{next:L}}function L(){return{value:t,done:!0}}return v.prototype=y,u(E,"constructor",y),u(y,"constructor",v),v.displayName=u(y,l,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===v||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,u(e,l,"GeneratorFunction")),e.prototype=Object.create(E),e},e.awrap=function(e){return{__await:e}},k(S.prototype),u(S.prototype,i,(function(){return this})),e.AsyncIterator=S,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new S(s(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},k(E),u(E,l,"Generator"),u(E,a,(function(){return this})),u(E,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=R,T.prototype={constructor:T,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(O),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return l.type="throw",l.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],l=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var u=n.call(i,"catchLoc"),s=n.call(i,"finallyLoc");if(u&&s){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,g):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),O(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;O(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:R(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),g}},e}(e.exports);try{regeneratorRuntime=t}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=t:Function("r","regeneratorRuntime = r")(t)}},268:(e,t)=>{"use strict";t.Wo=function(e){return Array.isArray(e)||(e=[e]),Promise.all(e.map((function(e){return e.then((function(e){return{isFulfilled:!0,isRejected:!1,value:e}})).catch((function(e){return{isFulfilled:!1,isRejected:!0,reason:e}}))})))}},213:(e,t,r)=>{var n=r(728),o=Object.prototype.hasOwnProperty,a="undefined"!=typeof Map;function i(){this._array=[],this._set=a?new Map:Object.create(null)}i.fromArray=function(e,t){for(var r=new i,n=0,o=e.length;n<o;n++)r.add(e[n],t);return r},i.prototype.size=function(){return a?this._set.size:Object.getOwnPropertyNames(this._set).length},i.prototype.add=function(e,t){var r=a?e:n.toSetString(e),i=a?this.has(e):o.call(this._set,r),l=this._array.length;i&&!t||this._array.push(e),i||(a?this._set.set(e,l):this._set[r]=l)},i.prototype.has=function(e){if(a)return this._set.has(e);var t=n.toSetString(e);return o.call(this._set,t)},i.prototype.indexOf=function(e){if(a){var t=this._set.get(e);if(t>=0)return t}else{var r=n.toSetString(e);if(o.call(this._set,r))return this._set[r]}throw new Error('"'+e+'" is not in the set.')},i.prototype.at=function(e){if(e>=0&&e<this._array.length)return this._array[e];throw new Error("No element indexed by "+e)},i.prototype.toArray=function(){return this._array.slice()},t.I=i},400:(e,t,r)=>{var n=r(923);t.encode=function(e){var t,r="",o=function(e){return e<0?1+(-e<<1):0+(e<<1)}(e);do{t=31&o,(o>>>=5)>0&&(t|=32),r+=n.encode(t)}while(o>0);return r},t.decode=function(e,t,r){var o,a,i,l,u=e.length,s=0,c=0;do{if(t>=u)throw new Error("Expected more digits in base 64 VLQ value.");if(-1===(a=n.decode(e.charCodeAt(t++))))throw new Error("Invalid base64 digit: "+e.charAt(t-1));o=!!(32&a),s+=(a&=31)<<c,c+=5}while(o);r.value=(l=(i=s)>>1,1==(1&i)?-l:l),r.rest=t}},923:(e,t)=>{var r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");t.encode=function(e){if(0<=e&&e<r.length)return r[e];throw new TypeError("Must be between 0 and 63: "+e)},t.decode=function(e){return 65<=e&&e<=90?e-65:97<=e&&e<=122?e-97+26:48<=e&&e<=57?e-48+52:43==e?62:47==e?63:-1}},216:(e,t)=>{function r(e,n,o,a,i,l){var u=Math.floor((n-e)/2)+e,s=i(o,a[u],!0);return 0===s?u:s>0?n-u>1?r(u,n,o,a,i,l):l==t.LEAST_UPPER_BOUND?n<a.length?n:-1:u:u-e>1?r(e,u,o,a,i,l):l==t.LEAST_UPPER_BOUND?u:e<0?-1:e}t.GREATEST_LOWER_BOUND=1,t.LEAST_UPPER_BOUND=2,t.search=function(e,n,o,a){if(0===n.length)return-1;var i=r(-1,n.length,e,n,o,a||t.GREATEST_LOWER_BOUND);if(i<0)return-1;for(;i-1>=0&&0===o(n[i],n[i-1],!0);)--i;return i}},188:(e,t,r)=>{var n=r(728);function o(){this._array=[],this._sorted=!0,this._last={generatedLine:-1,generatedColumn:0}}o.prototype.unsortedForEach=function(e,t){this._array.forEach(e,t)},o.prototype.add=function(e){var t,r,o,a,i,l;r=e,o=(t=this._last).generatedLine,a=r.generatedLine,i=t.generatedColumn,l=r.generatedColumn,a>o||a==o&&l>=i||n.compareByGeneratedPositionsInflated(t,r)<=0?(this._last=e,this._array.push(e)):(this._sorted=!1,this._array.push(e))},o.prototype.toArray=function(){return this._sorted||(this._array.sort(n.compareByGeneratedPositionsInflated),this._sorted=!0),this._array},t.H=o},826:(e,t)=>{function r(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function n(e,t,o,a){if(o<a){var i=o-1;r(e,(c=o,f=a,Math.round(c+Math.random()*(f-c))),a);for(var l=e[a],u=o;u<a;u++)t(e[u],l)<=0&&r(e,i+=1,u);r(e,i+1,u);var s=i+1;n(e,t,o,s-1),n(e,t,s+1,a)}var c,f}t.U=function(e,t){n(e,t,0,e.length-1)}},771:(e,t,r)=>{var n=r(728),o=r(216),a=r(213).I,i=r(400),l=r(826).U;function u(e){var t=e;return"string"==typeof e&&(t=JSON.parse(e.replace(/^\)\]\}'/,""))),null!=t.sections?new f(t):new s(t)}function s(e){var t=e;"string"==typeof e&&(t=JSON.parse(e.replace(/^\)\]\}'/,"")));var r=n.getArg(t,"version"),o=n.getArg(t,"sources"),i=n.getArg(t,"names",[]),l=n.getArg(t,"sourceRoot",null),u=n.getArg(t,"sourcesContent",null),s=n.getArg(t,"mappings"),c=n.getArg(t,"file",null);if(r!=this._version)throw new Error("Unsupported version: "+r);o=o.map(String).map(n.normalize).map((function(e){return l&&n.isAbsolute(l)&&n.isAbsolute(e)?n.relative(l,e):e})),this._names=a.fromArray(i.map(String),!0),this._sources=a.fromArray(o,!0),this.sourceRoot=l,this.sourcesContent=u,this._mappings=s,this.file=c}function c(){this.generatedLine=0,this.generatedColumn=0,this.source=null,this.originalLine=null,this.originalColumn=null,this.name=null}function f(e){var t=e;"string"==typeof e&&(t=JSON.parse(e.replace(/^\)\]\}'/,"")));var r=n.getArg(t,"version"),o=n.getArg(t,"sections");if(r!=this._version)throw new Error("Unsupported version: "+r);this._sources=new a,this._names=new a;var i={line:-1,column:0};this._sections=o.map((function(e){if(e.url)throw new Error("Support for url field in sections not implemented.");var t=n.getArg(e,"offset"),r=n.getArg(t,"line"),o=n.getArg(t,"column");if(r<i.line||r===i.line&&o<i.column)throw new Error("Section offsets must be ordered and non-overlapping.");return i=t,{generatedOffset:{generatedLine:r+1,generatedColumn:o+1},consumer:new u(n.getArg(e,"map"))}}))}u.fromSourceMap=function(e){return s.fromSourceMap(e)},u.prototype._version=3,u.prototype.__generatedMappings=null,Object.defineProperty(u.prototype,"_generatedMappings",{get:function(){return this.__generatedMappings||this._parseMappings(this._mappings,this.sourceRoot),this.__generatedMappings}}),u.prototype.__originalMappings=null,Object.defineProperty(u.prototype,"_originalMappings",{get:function(){return this.__originalMappings||this._parseMappings(this._mappings,this.sourceRoot),this.__originalMappings}}),u.prototype._charIsMappingSeparator=function(e,t){var r=e.charAt(t);return";"===r||","===r},u.prototype._parseMappings=function(e,t){throw new Error("Subclasses must implement _parseMappings")},u.GENERATED_ORDER=1,u.ORIGINAL_ORDER=2,u.GREATEST_LOWER_BOUND=1,u.LEAST_UPPER_BOUND=2,u.prototype.eachMapping=function(e,t,r){var o,a=t||null;switch(r||u.GENERATED_ORDER){case u.GENERATED_ORDER:o=this._generatedMappings;break;case u.ORIGINAL_ORDER:o=this._originalMappings;break;default:throw new Error("Unknown order of iteration.")}var i=this.sourceRoot;o.map((function(e){var t=null===e.source?null:this._sources.at(e.source);return null!=t&&null!=i&&(t=n.join(i,t)),{source:t,generatedLine:e.generatedLine,generatedColumn:e.generatedColumn,originalLine:e.originalLine,originalColumn:e.originalColumn,name:null===e.name?null:this._names.at(e.name)}}),this).forEach(e,a)},u.prototype.allGeneratedPositionsFor=function(e){var t=n.getArg(e,"line"),r={source:n.getArg(e,"source"),originalLine:t,originalColumn:n.getArg(e,"column",0)};if(null!=this.sourceRoot&&(r.source=n.relative(this.sourceRoot,r.source)),!this._sources.has(r.source))return[];r.source=this._sources.indexOf(r.source);var a=[],i=this._findMapping(r,this._originalMappings,"originalLine","originalColumn",n.compareByOriginalPositions,o.LEAST_UPPER_BOUND);if(i>=0){var l=this._originalMappings[i];if(void 0===e.column)for(var u=l.originalLine;l&&l.originalLine===u;)a.push({line:n.getArg(l,"generatedLine",null),column:n.getArg(l,"generatedColumn",null),lastColumn:n.getArg(l,"lastGeneratedColumn",null)}),l=this._originalMappings[++i];else for(var s=l.originalColumn;l&&l.originalLine===t&&l.originalColumn==s;)a.push({line:n.getArg(l,"generatedLine",null),column:n.getArg(l,"generatedColumn",null),lastColumn:n.getArg(l,"lastGeneratedColumn",null)}),l=this._originalMappings[++i]}return a},t.SourceMapConsumer=u,s.prototype=Object.create(u.prototype),s.prototype.consumer=u,s.fromSourceMap=function(e){var t=Object.create(s.prototype),r=t._names=a.fromArray(e._names.toArray(),!0),o=t._sources=a.fromArray(e._sources.toArray(),!0);t.sourceRoot=e._sourceRoot,t.sourcesContent=e._generateSourcesContent(t._sources.toArray(),t.sourceRoot),t.file=e._file;for(var i=e._mappings.toArray().slice(),u=t.__generatedMappings=[],f=t.__originalMappings=[],d=0,p=i.length;d<p;d++){var h=i[d],g=new c;g.generatedLine=h.generatedLine,g.generatedColumn=h.generatedColumn,h.source&&(g.source=o.indexOf(h.source),g.originalLine=h.originalLine,g.originalColumn=h.originalColumn,h.name&&(g.name=r.indexOf(h.name)),f.push(g)),u.push(g)}return l(t.__originalMappings,n.compareByOriginalPositions),t},s.prototype._version=3,Object.defineProperty(s.prototype,"sources",{get:function(){return this._sources.toArray().map((function(e){return null!=this.sourceRoot?n.join(this.sourceRoot,e):e}),this)}}),s.prototype._parseMappings=function(e,t){for(var r,o,a,u,s,f=1,d=0,p=0,h=0,g=0,m=0,v=e.length,y=0,b={},w={},x=[],E=[];y<v;)if(";"===e.charAt(y))f++,y++,d=0;else if(","===e.charAt(y))y++;else{for((r=new c).generatedLine=f,u=y;u<v&&!this._charIsMappingSeparator(e,u);u++);if(a=b[o=e.slice(y,u)])y+=o.length;else{for(a=[];y<u;)i.decode(e,y,w),s=w.value,y=w.rest,a.push(s);if(2===a.length)throw new Error("Found a source, but no line and column");if(3===a.length)throw new Error("Found a source and line, but no column");b[o]=a}r.generatedColumn=d+a[0],d=r.generatedColumn,a.length>1&&(r.source=g+a[1],g+=a[1],r.originalLine=p+a[2],p=r.originalLine,r.originalLine+=1,r.originalColumn=h+a[3],h=r.originalColumn,a.length>4&&(r.name=m+a[4],m+=a[4])),E.push(r),"number"==typeof r.originalLine&&x.push(r)}l(E,n.compareByGeneratedPositionsDeflated),this.__generatedMappings=E,l(x,n.compareByOriginalPositions),this.__originalMappings=x},s.prototype._findMapping=function(e,t,r,n,a,i){if(e[r]<=0)throw new TypeError("Line must be greater than or equal to 1, got "+e[r]);if(e[n]<0)throw new TypeError("Column must be greater than or equal to 0, got "+e[n]);return o.search(e,t,a,i)},s.prototype.computeColumnSpans=function(){for(var e=0;e<this._generatedMappings.length;++e){var t=this._generatedMappings[e];if(e+1<this._generatedMappings.length){var r=this._generatedMappings[e+1];if(t.generatedLine===r.generatedLine){t.lastGeneratedColumn=r.generatedColumn-1;continue}}t.lastGeneratedColumn=1/0}},s.prototype.originalPositionFor=function(e){var t={generatedLine:n.getArg(e,"line"),generatedColumn:n.getArg(e,"column")},r=this._findMapping(t,this._generatedMappings,"generatedLine","generatedColumn",n.compareByGeneratedPositionsDeflated,n.getArg(e,"bias",u.GREATEST_LOWER_BOUND));if(r>=0){var o=this._generatedMappings[r];if(o.generatedLine===t.generatedLine){var a=n.getArg(o,"source",null);null!==a&&(a=this._sources.at(a),null!=this.sourceRoot&&(a=n.join(this.sourceRoot,a)));var i=n.getArg(o,"name",null);return null!==i&&(i=this._names.at(i)),{source:a,line:n.getArg(o,"originalLine",null),column:n.getArg(o,"originalColumn",null),name:i}}}return{source:null,line:null,column:null,name:null}},s.prototype.hasContentsOfAllSources=function(){return!!this.sourcesContent&&this.sourcesContent.length>=this._sources.size()&&!this.sourcesContent.some((function(e){return null==e}))},s.prototype.sourceContentFor=function(e,t){if(!this.sourcesContent)return null;if(null!=this.sourceRoot&&(e=n.relative(this.sourceRoot,e)),this._sources.has(e))return this.sourcesContent[this._sources.indexOf(e)];var r;if(null!=this.sourceRoot&&(r=n.urlParse(this.sourceRoot))){var o=e.replace(/^file:\/\//,"");if("file"==r.scheme&&this._sources.has(o))return this.sourcesContent[this._sources.indexOf(o)];if((!r.path||"/"==r.path)&&this._sources.has("/"+e))return this.sourcesContent[this._sources.indexOf("/"+e)]}if(t)return null;throw new Error('"'+e+'" is not in the SourceMap.')},s.prototype.generatedPositionFor=function(e){var t=n.getArg(e,"source");if(null!=this.sourceRoot&&(t=n.relative(this.sourceRoot,t)),!this._sources.has(t))return{line:null,column:null,lastColumn:null};var r={source:t=this._sources.indexOf(t),originalLine:n.getArg(e,"line"),originalColumn:n.getArg(e,"column")},o=this._findMapping(r,this._originalMappings,"originalLine","originalColumn",n.compareByOriginalPositions,n.getArg(e,"bias",u.GREATEST_LOWER_BOUND));if(o>=0){var a=this._originalMappings[o];if(a.source===r.source)return{line:n.getArg(a,"generatedLine",null),column:n.getArg(a,"generatedColumn",null),lastColumn:n.getArg(a,"lastGeneratedColumn",null)}}return{line:null,column:null,lastColumn:null}},f.prototype=Object.create(u.prototype),f.prototype.constructor=u,f.prototype._version=3,Object.defineProperty(f.prototype,"sources",{get:function(){for(var e=[],t=0;t<this._sections.length;t++)for(var r=0;r<this._sections[t].consumer.sources.length;r++)e.push(this._sections[t].consumer.sources[r]);return e}}),f.prototype.originalPositionFor=function(e){var t={generatedLine:n.getArg(e,"line"),generatedColumn:n.getArg(e,"column")},r=o.search(t,this._sections,(function(e,t){return e.generatedLine-t.generatedOffset.generatedLine||e.generatedColumn-t.generatedOffset.generatedColumn})),a=this._sections[r];return a?a.consumer.originalPositionFor({line:t.generatedLine-(a.generatedOffset.generatedLine-1),column:t.generatedColumn-(a.generatedOffset.generatedLine===t.generatedLine?a.generatedOffset.generatedColumn-1:0),bias:e.bias}):{source:null,line:null,column:null,name:null}},f.prototype.hasContentsOfAllSources=function(){return this._sections.every((function(e){return e.consumer.hasContentsOfAllSources()}))},f.prototype.sourceContentFor=function(e,t){for(var r=0;r<this._sections.length;r++){var n=this._sections[r].consumer.sourceContentFor(e,!0);if(n)return n}if(t)return null;throw new Error('"'+e+'" is not in the SourceMap.')},f.prototype.generatedPositionFor=function(e){for(var t=0;t<this._sections.length;t++){var r=this._sections[t];if(-1!==r.consumer.sources.indexOf(n.getArg(e,"source"))){var o=r.consumer.generatedPositionFor(e);if(o)return{line:o.line+(r.generatedOffset.generatedLine-1),column:o.column+(r.generatedOffset.generatedLine===o.line?r.generatedOffset.generatedColumn-1:0)}}}return{line:null,column:null}},f.prototype._parseMappings=function(e,t){this.__generatedMappings=[],this.__originalMappings=[];for(var r=0;r<this._sections.length;r++)for(var o=this._sections[r],a=o.consumer._generatedMappings,i=0;i<a.length;i++){var u=a[i],s=o.consumer._sources.at(u.source);null!==o.consumer.sourceRoot&&(s=n.join(o.consumer.sourceRoot,s)),this._sources.add(s),s=this._sources.indexOf(s);var c=o.consumer._names.at(u.name);this._names.add(c),c=this._names.indexOf(c);var f={source:s,generatedLine:u.generatedLine+(o.generatedOffset.generatedLine-1),generatedColumn:u.generatedColumn+(o.generatedOffset.generatedLine===u.generatedLine?o.generatedOffset.generatedColumn-1:0),originalLine:u.originalLine,originalColumn:u.originalColumn,name:c};this.__generatedMappings.push(f),"number"==typeof f.originalLine&&this.__originalMappings.push(f)}l(this.__generatedMappings,n.compareByGeneratedPositionsDeflated),l(this.__originalMappings,n.compareByOriginalPositions)}},433:(e,t,r)=>{var n=r(400),o=r(728),a=r(213).I,i=r(188).H;function l(e){e||(e={}),this._file=o.getArg(e,"file",null),this._sourceRoot=o.getArg(e,"sourceRoot",null),this._skipValidation=o.getArg(e,"skipValidation",!1),this._sources=new a,this._names=new a,this._mappings=new i,this._sourcesContents=null}l.prototype._version=3,l.fromSourceMap=function(e){var t=e.sourceRoot,r=new l({file:e.file,sourceRoot:t});return e.eachMapping((function(e){var n={generated:{line:e.generatedLine,column:e.generatedColumn}};null!=e.source&&(n.source=e.source,null!=t&&(n.source=o.relative(t,n.source)),n.original={line:e.originalLine,column:e.originalColumn},null!=e.name&&(n.name=e.name)),r.addMapping(n)})),e.sources.forEach((function(t){var n=e.sourceContentFor(t);null!=n&&r.setSourceContent(t,n)})),r},l.prototype.addMapping=function(e){var t=o.getArg(e,"generated"),r=o.getArg(e,"original",null),n=o.getArg(e,"source",null),a=o.getArg(e,"name",null);this._skipValidation||this._validateMapping(t,r,n,a),null!=n&&(n=String(n),this._sources.has(n)||this._sources.add(n)),null!=a&&(a=String(a),this._names.has(a)||this._names.add(a)),this._mappings.add({generatedLine:t.line,generatedColumn:t.column,originalLine:null!=r&&r.line,originalColumn:null!=r&&r.column,source:n,name:a})},l.prototype.setSourceContent=function(e,t){var r=e;null!=this._sourceRoot&&(r=o.relative(this._sourceRoot,r)),null!=t?(this._sourcesContents||(this._sourcesContents=Object.create(null)),this._sourcesContents[o.toSetString(r)]=t):this._sourcesContents&&(delete this._sourcesContents[o.toSetString(r)],0===Object.keys(this._sourcesContents).length&&(this._sourcesContents=null))},l.prototype.applySourceMap=function(e,t,r){var n=t;if(null==t){if(null==e.file)throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');n=e.file}var i=this._sourceRoot;null!=i&&(n=o.relative(i,n));var l=new a,u=new a;this._mappings.unsortedForEach((function(t){if(t.source===n&&null!=t.originalLine){var a=e.originalPositionFor({line:t.originalLine,column:t.originalColumn});null!=a.source&&(t.source=a.source,null!=r&&(t.source=o.join(r,t.source)),null!=i&&(t.source=o.relative(i,t.source)),t.originalLine=a.line,t.originalColumn=a.column,null!=a.name&&(t.name=a.name))}var s=t.source;null==s||l.has(s)||l.add(s);var c=t.name;null==c||u.has(c)||u.add(c)}),this),this._sources=l,this._names=u,e.sources.forEach((function(t){var n=e.sourceContentFor(t);null!=n&&(null!=r&&(t=o.join(r,t)),null!=i&&(t=o.relative(i,t)),this.setSourceContent(t,n))}),this)},l.prototype._validateMapping=function(e,t,r,n){if(t&&"number"!=typeof t.line&&"number"!=typeof t.column)throw new Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");if((!(e&&"line"in e&&"column"in e&&e.line>0&&e.column>=0)||t||r||n)&&!(e&&"line"in e&&"column"in e&&t&&"line"in t&&"column"in t&&e.line>0&&e.column>=0&&t.line>0&&t.column>=0&&r))throw new Error("Invalid mapping: "+JSON.stringify({generated:e,source:r,original:t,name:n}))},l.prototype._serializeMappings=function(){for(var e,t,r,a,i=0,l=1,u=0,s=0,c=0,f=0,d="",p=this._mappings.toArray(),h=0,g=p.length;h<g;h++){if(e="",(t=p[h]).generatedLine!==l)for(i=0;t.generatedLine!==l;)e+=";",l++;else if(h>0){if(!o.compareByGeneratedPositionsInflated(t,p[h-1]))continue;e+=","}e+=n.encode(t.generatedColumn-i),i=t.generatedColumn,null!=t.source&&(a=this._sources.indexOf(t.source),e+=n.encode(a-f),f=a,e+=n.encode(t.originalLine-1-s),s=t.originalLine-1,e+=n.encode(t.originalColumn-u),u=t.originalColumn,null!=t.name&&(r=this._names.indexOf(t.name),e+=n.encode(r-c),c=r)),d+=e}return d},l.prototype._generateSourcesContent=function(e,t){return e.map((function(e){if(!this._sourcesContents)return null;null!=t&&(e=o.relative(t,e));var r=o.toSetString(e);return Object.prototype.hasOwnProperty.call(this._sourcesContents,r)?this._sourcesContents[r]:null}),this)},l.prototype.toJSON=function(){var e={version:this._version,sources:this._sources.toArray(),names:this._names.toArray(),mappings:this._serializeMappings()};return null!=this._file&&(e.file=this._file),null!=this._sourceRoot&&(e.sourceRoot=this._sourceRoot),this._sourcesContents&&(e.sourcesContent=this._generateSourcesContent(e.sources,e.sourceRoot)),e},l.prototype.toString=function(){return JSON.stringify(this.toJSON())},t.h=l},85:(e,t,r)=>{var n=r(433).h,o=r(728),a=/(\r?\n)/,i="$$$isSourceNode$$$";function l(e,t,r,n,o){this.children=[],this.sourceContents={},this.line=null==e?null:e,this.column=null==t?null:t,this.source=null==r?null:r,this.name=null==o?null:o,this[i]=!0,null!=n&&this.add(n)}l.fromStringWithSourceMap=function(e,t,r){var n=new l,i=e.split(a),u=0,s=function(){return e()+(e()||"");function e(){return u<i.length?i[u++]:void 0}},c=1,f=0,d=null;return t.eachMapping((function(e){if(null!==d){if(!(c<e.generatedLine)){var t=(r=i[u]).substr(0,e.generatedColumn-f);return i[u]=r.substr(e.generatedColumn-f),f=e.generatedColumn,p(d,t),void(d=e)}p(d,s()),c++,f=0}for(;c<e.generatedLine;)n.add(s()),c++;if(f<e.generatedColumn){var r=i[u];n.add(r.substr(0,e.generatedColumn)),i[u]=r.substr(e.generatedColumn),f=e.generatedColumn}d=e}),this),u<i.length&&(d&&p(d,s()),n.add(i.splice(u).join(""))),t.sources.forEach((function(e){var a=t.sourceContentFor(e);null!=a&&(null!=r&&(e=o.join(r,e)),n.setSourceContent(e,a))})),n;function p(e,t){if(null===e||void 0===e.source)n.add(t);else{var a=r?o.join(r,e.source):e.source;n.add(new l(e.originalLine,e.originalColumn,a,t,e.name))}}},l.prototype.add=function(e){if(Array.isArray(e))e.forEach((function(e){this.add(e)}),this);else{if(!e[i]&&"string"!=typeof e)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+e);e&&this.children.push(e)}return this},l.prototype.prepend=function(e){if(Array.isArray(e))for(var t=e.length-1;t>=0;t--)this.prepend(e[t]);else{if(!e[i]&&"string"!=typeof e)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+e);this.children.unshift(e)}return this},l.prototype.walk=function(e){for(var t,r=0,n=this.children.length;r<n;r++)(t=this.children[r])[i]?t.walk(e):""!==t&&e(t,{source:this.source,line:this.line,column:this.column,name:this.name})},l.prototype.join=function(e){var t,r,n=this.children.length;if(n>0){for(t=[],r=0;r<n-1;r++)t.push(this.children[r]),t.push(e);t.push(this.children[r]),this.children=t}return this},l.prototype.replaceRight=function(e,t){var r=this.children[this.children.length-1];return r[i]?r.replaceRight(e,t):"string"==typeof r?this.children[this.children.length-1]=r.replace(e,t):this.children.push("".replace(e,t)),this},l.prototype.setSourceContent=function(e,t){this.sourceContents[o.toSetString(e)]=t},l.prototype.walkSourceContents=function(e){for(var t=0,r=this.children.length;t<r;t++)this.children[t][i]&&this.children[t].walkSourceContents(e);var n=Object.keys(this.sourceContents);for(t=0,r=n.length;t<r;t++)e(o.fromSetString(n[t]),this.sourceContents[n[t]])},l.prototype.toString=function(){var e="";return this.walk((function(t){e+=t})),e},l.prototype.toStringWithSourceMap=function(e){var t={code:"",line:1,column:0},r=new n(e),o=!1,a=null,i=null,l=null,u=null;return this.walk((function(e,n){t.code+=e,null!==n.source&&null!==n.line&&null!==n.column?(a===n.source&&i===n.line&&l===n.column&&u===n.name||r.addMapping({source:n.source,original:{line:n.line,column:n.column},generated:{line:t.line,column:t.column},name:n.name}),a=n.source,i=n.line,l=n.column,u=n.name,o=!0):o&&(r.addMapping({generated:{line:t.line,column:t.column}}),a=null,o=!1);for(var s=0,c=e.length;s<c;s++)10===e.charCodeAt(s)?(t.line++,t.column=0,s+1===c?(a=null,o=!1):o&&r.addMapping({source:n.source,original:{line:n.line,column:n.column},generated:{line:t.line,column:t.column},name:n.name})):t.column++})),this.walkSourceContents((function(e,t){r.setSourceContent(e,t)})),{code:t.code,map:r}}},728:(e,t)=>{t.getArg=function(e,t,r){if(t in e)return e[t];if(3===arguments.length)return r;throw new Error('"'+t+'" is a required argument.')};var r=/^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/,n=/^data:.+\,.+$/;function o(e){var t=e.match(r);return t?{scheme:t[1],auth:t[2],host:t[3],port:t[4],path:t[5]}:null}function a(e){var t="";return e.scheme&&(t+=e.scheme+":"),t+="//",e.auth&&(t+=e.auth+"@"),e.host&&(t+=e.host),e.port&&(t+=":"+e.port),e.path&&(t+=e.path),t}function i(e){var r=e,n=o(e);if(n){if(!n.path)return e;r=n.path}for(var i,l=t.isAbsolute(r),u=r.split(/\/+/),s=0,c=u.length-1;c>=0;c--)"."===(i=u[c])?u.splice(c,1):".."===i?s++:s>0&&(""===i?(u.splice(c+1,s),s=0):(u.splice(c,2),s--));return""===(r=u.join("/"))&&(r=l?"/":"."),n?(n.path=r,a(n)):r}t.urlParse=o,t.urlGenerate=a,t.normalize=i,t.join=function(e,t){""===e&&(e="."),""===t&&(t=".");var r=o(t),l=o(e);if(l&&(e=l.path||"/"),r&&!r.scheme)return l&&(r.scheme=l.scheme),a(r);if(r||t.match(n))return t;if(l&&!l.host&&!l.path)return l.host=t,a(l);var u="/"===t.charAt(0)?t:i(e.replace(/\/+$/,"")+"/"+t);return l?(l.path=u,a(l)):u},t.isAbsolute=function(e){return"/"===e.charAt(0)||!!e.match(r)},t.relative=function(e,t){""===e&&(e="."),e=e.replace(/\/$/,"");for(var r=0;0!==t.indexOf(e+"/");){var n=e.lastIndexOf("/");if(n<0)return t;if((e=e.slice(0,n)).match(/^([^\/]+:\/)?\/*$/))return t;++r}return Array(r+1).join("../")+t.substr(e.length+1)};var l=!("__proto__"in Object.create(null));function u(e){return e}function s(e){if(!e)return!1;var t=e.length;if(t<9)return!1;if(95!==e.charCodeAt(t-1)||95!==e.charCodeAt(t-2)||111!==e.charCodeAt(t-3)||116!==e.charCodeAt(t-4)||111!==e.charCodeAt(t-5)||114!==e.charCodeAt(t-6)||112!==e.charCodeAt(t-7)||95!==e.charCodeAt(t-8)||95!==e.charCodeAt(t-9))return!1;for(var r=t-10;r>=0;r--)if(36!==e.charCodeAt(r))return!1;return!0}function c(e,t){return e===t?0:e>t?1:-1}t.toSetString=l?u:function(e){return s(e)?"$"+e:e},t.fromSetString=l?u:function(e){return s(e)?e.slice(1):e},t.compareByOriginalPositions=function(e,t,r){var n=e.source-t.source;return 0!==n||0!=(n=e.originalLine-t.originalLine)||0!=(n=e.originalColumn-t.originalColumn)||r||0!=(n=e.generatedColumn-t.generatedColumn)||0!=(n=e.generatedLine-t.generatedLine)?n:e.name-t.name},t.compareByGeneratedPositionsDeflated=function(e,t,r){var n=e.generatedLine-t.generatedLine;return 0!==n||0!=(n=e.generatedColumn-t.generatedColumn)||r||0!=(n=e.source-t.source)||0!=(n=e.originalLine-t.originalLine)||0!=(n=e.originalColumn-t.originalColumn)?n:e.name-t.name},t.compareByGeneratedPositionsInflated=function(e,t){var r=e.generatedLine-t.generatedLine;return 0!==r||0!=(r=e.generatedColumn-t.generatedColumn)||0!==(r=c(e.source,t.source))||0!=(r=e.originalLine-t.originalLine)||0!=(r=e.originalColumn-t.originalColumn)?r:c(e.name,t.name)}},125:(e,t,r)=>{r(433).h,t.SourceMapConsumer=r(771).SourceMapConsumer,r(85)},538:()=>{}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var a=t[n]={exports:{}};return e[n](a,a.exports,r),a.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{"use strict";r.r(n),r.d(n,{dismissBuildError:()=>he,dismissRuntimeErrors:()=>ve,reportBuildError:()=>de,reportRuntimeError:()=>pe,setEditorHandler:()=>fe,startReportingRuntimeErrors:()=>ge,stopReportingRuntimeErrors:()=>ye});var e=null;function t(e,t){if(t.error){var r=t.error;r instanceof Error?e(r):e(new Error(r))}}function o(r,n){null===e&&(e=t.bind(void 0,n),r.addEventListener("error",e))}function a(t){null!==e&&(t.removeEventListener("error",e),e=null)}var i=null;function l(e,t){if(null==t||null==t.reason)return e(new Error("Unknown"));var r=t.reason;return r instanceof Error?e(r):e(new Error(r))}function u(e,t){null===i&&(i=l.bind(void 0,t),e.addEventListener("unhandledrejection",i))}function s(e){null!==i&&(e.removeEventListener("unhandledrejection",i),i=null)}var c=!1,f=10;function d(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:50;if(!c)try{f=Error.stackTraceLimit,Error.stackTraceLimit=e,c=!0}catch(e){}}function p(){if(c)try{Error.stackTraceLimit=f,c=!1}catch(e){}}var h=[],g=function(){"undefined"!=typeof console&&(console.reactStack=function(e){return h.push(e)},console.reactStackEnd=function(e){return h.pop()})},m=function(){"undefined"!=typeof console&&(console.reactStack=void 0,console.reactStackEnd=void 0)},v=function(e,t){if("undefined"!=typeof console){var r=console[e];"function"==typeof r&&(console[e]=function(){try{var e=arguments[0];"string"==typeof e&&h.length>0&&t(e,h[h.length-1])}catch(e){setTimeout((function(){throw e}))}return r.apply(this,arguments)})}};function y(e,t){for(var r,n,o=function(e){return e.split("\n").filter((function(e){return!e.match(/^\s*in/)})).join("\n")}(e),a="",i=0;i<t.length;++i){var l=t[i],u=l.fileName,s=l.lineNumber;if(null!=u&&null!=s&&!(u===r&&"number"==typeof s&&"number"==typeof n&&Math.abs(s-n)<3)){r=u,n=s;var c=t[i].name;a+="in ".concat(c=c||"(anonymous function)"," (at ").concat(u,":").concat(s,")\n")}}return{message:o,stack:a}}function b(e,t){return b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},b(e,t)}function w(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function x(e,t,r){return x=w()?Reflect.construct:function(e,t,r){var n=[null];n.push.apply(n,t);var o=new(Function.bind.apply(e,n));return r&&b(o,r.prototype),o},x.apply(null,arguments)}function E(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function k(e){return function(e){if(Array.isArray(e))return E(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return E(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?E(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function S(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _(e,t,r){return t&&S(e.prototype,t),r&&S(e,r),e}function C(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var O=function e(t,r){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];C(this,e),this.lineNumber=t,this.content=r,this.highlight=n},T=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,s=arguments.length>8&&void 0!==arguments[8]?arguments[8]:null,c=arguments.length>9&&void 0!==arguments[9]?arguments[9]:null;C(this,e),t&&0===t.indexOf("Object.")&&(t=t.slice("Object.".length)),"friendlySyntaxErrorLabel"!==t&&"exports.__esModule"!==t&&"<anonymous>"!==t&&t||(t=null),this.functionName=t,this.fileName=r,this.lineNumber=n,this.columnNumber=o,this._originalFunctionName=i,this._originalFileName=l,this._originalLineNumber=u,this._originalColumnNumber=s,this._scriptCode=a,this._originalScriptCode=c}return _(e,[{key:"getFunctionName",value:function(){return this.functionName||"(anonymous function)"}},{key:"getSource",value:function(){var e="";return null!=this.fileName&&(e+=this.fileName+":"),null!=this.lineNumber&&(e+=this.lineNumber+":"),null!=this.columnNumber&&(e+=this.columnNumber+":"),e.slice(0,-1)}},{key:"toString",value:function(){var e=this.getFunctionName(),t=this.getSource();return"".concat(e).concat(t?" (".concat(t,")"):"")}}]),e}();const R=T;var L=/\(?(.+?)(?::(\d+))?(?::(\d+))?\)?$/;function A(e){return L.exec(e).slice(1).map((function(e){var t=Number(e);return isNaN(t)?e:t}))}var P=/^\s*(at|in)\s.+(:\d+)/,N=/(^|@)\S+:\d+|.+line\s+\d+\s+>\s+(eval|Function).+/;function q(e){return e.filter((function(e){return P.test(e)||N.test(e)})).map((function(e){if(N.test(e)){var t=!1;/ > (eval|Function)/.test(e)&&(e=e.replace(/ line (\d+)(?: > eval line \d+)* > (eval|Function):\d+:\d+/g,":$1"),t=!0);var r=e.split(/[@]/g),n=r.pop();return x(R,[r.join("@")||(t?"eval":null)].concat(k(A(n))))}-1!==e.indexOf("(eval ")&&(e=e.replace(/(\(eval at [^()]*)|(\),.*$)/g,"")),-1!==e.indexOf("(at ")&&(e=e.replace(/\(at /,"("));var o=e.trim().split(/\s+/g).slice(1),a=o.pop();return x(R,[o.join(" ")||null].concat(k(A(a))))}))}function M(e){if(null==e)throw new Error("You cannot pass a null object.");if("string"==typeof e)return q(e.split("\n"));if(Array.isArray(e))return q(e);if("string"==typeof e.stack)return q(e.stack.split("\n"));throw new Error("The error you provided does not contain a stack trace.")}function D(e,t,r,n,o,a,i){try{var l=e[a](i),u=l.value}catch(e){return void r(e)}l.done?t(u):Promise.resolve(u).then(n,o)}function I(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function i(e){D(a,n,o,i,l,"next",e)}function l(e){D(a,n,o,i,l,"throw",e)}i(void 0)}))}}var j=r(162),F=r.n(j),z=r(125),U=function(){function e(t){C(this,e),this.__source_map=t}return _(e,[{key:"getOriginalPosition",value:function(e,t){var r=this.__source_map.originalPositionFor({line:e,column:t});return{line:r.line,column:r.column,source:r.source}}},{key:"getGeneratedPosition",value:function(e,t,r){var n=this.__source_map.generatedPositionFor({source:e,line:t,column:r});return{line:n.line,column:n.column}}},{key:"getSource",value:function(e){return this.__source_map.sourceContentFor(e)}},{key:"getSources",value:function(){return this.__source_map.sources}}]),e}();function B(e,t){for(var r=/\/\/[#@] ?sourceMappingURL=([^\s'"]+)\s*$/gm,n=null;;){var o=r.exec(t);if(null==o)break;n=o}return n&&n[1]?Promise.resolve(n[1].toString()):Promise.reject("Cannot find a source map directive for ".concat(e,"."))}function H(e,t){return V.apply(this,arguments)}function V(){return(V=I(F().mark((function e(t,r){var n,o,a,i,l,u;return F().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,B(t,r);case 2:if(0!==(n=e.sent).indexOf("data:")){e.next=14;break}if(o=/^data:application\/json;([\w=:"-]+;)*base64,/,a=n.match(o)){e.next=8;break}throw new Error("Sorry, non-base64 inline source-map encoding is not supported.");case 8:return n=n.substring(a[0].length),n=window.atob(n),n=JSON.parse(n),e.abrupt("return",new U(new z.SourceMapConsumer(n)));case 14:return i=t.lastIndexOf("/"),l=t.substring(0,i+1)+n,e.next=18,fetch(l).then((function(e){return e.json()}));case 18:return u=e.sent,e.abrupt("return",new U(new z.SourceMapConsumer(u)));case 20:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function G(e,t,r){"string"==typeof r&&(r=r.split("\n"));for(var n=[],o=Math.max(0,e-1-t);o<=Math.min(r.length-1,e-1+t);++o)n.push(new O(o+1,r[o],o===e-1));return n}var Y=r(268);function W(e){return $.apply(this,arguments)}function $(){return $=I(F().mark((function e(t){var r,n,o,a=arguments;return F().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=a.length>1&&void 0!==a[1]?a[1]:3,n={},o=[],t.forEach((function(e){var t=e.fileName;null!=t&&-1===o.indexOf(t)&&o.push(t)})),e.next=6,(0,Y.Wo)(o.map(function(){var e=I(F().mark((function e(t){var r,o,a;return F().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=0===t.indexOf("webpack-internal:")?"/__get-internal-source?fileName=".concat(encodeURIComponent(t)):t,e.next=3,fetch(r).then((function(e){return e.text()}));case 3:return o=e.sent,e.next=6,H(t,o);case 6:a=e.sent,n[t]={fileSource:o,map:a};case 8:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()));case 6:return e.abrupt("return",t.map((function(e){var t=e.functionName,o=e.fileName,a=e.lineNumber,i=e.columnNumber,l=n[o]||{},u=l.map,s=l.fileSource;if(null==u||null==a)return e;var c=u.getOriginalPosition(a,i),f=c.source,d=c.line,p=c.column,h=null==f?[]:u.getSource(f);return new R(t,o,a,i,G(a,r,s),t,f,d,p,G(d,r,h))})));case 7:case"end":return e.stop()}}),e)}))),$.apply(this,arguments)}var Q=r(538),J=r.n(Q);function K(e,t){var r=-1,n=-1;do{++r,n=t.indexOf(e,n+1)}while(-1!==n);return r}function X(e,t){return Z.apply(this,arguments)}function Z(){return Z=I(F().mark((function e(t,r){var n,o,a,i,l=arguments;return F().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=l.length>2&&void 0!==l[2]?l[2]:3,o="object"==typeof t?t.contents:null,a="object"==typeof t?t.uri:t,null!=o){e.next=7;break}return e.next=6,fetch(a).then((function(e){return e.text()}));case 6:o=e.sent;case 7:return e.next=9,H(a,o);case 9:return i=e.sent,e.abrupt("return",r.map((function(e){var t=e.functionName,r=e.lineNumber,l=e.columnNumber;if(null!=e._originalLineNumber)return e;var u=e.fileName;if(u&&(u=J().normalize(u.replace(/[\\]+/g,"/"))),null==u)return e;var s=u,c=i.getSources().map((function(e){return e.replace(/[\\]+/g,"/")})).filter((function(e){var t=(e=J().normalize(e)).lastIndexOf(s);return-1!==t&&t===e.length-s.length})).map((function(e){return{token:e,seps:K(J().sep,J().normalize(e)),penalties:K("node_modules",e)+K("~",e)}})).sort((function(e,t){var r=Math.sign(e.seps-t.seps);return 0!==r?r:Math.sign(e.penalties-t.penalties)}));if(c.length<1||null==r)return new R(null,null,null,null,null,t,s,r,l,null);var f=c[0].token,d=i.getGeneratedPosition(f,r,l),p=d.line,h=d.column,g=i.getSource(f);return new R(t,a,p,h||null,G(p,n,o||[]),t,s,r,l,G(r,n,g))})));case 11:case"end":return e.stop()}}),e)}))),Z.apply(this,arguments)}const ee=function(e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:3,r=M(e);return(e.__unmap_source?X(e.__unmap_source,r,t):W(r,t)).then((function(e){return 0===e.map((function(e){return e._originalFileName})).filter((function(e){return null!=e&&-1===e.indexOf("node_modules")})).length?null:e.filter((function(e){var t=e.functionName;return null==t||-1===t.indexOf("__stack_frame_overlay_proxy_console__")}))}))};var te=function(e){return function(t){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];ee(t,r,3).then((function(n){null!=n&&e({error:t,unhandledRejection:r,contextSize:3,stackFrames:n})})).catch((function(e){console.log("Could not get the stack frames of error:",e)}))}},re={position:"fixed",top:"0",left:"0",width:"100%",height:"100%",border:"none","z-index":2147483647},ne=null,oe=!1,ae=!1,ie=null,le=null,ue=[],se=null,ce=null;function fe(e){ie=e,ne&&be()}function de(e){le=e,be()}function pe(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};se=t,te(me(t))(e)}function he(){le=null,be()}function ge(e){if(null!==ce)throw new Error("Already listening");e.launchEditorEndpoint&&console.warn("Warning: `startReportingRuntimeErrors` doesn’t accept `launchEditorEndpoint` argument anymore. Use `listenToOpenInEditor` instead with your own implementation to open errors in editor "),se=e,ce=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"/static/js/bundle.js",r=te(e);return o(window,(function(e){return r(e,!1)})),u(window,(function(e){return r(e,!0)})),d(),g(),v("error",(function(e,n){var o=y(e,n);r({message:o.message,stack:o.stack,__unmap_source:t},!1)})),function(){p(),s(window),a(window),m()}}(me(e),e.filename)}var me=function(e){return function(t){try{"function"==typeof e.onError&&e.onError.call(null)}finally{if(ue.some((function(e){return e.error===t.error})))return;ue=ue.concat([t]),be()}}};function ve(){ue=[],be()}function ye(){if(null===ce)throw new Error("Not currently listening");se=null;try{ce()}finally{ce=null}}function be(){if(!oe)if(ae)we();else{oe=!0;var e=window.document.createElement("iframe");!function(e,t){for(var r in e.setAttribute("style",""),t)t.hasOwnProperty(r)&&(e.style[r]=t[r])}(e,re),e.onload=function(){var t=e.contentDocument;if(null!=t&&null!=t.body){ne=e;var r=e.contentWindow.document.createElement("script");r.type="text/javascript",r.innerHTML='/*! For license information please see iframe-bundle.js.LICENSE.txt */\n(()=>{var e={5270:e=>{e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n},e.exports.default=e.exports,e.exports.__esModule=!0},3041:(e,t,r)=>{var n=r(6487);e.exports=function(e,t){var r="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=n(e))||t&&e&&"number"===typeof e.length){r&&(e=r);var o=0,a=function(){};return{s:a,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,l=!0,u=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return l=e.done,e},e:function(e){u=!0,i=e},f:function(){try{l||null==r.return||r.return()}finally{if(u)throw i}}}},e.exports.default=e.exports,e.exports.__esModule=!0},6487:(e,t,r)=>{var n=r(5270);e.exports=function(e,t){if(e){if("string"===typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}},e.exports.default=e.exports,e.exports.__esModule=!0},7162:(e,t,r)=>{e.exports=r(2205)},8641:(e,t,r)=>{"use strict";t.rf=u;var n=r(8048),o=!1;function a(e){return{gutter:e.grey,marker:e.red.bold,message:e.red.bold}}var i=/\\r\\n|[\\n\\r\\u2028\\u2029]/;function l(e,t,r){var n=Object.assign({column:0,line:-1},e.start),o=Object.assign({},n,e.end),a=r||{},i=a.linesAbove,l=void 0===i?2:i,u=a.linesBelow,s=void 0===u?3:u,c=n.line,f=n.column,d=o.line,p=o.column,h=Math.max(c-(l+1),0),g=Math.min(t.length,d+s);-1===c&&(h=0),-1===d&&(g=t.length);var m=d-c,v={};if(m)for(var y=0;y<=m;y++){var b=y+c;if(f)if(0===y){var w=t[b-1].length;v[b]=[f,w-f+1]}else if(y===m)v[b]=[0,p];else{var x=t[b-y].length;v[b]=[0,x]}else v[b]=!0}else v[c]=f===p?!f||[f,0]:[f,p-f];return{start:h,end:g,markerLines:v}}function u(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=(r.highlightCode||r.forceColor)&&(0,n.shouldHighlight)(r),u=(0,n.getChalk)(r),s=a(u),c=function(e,t){return o?e(t):t},f=e.split(i),d=l(t,f,r),p=d.start,h=d.end,g=d.markerLines,m=t.start&&"number"===typeof t.start.column,v=String(h).length,y=o?(0,n.default)(e,r):e,b=y.split(i,h).slice(p,h).map((function(e,t){var n=p+1+t,o=" ".concat(n).slice(-v),a=" ".concat(o," |"),i=g[n],l=!g[n+1];if(i){var u="";if(Array.isArray(i)){var f=e.slice(0,Math.max(i[0]-1,0)).replace(/[^\\t]/g," "),d=i[1]||1;u=["\\n ",c(s.gutter,a.replace(/\\d/g," "))," ",f,c(s.marker,"^").repeat(d)].join(""),l&&r.message&&(u+=" "+c(s.message,r.message))}return[c(s.marker,">"),c(s.gutter,a),e.length>0?" ".concat(e):"",u].join("")}return" ".concat(c(s.gutter,a)).concat(e.length>0?" ".concat(e):"")})).join("\\n");return r.message&&!m&&(b="".concat(" ".repeat(v+1)).concat(r.message,"\\n").concat(b)),o?u.reset(b):b}},1714:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isIdentifierStart=s,t.isIdentifierChar=c,t.isIdentifierName=function(e){for(var t=!0,r=0;r<e.length;r++){var n=e.charCodeAt(r);if(55296===(64512&n)&&r+1<e.length){var o=e.charCodeAt(++r);56320===(64512&o)&&(n=65536+((1023&n)<<10)+(1023&o))}if(t){if(t=!1,!s(n))return!1}else if(!c(n))return!1}return!t};var r="ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࡰ-ࢇࢉ-ࢎࢠ-ࣉऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౝౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೝೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜑᜟ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭌᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꟊꟐꟑꟓꟕ-ꟙꟲ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",n="‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࢘-࢟࣊-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄ఼ా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜕ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠏-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿ-ᫎᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿",o=new RegExp("["+r+"]"),a=new RegExp("["+r+n+"]");r=n=null;var i=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2637,96,16,1070,4050,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,46,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,482,44,11,6,17,0,322,29,19,43,1269,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4152,8,221,3,5761,15,7472,3104,541,1507,4938],l=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,357,0,62,13,1495,6,110,6,6,9,4759,9,787719,239];function u(e,t){for(var r=65536,n=0,o=t.length;n<o;n+=2){if((r+=t[n])>e)return!1;if((r+=t[n+1])>=e)return!0}return!1}function s(e){return e<65?36===e:e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&o.test(String.fromCharCode(e)):u(e,i)))}function c(e){return e<48?36===e:e<58||!(e<65)&&(e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&a.test(String.fromCharCode(e)):u(e,i)||u(e,l))))}},3012:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"isIdentifierName",{enumerable:!0,get:function(){return n.isIdentifierName}}),Object.defineProperty(t,"isIdentifierChar",{enumerable:!0,get:function(){return n.isIdentifierChar}}),Object.defineProperty(t,"isIdentifierStart",{enumerable:!0,get:function(){return n.isIdentifierStart}}),Object.defineProperty(t,"isReservedWord",{enumerable:!0,get:function(){return o.isReservedWord}}),Object.defineProperty(t,"isStrictBindOnlyReservedWord",{enumerable:!0,get:function(){return o.isStrictBindOnlyReservedWord}}),Object.defineProperty(t,"isStrictBindReservedWord",{enumerable:!0,get:function(){return o.isStrictBindReservedWord}}),Object.defineProperty(t,"isStrictReservedWord",{enumerable:!0,get:function(){return o.isStrictReservedWord}}),Object.defineProperty(t,"isKeyword",{enumerable:!0,get:function(){return o.isKeyword}});var n=r(1714),o=r(2562)},2562:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isReservedWord=l,t.isStrictReservedWord=u,t.isStrictBindOnlyReservedWord=s,t.isStrictBindReservedWord=function(e,t){return u(e,t)||s(e)},t.isKeyword=function(e){return o.has(e)};var r=["implements","interface","let","package","private","protected","public","static","yield"],n=["eval","arguments"],o=new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"]),a=new Set(r),i=new Set(n);function l(e,t){return t&&"await"===e||"enum"===e}function u(e,t){return l(e,t)||a.has(e)}function s(e){return i.has(e)}},8048:(e,t,r)=>{"use strict";var n=r(3041).default,o=r(7162);Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(m(t)){var r=v(t),n=s(r);return g(n,e)}return e},t.getChalk=v,t.shouldHighlight=m;var a=r(690),i=r(3012),l=r(4043),u=new Set(["as","async","from","get","of","set"]);function s(e){return{keyword:e.cyan,capitalized:e.yellow,jsxIdentifier:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,regex:e.magenta,comment:e.grey,invalid:e.white.bgRed.bold}}var c,f=/\\r\\n|[\\n\\r\\u2028\\u2029]/,d=/^[()[\\]{}]$/,p=/^[a-z][\\w-]*$/i,h=function(e,t,r){if("name"===e.type){if((0,i.isKeyword)(e.value)||(0,i.isStrictReservedWord)(e.value,!0)||u.has(e.value))return"keyword";if(p.test(e.value)&&("<"===r[t-1]||"</"==r.substr(t-2,2)))return"jsxIdentifier";if(e.value[0]!==e.value[0].toLowerCase())return"capitalized"}return"punctuator"===e.type&&d.test(e.value)?"bracket":"invalid"!==e.type||"@"!==e.value&&"#"!==e.value?e.type:"punctuator"};function g(e,t){var r,o="",a=n(c(t));try{var i=function(){var t=r.value,n=t.type,a=t.value,i=e[n];o+=i?a.split(f).map((function(e){return i(e)})).join("\\n"):a};for(a.s();!(r=a.n()).done;)i()}catch(e){a.e(e)}finally{a.f()}return o}function m(e){return!!l.supportsColor||e.forceColor}function v(e){return e.forceColor?new l.constructor({enabled:!0,level:1}):l}c=o.mark((function e(t){var r,n;return o.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(r=a.default.exec(t))){e.next=6;break}return n=a.matchToToken(r),e.next=4,{type:h(n,r.index,t),value:n.value};case 4:e.next=0;break;case 6:case"end":return e.stop()}}),e)}))},2611:(e,t,r)=>{"use strict";e=r.nmd(e);var n=r(1444),o=function(e,t){return function(){var r=e.apply(n,arguments);return"[".concat(r+t,"m")}},a=function(e,t){return function(){var r=e.apply(n,arguments);return"[".concat(38+t,";5;").concat(r,"m")}},i=function(e,t){return function(){var r=e.apply(n,arguments);return"[".concat(38+t,";2;").concat(r[0],";").concat(r[1],";").concat(r[2],"m")}};Object.defineProperty(e,"exports",{enumerable:!0,get:function(){var e=new Map,t={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};t.color.grey=t.color.gray;for(var r=0,l=Object.keys(t);r<l.length;r++){for(var u=l[r],s=t[u],c=0,f=Object.keys(s);c<f.length;c++){var d=f[c],p=s[d];t[d]={open:"[".concat(p[0],"m"),close:"[".concat(p[1],"m")},s[d]=t[d],e.set(p[0],p[1])}Object.defineProperty(t,u,{value:s,enumerable:!1}),Object.defineProperty(t,"codes",{value:e,enumerable:!1})}var h=function(e){return e},g=function(e,t,r){return[e,t,r]};t.color.close="[39m",t.bgColor.close="[49m",t.color.ansi={ansi:o(h,0)},t.color.ansi256={ansi256:a(h,0)},t.color.ansi16m={rgb:i(g,0)},t.bgColor.ansi={ansi:o(h,10)},t.bgColor.ansi256={ansi256:a(h,10)},t.bgColor.ansi16m={rgb:i(g,10)};for(var m=0,v=Object.keys(n);m<v.length;m++){var y=v[m];if("object"===typeof n[y]){var b=n[y];"ansi16"===y&&(y="ansi"),"ansi16"in b&&(t.color.ansi[y]=o(b.ansi16,0),t.bgColor.ansi[y]=o(b.ansi16,10)),"ansi256"in b&&(t.color.ansi256[y]=a(b.ansi256,0),t.bgColor.ansi256[y]=a(b.ansi256,10)),"rgb"in b&&(t.color.ansi16m[y]=i(b.rgb,0),t.bgColor.ansi16m[y]=i(b.rgb,10))}}return t}})},4043:(e,t,r)=>{"use strict";var n=r(3041).default,o=r(2865),a=r(2611),i=r(5215).stdout,l=r(7093),u="win32"===process.platform&&!({NODE_ENV:"production"}.TERM||"").toLowerCase().startsWith("xterm"),s=["ansi","ansi","ansi256","ansi16m"],c=new Set(["gray"]),f=Object.create(null);function d(e,t){t=t||{};var r=i?i.level:0;e.level=void 0===t.level?r:t.level,e.enabled="enabled"in t?t.enabled:e.level>0}function p(e){if(!this||!(this instanceof p)||this.template){var t={};return d(t,e),t.template=function(){var e=[].slice.call(arguments);return _.apply(null,[t.template].concat(e))},Object.setPrototypeOf(t,p.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=p,t.template}d(this,e)}u&&(a.blue.open="[94m");for(var h=function(){var e=m[g];a[e].closeRe=new RegExp(o(a[e].close),"g"),f[e]={get:function(){var t=a[e];return S.call(this,this._styles?this._styles.concat(t):[t],this._empty,e)}}},g=0,m=Object.keys(a);g<m.length;g++)h();f.visible={get:function(){return S.call(this,this._styles||[],!0,"visible")}},a.color.closeRe=new RegExp(o(a.color.close),"g");for(var v=function(){var e=b[y];if(c.has(e))return"continue";f[e]={get:function(){var t=this.level;return function(){var r=a.color[s[t]][e].apply(null,arguments),n={open:r,close:a.color.close,closeRe:a.color.closeRe};return S.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}}},y=0,b=Object.keys(a.color.ansi);y<b.length;y++)v();a.bgColor.closeRe=new RegExp(o(a.bgColor.close),"g");for(var w=function(){var e=k[x];if(c.has(e))return"continue";var t="bg"+e[0].toUpperCase()+e.slice(1);f[t]={get:function(){var t=this.level;return function(){var r=a.bgColor[s[t]][e].apply(null,arguments),n={open:r,close:a.bgColor.close,closeRe:a.bgColor.closeRe};return S.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}}},x=0,k=Object.keys(a.bgColor.ansi);x<k.length;x++)w();var E=Object.defineProperties((function(){}),f);function S(e,t,r){var n=function e(){return T.apply(e,arguments)};n._styles=e,n._empty=t;var o=this;return Object.defineProperty(n,"level",{enumerable:!0,get:function(){return o.level},set:function(e){o.level=e}}),Object.defineProperty(n,"enabled",{enumerable:!0,get:function(){return o.enabled},set:function(e){o.enabled=e}}),n.hasGrey=this.hasGrey||"gray"===r||"grey"===r,n.__proto__=E,n}function T(){var e=arguments,t=e.length,r=String(arguments[0]);if(0===t)return"";if(t>1)for(var o=1;o<t;o++)r+=" "+e[o];if(!this.enabled||this.level<=0||!r)return this._empty?"":r;var i=a.dim.open;u&&this.hasGrey&&(a.dim.open="");var l,s=n(this._styles.slice().reverse());try{for(s.s();!(l=s.n()).done;){var c=l.value;r=(r=c.open+r.replace(c.closeRe,c.open)+c.close).replace(/\\r?\\n/g,"".concat(c.close,"$&").concat(c.open))}}catch(e){s.e(e)}finally{s.f()}return a.dim.open=i,r}function _(e,t){if(!Array.isArray(t))return[].slice.call(arguments,1).join(" ");for(var r=[].slice.call(arguments,2),n=[t.raw[0]],o=1;o<t.length;o++)n.push(String(r[o-1]).replace(/[{}\\\\]/g,"\\\\$&")),n.push(String(t.raw[o]));return l(e,n.join(""))}Object.defineProperties(p.prototype,f),e.exports=p(),e.exports.supportsColor=i,e.exports.default=e.exports},7093:(e,t,r)=>{"use strict";var n=r(3041).default,o=/(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi,a=/(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g,i=/^([\'"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/,l=/\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi,u=new Map([["n","\\n"],["r","\\r"],["t","\\t"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e",""],["a",""]]);function s(e){return"u"===e[0]&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):u.get(e)||e}function c(e,t){var r,o,a=[],u=t.trim().split(/\\s*,\\s*/g),c=n(u);try{for(c.s();!(o=c.n()).done;){var f=o.value;if(isNaN(f)){if(!(r=f.match(i)))throw new Error("Invalid Chalk template style argument: ".concat(f," (in style \'").concat(e,"\')"));a.push(r[2].replace(l,(function(e,t,r){return t?s(t):r})))}else a.push(Number(f))}}catch(e){c.e(e)}finally{c.f()}return a}function f(e){a.lastIndex=0;for(var t,r=[];null!==(t=a.exec(e));){var n=t[1];if(t[2]){var o=c(n,t[2]);r.push([n].concat(o))}else r.push([n])}return r}function d(e,t){var r,o={},a=n(t);try{for(a.s();!(r=a.n()).done;){var i,l=r.value,u=n(l.styles);try{for(u.s();!(i=u.n()).done;){var s=i.value;o[s[0]]=l.inverse?null:s.slice(1)}}catch(e){u.e(e)}finally{u.f()}}}catch(e){a.e(e)}finally{a.f()}for(var c=e,f=0,d=Object.keys(o);f<d.length;f++){var p=d[f];if(Array.isArray(o[p])){if(!(p in c))throw new Error("Unknown Chalk style: ".concat(p));c=o[p].length>0?c[p].apply(c,o[p]):c[p]}}return c}e.exports=function(e,t){var r=[],n=[],a=[];if(t.replace(o,(function(t,o,i,l,u,c){if(o)a.push(s(o));else if(l){var p=a.join("");a=[],n.push(0===r.length?p:d(e,r)(p)),r.push({inverse:i,styles:f(l)})}else if(u){if(0===r.length)throw new Error("Found extraneous } in Chalk template literal");n.push(d(e,r)(a.join(""))),a=[],r.pop()}else a.push(c)})),n.push(a.join("")),r.length>0){var i="Chalk template literal is missing ".concat(r.length," closing bracket").concat(1===r.length?"":"s"," (`}`)");throw new Error(i)}return n.join("")}},4601:(e,t,r)=>{var n=r(509),o={};for(var a in n)n.hasOwnProperty(a)&&(o[n[a]]=a);var i=e.exports={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(var l in i)if(i.hasOwnProperty(l)){if(!("channels"in i[l]))throw new Error("missing channels property: "+l);if(!("labels"in i[l]))throw new Error("missing channel labels property: "+l);if(i[l].labels.length!==i[l].channels)throw new Error("channel and label counts mismatch: "+l);var u=i[l].channels,s=i[l].labels;delete i[l].channels,delete i[l].labels,Object.defineProperty(i[l],"channels",{value:u}),Object.defineProperty(i[l],"labels",{value:s})}i.rgb.hsl=function(e){var t,r,n=e[0]/255,o=e[1]/255,a=e[2]/255,i=Math.min(n,o,a),l=Math.max(n,o,a),u=l-i;return l===i?t=0:n===l?t=(o-a)/u:o===l?t=2+(a-n)/u:a===l&&(t=4+(n-o)/u),(t=Math.min(60*t,360))<0&&(t+=360),r=(i+l)/2,[t,100*(l===i?0:r<=.5?u/(l+i):u/(2-l-i)),100*r]},i.rgb.hsv=function(e){var t,r,n,o,a,i=e[0]/255,l=e[1]/255,u=e[2]/255,s=Math.max(i,l,u),c=s-Math.min(i,l,u),f=function(e){return(s-e)/6/c+.5};return 0===c?o=a=0:(a=c/s,t=f(i),r=f(l),n=f(u),i===s?o=n-r:l===s?o=1/3+t-n:u===s&&(o=2/3+r-t),o<0?o+=1:o>1&&(o-=1)),[360*o,100*a,100*s]},i.rgb.hwb=function(e){var t=e[0],r=e[1],n=e[2];return[i.rgb.hsl(e)[0],100*(1/255*Math.min(t,Math.min(r,n))),100*(n=1-1/255*Math.max(t,Math.max(r,n)))]},i.rgb.cmyk=function(e){var t,r=e[0]/255,n=e[1]/255,o=e[2]/255;return[100*((1-r-(t=Math.min(1-r,1-n,1-o)))/(1-t)||0),100*((1-n-t)/(1-t)||0),100*((1-o-t)/(1-t)||0),100*t]},i.rgb.keyword=function(e){var t=o[e];if(t)return t;var r,a,i,l=1/0;for(var u in n)if(n.hasOwnProperty(u)){var s=n[u],c=(a=e,i=s,Math.pow(a[0]-i[0],2)+Math.pow(a[1]-i[1],2)+Math.pow(a[2]-i[2],2));c<l&&(l=c,r=u)}return r},i.keyword.rgb=function(e){return n[e]},i.rgb.xyz=function(e){var t=e[0]/255,r=e[1]/255,n=e[2]/255;return[100*(.4124*(t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92)+.3576*(r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92)+.1805*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92)),100*(.2126*t+.7152*r+.0722*n),100*(.0193*t+.1192*r+.9505*n)]},i.rgb.lab=function(e){var t=i.rgb.xyz(e),r=t[0],n=t[1],o=t[2];return n/=100,o/=108.883,r=(r/=95.047)>.008856?Math.pow(r,1/3):7.787*r+16/116,[116*(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116)-16,500*(r-n),200*(n-(o=o>.008856?Math.pow(o,1/3):7.787*o+16/116))]},i.hsl.rgb=function(e){var t,r,n,o,a,i=e[0]/360,l=e[1]/100,u=e[2]/100;if(0===l)return[a=255*u,a,a];t=2*u-(r=u<.5?u*(1+l):u+l-u*l),o=[0,0,0];for(var s=0;s<3;s++)(n=i+1/3*-(s-1))<0&&n++,n>1&&n--,a=6*n<1?t+6*(r-t)*n:2*n<1?r:3*n<2?t+(r-t)*(2/3-n)*6:t,o[s]=255*a;return o},i.hsl.hsv=function(e){var t=e[0],r=e[1]/100,n=e[2]/100,o=r,a=Math.max(n,.01);return r*=(n*=2)<=1?n:2-n,o*=a<=1?a:2-a,[t,100*(0===n?2*o/(a+o):2*r/(n+r)),100*((n+r)/2)]},i.hsv.rgb=function(e){var t=e[0]/60,r=e[1]/100,n=e[2]/100,o=Math.floor(t)%6,a=t-Math.floor(t),i=255*n*(1-r),l=255*n*(1-r*a),u=255*n*(1-r*(1-a));switch(n*=255,o){case 0:return[n,u,i];case 1:return[l,n,i];case 2:return[i,n,u];case 3:return[i,l,n];case 4:return[u,i,n];case 5:return[n,i,l]}},i.hsv.hsl=function(e){var t,r,n,o=e[0],a=e[1]/100,i=e[2]/100,l=Math.max(i,.01);return n=(2-a)*i,r=a*l,[o,100*(r=(r/=(t=(2-a)*l)<=1?t:2-t)||0),100*(n/=2)]},i.hwb.rgb=function(e){var t,r,n,o,a,i,l,u=e[0]/360,s=e[1]/100,c=e[2]/100,f=s+c;switch(f>1&&(s/=f,c/=f),n=6*u-(t=Math.floor(6*u)),0!==(1&t)&&(n=1-n),o=s+n*((r=1-c)-s),t){default:case 6:case 0:a=r,i=o,l=s;break;case 1:a=o,i=r,l=s;break;case 2:a=s,i=r,l=o;break;case 3:a=s,i=o,l=r;break;case 4:a=o,i=s,l=r;break;case 5:a=r,i=s,l=o}return[255*a,255*i,255*l]},i.cmyk.rgb=function(e){var t=e[0]/100,r=e[1]/100,n=e[2]/100,o=e[3]/100;return[255*(1-Math.min(1,t*(1-o)+o)),255*(1-Math.min(1,r*(1-o)+o)),255*(1-Math.min(1,n*(1-o)+o))]},i.xyz.rgb=function(e){var t,r,n,o=e[0]/100,a=e[1]/100,i=e[2]/100;return r=-.9689*o+1.8758*a+.0415*i,n=.0557*o+-.204*a+1.057*i,t=(t=3.2406*o+-1.5372*a+-.4986*i)>.0031308?1.055*Math.pow(t,1/2.4)-.055:12.92*t,r=r>.0031308?1.055*Math.pow(r,1/2.4)-.055:12.92*r,n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:12.92*n,[255*(t=Math.min(Math.max(0,t),1)),255*(r=Math.min(Math.max(0,r),1)),255*(n=Math.min(Math.max(0,n),1))]},i.xyz.lab=function(e){var t=e[0],r=e[1],n=e[2];return r/=100,n/=108.883,t=(t/=95.047)>.008856?Math.pow(t,1/3):7.787*t+16/116,[116*(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116)-16,500*(t-r),200*(r-(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116))]},i.lab.xyz=function(e){var t,r,n,o=e[0];t=e[1]/500+(r=(o+16)/116),n=r-e[2]/200;var a=Math.pow(r,3),i=Math.pow(t,3),l=Math.pow(n,3);return r=a>.008856?a:(r-16/116)/7.787,t=i>.008856?i:(t-16/116)/7.787,n=l>.008856?l:(n-16/116)/7.787,[t*=95.047,r*=100,n*=108.883]},i.lab.lch=function(e){var t,r=e[0],n=e[1],o=e[2];return(t=360*Math.atan2(o,n)/2/Math.PI)<0&&(t+=360),[r,Math.sqrt(n*n+o*o),t]},i.lch.lab=function(e){var t,r=e[0],n=e[1];return t=e[2]/360*2*Math.PI,[r,n*Math.cos(t),n*Math.sin(t)]},i.rgb.ansi16=function(e){var t=e[0],r=e[1],n=e[2],o=1 in arguments?arguments[1]:i.rgb.hsv(e)[2];if(0===(o=Math.round(o/50)))return 30;var a=30+(Math.round(n/255)<<2|Math.round(r/255)<<1|Math.round(t/255));return 2===o&&(a+=60),a},i.hsv.ansi16=function(e){return i.rgb.ansi16(i.hsv.rgb(e),e[2])},i.rgb.ansi256=function(e){var t=e[0],r=e[1],n=e[2];return t===r&&r===n?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(r/255*5)+Math.round(n/255*5)},i.ansi16.rgb=function(e){var t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),[t=t/10.5*255,t,t];var r=.5*(1+~~(e>50));return[(1&t)*r*255,(t>>1&1)*r*255,(t>>2&1)*r*255]},i.ansi256.rgb=function(e){if(e>=232){var t=10*(e-232)+8;return[t,t,t]}var r;return e-=16,[Math.floor(e/36)/5*255,Math.floor((r=e%36)/6)/5*255,r%6/5*255]},i.rgb.hex=function(e){var t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},i.hex.rgb=function(e){var t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];var r=t[0];3===t[0].length&&(r=r.split("").map((function(e){return e+e})).join(""));var n=parseInt(r,16);return[n>>16&255,n>>8&255,255&n]},i.rgb.hcg=function(e){var t,r=e[0]/255,n=e[1]/255,o=e[2]/255,a=Math.max(Math.max(r,n),o),i=Math.min(Math.min(r,n),o),l=a-i;return t=l<=0?0:a===r?(n-o)/l%6:a===n?2+(o-r)/l:4+(r-n)/l+4,t/=6,[360*(t%=1),100*l,100*(l<1?i/(1-l):0)]},i.hsl.hcg=function(e){var t=e[1]/100,r=e[2]/100,n=1,o=0;return(n=r<.5?2*t*r:2*t*(1-r))<1&&(o=(r-.5*n)/(1-n)),[e[0],100*n,100*o]},i.hsv.hcg=function(e){var t=e[1]/100,r=e[2]/100,n=t*r,o=0;return n<1&&(o=(r-n)/(1-n)),[e[0],100*n,100*o]},i.hcg.rgb=function(e){var t=e[0]/360,r=e[1]/100,n=e[2]/100;if(0===r)return[255*n,255*n,255*n];var o,a=[0,0,0],i=t%1*6,l=i%1,u=1-l;switch(Math.floor(i)){case 0:a[0]=1,a[1]=l,a[2]=0;break;case 1:a[0]=u,a[1]=1,a[2]=0;break;case 2:a[0]=0,a[1]=1,a[2]=l;break;case 3:a[0]=0,a[1]=u,a[2]=1;break;case 4:a[0]=l,a[1]=0,a[2]=1;break;default:a[0]=1,a[1]=0,a[2]=u}return o=(1-r)*n,[255*(r*a[0]+o),255*(r*a[1]+o),255*(r*a[2]+o)]},i.hcg.hsv=function(e){var t=e[1]/100,r=t+e[2]/100*(1-t),n=0;return r>0&&(n=t/r),[e[0],100*n,100*r]},i.hcg.hsl=function(e){var t=e[1]/100,r=e[2]/100*(1-t)+.5*t,n=0;return r>0&&r<.5?n=t/(2*r):r>=.5&&r<1&&(n=t/(2*(1-r))),[e[0],100*n,100*r]},i.hcg.hwb=function(e){var t=e[1]/100,r=t+e[2]/100*(1-t);return[e[0],100*(r-t),100*(1-r)]},i.hwb.hcg=function(e){var t=e[1]/100,r=1-e[2]/100,n=r-t,o=0;return n<1&&(o=(r-n)/(1-n)),[e[0],100*n,100*o]},i.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},i.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},i.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},i.gray.hsl=i.gray.hsv=function(e){return[0,0,e[0]]},i.gray.hwb=function(e){return[0,100,e[0]]},i.gray.cmyk=function(e){return[0,0,0,e[0]]},i.gray.lab=function(e){return[e[0],0,0]},i.gray.hex=function(e){var t=255&Math.round(e[0]/100*255),r=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(r.length)+r},i.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]}},1444:(e,t,r)=>{var n=r(4601),o=r(1595),a={};Object.keys(n).forEach((function(e){a[e]={},Object.defineProperty(a[e],"channels",{value:n[e].channels}),Object.defineProperty(a[e],"labels",{value:n[e].labels});var t=o(e);Object.keys(t).forEach((function(r){var n=t[r];a[e][r]=function(e){var t=function(t){if(void 0===t||null===t)return t;arguments.length>1&&(t=Array.prototype.slice.call(arguments));var r=e(t);if("object"===typeof r)for(var n=r.length,o=0;o<n;o++)r[o]=Math.round(r[o]);return r};return"conversion"in e&&(t.conversion=e.conversion),t}(n),a[e][r].raw=function(e){var t=function(t){return void 0===t||null===t?t:(arguments.length>1&&(t=Array.prototype.slice.call(arguments)),e(t))};return"conversion"in e&&(t.conversion=e.conversion),t}(n)}))})),e.exports=a},1595:(e,t,r)=>{var n=r(4601);function o(e){var t=function(){for(var e={},t=Object.keys(n),r=t.length,o=0;o<r;o++)e[t[o]]={distance:-1,parent:null};return e}(),r=[e];for(t[e].distance=0;r.length;)for(var o=r.pop(),a=Object.keys(n[o]),i=a.length,l=0;l<i;l++){var u=a[l],s=t[u];-1===s.distance&&(s.distance=t[o].distance+1,s.parent=o,r.unshift(u))}return t}function a(e,t){return function(r){return t(e(r))}}function i(e,t){for(var r=[t[e].parent,e],o=n[t[e].parent][e],i=t[e].parent;t[i].parent;)r.unshift(t[i].parent),o=a(n[t[i].parent][i],o),i=t[i].parent;return o.conversion=r,o}e.exports=function(e){for(var t=o(e),r={},n=Object.keys(t),a=n.length,l=0;l<a;l++){var u=n[l];null!==t[u].parent&&(r[u]=i(u,t))}return r}},509:e=>{"use strict";e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},2865:e=>{"use strict";var t=/[|\\\\{}()[\\]^$+*?.]/g;e.exports=function(e){if("string"!==typeof e)throw new TypeError("Expected a string");return e.replace(t,"\\\\$&")}},5215:e=>{"use strict";e.exports={stdout:!1,stderr:!1}},2434:e=>{"use strict";var t=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();var r=[[{color:"0, 0, 0",class:"ansi-black"},{color:"187, 0, 0",class:"ansi-red"},{color:"0, 187, 0",class:"ansi-green"},{color:"187, 187, 0",class:"ansi-yellow"},{color:"0, 0, 187",class:"ansi-blue"},{color:"187, 0, 187",class:"ansi-magenta"},{color:"0, 187, 187",class:"ansi-cyan"},{color:"255,255,255",class:"ansi-white"}],[{color:"85, 85, 85",class:"ansi-bright-black"},{color:"255, 85, 85",class:"ansi-bright-red"},{color:"0, 255, 0",class:"ansi-bright-green"},{color:"255, 255, 85",class:"ansi-bright-yellow"},{color:"85, 85, 255",class:"ansi-bright-blue"},{color:"255, 85, 255",class:"ansi-bright-magenta"},{color:"85, 255, 255",class:"ansi-bright-cyan"},{color:"255, 255, 255",class:"ansi-bright-white"}]],n=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.fg=this.bg=this.fg_truecolor=this.bg_truecolor=null,this.bright=0,this.decorations=[]}return t(e,null,[{key:"escapeForHtml",value:function(t){return(new e).escapeForHtml(t)}},{key:"linkify",value:function(t){return(new e).linkify(t)}},{key:"ansiToHtml",value:function(t,r){return(new e).ansiToHtml(t,r)}},{key:"ansiToJson",value:function(t,r){return(new e).ansiToJson(t,r)}},{key:"ansiToText",value:function(t){return(new e).ansiToText(t)}}]),t(e,[{key:"setupPalette",value:function(){this.PALETTE_COLORS=[];for(var e=0;e<2;++e)for(var t=0;t<8;++t)this.PALETTE_COLORS.push(r[e][t].color);for(var n=[0,95,135,175,215,255],o=function(e,t,r){return n[e]+", "+n[t]+", "+n[r]},a=0;a<6;++a)for(var i=0;i<6;++i)for(var l=0;l<6;++l)this.PALETTE_COLORS.push(o(a,i,l));for(var u=8,s=0;s<24;++s,u+=10)this.PALETTE_COLORS.push(o(u,u,u))}},{key:"escapeForHtml",value:function(e){return e.replace(/[&<>]/gm,(function(e){return"&"==e?"&amp;":"<"==e?"&lt;":">"==e?"&gt;":""}))}},{key:"linkify",value:function(e){return e.replace(/(https?:\\/\\/[^\\s]+)/gm,(function(e){return\'<a href="\'+e+\'">\'+e+"</a>"}))}},{key:"ansiToHtml",value:function(e,t){return this.process(e,t,!0)}},{key:"ansiToJson",value:function(e,t){return(t=t||{}).json=!0,t.clearLine=!1,this.process(e,t,!0)}},{key:"ansiToText",value:function(e){return this.process(e,{},!1)}},{key:"process",value:function(e,t,r){var n=this,o=e.split(/\\033\\[/),a=o.shift();void 0!==t&&null!==t||(t={}),t.clearLine=/\\r/.test(e);var i=o.map((function(e){return n.processChunk(e,t,r)}));if(t&&t.json){var l=this.processChunkJson("");return l.content=a,l.clearLine=t.clearLine,i.unshift(l),t.remove_empty&&(i=i.filter((function(e){return!e.isEmpty()}))),i}return i.unshift(a),i.join("")}},{key:"processChunkJson",value:function(e,t,n){var o=(t="undefined"==typeof t?{}:t).use_classes="undefined"!=typeof t.use_classes&&t.use_classes,a=t.key=o?"class":"color",i={content:e,fg:null,bg:null,fg_truecolor:null,bg_truecolor:null,isInverted:!1,clearLine:t.clearLine,decoration:null,decorations:[],was_processed:!1,isEmpty:function(){return!i.content}},l=e.match(/^([!\\x3c-\\x3f]*)([\\d;]*)([\\x20-\\x2c]*[\\x40-\\x7e])([\\s\\S]*)/m);if(!l)return i;i.content=l[4];var u=l[2].split(";");if(""!==l[1]||"m"!==l[3])return i;if(!n)return i;for(var s=this;u.length>0;){var c=u.shift(),f=parseInt(c);if(isNaN(f)||0===f)s.fg=s.bg=null,s.decorations=[];else if(1===f)s.decorations.push("bold");else if(2===f)s.decorations.push("dim");else if(3===f)s.decorations.push("italic");else if(4===f)s.decorations.push("underline");else if(5===f)s.decorations.push("blink");else if(7===f)s.decorations.push("reverse");else if(8===f)s.decorations.push("hidden");else if(9===f)s.decorations.push("strikethrough");else if(21===f)s.removeDecoration("bold");else if(22===f)s.removeDecoration("bold"),s.removeDecoration("dim");else if(23===f)s.removeDecoration("italic");else if(24===f)s.removeDecoration("underline");else if(25===f)s.removeDecoration("blink");else if(27===f)s.removeDecoration("reverse");else if(28===f)s.removeDecoration("hidden");else if(29===f)s.removeDecoration("strikethrough");else if(39===f)s.fg=null;else if(49===f)s.bg=null;else if(f>=30&&f<38)s.fg=r[0][f%10][a];else if(f>=90&&f<98)s.fg=r[1][f%10][a];else if(f>=40&&f<48)s.bg=r[0][f%10][a];else if(f>=100&&f<108)s.bg=r[1][f%10][a];else if(38===f||48===f){var d=38===f;if(u.length>=1){var p=u.shift();if("5"===p&&u.length>=1){var h=parseInt(u.shift());if(h>=0&&h<=255)if(o){var g=h>=16?"ansi-palette-"+h:r[h>7?1:0][h%8].class;d?s.fg=g:s.bg=g}else this.PALETTE_COLORS||s.setupPalette(),d?s.fg=this.PALETTE_COLORS[h]:s.bg=this.PALETTE_COLORS[h]}else if("2"===p&&u.length>=3){var m=parseInt(u.shift()),v=parseInt(u.shift()),y=parseInt(u.shift());if(m>=0&&m<=255&&v>=0&&v<=255&&y>=0&&y<=255){var b=m+", "+v+", "+y;o?d?(s.fg="ansi-truecolor",s.fg_truecolor=b):(s.bg="ansi-truecolor",s.bg_truecolor=b):d?s.fg=b:s.bg=b}}}}}if(null===s.fg&&null===s.bg&&0===s.decorations.length)return i;return i.fg=s.fg,i.bg=s.bg,i.fg_truecolor=s.fg_truecolor,i.bg_truecolor=s.bg_truecolor,i.decorations=s.decorations,i.decoration=s.decorations.slice(-1).pop()||null,i.was_processed=!0,i}},{key:"processChunk",value:function(e,t,n){var o=this;t=t||{};var a=this.processChunkJson(e,t,n),i=t.use_classes;if(a.decorations=a.decorations.filter((function(e){if("reverse"===e){a.fg||(a.fg=r[0][7][i?"class":"color"]),a.bg||(a.bg=r[0][0][i?"class":"color"]);var t=a.fg;a.fg=a.bg,a.bg=t;var n=a.fg_truecolor;return a.fg_truecolor=a.bg_truecolor,a.bg_truecolor=n,a.isInverted=!0,!1}return!0})),t.json)return a;if(a.isEmpty())return"";if(!a.was_processed)return a.content;var l=[],u=[],s=[],c={},f=function(e){var t=[],r=void 0;for(r in e)e.hasOwnProperty(r)&&t.push("data-"+r+\'="\'+o.escapeForHtml(e[r])+\'"\');return t.length>0?" "+t.join(" "):""};return a.isInverted&&(c["ansi-is-inverted"]="true"),a.fg&&(i?(l.push(a.fg+"-fg"),null!==a.fg_truecolor&&(c["ansi-truecolor-fg"]=a.fg_truecolor,a.fg_truecolor=null)):l.push("color:rgb("+a.fg+")")),a.bg&&(i?(l.push(a.bg+"-bg"),null!==a.bg_truecolor&&(c["ansi-truecolor-bg"]=a.bg_truecolor,a.bg_truecolor=null)):l.push("background-color:rgb("+a.bg+")")),a.decorations.forEach((function(e){i?u.push("ansi-"+e):"bold"===e?u.push("font-weight:bold"):"dim"===e?u.push("opacity:0.5"):"italic"===e?u.push("font-style:italic"):"hidden"===e?u.push("visibility:hidden"):"strikethrough"===e?s.push("line-through"):s.push(e)})),s.length&&u.push("text-decoration:"+s.join(" ")),i?\'<span class="\'+l.concat(u).join(" ")+\'"\'+f(c)+">"+a.content+"</span>":\'<span style="\'+l.concat(u).join(";")+\'"\'+f(c)+">"+a.content+"</span>"}},{key:"removeDecoration",value:function(e){var t=this.decorations.indexOf(e);t>=0&&this.decorations.splice(t,1)}}]),e}();e.exports=n},2457:(e,t,r)=>{"use strict";function n(e){a.length||(o(),!0),a[a.length]=e}e.exports=n;var o,a=[],i=0;function l(){for(;i<a.length;){var e=i;if(i+=1,a[e].call(),i>1024){for(var t=0,r=a.length-i;t<r;t++)a[t]=a[t+i];a.length-=i,i=0}}a.length=0,i=0,!1}var u,s,c,f="undefined"!==typeof r.g?r.g:self,d=f.MutationObserver||f.WebKitMutationObserver;function p(e){return function(){var t=setTimeout(n,0),r=setInterval(n,50);function n(){clearTimeout(t),clearInterval(r),e()}}}"function"===typeof d?(u=1,s=new d(l),c=document.createTextNode(""),s.observe(c,{characterData:!0}),o=function(){u=-u,c.data=u}):o=p(l),n.requestFlush=o,n.makeRequestCallFromTimer=p},6438:(e,t,r)=>{var n=r(4323),o=r(8936),a=r(7429),i=n.TypeError;e.exports=function(e){if(o(e))return e;throw i(a(e)+" is not a function")}},4887:(e,t,r)=>{var n=r(4323),o=r(1568),a=r(7429),i=n.TypeError;e.exports=function(e){if(o(e))return e;throw i(a(e)+" is not a constructor")}},4846:(e,t,r)=>{var n=r(4323),o=r(8936),a=n.String,i=n.TypeError;e.exports=function(e){if("object"==typeof e||o(e))return e;throw i("Can\'t set "+a(e)+" as a prototype")}},149:(e,t,r)=>{var n=r(8036),o=r(5313),a=r(8734),i=n("unscopables"),l=Array.prototype;void 0==l[i]&&a.f(l,i,{configurable:!0,value:o(null)}),e.exports=function(e){l[i][e]=!0}},2874:(e,t,r)=>{var n=r(4323),o=r(2038),a=n.TypeError;e.exports=function(e,t){if(o(t,e))return e;throw a("Incorrect invocation")}},5561:(e,t,r)=>{var n=r(4323),o=r(1784),a=n.String,i=n.TypeError;e.exports=function(e){if(o(e))return e;throw i(a(e)+" is not an object")}},7826:(e,t,r)=>{var n=r(8244);e.exports=n((function(){if("function"==typeof ArrayBuffer){var e=new ArrayBuffer(8);Object.isExtensible(e)&&Object.defineProperty(e,"a",{value:8})}}))},8602:(e,t,r)=>{"use strict";var n=r(4323),o=r(2604),a=r(8011),i=r(4234),l=r(5554),u=r(5271),s=r(1568),c=r(1472),f=r(8212),d=r(7481),p=r(1913),h=n.Array;e.exports=function(e){var t=i(e),r=s(this),n=arguments.length,g=n>1?arguments[1]:void 0,m=void 0!==g;m&&(g=o(g,n>2?arguments[2]:void 0));var v,y,b,w,x,k,E=p(t),S=0;if(!E||this==h&&u(E))for(v=c(t),y=r?new this(v):h(v);v>S;S++)k=m?g(t[S],S):t[S],f(y,S,k);else for(x=(w=d(t,E)).next,y=r?new this:[];!(b=a(x,w)).done;S++)k=m?l(w,g,[b.value,S],!0):b.value,f(y,S,k);return y.length=S,y}},3336:(e,t,r)=>{var n=r(2653),o=r(921),a=r(1472),i=function(e){return function(t,r,i){var l,u=n(t),s=a(u),c=o(i,s);if(e&&r!=r){for(;s>c;)if((l=u[c++])!=l)return!0}else for(;s>c;c++)if((e||c in u)&&u[c]===r)return e||c||0;return!e&&-1}};e.exports={includes:i(!0),indexOf:i(!1)}},5241:(e,t,r)=>{var n=r(2604),o=r(4471),a=r(13),i=r(4234),l=r(1472),u=r(4264),s=o([].push),c=function(e){var t=1==e,r=2==e,o=3==e,c=4==e,f=6==e,d=7==e,p=5==e||f;return function(h,g,m,v){for(var y,b,w=i(h),x=a(w),k=n(g,m),E=l(x),S=0,T=v||u,_=t?T(h,E):r||d?T(h,0):void 0;E>S;S++)if((p||S in x)&&(b=k(y=x[S],S,w),e))if(t)_[S]=b;else if(b)switch(e){case 3:return!0;case 5:return y;case 6:return S;case 2:s(_,y)}else switch(e){case 4:return!1;case 7:s(_,y)}return f?-1:o||c?c:_}};e.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6),filterReject:c(7)}},5460:(e,t,r)=>{var n=r(8244),o=r(8036),a=r(7790),i=o("species");e.exports=function(e){return a>=51||!n((function(){var t=[];return(t.constructor={})[i]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},8942:(e,t,r)=>{var n=r(4323),o=r(921),a=r(1472),i=r(8212),l=n.Array,u=Math.max;e.exports=function(e,t,r){for(var n=a(e),s=o(t,n),c=o(void 0===r?n:r,n),f=l(u(c-s,0)),d=0;s<c;s++,d++)i(f,d,e[s]);return f.length=d,f}},3707:(e,t,r)=>{var n=r(4471);e.exports=n([].slice)},1431:(e,t,r)=>{var n=r(4323),o=r(8997),a=r(1568),i=r(1784),l=r(8036)("species"),u=n.Array;e.exports=function(e){var t;return o(e)&&(t=e.constructor,(a(t)&&(t===u||o(t.prototype))||i(t)&&null===(t=t[l]))&&(t=void 0)),void 0===t?u:t}},4264:(e,t,r)=>{var n=r(1431);e.exports=function(e,t){return new(n(e))(0===t?0:t)}},5554:(e,t,r)=>{var n=r(5561),o=r(6907);e.exports=function(e,t,r,a){try{return a?t(n(r)[0],r[1]):t(r)}catch(t){o(e,"throw",t)}}},9274:(e,t,r)=>{var n=r(8036)("iterator"),o=!1;try{var a=0,i={next:function(){return{done:!!a++}},return:function(){o=!0}};i[n]=function(){return this},Array.from(i,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var a={};a[n]=function(){return{next:function(){return{done:r=!0}}}},e(a)}catch(e){}return r}},2708:(e,t,r)=>{var n=r(4471),o=n({}.toString),a=n("".slice);e.exports=function(e){return a(o(e),8,-1)}},782:(e,t,r)=>{var n=r(4323),o=r(7452),a=r(8936),i=r(2708),l=r(8036)("toStringTag"),u=n.Object,s="Arguments"==i(function(){return arguments}());e.exports=o?i:function(e){var t,r,n;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=u(e),l))?r:s?i(t):"Object"==(n=i(t))&&a(t.callee)?"Arguments":n}},8216:(e,t,r)=>{"use strict";var n=r(8011),o=r(6438),a=r(5561);e.exports=function(){for(var e=a(this),t=o(e.add),r=0,i=arguments.length;r<i;r++)n(t,e,arguments[r]);return e}},5424:(e,t,r)=>{"use strict";var n=r(8011),o=r(6438),a=r(5561);e.exports=function(){for(var e,t=a(this),r=o(t.delete),i=!0,l=0,u=arguments.length;l<u;l++)e=n(r,t,arguments[l]),i=i&&e;return!!i}},2858:(e,t,r)=>{"use strict";var n=r(2604),o=r(8011),a=r(6438),i=r(4887),l=r(7478),u=[].push;e.exports=function(e){var t,r,s,c,f=arguments.length,d=f>1?arguments[1]:void 0;return i(this),(t=void 0!==d)&&a(d),void 0==e?new this:(r=[],t?(s=0,c=n(d,f>2?arguments[2]:void 0),l(e,(function(e){o(u,r,c(e,s++))}))):l(e,u,{that:r}),new this(r))}},2256:(e,t,r)=>{"use strict";var n=r(3707);e.exports=function(){return new this(n(arguments))}},4674:(e,t,r)=>{"use strict";var n=r(8734).f,o=r(5313),a=r(4342),i=r(2604),l=r(2874),u=r(7478),s=r(5498),c=r(3208),f=r(6122),d=r(3289).fastKey,p=r(9523),h=p.set,g=p.getterFor;e.exports={getConstructor:function(e,t,r,s){var c=e((function(e,n){l(e,p),h(e,{type:t,index:o(null),first:void 0,last:void 0,size:0}),f||(e.size=0),void 0!=n&&u(n,e[s],{that:e,AS_ENTRIES:r})})),p=c.prototype,m=g(t),v=function(e,t,r){var n,o,a=m(e),i=y(e,t);return i?i.value=r:(a.last=i={index:o=d(t,!0),key:t,value:r,previous:n=a.last,next:void 0,removed:!1},a.first||(a.first=i),n&&(n.next=i),f?a.size++:e.size++,"F"!==o&&(a.index[o]=i)),e},y=function(e,t){var r,n=m(e),o=d(t);if("F"!==o)return n.index[o];for(r=n.first;r;r=r.next)if(r.key==t)return r};return a(p,{clear:function(){for(var e=m(this),t=e.index,r=e.first;r;)r.removed=!0,r.previous&&(r.previous=r.previous.next=void 0),delete t[r.index],r=r.next;e.first=e.last=void 0,f?e.size=0:this.size=0},delete:function(e){var t=this,r=m(t),n=y(t,e);if(n){var o=n.next,a=n.previous;delete r.index[n.index],n.removed=!0,a&&(a.next=o),o&&(o.previous=a),r.first==n&&(r.first=o),r.last==n&&(r.last=a),f?r.size--:t.size--}return!!n},forEach:function(e){for(var t,r=m(this),n=i(e,arguments.length>1?arguments[1]:void 0);t=t?t.next:r.first;)for(n(t.value,t.key,this);t&&t.removed;)t=t.previous},has:function(e){return!!y(this,e)}}),a(p,r?{get:function(e){var t=y(this,e);return t&&t.value},set:function(e,t){return v(this,0===e?0:e,t)}}:{add:function(e){return v(this,e=0===e?0:e,e)}}),f&&n(p,"size",{get:function(){return m(this).size}}),c},setStrong:function(e,t,r){var n=t+" Iterator",o=g(t),a=g(n);s(e,t,(function(e,t){h(this,{type:n,target:e,state:o(e),kind:t,last:void 0})}),(function(){for(var e=a(this),t=e.kind,r=e.last;r&&r.removed;)r=r.previous;return e.target&&(e.last=r=r?r.next:e.state.first)?"keys"==t?{value:r.key,done:!1}:"values"==t?{value:r.value,done:!1}:{value:[r.key,r.value],done:!1}:(e.target=void 0,{value:void 0,done:!0})}),r?"entries":"values",!r,!0),c(t)}}},7088:(e,t,r)=>{"use strict";var n=r(7443),o=r(4323),a=r(4471),i=r(5257),l=r(7842),u=r(3289),s=r(7478),c=r(2874),f=r(8936),d=r(1784),p=r(8244),h=r(9274),g=r(3107),m=r(849);e.exports=function(e,t,r){var v=-1!==e.indexOf("Map"),y=-1!==e.indexOf("Weak"),b=v?"set":"add",w=o[e],x=w&&w.prototype,k=w,E={},S=function(e){var t=a(x[e]);l(x,e,"add"==e?function(e){return t(this,0===e?0:e),this}:"delete"==e?function(e){return!(y&&!d(e))&&t(this,0===e?0:e)}:"get"==e?function(e){return y&&!d(e)?void 0:t(this,0===e?0:e)}:"has"==e?function(e){return!(y&&!d(e))&&t(this,0===e?0:e)}:function(e,r){return t(this,0===e?0:e,r),this})};if(i(e,!f(w)||!(y||x.forEach&&!p((function(){(new w).entries().next()})))))k=r.getConstructor(t,e,v,b),u.enable();else if(i(e,!0)){var T=new k,_=T[b](y?{}:-0,1)!=T,C=p((function(){T.has(1)})),O=h((function(e){new w(e)})),P=!y&&p((function(){for(var e=new w,t=5;t--;)e[b](t,t);return!e.has(-0)}));O||((k=t((function(e,t){c(e,x);var r=m(new w,e,k);return void 0!=t&&s(t,r[b],{that:r,AS_ENTRIES:v}),r}))).prototype=x,x.constructor=k),(C||P)&&(S("delete"),S("has"),v&&S("get")),(P||_)&&S(b),y&&x.clear&&delete x.clear}return E[e]=k,n({global:!0,forced:k!=w},E),g(k,e),y||r.setStrong(k,e,v),k}},1881:(e,t,r)=>{var n=r(4554),o=r(4875),a=r(2850),i=r(8734);e.exports=function(e,t){for(var r=o(t),l=i.f,u=a.f,s=0;s<r.length;s++){var c=r[s];n(e,c)||l(e,c,u(t,c))}}},1681:(e,t,r)=>{var n=r(8244);e.exports=!n((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},2081:(e,t,r)=>{"use strict";var n=r(5847).IteratorPrototype,o=r(5313),a=r(1536),i=r(3107),l=r(4729),u=function(){return this};e.exports=function(e,t,r){var s=t+" Iterator";return e.prototype=o(n,{next:a(1,r)}),i(e,s,!1,!0),l[s]=u,e}},1193:(e,t,r)=>{var n=r(6122),o=r(8734),a=r(1536);e.exports=n?function(e,t,r){return o.f(e,t,a(1,r))}:function(e,t,r){return e[t]=r,e}},1536:e=>{e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},8212:(e,t,r)=>{"use strict";var n=r(4626),o=r(8734),a=r(1536);e.exports=function(e,t,r){var i=n(t);i in e?o.f(e,i,a(0,r)):e[i]=r}},5498:(e,t,r)=>{"use strict";var n=r(7443),o=r(8011),a=r(173),i=r(9489),l=r(8936),u=r(2081),s=r(5461),c=r(4599),f=r(3107),d=r(1193),p=r(7842),h=r(8036),g=r(4729),m=r(5847),v=i.PROPER,y=i.CONFIGURABLE,b=m.IteratorPrototype,w=m.BUGGY_SAFARI_ITERATORS,x=h("iterator"),k="keys",E="values",S="entries",T=function(){return this};e.exports=function(e,t,r,i,h,m,_){u(r,t,i);var C,O,P,R=function(e){if(e===h&&D)return D;if(!w&&e in L)return L[e];switch(e){case k:case E:case S:return function(){return new r(this,e)}}return function(){return new r(this)}},A=t+" Iterator",q=!1,L=e.prototype,N=L[x]||L["@@iterator"]||h&&L[h],D=!w&&N||R(h),I="Array"==t&&L.entries||N;if(I&&(C=s(I.call(new e)))!==Object.prototype&&C.next&&(a||s(C)===b||(c?c(C,b):l(C[x])||p(C,x,T)),f(C,A,!0,!0),a&&(g[A]=T)),v&&h==E&&N&&N.name!==E&&(!a&&y?d(L,"name",E):(q=!0,D=function(){return o(N,this)})),h)if(O={values:R(E),keys:m?D:R(k),entries:R(S)},_)for(P in O)(w||q||!(P in L))&&p(L,P,O[P]);else n({target:t,proto:!0,forced:w||q},O);return a&&!_||L[x]===D||p(L,x,D,{name:h}),g[t]=D,O}},3092:(e,t,r)=>{var n=r(4400),o=r(4554),a=r(2220),i=r(8734).f;e.exports=function(e){var t=n.Symbol||(n.Symbol={});o(t,e)||i(t,e,{value:a.f(e)})}},6122:(e,t,r)=>{var n=r(8244);e.exports=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},7586:(e,t,r)=>{var n=r(4323),o=r(1784),a=n.document,i=o(a)&&o(a.createElement);e.exports=function(e){return i?a.createElement(e):{}}},4587:e=>{e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},9017:(e,t,r)=>{var n=r(7586)("span").classList,o=n&&n.constructor&&n.constructor.prototype;e.exports=o===Object.prototype?void 0:o},7438:(e,t,r)=>{var n=r(1850);e.exports=n("navigator","userAgent")||""},7790:(e,t,r)=>{var n,o,a=r(4323),i=r(7438),l=a.process,u=a.Deno,s=l&&l.versions||u&&u.version,c=s&&s.v8;c&&(o=(n=c.split("."))[0]>0&&n[0]<4?1:+(n[0]+n[1])),!o&&i&&(!(n=i.match(/Edge\\/(\\d+)/))||n[1]>=74)&&(n=i.match(/Chrome\\/(\\d+)/))&&(o=+n[1]),e.exports=o},3267:e=>{e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},7443:(e,t,r)=>{var n=r(4323),o=r(2850).f,a=r(1193),i=r(7842),l=r(361),u=r(1881),s=r(5257);e.exports=function(e,t){var r,c,f,d,p,h=e.target,g=e.global,m=e.stat;if(r=g?n:m?n[h]||l(h,{}):(n[h]||{}).prototype)for(c in t){if(d=t[c],f=e.noTargetGet?(p=o(r,c))&&p.value:r[c],!s(g?c:h+(m?".":"#")+c,e.forced)&&void 0!==f){if(typeof d==typeof f)continue;u(d,f)}(e.sham||f&&f.sham)&&a(d,"sham",!0),i(r,c,d,e)}}},8244:e=>{e.exports=function(e){try{return!!e()}catch(e){return!0}}},8614:(e,t,r)=>{var n=r(8244);e.exports=!n((function(){return Object.isExtensible(Object.preventExtensions({}))}))},9667:e=>{var t=Function.prototype,r=t.apply,n=t.bind,o=t.call;e.exports="object"==typeof Reflect&&Reflect.apply||(n?o.bind(r):function(){return o.apply(r,arguments)})},2604:(e,t,r)=>{var n=r(4471),o=r(6438),a=n(n.bind);e.exports=function(e,t){return o(e),void 0===t?e:a?a(e,t):function(){return e.apply(t,arguments)}}},8011:e=>{var t=Function.prototype.call;e.exports=t.bind?t.bind(t):function(){return t.apply(t,arguments)}},9489:(e,t,r)=>{var n=r(6122),o=r(4554),a=Function.prototype,i=n&&Object.getOwnPropertyDescriptor,l=o(a,"name"),u=l&&"something"===function(){}.name,s=l&&(!n||n&&i(a,"name").configurable);e.exports={EXISTS:l,PROPER:u,CONFIGURABLE:s}},4471:e=>{var t=Function.prototype,r=t.bind,n=t.call,o=r&&r.bind(n);e.exports=r?function(e){return e&&o(n,e)}:function(e){return e&&function(){return n.apply(e,arguments)}}},1850:(e,t,r)=>{var n=r(4323),o=r(8936),a=function(e){return o(e)?e:void 0};e.exports=function(e,t){return arguments.length<2?a(n[e]):n[e]&&n[e][t]}},1913:(e,t,r)=>{var n=r(782),o=r(2339),a=r(4729),i=r(8036)("iterator");e.exports=function(e){if(void 0!=e)return o(e,i)||o(e,"@@iterator")||a[n(e)]}},7481:(e,t,r)=>{var n=r(4323),o=r(8011),a=r(6438),i=r(5561),l=r(7429),u=r(1913),s=n.TypeError;e.exports=function(e,t){var r=arguments.length<2?u(e):t;if(a(r))return i(o(r,e));throw s(l(e)+" is not iterable")}},6611:(e,t,r)=>{var n=r(8011);e.exports=function(e){return n(Map.prototype.entries,e)}},2339:(e,t,r)=>{var n=r(6438);e.exports=function(e,t){var r=e[t];return null==r?void 0:n(r)}},2196:(e,t,r)=>{var n=r(8011);e.exports=function(e){return n(Set.prototype.values,e)}},4323:(e,t,r)=>{var n=function(e){return e&&e.Math==Math&&e};e.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof r.g&&r.g)||function(){return this}()||Function("return this")()},4554:(e,t,r)=>{var n=r(4471),o=r(4234),a=n({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return a(o(e),t)}},2260:e=>{e.exports={}},5685:(e,t,r)=>{var n=r(1850);e.exports=n("document","documentElement")},9951:(e,t,r)=>{var n=r(6122),o=r(8244),a=r(7586);e.exports=!n&&!o((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},13:(e,t,r)=>{var n=r(4323),o=r(4471),a=r(8244),i=r(2708),l=n.Object,u=o("".split);e.exports=a((function(){return!l("z").propertyIsEnumerable(0)}))?function(e){return"String"==i(e)?u(e,""):l(e)}:l},849:(e,t,r)=>{var n=r(8936),o=r(1784),a=r(4599);e.exports=function(e,t,r){var i,l;return a&&n(i=t.constructor)&&i!==r&&o(l=i.prototype)&&l!==r.prototype&&a(e,l),e}},3436:(e,t,r)=>{var n=r(4471),o=r(8936),a=r(4946),i=n(Function.toString);o(a.inspectSource)||(a.inspectSource=function(e){return i(e)}),e.exports=a.inspectSource},3289:(e,t,r)=>{var n=r(7443),o=r(4471),a=r(2260),i=r(1784),l=r(4554),u=r(8734).f,s=r(9043),c=r(5580),f=r(9114),d=r(4397),p=r(8614),h=!1,g=d("meta"),m=0,v=function(e){u(e,g,{value:{objectID:"O"+m++,weakData:{}}})},y=e.exports={enable:function(){y.enable=function(){},h=!0;var e=s.f,t=o([].splice),r={};r[g]=1,e(r).length&&(s.f=function(r){for(var n=e(r),o=0,a=n.length;o<a;o++)if(n[o]===g){t(n,o,1);break}return n},n({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:c.f}))},fastKey:function(e,t){if(!i(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!l(e,g)){if(!f(e))return"F";if(!t)return"E";v(e)}return e[g].objectID},getWeakData:function(e,t){if(!l(e,g)){if(!f(e))return!0;if(!t)return!1;v(e)}return e[g].weakData},onFreeze:function(e){return p&&h&&f(e)&&!l(e,g)&&v(e),e}};a[g]=!0},9523:(e,t,r)=>{var n,o,a,i=r(751),l=r(4323),u=r(4471),s=r(1784),c=r(1193),f=r(4554),d=r(4946),p=r(5237),h=r(2260),g="Object already initialized",m=l.TypeError,v=l.WeakMap;if(i||d.state){var y=d.state||(d.state=new v),b=u(y.get),w=u(y.has),x=u(y.set);n=function(e,t){if(w(y,e))throw new m(g);return t.facade=e,x(y,e,t),t},o=function(e){return b(y,e)||{}},a=function(e){return w(y,e)}}else{var k=p("state");h[k]=!0,n=function(e,t){if(f(e,k))throw new m(g);return t.facade=e,c(e,k,t),t},o=function(e){return f(e,k)?e[k]:{}},a=function(e){return f(e,k)}}e.exports={set:n,get:o,has:a,enforce:function(e){return a(e)?o(e):n(e,{})},getterFor:function(e){return function(t){var r;if(!s(t)||(r=o(t)).type!==e)throw m("Incompatible receiver, "+e+" required");return r}}}},5271:(e,t,r)=>{var n=r(8036),o=r(4729),a=n("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(o.Array===e||i[a]===e)}},8997:(e,t,r)=>{var n=r(2708);e.exports=Array.isArray||function(e){return"Array"==n(e)}},8936:e=>{e.exports=function(e){return"function"==typeof e}},1568:(e,t,r)=>{var n=r(4471),o=r(8244),a=r(8936),i=r(782),l=r(1850),u=r(3436),s=function(){},c=[],f=l("Reflect","construct"),d=/^\\s*(?:class|function)\\b/,p=n(d.exec),h=!d.exec(s),g=function(e){if(!a(e))return!1;try{return f(s,c,e),!0}catch(e){return!1}};e.exports=!f||o((function(){var e;return g(g.call)||!g(Object)||!g((function(){e=!0}))||e}))?function(e){if(!a(e))return!1;switch(i(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}return h||!!p(d,u(e))}:g},5257:(e,t,r)=>{var n=r(8244),o=r(8936),a=/#|\\.prototype\\./,i=function(e,t){var r=u[l(e)];return r==c||r!=s&&(o(t)?n(t):!!t)},l=i.normalize=function(e){return String(e).replace(a,".").toLowerCase()},u=i.data={},s=i.NATIVE="N",c=i.POLYFILL="P";e.exports=i},1784:(e,t,r)=>{var n=r(8936);e.exports=function(e){return"object"==typeof e?null!==e:n(e)}},173:e=>{e.exports=!1},985:(e,t,r)=>{var n=r(4323),o=r(1850),a=r(8936),i=r(2038),l=r(6005),u=n.Object;e.exports=l?function(e){return"symbol"==typeof e}:function(e){var t=o("Symbol");return a(t)&&i(t.prototype,u(e))}},7478:(e,t,r)=>{var n=r(4323),o=r(2604),a=r(8011),i=r(5561),l=r(7429),u=r(5271),s=r(1472),c=r(2038),f=r(7481),d=r(1913),p=r(6907),h=n.TypeError,g=function(e,t){this.stopped=e,this.result=t},m=g.prototype;e.exports=function(e,t,r){var n,v,y,b,w,x,k,E=r&&r.that,S=!(!r||!r.AS_ENTRIES),T=!(!r||!r.IS_ITERATOR),_=!(!r||!r.INTERRUPTED),C=o(t,E),O=function(e){return n&&p(n,"normal",e),new g(!0,e)},P=function(e){return S?(i(e),_?C(e[0],e[1],O):C(e[0],e[1])):_?C(e,O):C(e)};if(T)n=e;else{if(!(v=d(e)))throw h(l(e)+" is not iterable");if(u(v)){for(y=0,b=s(e);b>y;y++)if((w=P(e[y]))&&c(m,w))return w;return new g(!1)}n=f(e,v)}for(x=n.next;!(k=a(x,n)).done;){try{w=P(k.value)}catch(e){p(n,"throw",e)}if("object"==typeof w&&w&&c(m,w))return w}return new g(!1)}},6907:(e,t,r)=>{var n=r(8011),o=r(5561),a=r(2339);e.exports=function(e,t,r){var i,l;o(e);try{if(!(i=a(e,"return"))){if("throw"===t)throw r;return r}i=n(i,e)}catch(e){l=!0,i=e}if("throw"===t)throw r;if(l)throw i;return o(i),r}},5847:(e,t,r)=>{"use strict";var n,o,a,i=r(8244),l=r(8936),u=r(5313),s=r(5461),c=r(7842),f=r(8036),d=r(173),p=f("iterator"),h=!1;[].keys&&("next"in(a=[].keys())?(o=s(s(a)))!==Object.prototype&&(n=o):h=!0),void 0==n||i((function(){var e={};return n[p].call(e)!==e}))?n={}:d&&(n=u(n)),l(n[p])||c(n,p,(function(){return this})),e.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:h}},4729:e=>{e.exports={}},1472:(e,t,r)=>{var n=r(9631);e.exports=function(e){return n(e.length)}},5046:(e,t,r)=>{var n=r(7790),o=r(8244);e.exports=!!Object.getOwnPropertySymbols&&!o((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&n&&n<41}))},751:(e,t,r)=>{var n=r(4323),o=r(8936),a=r(3436),i=n.WeakMap;e.exports=o(i)&&/native code/.test(a(i))},5313:(e,t,r)=>{var n,o=r(5561),a=r(649),i=r(3267),l=r(2260),u=r(5685),s=r(7586),c=r(5237),f=c("IE_PROTO"),d=function(){},p=function(e){return"<script>"+e+"</"+"script>"},h=function(e){e.write(p("")),e.close();var t=e.parentWindow.Object;return e=null,t},g=function(){try{n=new ActiveXObject("htmlfile")}catch(e){}var e,t;g="undefined"!=typeof document?document.domain&&n?h(n):((t=s("iframe")).style.display="none",u.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(p("document.F=Object")),e.close(),e.F):h(n);for(var r=i.length;r--;)delete g.prototype[i[r]];return g()};l[f]=!0,e.exports=Object.create||function(e,t){var r;return null!==e?(d.prototype=o(e),r=new d,d.prototype=null,r[f]=e):r=g(),void 0===t?r:a(r,t)}},649:(e,t,r)=>{var n=r(6122),o=r(8734),a=r(5561),i=r(2653),l=r(9246);e.exports=n?Object.defineProperties:function(e,t){a(e);for(var r,n=i(t),u=l(t),s=u.length,c=0;s>c;)o.f(e,r=u[c++],n[r]);return e}},8734:(e,t,r)=>{var n=r(4323),o=r(6122),a=r(9951),i=r(5561),l=r(4626),u=n.TypeError,s=Object.defineProperty;t.f=o?s:function(e,t,r){if(i(e),t=l(t),i(r),a)try{return s(e,t,r)}catch(e){}if("get"in r||"set"in r)throw u("Accessors not supported");return"value"in r&&(e[t]=r.value),e}},2850:(e,t,r)=>{var n=r(6122),o=r(8011),a=r(2589),i=r(1536),l=r(2653),u=r(4626),s=r(4554),c=r(9951),f=Object.getOwnPropertyDescriptor;t.f=n?f:function(e,t){if(e=l(e),t=u(t),c)try{return f(e,t)}catch(e){}if(s(e,t))return i(!o(a.f,e,t),e[t])}},5580:(e,t,r)=>{var n=r(2708),o=r(2653),a=r(9043).f,i=r(8942),l="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return l&&"Window"==n(e)?function(e){try{return a(e)}catch(e){return i(l)}}(e):a(o(e))}},9043:(e,t,r)=>{var n=r(8662),o=r(3267).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},229:(e,t)=>{t.f=Object.getOwnPropertySymbols},5461:(e,t,r)=>{var n=r(4323),o=r(4554),a=r(8936),i=r(4234),l=r(5237),u=r(1681),s=l("IE_PROTO"),c=n.Object,f=c.prototype;e.exports=u?c.getPrototypeOf:function(e){var t=i(e);if(o(t,s))return t[s];var r=t.constructor;return a(r)&&t instanceof r?r.prototype:t instanceof c?f:null}},9114:(e,t,r)=>{var n=r(8244),o=r(1784),a=r(2708),i=r(7826),l=Object.isExtensible,u=n((function(){l(1)}));e.exports=u||i?function(e){return!!o(e)&&((!i||"ArrayBuffer"!=a(e))&&(!l||l(e)))}:l},2038:(e,t,r)=>{var n=r(4471);e.exports=n({}.isPrototypeOf)},8662:(e,t,r)=>{var n=r(4471),o=r(4554),a=r(2653),i=r(3336).indexOf,l=r(2260),u=n([].push);e.exports=function(e,t){var r,n=a(e),s=0,c=[];for(r in n)!o(l,r)&&o(n,r)&&u(c,r);for(;t.length>s;)o(n,r=t[s++])&&(~i(c,r)||u(c,r));return c}},9246:(e,t,r)=>{var n=r(8662),o=r(3267);e.exports=Object.keys||function(e){return n(e,o)}},2589:(e,t)=>{"use strict";var r={}.propertyIsEnumerable,n=Object.getOwnPropertyDescriptor,o=n&&!r.call({1:2},1);t.f=o?function(e){var t=n(this,e);return!!t&&t.enumerable}:r},4599:(e,t,r)=>{var n=r(4471),o=r(5561),a=r(4846);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,r={};try{(e=n(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(r,[]),t=r instanceof Array}catch(e){}return function(r,n){return o(r),a(n),t?e(r,n):r.__proto__=n,r}}():void 0)},9974:(e,t,r)=>{"use strict";var n=r(7452),o=r(782);e.exports=n?{}.toString:function(){return"[object "+o(this)+"]"}},8306:(e,t,r)=>{var n=r(4323),o=r(8011),a=r(8936),i=r(1784),l=n.TypeError;e.exports=function(e,t){var r,n;if("string"===t&&a(r=e.toString)&&!i(n=o(r,e)))return n;if(a(r=e.valueOf)&&!i(n=o(r,e)))return n;if("string"!==t&&a(r=e.toString)&&!i(n=o(r,e)))return n;throw l("Can\'t convert object to primitive value")}},4875:(e,t,r)=>{var n=r(1850),o=r(4471),a=r(9043),i=r(229),l=r(5561),u=o([].concat);e.exports=n("Reflect","ownKeys")||function(e){var t=a.f(l(e)),r=i.f;return r?u(t,r(e)):t}},4400:(e,t,r)=>{var n=r(4323);e.exports=n},4342:(e,t,r)=>{var n=r(7842);e.exports=function(e,t,r){for(var o in t)n(e,o,t[o],r);return e}},7842:(e,t,r)=>{var n=r(4323),o=r(8936),a=r(4554),i=r(1193),l=r(361),u=r(3436),s=r(9523),c=r(9489).CONFIGURABLE,f=s.get,d=s.enforce,p=String(String).split("String");(e.exports=function(e,t,r,u){var s,f=!!u&&!!u.unsafe,h=!!u&&!!u.enumerable,g=!!u&&!!u.noTargetGet,m=u&&void 0!==u.name?u.name:t;o(r)&&("Symbol("===String(m).slice(0,7)&&(m="["+String(m).replace(/^Symbol\\(([^)]*)\\)/,"$1")+"]"),(!a(r,"name")||c&&r.name!==m)&&i(r,"name",m),(s=d(r)).source||(s.source=p.join("string"==typeof m?m:""))),e!==n?(f?!g&&e[t]&&(h=!0):delete e[t],h?e[t]=r:i(e,t,r)):h?e[t]=r:l(t,r)})(Function.prototype,"toString",(function(){return o(this)&&f(this).source||u(this)}))},556:(e,t,r)=>{var n=r(4323).TypeError;e.exports=function(e){if(void 0==e)throw n("Can\'t call method on "+e);return e}},8787:e=>{e.exports=function(e,t){return e===t||e!=e&&t!=t}},361:(e,t,r)=>{var n=r(4323),o=Object.defineProperty;e.exports=function(e,t){try{o(n,e,{value:t,configurable:!0,writable:!0})}catch(r){n[e]=t}return t}},3208:(e,t,r)=>{"use strict";var n=r(1850),o=r(8734),a=r(8036),i=r(6122),l=a("species");e.exports=function(e){var t=n(e),r=o.f;i&&t&&!t[l]&&r(t,l,{configurable:!0,get:function(){return this}})}},3107:(e,t,r)=>{var n=r(8734).f,o=r(4554),a=r(8036)("toStringTag");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,a)&&n(e,a,{configurable:!0,value:t})}},5237:(e,t,r)=>{var n=r(1033),o=r(4397),a=n("keys");e.exports=function(e){return a[e]||(a[e]=o(e))}},4946:(e,t,r)=>{var n=r(4323),o=r(361),a="__core-js_shared__",i=n[a]||o(a,{});e.exports=i},1033:(e,t,r)=>{var n=r(173),o=r(4946);(e.exports=function(e,t){return o[e]||(o[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.19.2",mode:n?"pure":"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"})},8272:(e,t,r)=>{var n=r(5561),o=r(4887),a=r(8036)("species");e.exports=function(e,t){var r,i=n(e).constructor;return void 0===i||void 0==(r=n(i)[a])?t:o(r)}},8648:(e,t,r)=>{var n=r(4471),o=r(2927),a=r(2404),i=r(556),l=n("".charAt),u=n("".charCodeAt),s=n("".slice),c=function(e){return function(t,r){var n,c,f=a(i(t)),d=o(r),p=f.length;return d<0||d>=p?e?"":void 0:(n=u(f,d))<55296||n>56319||d+1===p||(c=u(f,d+1))<56320||c>57343?e?l(f,d):n:e?s(f,d,d+2):c-56320+(n-55296<<10)+65536}};e.exports={codeAt:c(!1),charAt:c(!0)}},921:(e,t,r)=>{var n=r(2927),o=Math.max,a=Math.min;e.exports=function(e,t){var r=n(e);return r<0?o(r+t,0):a(r,t)}},2653:(e,t,r)=>{var n=r(13),o=r(556);e.exports=function(e){return n(o(e))}},2927:e=>{var t=Math.ceil,r=Math.floor;e.exports=function(e){var n=+e;return n!==n||0===n?0:(n>0?r:t)(n)}},9631:(e,t,r)=>{var n=r(2927),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},4234:(e,t,r)=>{var n=r(4323),o=r(556),a=n.Object;e.exports=function(e){return a(o(e))}},1475:(e,t,r)=>{var n=r(4323),o=r(8011),a=r(1784),i=r(985),l=r(2339),u=r(8306),s=r(8036),c=n.TypeError,f=s("toPrimitive");e.exports=function(e,t){if(!a(e)||i(e))return e;var r,n=l(e,f);if(n){if(void 0===t&&(t="default"),r=o(n,e,t),!a(r)||i(r))return r;throw c("Can\'t convert object to primitive value")}return void 0===t&&(t="number"),u(e,t)}},4626:(e,t,r)=>{var n=r(1475),o=r(985);e.exports=function(e){var t=n(e,"string");return o(t)?t:t+""}},7452:(e,t,r)=>{var n={};n[r(8036)("toStringTag")]="z",e.exports="[object z]"===String(n)},2404:(e,t,r)=>{var n=r(4323),o=r(782),a=n.String;e.exports=function(e){if("Symbol"===o(e))throw TypeError("Cannot convert a Symbol value to a string");return a(e)}},7429:(e,t,r)=>{var n=r(4323).String;e.exports=function(e){try{return n(e)}catch(e){return"Object"}}},4397:(e,t,r)=>{var n=r(4471),o=0,a=Math.random(),i=n(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+i(++o+a,36)}},6005:(e,t,r)=>{var n=r(5046);e.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},2220:(e,t,r)=>{var n=r(8036);t.f=n},8036:(e,t,r)=>{var n=r(4323),o=r(1033),a=r(4554),i=r(4397),l=r(5046),u=r(6005),s=o("wks"),c=n.Symbol,f=c&&c.for,d=u?c:c&&c.withoutSetter||i;e.exports=function(e){if(!a(s,e)||!l&&"string"!=typeof s[e]){var t="Symbol."+e;l&&a(c,e)?s[e]=c[e]:s[e]=u&&f?f(t):d(t)}return s[e]}},5185:(e,t,r)=>{"use strict";var n=r(7443),o=r(4323),a=r(8244),i=r(8997),l=r(1784),u=r(4234),s=r(1472),c=r(8212),f=r(4264),d=r(5460),p=r(8036),h=r(7790),g=p("isConcatSpreadable"),m=9007199254740991,v="Maximum allowed index exceeded",y=o.TypeError,b=h>=51||!a((function(){var e=[];return e[g]=!1,e.concat()[0]!==e})),w=d("concat"),x=function(e){if(!l(e))return!1;var t=e[g];return void 0!==t?!!t:i(e)};n({target:"Array",proto:!0,forced:!b||!w},{concat:function(e){var t,r,n,o,a,i=u(this),l=f(i,0),d=0;for(t=-1,n=arguments.length;t<n;t++)if(x(a=-1===t?i:arguments[t])){if(d+(o=s(a))>m)throw y(v);for(r=0;r<o;r++,d++)r in a&&c(l,d,a[r])}else{if(d>=m)throw y(v);c(l,d++,a)}return l.length=d,l}})},7925:(e,t,r)=>{var n=r(7443),o=r(8602);n({target:"Array",stat:!0,forced:!r(9274)((function(e){Array.from(e)}))},{from:o})},4801:(e,t,r)=>{"use strict";var n=r(2653),o=r(149),a=r(4729),i=r(9523),l=r(5498),u="Array Iterator",s=i.set,c=i.getterFor(u);e.exports=l(Array,"Array",(function(e,t){s(this,{type:u,target:n(e),index:0,kind:t})}),(function(){var e=c(this),t=e.target,r=e.kind,n=e.index++;return!t||n>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==r?{value:n,done:!1}:"values"==r?{value:t[n],done:!1}:{value:[n,t[n]],done:!1}}),"values"),a.Arguments=a.Array,o("keys"),o("values"),o("entries")},100:(e,t,r)=>{var n=r(4323);r(3107)(n.JSON,"JSON",!0)},1537:(e,t,r)=>{"use strict";r(7088)("Map",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),r(4674))},1168:(e,t,r)=>{r(3107)(Math,"Math",!0)},3782:(e,t,r)=>{var n=r(7452),o=r(7842),a=r(9974);n||o(Object.prototype,"toString",a,{unsafe:!0})},3763:(e,t,r)=>{"use strict";r(7088)("Set",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),r(4674))},8955:(e,t,r)=>{"use strict";var n=r(8648).charAt,o=r(2404),a=r(9523),i=r(5498),l="String Iterator",u=a.set,s=a.getterFor(l);i(String,"String",(function(e){u(this,{type:l,string:o(e),index:0})}),(function(){var e,t=s(this),r=t.string,o=t.index;return o>=r.length?{value:void 0,done:!0}:(e=n(r,o),t.index+=e.length,{value:e,done:!1})}))},4658:(e,t,r)=>{r(3092)("asyncIterator")},5998:(e,t,r)=>{"use strict";var n=r(7443),o=r(6122),a=r(4323),i=r(4471),l=r(4554),u=r(8936),s=r(2038),c=r(2404),f=r(8734).f,d=r(1881),p=a.Symbol,h=p&&p.prototype;if(o&&u(p)&&(!("description"in h)||void 0!==p().description)){var g={},m=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:c(arguments[0]),t=s(h,this)?new p(e):void 0===e?p():p(e);return""===e&&(g[t]=!0),t};d(m,p),m.prototype=h,h.constructor=m;var v="Symbol(test)"==String(p("test")),y=i(h.toString),b=i(h.valueOf),w=/^Symbol\\((.*)\\)[^)]+$/,x=i("".replace),k=i("".slice);f(h,"description",{configurable:!0,get:function(){var e=b(this),t=y(e);if(l(g,e))return"";var r=v?k(t,7,-1):x(t,w,"$1");return""===r?void 0:r}}),n({global:!0,forced:!0},{Symbol:m})}},4711:(e,t,r)=>{r(3092)("hasInstance")},7105:(e,t,r)=>{r(3092)("isConcatSpreadable")},1034:(e,t,r)=>{r(3092)("iterator")},1522:(e,t,r)=>{"use strict";var n=r(7443),o=r(4323),a=r(1850),i=r(9667),l=r(8011),u=r(4471),s=r(173),c=r(6122),f=r(5046),d=r(8244),p=r(4554),h=r(8997),g=r(8936),m=r(1784),v=r(2038),y=r(985),b=r(5561),w=r(4234),x=r(2653),k=r(4626),E=r(2404),S=r(1536),T=r(5313),_=r(9246),C=r(9043),O=r(5580),P=r(229),R=r(2850),A=r(8734),q=r(2589),L=r(3707),N=r(7842),D=r(1033),I=r(5237),j=r(2260),M=r(4397),F=r(8036),z=r(2220),U=r(3092),B=r(3107),V=r(9523),H=r(5241).forEach,W=I("hidden"),G="Symbol",$=F("toPrimitive"),Q=V.set,Y=V.getterFor(G),K=Object.prototype,X=o.Symbol,J=X&&X.prototype,Z=o.TypeError,ee=o.QObject,te=a("JSON","stringify"),re=R.f,ne=A.f,oe=O.f,ae=q.f,ie=u([].push),le=D("symbols"),ue=D("op-symbols"),se=D("string-to-symbol-registry"),ce=D("symbol-to-string-registry"),fe=D("wks"),de=!ee||!ee.prototype||!ee.prototype.findChild,pe=c&&d((function(){return 7!=T(ne({},"a",{get:function(){return ne(this,"a",{value:7}).a}})).a}))?function(e,t,r){var n=re(K,t);n&&delete K[t],ne(e,t,r),n&&e!==K&&ne(K,t,n)}:ne,he=function(e,t){var r=le[e]=T(J);return Q(r,{type:G,tag:e,description:t}),c||(r.description=t),r},ge=function(e,t,r){e===K&&ge(ue,t,r),b(e);var n=k(t);return b(r),p(le,n)?(r.enumerable?(p(e,W)&&e[W][n]&&(e[W][n]=!1),r=T(r,{enumerable:S(0,!1)})):(p(e,W)||ne(e,W,S(1,{})),e[W][n]=!0),pe(e,n,r)):ne(e,n,r)},me=function(e,t){b(e);var r=x(t),n=_(r).concat(we(r));return H(n,(function(t){c&&!l(ve,r,t)||ge(e,t,r[t])})),e},ve=function(e){var t=k(e),r=l(ae,this,t);return!(this===K&&p(le,t)&&!p(ue,t))&&(!(r||!p(this,t)||!p(le,t)||p(this,W)&&this[W][t])||r)},ye=function(e,t){var r=x(e),n=k(t);if(r!==K||!p(le,n)||p(ue,n)){var o=re(r,n);return!o||!p(le,n)||p(r,W)&&r[W][n]||(o.enumerable=!0),o}},be=function(e){var t=oe(x(e)),r=[];return H(t,(function(e){p(le,e)||p(j,e)||ie(r,e)})),r},we=function(e){var t=e===K,r=oe(t?ue:x(e)),n=[];return H(r,(function(e){!p(le,e)||t&&!p(K,e)||ie(n,le[e])})),n};(f||(N(J=(X=function(){if(v(J,this))throw Z("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?E(arguments[0]):void 0,t=M(e),r=function e(r){this===K&&l(e,ue,r),p(this,W)&&p(this[W],t)&&(this[W][t]=!1),pe(this,t,S(1,r))};return c&&de&&pe(K,t,{configurable:!0,set:r}),he(t,e)}).prototype,"toString",(function(){return Y(this).tag})),N(X,"withoutSetter",(function(e){return he(M(e),e)})),q.f=ve,A.f=ge,R.f=ye,C.f=O.f=be,P.f=we,z.f=function(e){return he(F(e),e)},c&&(ne(J,"description",{configurable:!0,get:function(){return Y(this).description}}),s||N(K,"propertyIsEnumerable",ve,{unsafe:!0}))),n({global:!0,wrap:!0,forced:!f,sham:!f},{Symbol:X}),H(_(fe),(function(e){U(e)})),n({target:G,stat:!0,forced:!f},{for:function(e){var t=E(e);if(p(se,t))return se[t];var r=X(t);return se[t]=r,ce[r]=t,r},keyFor:function(e){if(!y(e))throw Z(e+" is not a symbol");if(p(ce,e))return ce[e]},useSetter:function(){de=!0},useSimple:function(){de=!1}}),n({target:"Object",stat:!0,forced:!f,sham:!c},{create:function(e,t){return void 0===t?T(e):me(T(e),t)},defineProperty:ge,defineProperties:me,getOwnPropertyDescriptor:ye}),n({target:"Object",stat:!0,forced:!f},{getOwnPropertyNames:be,getOwnPropertySymbols:we}),n({target:"Object",stat:!0,forced:d((function(){P.f(1)}))},{getOwnPropertySymbols:function(e){return P.f(w(e))}}),te)&&n({target:"JSON",stat:!0,forced:!f||d((function(){var e=X();return"[null]"!=te([e])||"{}"!=te({a:e})||"{}"!=te(Object(e))}))},{stringify:function(e,t,r){var n=L(arguments),o=t;if((m(t)||void 0!==e)&&!y(e))return h(t)||(t=function(e,t){if(g(o)&&(t=l(o,this,e,t)),!y(t))return t}),n[1]=t,i(te,null,n)}});if(!J[$]){var xe=J.valueOf;N(J,$,(function(e){return l(xe,this)}))}B(X,G),j[W]=!0},9227:(e,t,r)=>{r(3092)("match")},9385:(e,t,r)=>{r(3092)("replace")},9764:(e,t,r)=>{r(3092)("search")},3264:(e,t,r)=>{r(3092)("species")},1257:(e,t,r)=>{r(3092)("split")},6435:(e,t,r)=>{r(3092)("toPrimitive")},681:(e,t,r)=>{r(3092)("toStringTag")},7313:(e,t,r)=>{r(3092)("unscopables")},3035:(e,t,r)=>{"use strict";r(7443)({target:"Map",proto:!0,real:!0,forced:r(173)},{deleteAll:r(5424)})},2481:(e,t,r)=>{"use strict";var n=r(7443),o=r(173),a=r(5561),i=r(2604),l=r(6611),u=r(7478);n({target:"Map",proto:!0,real:!0,forced:o},{every:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0);return!u(r,(function(e,r,o){if(!n(r,e,t))return o()}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},673:(e,t,r)=>{"use strict";var n=r(173),o=r(7443),a=r(1850),i=r(2604),l=r(8011),u=r(6438),s=r(5561),c=r(8272),f=r(6611),d=r(7478);o({target:"Map",proto:!0,real:!0,forced:n},{filter:function(e){var t=s(this),r=f(t),n=i(e,arguments.length>1?arguments[1]:void 0),o=new(c(t,a("Map"))),p=u(o.set);return d(r,(function(e,r){n(r,e,t)&&l(p,o,e,r)}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),o}})},5837:(e,t,r)=>{"use strict";var n=r(7443),o=r(173),a=r(5561),i=r(2604),l=r(6611),u=r(7478);n({target:"Map",proto:!0,real:!0,forced:o},{findKey:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0);return u(r,(function(e,r,o){if(n(r,e,t))return o(e)}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},4756:(e,t,r)=>{"use strict";var n=r(7443),o=r(173),a=r(5561),i=r(2604),l=r(6611),u=r(7478);n({target:"Map",proto:!0,real:!0,forced:o},{find:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0);return u(r,(function(e,r,o){if(n(r,e,t))return o(r)}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},471:(e,t,r)=>{r(7443)({target:"Map",stat:!0},{from:r(2858)})},6692:(e,t,r)=>{"use strict";var n=r(7443),o=r(8011),a=r(4471),i=r(6438),l=r(7481),u=r(7478),s=a([].push);n({target:"Map",stat:!0},{groupBy:function(e,t){i(t);var r=l(e),n=new this,a=i(n.has),c=i(n.get),f=i(n.set);return u(r,(function(e){var r=t(e);o(a,n,r)?s(o(c,n,r),e):o(f,n,r,[e])}),{IS_ITERATOR:!0}),n}})},5853:(e,t,r)=>{"use strict";var n=r(173),o=r(7443),a=r(5561),i=r(6611),l=r(8787),u=r(7478);o({target:"Map",proto:!0,real:!0,forced:n},{includes:function(e){return u(i(a(this)),(function(t,r,n){if(l(r,e))return n()}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},7415:(e,t,r)=>{"use strict";var n=r(7443),o=r(8011),a=r(7478),i=r(6438);n({target:"Map",stat:!0},{keyBy:function(e,t){var r=new this;i(t);var n=i(r.set);return a(e,(function(e){o(n,r,t(e),e)})),r}})},4837:(e,t,r)=>{"use strict";var n=r(7443),o=r(173),a=r(5561),i=r(6611),l=r(7478);n({target:"Map",proto:!0,real:!0,forced:o},{keyOf:function(e){return l(i(a(this)),(function(t,r,n){if(r===e)return n(t)}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},4285:(e,t,r)=>{"use strict";var n=r(173),o=r(7443),a=r(1850),i=r(2604),l=r(8011),u=r(6438),s=r(5561),c=r(8272),f=r(6611),d=r(7478);o({target:"Map",proto:!0,real:!0,forced:n},{mapKeys:function(e){var t=s(this),r=f(t),n=i(e,arguments.length>1?arguments[1]:void 0),o=new(c(t,a("Map"))),p=u(o.set);return d(r,(function(e,r){l(p,o,n(r,e,t),r)}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),o}})},9932:(e,t,r)=>{"use strict";var n=r(173),o=r(7443),a=r(1850),i=r(2604),l=r(8011),u=r(6438),s=r(5561),c=r(8272),f=r(6611),d=r(7478);o({target:"Map",proto:!0,real:!0,forced:n},{mapValues:function(e){var t=s(this),r=f(t),n=i(e,arguments.length>1?arguments[1]:void 0),o=new(c(t,a("Map"))),p=u(o.set);return d(r,(function(e,r){l(p,o,e,n(r,e,t))}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),o}})},5843:(e,t,r)=>{"use strict";var n=r(7443),o=r(173),a=r(6438),i=r(5561),l=r(7478);n({target:"Map",proto:!0,real:!0,forced:o},{merge:function(e){for(var t=i(this),r=a(t.set),n=arguments.length,o=0;o<n;)l(arguments[o++],r,{that:t,AS_ENTRIES:!0});return t}})},1080:(e,t,r)=>{r(7443)({target:"Map",stat:!0},{of:r(2256)})},7074:(e,t,r)=>{"use strict";var n=r(7443),o=r(4323),a=r(173),i=r(5561),l=r(6438),u=r(6611),s=r(7478),c=o.TypeError;n({target:"Map",proto:!0,real:!0,forced:a},{reduce:function(e){var t=i(this),r=u(t),n=arguments.length<2,o=n?void 0:arguments[1];if(l(e),s(r,(function(r,a){n?(n=!1,o=a):o=e(o,a,r,t)}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),n)throw c("Reduce of empty map with no initial value");return o}})},7992:(e,t,r)=>{"use strict";var n=r(7443),o=r(173),a=r(5561),i=r(2604),l=r(6611),u=r(7478);n({target:"Map",proto:!0,real:!0,forced:o},{some:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0);return u(r,(function(e,r,o){if(n(r,e,t))return o()}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},6443:(e,t,r)=>{"use strict";var n=r(173),o=r(7443),a=r(4323),i=r(8011),l=r(5561),u=r(6438),s=a.TypeError;o({target:"Map",proto:!0,real:!0,forced:n},{update:function(e,t){var r=l(this),n=u(r.get),o=u(r.has),a=u(r.set),c=arguments.length;u(t);var f=i(o,r,e);if(!f&&c<3)throw s("Updating absent value");var d=f?i(n,r,e):u(c>2?arguments[2]:void 0)(e,r);return i(a,r,e,t(d,e,r)),r}})},1061:(e,t,r)=>{"use strict";r(7443)({target:"Set",proto:!0,real:!0,forced:r(173)},{addAll:r(8216)})},1675:(e,t,r)=>{"use strict";r(7443)({target:"Set",proto:!0,real:!0,forced:r(173)},{deleteAll:r(5424)})},3860:(e,t,r)=>{"use strict";var n=r(173),o=r(7443),a=r(1850),i=r(8011),l=r(6438),u=r(5561),s=r(8272),c=r(7478);o({target:"Set",proto:!0,real:!0,forced:n},{difference:function(e){var t=u(this),r=new(s(t,a("Set")))(t),n=l(r.delete);return c(e,(function(e){i(n,r,e)})),r}})},8088:(e,t,r)=>{"use strict";var n=r(7443),o=r(173),a=r(5561),i=r(2604),l=r(2196),u=r(7478);n({target:"Set",proto:!0,real:!0,forced:o},{every:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0);return!u(r,(function(e,r){if(!n(e,e,t))return r()}),{IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},7041:(e,t,r)=>{"use strict";var n=r(173),o=r(7443),a=r(1850),i=r(8011),l=r(6438),u=r(5561),s=r(2604),c=r(8272),f=r(2196),d=r(7478);o({target:"Set",proto:!0,real:!0,forced:n},{filter:function(e){var t=u(this),r=f(t),n=s(e,arguments.length>1?arguments[1]:void 0),o=new(c(t,a("Set"))),p=l(o.add);return d(r,(function(e){n(e,e,t)&&i(p,o,e)}),{IS_ITERATOR:!0}),o}})},3922:(e,t,r)=>{"use strict";var n=r(7443),o=r(173),a=r(5561),i=r(2604),l=r(2196),u=r(7478);n({target:"Set",proto:!0,real:!0,forced:o},{find:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0);return u(r,(function(e,r){if(n(e,e,t))return r(e)}),{IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},156:(e,t,r)=>{r(7443)({target:"Set",stat:!0},{from:r(2858)})},8946:(e,t,r)=>{"use strict";var n=r(173),o=r(7443),a=r(1850),i=r(8011),l=r(6438),u=r(5561),s=r(8272),c=r(7478);o({target:"Set",proto:!0,real:!0,forced:n},{intersection:function(e){var t=u(this),r=new(s(t,a("Set"))),n=l(t.has),o=l(r.add);return c(e,(function(e){i(n,t,e)&&i(o,r,e)})),r}})},9492:(e,t,r)=>{"use strict";var n=r(173),o=r(7443),a=r(8011),i=r(6438),l=r(5561),u=r(7478);o({target:"Set",proto:!0,real:!0,forced:n},{isDisjointFrom:function(e){var t=l(this),r=i(t.has);return!u(e,(function(e,n){if(!0===a(r,t,e))return n()}),{INTERRUPTED:!0}).stopped}})},1402:(e,t,r)=>{"use strict";var n=r(173),o=r(7443),a=r(1850),i=r(8011),l=r(6438),u=r(8936),s=r(5561),c=r(7481),f=r(7478);o({target:"Set",proto:!0,real:!0,forced:n},{isSubsetOf:function(e){var t=c(this),r=s(e),n=r.has;return u(n)||(r=new(a("Set"))(e),n=l(r.has)),!f(t,(function(e,t){if(!1===i(n,r,e))return t()}),{IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},9787:(e,t,r)=>{"use strict";var n=r(173),o=r(7443),a=r(8011),i=r(6438),l=r(5561),u=r(7478);o({target:"Set",proto:!0,real:!0,forced:n},{isSupersetOf:function(e){var t=l(this),r=i(t.has);return!u(e,(function(e,n){if(!1===a(r,t,e))return n()}),{INTERRUPTED:!0}).stopped}})},6024:(e,t,r)=>{"use strict";var n=r(173),o=r(7443),a=r(4471),i=r(5561),l=r(2404),u=r(2196),s=r(7478),c=a([].join),f=[].push;o({target:"Set",proto:!0,real:!0,forced:n},{join:function(e){var t=i(this),r=u(t),n=void 0===e?",":l(e),o=[];return s(r,f,{that:o,IS_ITERATOR:!0}),c(o,n)}})},2681:(e,t,r)=>{"use strict";var n=r(173),o=r(7443),a=r(1850),i=r(2604),l=r(8011),u=r(6438),s=r(5561),c=r(8272),f=r(2196),d=r(7478);o({target:"Set",proto:!0,real:!0,forced:n},{map:function(e){var t=s(this),r=f(t),n=i(e,arguments.length>1?arguments[1]:void 0),o=new(c(t,a("Set"))),p=u(o.add);return d(r,(function(e){l(p,o,n(e,e,t))}),{IS_ITERATOR:!0}),o}})},2632:(e,t,r)=>{r(7443)({target:"Set",stat:!0},{of:r(2256)})},1463:(e,t,r)=>{"use strict";var n=r(7443),o=r(4323),a=r(173),i=r(6438),l=r(5561),u=r(2196),s=r(7478),c=o.TypeError;n({target:"Set",proto:!0,real:!0,forced:a},{reduce:function(e){var t=l(this),r=u(t),n=arguments.length<2,o=n?void 0:arguments[1];if(i(e),s(r,(function(r){n?(n=!1,o=r):o=e(o,r,r,t)}),{IS_ITERATOR:!0}),n)throw c("Reduce of empty set with no initial value");return o}})},5691:(e,t,r)=>{"use strict";var n=r(7443),o=r(173),a=r(5561),i=r(2604),l=r(2196),u=r(7478);n({target:"Set",proto:!0,real:!0,forced:o},{some:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0);return u(r,(function(e,r){if(n(e,e,t))return r()}),{IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},7705:(e,t,r)=>{"use strict";var n=r(173),o=r(7443),a=r(1850),i=r(8011),l=r(6438),u=r(5561),s=r(8272),c=r(7478);o({target:"Set",proto:!0,real:!0,forced:n},{symmetricDifference:function(e){var t=u(this),r=new(s(t,a("Set")))(t),n=l(r.delete),o=l(r.add);return c(e,(function(e){i(n,r,e)||i(o,r,e)})),r}})},5154:(e,t,r)=>{"use strict";var n=r(7443),o=r(173),a=r(1850),i=r(6438),l=r(5561),u=r(8272),s=r(7478);n({target:"Set",proto:!0,real:!0,forced:o},{union:function(e){var t=l(this),r=new(u(t,a("Set")))(t);return s(e,i(r.add),{that:r}),r}})},8458:(e,t,r)=>{r(3092)("dispose")},620:(e,t,r)=>{r(3092)("observable")},7987:(e,t,r)=>{r(3092)("patternMatch")},8151:(e,t,r)=>{var n=r(4323),o=r(4587),a=r(9017),i=r(4801),l=r(1193),u=r(8036),s=u("iterator"),c=u("toStringTag"),f=i.values,d=function(e,t){if(e){if(e[s]!==f)try{l(e,s,f)}catch(t){e[s]=f}if(e[c]||l(e,c,t),o[t])for(var r in i)if(e[r]!==i[r])try{l(e,r,i[r])}catch(t){e[r]=i[r]}}};for(var p in o)d(n[p]&&n[p].prototype,p);d(a,"DOMTokenList")},3624:function(e,t,r){"use strict";var n=this&&this.__assign||function(){return n=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},n.apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var o=r(7656),a=r(2920),i=r(7630),l=n(n({},o.namedReferences),{all:o.namedReferences.html5}),u={specialChars:/[<>\'"&]/g,nonAscii:/(?:[<>\'"&\\u0080-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g,nonAsciiPrintable:/(?:[<>\'"&\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g,extensive:/(?:[\\x01-\\x0c\\x0e-\\x1f\\x21-\\x2c\\x2e-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7d\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g},s={mode:"specialChars",level:"all",numeric:"decimal"};t.encode=function(e,t){var r=void 0===(c=(a=void 0===t?s:t).mode)?"specialChars":c,n=void 0===(h=a.numeric)?"decimal":h,o=a.level;if(!e)return"";var a,c,f=u[r],d=l[void 0===o?"all":o].characters,p="hexadecimal"===n;if(f.lastIndex=0,a=f.exec(e)){c="";var h=0;do{h!==a.index&&(c+=e.substring(h,a.index));var g=d[o=a[0]];if(!g){var m=o.length>1?i.getCodePoint(o,0):o.charCodeAt(0);g=(p?"&#x"+m.toString(16):"&#"+m)+";"}c+=g,h=a.index+o.length}while(a=f.exec(e));h!==e.length&&(c+=e.substring(h))}else c=e;return c};var c={scope:"body",level:"all"},f=/&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);/g,d=/&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g,p={xml:{strict:f,attribute:d,body:o.bodyRegExps.xml},html4:{strict:f,attribute:d,body:o.bodyRegExps.html4},html5:{strict:f,attribute:d,body:o.bodyRegExps.html5}},h=n(n({},p),{all:p.html5}),g=String.fromCharCode,m=g(65533),v={level:"all"};t.decodeEntity=function(e,t){var r=void 0===(n=(void 0===t?v:t).level)?"all":n;if(!e)return"";var n=e,o=(e[e.length-1],l[r].entities[e]);if(o)n=o;else if("&"===e[0]&&"#"===e[1]){var u=e[2],s="x"==u||"X"==u?parseInt(e.substr(3),16):parseInt(e.substr(2));n=s>=1114111?m:s>65535?i.fromCodePoint(s):g(a.numericUnicodeMap[s]||s)}return n},t.decode=function(e,t){var r=void 0===t?c:t,n=r.level,o=void 0===n?"all":n,u=r.scope,s=void 0===u?"xml"===o?"strict":"body":u;if(!e)return"";var f=h[o][s],d=l[o].entities,p="attribute"===s,v="strict"===s;f.lastIndex=0;var y,b=f.exec(e);if(b){y="";var w=0;do{w!==b.index&&(y+=e.substring(w,b.index));var x=b[0],k=x,E=x[x.length-1];if(p&&"="===E)k=x;else if(v&&";"!==E)k=x;else{var S=d[x];if(S)k=S;else if("&"===x[0]&&"#"===x[1]){var T=x[2],_="x"==T||"X"==T?parseInt(x.substr(3),16):parseInt(x.substr(2));k=_>=1114111?m:_>65535?i.fromCodePoint(_):g(a.numericUnicodeMap[_]||_)}}y+=k,w=b.index+x.length}while(b=f.exec(e));w!==e.length&&(y+=e.substring(w))}else y=e;return y}},7656:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bodyRegExps={xml:/&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g},t.namedReferences={xml:{entities:{"&lt;":"<","&gt;":">","&quot;":\'"\',"&apos;":"\'","&amp;":"&"},characters:{"<":"&lt;",">":"&gt;",\'"\':"&quot;","\'":"&apos;","&":"&amp;"}},html4:{entities:{"&apos;":"\'","&nbsp":" ","&nbsp;":" ","&iexcl":"¡","&iexcl;":"¡","&cent":"¢","&cent;":"¢","&pound":"£","&pound;":"£","&curren":"¤","&curren;":"¤","&yen":"¥","&yen;":"¥","&brvbar":"¦","&brvbar;":"¦","&sect":"§","&sect;":"§","&uml":"¨","&uml;":"¨","&copy":"©","&copy;":"©","&ordf":"ª","&ordf;":"ª","&laquo":"«","&laquo;":"«","&not":"¬","&not;":"¬","&shy":"­","&shy;":"­","&reg":"®","&reg;":"®","&macr":"¯","&macr;":"¯","&deg":"°","&deg;":"°","&plusmn":"±","&plusmn;":"±","&sup2":"²","&sup2;":"²","&sup3":"³","&sup3;":"³","&acute":"´","&acute;":"´","&micro":"µ","&micro;":"µ","&para":"¶","&para;":"¶","&middot":"·","&middot;":"·","&cedil":"¸","&cedil;":"¸","&sup1":"¹","&sup1;":"¹","&ordm":"º","&ordm;":"º","&raquo":"»","&raquo;":"»","&frac14":"¼","&frac14;":"¼","&frac12":"½","&frac12;":"½","&frac34":"¾","&frac34;":"¾","&iquest":"¿","&iquest;":"¿","&Agrave":"À","&Agrave;":"À","&Aacute":"Á","&Aacute;":"Á","&Acirc":"Â","&Acirc;":"Â","&Atilde":"Ã","&Atilde;":"Ã","&Auml":"Ä","&Auml;":"Ä","&Aring":"Å","&Aring;":"Å","&AElig":"Æ","&AElig;":"Æ","&Ccedil":"Ç","&Ccedil;":"Ç","&Egrave":"È","&Egrave;":"È","&Eacute":"É","&Eacute;":"É","&Ecirc":"Ê","&Ecirc;":"Ê","&Euml":"Ë","&Euml;":"Ë","&Igrave":"Ì","&Igrave;":"Ì","&Iacute":"Í","&Iacute;":"Í","&Icirc":"Î","&Icirc;":"Î","&Iuml":"Ï","&Iuml;":"Ï","&ETH":"Ð","&ETH;":"Ð","&Ntilde":"Ñ","&Ntilde;":"Ñ","&Ograve":"Ò","&Ograve;":"Ò","&Oacute":"Ó","&Oacute;":"Ó","&Ocirc":"Ô","&Ocirc;":"Ô","&Otilde":"Õ","&Otilde;":"Õ","&Ouml":"Ö","&Ouml;":"Ö","&times":"×","&times;":"×","&Oslash":"Ø","&Oslash;":"Ø","&Ugrave":"Ù","&Ugrave;":"Ù","&Uacute":"Ú","&Uacute;":"Ú","&Ucirc":"Û","&Ucirc;":"Û","&Uuml":"Ü","&Uuml;":"Ü","&Yacute":"Ý","&Yacute;":"Ý","&THORN":"Þ","&THORN;":"Þ","&szlig":"ß","&szlig;":"ß","&agrave":"à","&agrave;":"à","&aacute":"á","&aacute;":"á","&acirc":"â","&acirc;":"â","&atilde":"ã","&atilde;":"ã","&auml":"ä","&auml;":"ä","&aring":"å","&aring;":"å","&aelig":"æ","&aelig;":"æ","&ccedil":"ç","&ccedil;":"ç","&egrave":"è","&egrave;":"è","&eacute":"é","&eacute;":"é","&ecirc":"ê","&ecirc;":"ê","&euml":"ë","&euml;":"ë","&igrave":"ì","&igrave;":"ì","&iacute":"í","&iacute;":"í","&icirc":"î","&icirc;":"î","&iuml":"ï","&iuml;":"ï","&eth":"ð","&eth;":"ð","&ntilde":"ñ","&ntilde;":"ñ","&ograve":"ò","&ograve;":"ò","&oacute":"ó","&oacute;":"ó","&ocirc":"ô","&ocirc;":"ô","&otilde":"õ","&otilde;":"õ","&ouml":"ö","&ouml;":"ö","&divide":"÷","&divide;":"÷","&oslash":"ø","&oslash;":"ø","&ugrave":"ù","&ugrave;":"ù","&uacute":"ú","&uacute;":"ú","&ucirc":"û","&ucirc;":"û","&uuml":"ü","&uuml;":"ü","&yacute":"ý","&yacute;":"ý","&thorn":"þ","&thorn;":"þ","&yuml":"ÿ","&yuml;":"ÿ","&quot":\'"\',"&quot;":\'"\',"&amp":"&","&amp;":"&","&lt":"<","&lt;":"<","&gt":">","&gt;":">","&OElig;":"Œ","&oelig;":"œ","&Scaron;":"Š","&scaron;":"š","&Yuml;":"Ÿ","&circ;":"ˆ","&tilde;":"˜","&ensp;":" ","&emsp;":" ","&thinsp;":" ","&zwnj;":"‌","&zwj;":"‍","&lrm;":"‎","&rlm;":"‏","&ndash;":"–","&mdash;":"—","&lsquo;":"‘","&rsquo;":"’","&sbquo;":"‚","&ldquo;":"“","&rdquo;":"”","&bdquo;":"„","&dagger;":"†","&Dagger;":"‡","&permil;":"‰","&lsaquo;":"‹","&rsaquo;":"›","&euro;":"€","&fnof;":"ƒ","&Alpha;":"Α","&Beta;":"Β","&Gamma;":"Γ","&Delta;":"Δ","&Epsilon;":"Ε","&Zeta;":"Ζ","&Eta;":"Η","&Theta;":"Θ","&Iota;":"Ι","&Kappa;":"Κ","&Lambda;":"Λ","&Mu;":"Μ","&Nu;":"Ν","&Xi;":"Ξ","&Omicron;":"Ο","&Pi;":"Π","&Rho;":"Ρ","&Sigma;":"Σ","&Tau;":"Τ","&Upsilon;":"Υ","&Phi;":"Φ","&Chi;":"Χ","&Psi;":"Ψ","&Omega;":"Ω","&alpha;":"α","&beta;":"β","&gamma;":"γ","&delta;":"δ","&epsilon;":"ε","&zeta;":"ζ","&eta;":"η","&theta;":"θ","&iota;":"ι","&kappa;":"κ","&lambda;":"λ","&mu;":"μ","&nu;":"ν","&xi;":"ξ","&omicron;":"ο","&pi;":"π","&rho;":"ρ","&sigmaf;":"ς","&sigma;":"σ","&tau;":"τ","&upsilon;":"υ","&phi;":"φ","&chi;":"χ","&psi;":"ψ","&omega;":"ω","&thetasym;":"ϑ","&upsih;":"ϒ","&piv;":"ϖ","&bull;":"•","&hellip;":"…","&prime;":"′","&Prime;":"″","&oline;":"‾","&frasl;":"⁄","&weierp;":"℘","&image;":"ℑ","&real;":"ℜ","&trade;":"™","&alefsym;":"ℵ","&larr;":"←","&uarr;":"↑","&rarr;":"→","&darr;":"↓","&harr;":"↔","&crarr;":"↵","&lArr;":"⇐","&uArr;":"⇑","&rArr;":"⇒","&dArr;":"⇓","&hArr;":"⇔","&forall;":"∀","&part;":"∂","&exist;":"∃","&empty;":"∅","&nabla;":"∇","&isin;":"∈","&notin;":"∉","&ni;":"∋","&prod;":"∏","&sum;":"∑","&minus;":"−","&lowast;":"∗","&radic;":"√","&prop;":"∝","&infin;":"∞","&ang;":"∠","&and;":"∧","&or;":"∨","&cap;":"∩","&cup;":"∪","&int;":"∫","&there4;":"∴","&sim;":"∼","&cong;":"≅","&asymp;":"≈","&ne;":"≠","&equiv;":"≡","&le;":"≤","&ge;":"≥","&sub;":"⊂","&sup;":"⊃","&nsub;":"⊄","&sube;":"⊆","&supe;":"⊇","&oplus;":"⊕","&otimes;":"⊗","&perp;":"⊥","&sdot;":"⋅","&lceil;":"⌈","&rceil;":"⌉","&lfloor;":"⌊","&rfloor;":"⌋","&lang;":"〈","&rang;":"〉","&loz;":"◊","&spades;":"♠","&clubs;":"♣","&hearts;":"♥","&diams;":"♦"},characters:{"\'":"&apos;"," ":"&nbsp;","¡":"&iexcl;","¢":"&cent;","£":"&pound;","¤":"&curren;","¥":"&yen;","¦":"&brvbar;","§":"&sect;","¨":"&uml;","©":"&copy;",ª:"&ordf;","«":"&laquo;","¬":"&not;","­":"&shy;","®":"&reg;","¯":"&macr;","°":"&deg;","±":"&plusmn;","²":"&sup2;","³":"&sup3;","´":"&acute;",µ:"&micro;","¶":"&para;","·":"&middot;","¸":"&cedil;","¹":"&sup1;",º:"&ordm;","»":"&raquo;","¼":"&frac14;","½":"&frac12;","¾":"&frac34;","¿":"&iquest;",À:"&Agrave;",Á:"&Aacute;",Â:"&Acirc;",Ã:"&Atilde;",Ä:"&Auml;",Å:"&Aring;",Æ:"&AElig;",Ç:"&Ccedil;",È:"&Egrave;",É:"&Eacute;",Ê:"&Ecirc;",Ë:"&Euml;",Ì:"&Igrave;",Í:"&Iacute;",Î:"&Icirc;",Ï:"&Iuml;",Ð:"&ETH;",Ñ:"&Ntilde;",Ò:"&Ograve;",Ó:"&Oacute;",Ô:"&Ocirc;",Õ:"&Otilde;",Ö:"&Ouml;","×":"&times;",Ø:"&Oslash;",Ù:"&Ugrave;",Ú:"&Uacute;",Û:"&Ucirc;",Ü:"&Uuml;",Ý:"&Yacute;",Þ:"&THORN;",ß:"&szlig;",à:"&agrave;",á:"&aacute;",â:"&acirc;",ã:"&atilde;",ä:"&auml;",å:"&aring;",æ:"&aelig;",ç:"&ccedil;",è:"&egrave;",é:"&eacute;",ê:"&ecirc;",ë:"&euml;",ì:"&igrave;",í:"&iacute;",î:"&icirc;",ï:"&iuml;",ð:"&eth;",ñ:"&ntilde;",ò:"&ograve;",ó:"&oacute;",ô:"&ocirc;",õ:"&otilde;",ö:"&ouml;","÷":"&divide;",ø:"&oslash;",ù:"&ugrave;",ú:"&uacute;",û:"&ucirc;",ü:"&uuml;",ý:"&yacute;",þ:"&thorn;",ÿ:"&yuml;",\'"\':"&quot;","&":"&amp;","<":"&lt;",">":"&gt;",Œ:"&OElig;",œ:"&oelig;",Š:"&Scaron;",š:"&scaron;",Ÿ:"&Yuml;",ˆ:"&circ;","˜":"&tilde;"," ":"&ensp;"," ":"&emsp;"," ":"&thinsp;","‌":"&zwnj;","‍":"&zwj;","‎":"&lrm;","‏":"&rlm;","–":"&ndash;","—":"&mdash;","‘":"&lsquo;","’":"&rsquo;","‚":"&sbquo;","“":"&ldquo;","”":"&rdquo;","„":"&bdquo;","†":"&dagger;","‡":"&Dagger;","‰":"&permil;","‹":"&lsaquo;","›":"&rsaquo;","€":"&euro;",ƒ:"&fnof;",Α:"&Alpha;",Β:"&Beta;",Γ:"&Gamma;",Δ:"&Delta;",Ε:"&Epsilon;",Ζ:"&Zeta;",Η:"&Eta;",Θ:"&Theta;",Ι:"&Iota;",Κ:"&Kappa;",Λ:"&Lambda;",Μ:"&Mu;",Ν:"&Nu;",Ξ:"&Xi;",Ο:"&Omicron;",Π:"&Pi;",Ρ:"&Rho;",Σ:"&Sigma;",Τ:"&Tau;",Υ:"&Upsilon;",Φ:"&Phi;",Χ:"&Chi;",Ψ:"&Psi;",Ω:"&Omega;",α:"&alpha;",β:"&beta;",γ:"&gamma;",δ:"&delta;",ε:"&epsilon;",ζ:"&zeta;",η:"&eta;",θ:"&theta;",ι:"&iota;",κ:"&kappa;",λ:"&lambda;",μ:"&mu;",ν:"&nu;",ξ:"&xi;",ο:"&omicron;",π:"&pi;",ρ:"&rho;",ς:"&sigmaf;",σ:"&sigma;",τ:"&tau;",υ:"&upsilon;",φ:"&phi;",χ:"&chi;",ψ:"&psi;",ω:"&omega;",ϑ:"&thetasym;",ϒ:"&upsih;",ϖ:"&piv;","•":"&bull;","…":"&hellip;","′":"&prime;","″":"&Prime;","‾":"&oline;","⁄":"&frasl;",℘:"&weierp;",ℑ:"&image;",ℜ:"&real;","™":"&trade;",ℵ:"&alefsym;","←":"&larr;","↑":"&uarr;","→":"&rarr;","↓":"&darr;","↔":"&harr;","↵":"&crarr;","⇐":"&lArr;","⇑":"&uArr;","⇒":"&rArr;","⇓":"&dArr;","⇔":"&hArr;","∀":"&forall;","∂":"&part;","∃":"&exist;","∅":"&empty;","∇":"&nabla;","∈":"&isin;","∉":"&notin;","∋":"&ni;","∏":"&prod;","∑":"&sum;","−":"&minus;","∗":"&lowast;","√":"&radic;","∝":"&prop;","∞":"&infin;","∠":"&ang;","∧":"&and;","∨":"&or;","∩":"&cap;","∪":"&cup;","∫":"&int;","∴":"&there4;","∼":"&sim;","≅":"&cong;","≈":"&asymp;","≠":"&ne;","≡":"&equiv;","≤":"&le;","≥":"&ge;","⊂":"&sub;","⊃":"&sup;","⊄":"&nsub;","⊆":"&sube;","⊇":"&supe;","⊕":"&oplus;","⊗":"&otimes;","⊥":"&perp;","⋅":"&sdot;","⌈":"&lceil;","⌉":"&rceil;","⌊":"&lfloor;","⌋":"&rfloor;","〈":"&lang;","〉":"&rang;","◊":"&loz;","♠":"&spades;","♣":"&clubs;","♥":"&hearts;","♦":"&diams;"}},html5:{entities:{"&AElig":"Æ","&AElig;":"Æ","&AMP":"&","&AMP;":"&","&Aacute":"Á","&Aacute;":"Á","&Abreve;":"Ă","&Acirc":"Â","&Acirc;":"Â","&Acy;":"А","&Afr;":"𝔄","&Agrave":"À","&Agrave;":"À","&Alpha;":"Α","&Amacr;":"Ā","&And;":"⩓","&Aogon;":"Ą","&Aopf;":"𝔸","&ApplyFunction;":"⁡","&Aring":"Å","&Aring;":"Å","&Ascr;":"𝒜","&Assign;":"≔","&Atilde":"Ã","&Atilde;":"Ã","&Auml":"Ä","&Auml;":"Ä","&Backslash;":"∖","&Barv;":"⫧","&Barwed;":"⌆","&Bcy;":"Б","&Because;":"∵","&Bernoullis;":"ℬ","&Beta;":"Β","&Bfr;":"𝔅","&Bopf;":"𝔹","&Breve;":"˘","&Bscr;":"ℬ","&Bumpeq;":"≎","&CHcy;":"Ч","&COPY":"©","&COPY;":"©","&Cacute;":"Ć","&Cap;":"⋒","&CapitalDifferentialD;":"ⅅ","&Cayleys;":"ℭ","&Ccaron;":"Č","&Ccedil":"Ç","&Ccedil;":"Ç","&Ccirc;":"Ĉ","&Cconint;":"∰","&Cdot;":"Ċ","&Cedilla;":"¸","&CenterDot;":"·","&Cfr;":"ℭ","&Chi;":"Χ","&CircleDot;":"⊙","&CircleMinus;":"⊖","&CirclePlus;":"⊕","&CircleTimes;":"⊗","&ClockwiseContourIntegral;":"∲","&CloseCurlyDoubleQuote;":"”","&CloseCurlyQuote;":"’","&Colon;":"∷","&Colone;":"⩴","&Congruent;":"≡","&Conint;":"∯","&ContourIntegral;":"∮","&Copf;":"ℂ","&Coproduct;":"∐","&CounterClockwiseContourIntegral;":"∳","&Cross;":"⨯","&Cscr;":"𝒞","&Cup;":"⋓","&CupCap;":"≍","&DD;":"ⅅ","&DDotrahd;":"⤑","&DJcy;":"Ђ","&DScy;":"Ѕ","&DZcy;":"Џ","&Dagger;":"‡","&Darr;":"↡","&Dashv;":"⫤","&Dcaron;":"Ď","&Dcy;":"Д","&Del;":"∇","&Delta;":"Δ","&Dfr;":"𝔇","&DiacriticalAcute;":"´","&DiacriticalDot;":"˙","&DiacriticalDoubleAcute;":"˝","&DiacriticalGrave;":"`","&DiacriticalTilde;":"˜","&Diamond;":"⋄","&DifferentialD;":"ⅆ","&Dopf;":"𝔻","&Dot;":"¨","&DotDot;":"⃜","&DotEqual;":"≐","&DoubleContourIntegral;":"∯","&DoubleDot;":"¨","&DoubleDownArrow;":"⇓","&DoubleLeftArrow;":"⇐","&DoubleLeftRightArrow;":"⇔","&DoubleLeftTee;":"⫤","&DoubleLongLeftArrow;":"⟸","&DoubleLongLeftRightArrow;":"⟺","&DoubleLongRightArrow;":"⟹","&DoubleRightArrow;":"⇒","&DoubleRightTee;":"⊨","&DoubleUpArrow;":"⇑","&DoubleUpDownArrow;":"⇕","&DoubleVerticalBar;":"∥","&DownArrow;":"↓","&DownArrowBar;":"⤓","&DownArrowUpArrow;":"⇵","&DownBreve;":"̑","&DownLeftRightVector;":"⥐","&DownLeftTeeVector;":"⥞","&DownLeftVector;":"↽","&DownLeftVectorBar;":"⥖","&DownRightTeeVector;":"⥟","&DownRightVector;":"⇁","&DownRightVectorBar;":"⥗","&DownTee;":"⊤","&DownTeeArrow;":"↧","&Downarrow;":"⇓","&Dscr;":"𝒟","&Dstrok;":"Đ","&ENG;":"Ŋ","&ETH":"Ð","&ETH;":"Ð","&Eacute":"É","&Eacute;":"É","&Ecaron;":"Ě","&Ecirc":"Ê","&Ecirc;":"Ê","&Ecy;":"Э","&Edot;":"Ė","&Efr;":"𝔈","&Egrave":"È","&Egrave;":"È","&Element;":"∈","&Emacr;":"Ē","&EmptySmallSquare;":"◻","&EmptyVerySmallSquare;":"▫","&Eogon;":"Ę","&Eopf;":"𝔼","&Epsilon;":"Ε","&Equal;":"⩵","&EqualTilde;":"≂","&Equilibrium;":"⇌","&Escr;":"ℰ","&Esim;":"⩳","&Eta;":"Η","&Euml":"Ë","&Euml;":"Ë","&Exists;":"∃","&ExponentialE;":"ⅇ","&Fcy;":"Ф","&Ffr;":"𝔉","&FilledSmallSquare;":"◼","&FilledVerySmallSquare;":"▪","&Fopf;":"𝔽","&ForAll;":"∀","&Fouriertrf;":"ℱ","&Fscr;":"ℱ","&GJcy;":"Ѓ","&GT":">","&GT;":">","&Gamma;":"Γ","&Gammad;":"Ϝ","&Gbreve;":"Ğ","&Gcedil;":"Ģ","&Gcirc;":"Ĝ","&Gcy;":"Г","&Gdot;":"Ġ","&Gfr;":"𝔊","&Gg;":"⋙","&Gopf;":"𝔾","&GreaterEqual;":"≥","&GreaterEqualLess;":"⋛","&GreaterFullEqual;":"≧","&GreaterGreater;":"⪢","&GreaterLess;":"≷","&GreaterSlantEqual;":"⩾","&GreaterTilde;":"≳","&Gscr;":"𝒢","&Gt;":"≫","&HARDcy;":"Ъ","&Hacek;":"ˇ","&Hat;":"^","&Hcirc;":"Ĥ","&Hfr;":"ℌ","&HilbertSpace;":"ℋ","&Hopf;":"ℍ","&HorizontalLine;":"─","&Hscr;":"ℋ","&Hstrok;":"Ħ","&HumpDownHump;":"≎","&HumpEqual;":"≏","&IEcy;":"Е","&IJlig;":"Ĳ","&IOcy;":"Ё","&Iacute":"Í","&Iacute;":"Í","&Icirc":"Î","&Icirc;":"Î","&Icy;":"И","&Idot;":"İ","&Ifr;":"ℑ","&Igrave":"Ì","&Igrave;":"Ì","&Im;":"ℑ","&Imacr;":"Ī","&ImaginaryI;":"ⅈ","&Implies;":"⇒","&Int;":"∬","&Integral;":"∫","&Intersection;":"⋂","&InvisibleComma;":"⁣","&InvisibleTimes;":"⁢","&Iogon;":"Į","&Iopf;":"𝕀","&Iota;":"Ι","&Iscr;":"ℐ","&Itilde;":"Ĩ","&Iukcy;":"І","&Iuml":"Ï","&Iuml;":"Ï","&Jcirc;":"Ĵ","&Jcy;":"Й","&Jfr;":"𝔍","&Jopf;":"𝕁","&Jscr;":"𝒥","&Jsercy;":"Ј","&Jukcy;":"Є","&KHcy;":"Х","&KJcy;":"Ќ","&Kappa;":"Κ","&Kcedil;":"Ķ","&Kcy;":"К","&Kfr;":"𝔎","&Kopf;":"𝕂","&Kscr;":"𝒦","&LJcy;":"Љ","&LT":"<","&LT;":"<","&Lacute;":"Ĺ","&Lambda;":"Λ","&Lang;":"⟪","&Laplacetrf;":"ℒ","&Larr;":"↞","&Lcaron;":"Ľ","&Lcedil;":"Ļ","&Lcy;":"Л","&LeftAngleBracket;":"⟨","&LeftArrow;":"←","&LeftArrowBar;":"⇤","&LeftArrowRightArrow;":"⇆","&LeftCeiling;":"⌈","&LeftDoubleBracket;":"⟦","&LeftDownTeeVector;":"⥡","&LeftDownVector;":"⇃","&LeftDownVectorBar;":"⥙","&LeftFloor;":"⌊","&LeftRightArrow;":"↔","&LeftRightVector;":"⥎","&LeftTee;":"⊣","&LeftTeeArrow;":"↤","&LeftTeeVector;":"⥚","&LeftTriangle;":"⊲","&LeftTriangleBar;":"⧏","&LeftTriangleEqual;":"⊴","&LeftUpDownVector;":"⥑","&LeftUpTeeVector;":"⥠","&LeftUpVector;":"↿","&LeftUpVectorBar;":"⥘","&LeftVector;":"↼","&LeftVectorBar;":"⥒","&Leftarrow;":"⇐","&Leftrightarrow;":"⇔","&LessEqualGreater;":"⋚","&LessFullEqual;":"≦","&LessGreater;":"≶","&LessLess;":"⪡","&LessSlantEqual;":"⩽","&LessTilde;":"≲","&Lfr;":"𝔏","&Ll;":"⋘","&Lleftarrow;":"⇚","&Lmidot;":"Ŀ","&LongLeftArrow;":"⟵","&LongLeftRightArrow;":"⟷","&LongRightArrow;":"⟶","&Longleftarrow;":"⟸","&Longleftrightarrow;":"⟺","&Longrightarrow;":"⟹","&Lopf;":"𝕃","&LowerLeftArrow;":"↙","&LowerRightArrow;":"↘","&Lscr;":"ℒ","&Lsh;":"↰","&Lstrok;":"Ł","&Lt;":"≪","&Map;":"⤅","&Mcy;":"М","&MediumSpace;":" ","&Mellintrf;":"ℳ","&Mfr;":"𝔐","&MinusPlus;":"∓","&Mopf;":"𝕄","&Mscr;":"ℳ","&Mu;":"Μ","&NJcy;":"Њ","&Nacute;":"Ń","&Ncaron;":"Ň","&Ncedil;":"Ņ","&Ncy;":"Н","&NegativeMediumSpace;":"​","&NegativeThickSpace;":"​","&NegativeThinSpace;":"​","&NegativeVeryThinSpace;":"​","&NestedGreaterGreater;":"≫","&NestedLessLess;":"≪","&NewLine;":"\\n","&Nfr;":"𝔑","&NoBreak;":"⁠","&NonBreakingSpace;":" ","&Nopf;":"ℕ","&Not;":"⫬","&NotCongruent;":"≢","&NotCupCap;":"≭","&NotDoubleVerticalBar;":"∦","&NotElement;":"∉","&NotEqual;":"≠","&NotEqualTilde;":"≂̸","&NotExists;":"∄","&NotGreater;":"≯","&NotGreaterEqual;":"≱","&NotGreaterFullEqual;":"≧̸","&NotGreaterGreater;":"≫̸","&NotGreaterLess;":"≹","&NotGreaterSlantEqual;":"⩾̸","&NotGreaterTilde;":"≵","&NotHumpDownHump;":"≎̸","&NotHumpEqual;":"≏̸","&NotLeftTriangle;":"⋪","&NotLeftTriangleBar;":"⧏̸","&NotLeftTriangleEqual;":"⋬","&NotLess;":"≮","&NotLessEqual;":"≰","&NotLessGreater;":"≸","&NotLessLess;":"≪̸","&NotLessSlantEqual;":"⩽̸","&NotLessTilde;":"≴","&NotNestedGreaterGreater;":"⪢̸","&NotNestedLessLess;":"⪡̸","&NotPrecedes;":"⊀","&NotPrecedesEqual;":"⪯̸","&NotPrecedesSlantEqual;":"⋠","&NotReverseElement;":"∌","&NotRightTriangle;":"⋫","&NotRightTriangleBar;":"⧐̸","&NotRightTriangleEqual;":"⋭","&NotSquareSubset;":"⊏̸","&NotSquareSubsetEqual;":"⋢","&NotSquareSuperset;":"⊐̸","&NotSquareSupersetEqual;":"⋣","&NotSubset;":"⊂⃒","&NotSubsetEqual;":"⊈","&NotSucceeds;":"⊁","&NotSucceedsEqual;":"⪰̸","&NotSucceedsSlantEqual;":"⋡","&NotSucceedsTilde;":"≿̸","&NotSuperset;":"⊃⃒","&NotSupersetEqual;":"⊉","&NotTilde;":"≁","&NotTildeEqual;":"≄","&NotTildeFullEqual;":"≇","&NotTildeTilde;":"≉","&NotVerticalBar;":"∤","&Nscr;":"𝒩","&Ntilde":"Ñ","&Ntilde;":"Ñ","&Nu;":"Ν","&OElig;":"Œ","&Oacute":"Ó","&Oacute;":"Ó","&Ocirc":"Ô","&Ocirc;":"Ô","&Ocy;":"О","&Odblac;":"Ő","&Ofr;":"𝔒","&Ograve":"Ò","&Ograve;":"Ò","&Omacr;":"Ō","&Omega;":"Ω","&Omicron;":"Ο","&Oopf;":"𝕆","&OpenCurlyDoubleQuote;":"“","&OpenCurlyQuote;":"‘","&Or;":"⩔","&Oscr;":"𝒪","&Oslash":"Ø","&Oslash;":"Ø","&Otilde":"Õ","&Otilde;":"Õ","&Otimes;":"⨷","&Ouml":"Ö","&Ouml;":"Ö","&OverBar;":"‾","&OverBrace;":"⏞","&OverBracket;":"⎴","&OverParenthesis;":"⏜","&PartialD;":"∂","&Pcy;":"П","&Pfr;":"𝔓","&Phi;":"Φ","&Pi;":"Π","&PlusMinus;":"±","&Poincareplane;":"ℌ","&Popf;":"ℙ","&Pr;":"⪻","&Precedes;":"≺","&PrecedesEqual;":"⪯","&PrecedesSlantEqual;":"≼","&PrecedesTilde;":"≾","&Prime;":"″","&Product;":"∏","&Proportion;":"∷","&Proportional;":"∝","&Pscr;":"𝒫","&Psi;":"Ψ","&QUOT":\'"\',"&QUOT;":\'"\',"&Qfr;":"𝔔","&Qopf;":"ℚ","&Qscr;":"𝒬","&RBarr;":"⤐","&REG":"®","&REG;":"®","&Racute;":"Ŕ","&Rang;":"⟫","&Rarr;":"↠","&Rarrtl;":"⤖","&Rcaron;":"Ř","&Rcedil;":"Ŗ","&Rcy;":"Р","&Re;":"ℜ","&ReverseElement;":"∋","&ReverseEquilibrium;":"⇋","&ReverseUpEquilibrium;":"⥯","&Rfr;":"ℜ","&Rho;":"Ρ","&RightAngleBracket;":"⟩","&RightArrow;":"→","&RightArrowBar;":"⇥","&RightArrowLeftArrow;":"⇄","&RightCeiling;":"⌉","&RightDoubleBracket;":"⟧","&RightDownTeeVector;":"⥝","&RightDownVector;":"⇂","&RightDownVectorBar;":"⥕","&RightFloor;":"⌋","&RightTee;":"⊢","&RightTeeArrow;":"↦","&RightTeeVector;":"⥛","&RightTriangle;":"⊳","&RightTriangleBar;":"⧐","&RightTriangleEqual;":"⊵","&RightUpDownVector;":"⥏","&RightUpTeeVector;":"⥜","&RightUpVector;":"↾","&RightUpVectorBar;":"⥔","&RightVector;":"⇀","&RightVectorBar;":"⥓","&Rightarrow;":"⇒","&Ropf;":"ℝ","&RoundImplies;":"⥰","&Rrightarrow;":"⇛","&Rscr;":"ℛ","&Rsh;":"↱","&RuleDelayed;":"⧴","&SHCHcy;":"Щ","&SHcy;":"Ш","&SOFTcy;":"Ь","&Sacute;":"Ś","&Sc;":"⪼","&Scaron;":"Š","&Scedil;":"Ş","&Scirc;":"Ŝ","&Scy;":"С","&Sfr;":"𝔖","&ShortDownArrow;":"↓","&ShortLeftArrow;":"←","&ShortRightArrow;":"→","&ShortUpArrow;":"↑","&Sigma;":"Σ","&SmallCircle;":"∘","&Sopf;":"𝕊","&Sqrt;":"√","&Square;":"□","&SquareIntersection;":"⊓","&SquareSubset;":"⊏","&SquareSubsetEqual;":"⊑","&SquareSuperset;":"⊐","&SquareSupersetEqual;":"⊒","&SquareUnion;":"⊔","&Sscr;":"𝒮","&Star;":"⋆","&Sub;":"⋐","&Subset;":"⋐","&SubsetEqual;":"⊆","&Succeeds;":"≻","&SucceedsEqual;":"⪰","&SucceedsSlantEqual;":"≽","&SucceedsTilde;":"≿","&SuchThat;":"∋","&Sum;":"∑","&Sup;":"⋑","&Superset;":"⊃","&SupersetEqual;":"⊇","&Supset;":"⋑","&THORN":"Þ","&THORN;":"Þ","&TRADE;":"™","&TSHcy;":"Ћ","&TScy;":"Ц","&Tab;":"\\t","&Tau;":"Τ","&Tcaron;":"Ť","&Tcedil;":"Ţ","&Tcy;":"Т","&Tfr;":"𝔗","&Therefore;":"∴","&Theta;":"Θ","&ThickSpace;":"  ","&ThinSpace;":" ","&Tilde;":"∼","&TildeEqual;":"≃","&TildeFullEqual;":"≅","&TildeTilde;":"≈","&Topf;":"𝕋","&TripleDot;":"⃛","&Tscr;":"𝒯","&Tstrok;":"Ŧ","&Uacute":"Ú","&Uacute;":"Ú","&Uarr;":"↟","&Uarrocir;":"⥉","&Ubrcy;":"Ў","&Ubreve;":"Ŭ","&Ucirc":"Û","&Ucirc;":"Û","&Ucy;":"У","&Udblac;":"Ű","&Ufr;":"𝔘","&Ugrave":"Ù","&Ugrave;":"Ù","&Umacr;":"Ū","&UnderBar;":"_","&UnderBrace;":"⏟","&UnderBracket;":"⎵","&UnderParenthesis;":"⏝","&Union;":"⋃","&UnionPlus;":"⊎","&Uogon;":"Ų","&Uopf;":"𝕌","&UpArrow;":"↑","&UpArrowBar;":"⤒","&UpArrowDownArrow;":"⇅","&UpDownArrow;":"↕","&UpEquilibrium;":"⥮","&UpTee;":"⊥","&UpTeeArrow;":"↥","&Uparrow;":"⇑","&Updownarrow;":"⇕","&UpperLeftArrow;":"↖","&UpperRightArrow;":"↗","&Upsi;":"ϒ","&Upsilon;":"Υ","&Uring;":"Ů","&Uscr;":"𝒰","&Utilde;":"Ũ","&Uuml":"Ü","&Uuml;":"Ü","&VDash;":"⊫","&Vbar;":"⫫","&Vcy;":"В","&Vdash;":"⊩","&Vdashl;":"⫦","&Vee;":"⋁","&Verbar;":"‖","&Vert;":"‖","&VerticalBar;":"∣","&VerticalLine;":"|","&VerticalSeparator;":"❘","&VerticalTilde;":"≀","&VeryThinSpace;":" ","&Vfr;":"𝔙","&Vopf;":"𝕍","&Vscr;":"𝒱","&Vvdash;":"⊪","&Wcirc;":"Ŵ","&Wedge;":"⋀","&Wfr;":"𝔚","&Wopf;":"𝕎","&Wscr;":"𝒲","&Xfr;":"𝔛","&Xi;":"Ξ","&Xopf;":"𝕏","&Xscr;":"𝒳","&YAcy;":"Я","&YIcy;":"Ї","&YUcy;":"Ю","&Yacute":"Ý","&Yacute;":"Ý","&Ycirc;":"Ŷ","&Ycy;":"Ы","&Yfr;":"𝔜","&Yopf;":"𝕐","&Yscr;":"𝒴","&Yuml;":"Ÿ","&ZHcy;":"Ж","&Zacute;":"Ź","&Zcaron;":"Ž","&Zcy;":"З","&Zdot;":"Ż","&ZeroWidthSpace;":"​","&Zeta;":"Ζ","&Zfr;":"ℨ","&Zopf;":"ℤ","&Zscr;":"𝒵","&aacute":"á","&aacute;":"á","&abreve;":"ă","&ac;":"∾","&acE;":"∾̳","&acd;":"∿","&acirc":"â","&acirc;":"â","&acute":"´","&acute;":"´","&acy;":"а","&aelig":"æ","&aelig;":"æ","&af;":"⁡","&afr;":"𝔞","&agrave":"à","&agrave;":"à","&alefsym;":"ℵ","&aleph;":"ℵ","&alpha;":"α","&amacr;":"ā","&amalg;":"⨿","&amp":"&","&amp;":"&","&and;":"∧","&andand;":"⩕","&andd;":"⩜","&andslope;":"⩘","&andv;":"⩚","&ang;":"∠","&ange;":"⦤","&angle;":"∠","&angmsd;":"∡","&angmsdaa;":"⦨","&angmsdab;":"⦩","&angmsdac;":"⦪","&angmsdad;":"⦫","&angmsdae;":"⦬","&angmsdaf;":"⦭","&angmsdag;":"⦮","&angmsdah;":"⦯","&angrt;":"∟","&angrtvb;":"⊾","&angrtvbd;":"⦝","&angsph;":"∢","&angst;":"Å","&angzarr;":"⍼","&aogon;":"ą","&aopf;":"𝕒","&ap;":"≈","&apE;":"⩰","&apacir;":"⩯","&ape;":"≊","&apid;":"≋","&apos;":"\'","&approx;":"≈","&approxeq;":"≊","&aring":"å","&aring;":"å","&ascr;":"𝒶","&ast;":"*","&asymp;":"≈","&asympeq;":"≍","&atilde":"ã","&atilde;":"ã","&auml":"ä","&auml;":"ä","&awconint;":"∳","&awint;":"⨑","&bNot;":"⫭","&backcong;":"≌","&backepsilon;":"϶","&backprime;":"‵","&backsim;":"∽","&backsimeq;":"⋍","&barvee;":"⊽","&barwed;":"⌅","&barwedge;":"⌅","&bbrk;":"⎵","&bbrktbrk;":"⎶","&bcong;":"≌","&bcy;":"б","&bdquo;":"„","&becaus;":"∵","&because;":"∵","&bemptyv;":"⦰","&bepsi;":"϶","&bernou;":"ℬ","&beta;":"β","&beth;":"ℶ","&between;":"≬","&bfr;":"𝔟","&bigcap;":"⋂","&bigcirc;":"◯","&bigcup;":"⋃","&bigodot;":"⨀","&bigoplus;":"⨁","&bigotimes;":"⨂","&bigsqcup;":"⨆","&bigstar;":"★","&bigtriangledown;":"▽","&bigtriangleup;":"△","&biguplus;":"⨄","&bigvee;":"⋁","&bigwedge;":"⋀","&bkarow;":"⤍","&blacklozenge;":"⧫","&blacksquare;":"▪","&blacktriangle;":"▴","&blacktriangledown;":"▾","&blacktriangleleft;":"◂","&blacktriangleright;":"▸","&blank;":"␣","&blk12;":"▒","&blk14;":"░","&blk34;":"▓","&block;":"█","&bne;":"=⃥","&bnequiv;":"≡⃥","&bnot;":"⌐","&bopf;":"𝕓","&bot;":"⊥","&bottom;":"⊥","&bowtie;":"⋈","&boxDL;":"╗","&boxDR;":"╔","&boxDl;":"╖","&boxDr;":"╓","&boxH;":"═","&boxHD;":"╦","&boxHU;":"╩","&boxHd;":"╤","&boxHu;":"╧","&boxUL;":"╝","&boxUR;":"╚","&boxUl;":"╜","&boxUr;":"╙","&boxV;":"║","&boxVH;":"╬","&boxVL;":"╣","&boxVR;":"╠","&boxVh;":"╫","&boxVl;":"╢","&boxVr;":"╟","&boxbox;":"⧉","&boxdL;":"╕","&boxdR;":"╒","&boxdl;":"┐","&boxdr;":"┌","&boxh;":"─","&boxhD;":"╥","&boxhU;":"╨","&boxhd;":"┬","&boxhu;":"┴","&boxminus;":"⊟","&boxplus;":"⊞","&boxtimes;":"⊠","&boxuL;":"╛","&boxuR;":"╘","&boxul;":"┘","&boxur;":"└","&boxv;":"│","&boxvH;":"╪","&boxvL;":"╡","&boxvR;":"╞","&boxvh;":"┼","&boxvl;":"┤","&boxvr;":"├","&bprime;":"‵","&breve;":"˘","&brvbar":"¦","&brvbar;":"¦","&bscr;":"𝒷","&bsemi;":"⁏","&bsim;":"∽","&bsime;":"⋍","&bsol;":"\\\\","&bsolb;":"⧅","&bsolhsub;":"⟈","&bull;":"•","&bullet;":"•","&bump;":"≎","&bumpE;":"⪮","&bumpe;":"≏","&bumpeq;":"≏","&cacute;":"ć","&cap;":"∩","&capand;":"⩄","&capbrcup;":"⩉","&capcap;":"⩋","&capcup;":"⩇","&capdot;":"⩀","&caps;":"∩︀","&caret;":"⁁","&caron;":"ˇ","&ccaps;":"⩍","&ccaron;":"č","&ccedil":"ç","&ccedil;":"ç","&ccirc;":"ĉ","&ccups;":"⩌","&ccupssm;":"⩐","&cdot;":"ċ","&cedil":"¸","&cedil;":"¸","&cemptyv;":"⦲","&cent":"¢","&cent;":"¢","&centerdot;":"·","&cfr;":"𝔠","&chcy;":"ч","&check;":"✓","&checkmark;":"✓","&chi;":"χ","&cir;":"○","&cirE;":"⧃","&circ;":"ˆ","&circeq;":"≗","&circlearrowleft;":"↺","&circlearrowright;":"↻","&circledR;":"®","&circledS;":"Ⓢ","&circledast;":"⊛","&circledcirc;":"⊚","&circleddash;":"⊝","&cire;":"≗","&cirfnint;":"⨐","&cirmid;":"⫯","&cirscir;":"⧂","&clubs;":"♣","&clubsuit;":"♣","&colon;":":","&colone;":"≔","&coloneq;":"≔","&comma;":",","&commat;":"@","&comp;":"∁","&compfn;":"∘","&complement;":"∁","&complexes;":"ℂ","&cong;":"≅","&congdot;":"⩭","&conint;":"∮","&copf;":"𝕔","&coprod;":"∐","&copy":"©","&copy;":"©","&copysr;":"℗","&crarr;":"↵","&cross;":"✗","&cscr;":"𝒸","&csub;":"⫏","&csube;":"⫑","&csup;":"⫐","&csupe;":"⫒","&ctdot;":"⋯","&cudarrl;":"⤸","&cudarrr;":"⤵","&cuepr;":"⋞","&cuesc;":"⋟","&cularr;":"↶","&cularrp;":"⤽","&cup;":"∪","&cupbrcap;":"⩈","&cupcap;":"⩆","&cupcup;":"⩊","&cupdot;":"⊍","&cupor;":"⩅","&cups;":"∪︀","&curarr;":"↷","&curarrm;":"⤼","&curlyeqprec;":"⋞","&curlyeqsucc;":"⋟","&curlyvee;":"⋎","&curlywedge;":"⋏","&curren":"¤","&curren;":"¤","&curvearrowleft;":"↶","&curvearrowright;":"↷","&cuvee;":"⋎","&cuwed;":"⋏","&cwconint;":"∲","&cwint;":"∱","&cylcty;":"⌭","&dArr;":"⇓","&dHar;":"⥥","&dagger;":"†","&daleth;":"ℸ","&darr;":"↓","&dash;":"‐","&dashv;":"⊣","&dbkarow;":"⤏","&dblac;":"˝","&dcaron;":"ď","&dcy;":"д","&dd;":"ⅆ","&ddagger;":"‡","&ddarr;":"⇊","&ddotseq;":"⩷","&deg":"°","&deg;":"°","&delta;":"δ","&demptyv;":"⦱","&dfisht;":"⥿","&dfr;":"𝔡","&dharl;":"⇃","&dharr;":"⇂","&diam;":"⋄","&diamond;":"⋄","&diamondsuit;":"♦","&diams;":"♦","&die;":"¨","&digamma;":"ϝ","&disin;":"⋲","&div;":"÷","&divide":"÷","&divide;":"÷","&divideontimes;":"⋇","&divonx;":"⋇","&djcy;":"ђ","&dlcorn;":"⌞","&dlcrop;":"⌍","&dollar;":"$","&dopf;":"𝕕","&dot;":"˙","&doteq;":"≐","&doteqdot;":"≑","&dotminus;":"∸","&dotplus;":"∔","&dotsquare;":"⊡","&doublebarwedge;":"⌆","&downarrow;":"↓","&downdownarrows;":"⇊","&downharpoonleft;":"⇃","&downharpoonright;":"⇂","&drbkarow;":"⤐","&drcorn;":"⌟","&drcrop;":"⌌","&dscr;":"𝒹","&dscy;":"ѕ","&dsol;":"⧶","&dstrok;":"đ","&dtdot;":"⋱","&dtri;":"▿","&dtrif;":"▾","&duarr;":"⇵","&duhar;":"⥯","&dwangle;":"⦦","&dzcy;":"џ","&dzigrarr;":"⟿","&eDDot;":"⩷","&eDot;":"≑","&eacute":"é","&eacute;":"é","&easter;":"⩮","&ecaron;":"ě","&ecir;":"≖","&ecirc":"ê","&ecirc;":"ê","&ecolon;":"≕","&ecy;":"э","&edot;":"ė","&ee;":"ⅇ","&efDot;":"≒","&efr;":"𝔢","&eg;":"⪚","&egrave":"è","&egrave;":"è","&egs;":"⪖","&egsdot;":"⪘","&el;":"⪙","&elinters;":"⏧","&ell;":"ℓ","&els;":"⪕","&elsdot;":"⪗","&emacr;":"ē","&empty;":"∅","&emptyset;":"∅","&emptyv;":"∅","&emsp13;":" ","&emsp14;":" ","&emsp;":" ","&eng;":"ŋ","&ensp;":" ","&eogon;":"ę","&eopf;":"𝕖","&epar;":"⋕","&eparsl;":"⧣","&eplus;":"⩱","&epsi;":"ε","&epsilon;":"ε","&epsiv;":"ϵ","&eqcirc;":"≖","&eqcolon;":"≕","&eqsim;":"≂","&eqslantgtr;":"⪖","&eqslantless;":"⪕","&equals;":"=","&equest;":"≟","&equiv;":"≡","&equivDD;":"⩸","&eqvparsl;":"⧥","&erDot;":"≓","&erarr;":"⥱","&escr;":"ℯ","&esdot;":"≐","&esim;":"≂","&eta;":"η","&eth":"ð","&eth;":"ð","&euml":"ë","&euml;":"ë","&euro;":"€","&excl;":"!","&exist;":"∃","&expectation;":"ℰ","&exponentiale;":"ⅇ","&fallingdotseq;":"≒","&fcy;":"ф","&female;":"♀","&ffilig;":"ﬃ","&fflig;":"ﬀ","&ffllig;":"ﬄ","&ffr;":"𝔣","&filig;":"ﬁ","&fjlig;":"fj","&flat;":"♭","&fllig;":"ﬂ","&fltns;":"▱","&fnof;":"ƒ","&fopf;":"𝕗","&forall;":"∀","&fork;":"⋔","&forkv;":"⫙","&fpartint;":"⨍","&frac12":"½","&frac12;":"½","&frac13;":"⅓","&frac14":"¼","&frac14;":"¼","&frac15;":"⅕","&frac16;":"⅙","&frac18;":"⅛","&frac23;":"⅔","&frac25;":"⅖","&frac34":"¾","&frac34;":"¾","&frac35;":"⅗","&frac38;":"⅜","&frac45;":"⅘","&frac56;":"⅚","&frac58;":"⅝","&frac78;":"⅞","&frasl;":"⁄","&frown;":"⌢","&fscr;":"𝒻","&gE;":"≧","&gEl;":"⪌","&gacute;":"ǵ","&gamma;":"γ","&gammad;":"ϝ","&gap;":"⪆","&gbreve;":"ğ","&gcirc;":"ĝ","&gcy;":"г","&gdot;":"ġ","&ge;":"≥","&gel;":"⋛","&geq;":"≥","&geqq;":"≧","&geqslant;":"⩾","&ges;":"⩾","&gescc;":"⪩","&gesdot;":"⪀","&gesdoto;":"⪂","&gesdotol;":"⪄","&gesl;":"⋛︀","&gesles;":"⪔","&gfr;":"𝔤","&gg;":"≫","&ggg;":"⋙","&gimel;":"ℷ","&gjcy;":"ѓ","&gl;":"≷","&glE;":"⪒","&gla;":"⪥","&glj;":"⪤","&gnE;":"≩","&gnap;":"⪊","&gnapprox;":"⪊","&gne;":"⪈","&gneq;":"⪈","&gneqq;":"≩","&gnsim;":"⋧","&gopf;":"𝕘","&grave;":"`","&gscr;":"ℊ","&gsim;":"≳","&gsime;":"⪎","&gsiml;":"⪐","&gt":">","&gt;":">","&gtcc;":"⪧","&gtcir;":"⩺","&gtdot;":"⋗","&gtlPar;":"⦕","&gtquest;":"⩼","&gtrapprox;":"⪆","&gtrarr;":"⥸","&gtrdot;":"⋗","&gtreqless;":"⋛","&gtreqqless;":"⪌","&gtrless;":"≷","&gtrsim;":"≳","&gvertneqq;":"≩︀","&gvnE;":"≩︀","&hArr;":"⇔","&hairsp;":" ","&half;":"½","&hamilt;":"ℋ","&hardcy;":"ъ","&harr;":"↔","&harrcir;":"⥈","&harrw;":"↭","&hbar;":"ℏ","&hcirc;":"ĥ","&hearts;":"♥","&heartsuit;":"♥","&hellip;":"…","&hercon;":"⊹","&hfr;":"𝔥","&hksearow;":"⤥","&hkswarow;":"⤦","&hoarr;":"⇿","&homtht;":"∻","&hookleftarrow;":"↩","&hookrightarrow;":"↪","&hopf;":"𝕙","&horbar;":"―","&hscr;":"𝒽","&hslash;":"ℏ","&hstrok;":"ħ","&hybull;":"⁃","&hyphen;":"‐","&iacute":"í","&iacute;":"í","&ic;":"⁣","&icirc":"î","&icirc;":"î","&icy;":"и","&iecy;":"е","&iexcl":"¡","&iexcl;":"¡","&iff;":"⇔","&ifr;":"𝔦","&igrave":"ì","&igrave;":"ì","&ii;":"ⅈ","&iiiint;":"⨌","&iiint;":"∭","&iinfin;":"⧜","&iiota;":"℩","&ijlig;":"ĳ","&imacr;":"ī","&image;":"ℑ","&imagline;":"ℐ","&imagpart;":"ℑ","&imath;":"ı","&imof;":"⊷","&imped;":"Ƶ","&in;":"∈","&incare;":"℅","&infin;":"∞","&infintie;":"⧝","&inodot;":"ı","&int;":"∫","&intcal;":"⊺","&integers;":"ℤ","&intercal;":"⊺","&intlarhk;":"⨗","&intprod;":"⨼","&iocy;":"ё","&iogon;":"į","&iopf;":"𝕚","&iota;":"ι","&iprod;":"⨼","&iquest":"¿","&iquest;":"¿","&iscr;":"𝒾","&isin;":"∈","&isinE;":"⋹","&isindot;":"⋵","&isins;":"⋴","&isinsv;":"⋳","&isinv;":"∈","&it;":"⁢","&itilde;":"ĩ","&iukcy;":"і","&iuml":"ï","&iuml;":"ï","&jcirc;":"ĵ","&jcy;":"й","&jfr;":"𝔧","&jmath;":"ȷ","&jopf;":"𝕛","&jscr;":"𝒿","&jsercy;":"ј","&jukcy;":"є","&kappa;":"κ","&kappav;":"ϰ","&kcedil;":"ķ","&kcy;":"к","&kfr;":"𝔨","&kgreen;":"ĸ","&khcy;":"х","&kjcy;":"ќ","&kopf;":"𝕜","&kscr;":"𝓀","&lAarr;":"⇚","&lArr;":"⇐","&lAtail;":"⤛","&lBarr;":"⤎","&lE;":"≦","&lEg;":"⪋","&lHar;":"⥢","&lacute;":"ĺ","&laemptyv;":"⦴","&lagran;":"ℒ","&lambda;":"λ","&lang;":"⟨","&langd;":"⦑","&langle;":"⟨","&lap;":"⪅","&laquo":"«","&laquo;":"«","&larr;":"←","&larrb;":"⇤","&larrbfs;":"⤟","&larrfs;":"⤝","&larrhk;":"↩","&larrlp;":"↫","&larrpl;":"⤹","&larrsim;":"⥳","&larrtl;":"↢","&lat;":"⪫","&latail;":"⤙","&late;":"⪭","&lates;":"⪭︀","&lbarr;":"⤌","&lbbrk;":"❲","&lbrace;":"{","&lbrack;":"[","&lbrke;":"⦋","&lbrksld;":"⦏","&lbrkslu;":"⦍","&lcaron;":"ľ","&lcedil;":"ļ","&lceil;":"⌈","&lcub;":"{","&lcy;":"л","&ldca;":"⤶","&ldquo;":"“","&ldquor;":"„","&ldrdhar;":"⥧","&ldrushar;":"⥋","&ldsh;":"↲","&le;":"≤","&leftarrow;":"←","&leftarrowtail;":"↢","&leftharpoondown;":"↽","&leftharpoonup;":"↼","&leftleftarrows;":"⇇","&leftrightarrow;":"↔","&leftrightarrows;":"⇆","&leftrightharpoons;":"⇋","&leftrightsquigarrow;":"↭","&leftthreetimes;":"⋋","&leg;":"⋚","&leq;":"≤","&leqq;":"≦","&leqslant;":"⩽","&les;":"⩽","&lescc;":"⪨","&lesdot;":"⩿","&lesdoto;":"⪁","&lesdotor;":"⪃","&lesg;":"⋚︀","&lesges;":"⪓","&lessapprox;":"⪅","&lessdot;":"⋖","&lesseqgtr;":"⋚","&lesseqqgtr;":"⪋","&lessgtr;":"≶","&lesssim;":"≲","&lfisht;":"⥼","&lfloor;":"⌊","&lfr;":"𝔩","&lg;":"≶","&lgE;":"⪑","&lhard;":"↽","&lharu;":"↼","&lharul;":"⥪","&lhblk;":"▄","&ljcy;":"љ","&ll;":"≪","&llarr;":"⇇","&llcorner;":"⌞","&llhard;":"⥫","&lltri;":"◺","&lmidot;":"ŀ","&lmoust;":"⎰","&lmoustache;":"⎰","&lnE;":"≨","&lnap;":"⪉","&lnapprox;":"⪉","&lne;":"⪇","&lneq;":"⪇","&lneqq;":"≨","&lnsim;":"⋦","&loang;":"⟬","&loarr;":"⇽","&lobrk;":"⟦","&longleftarrow;":"⟵","&longleftrightarrow;":"⟷","&longmapsto;":"⟼","&longrightarrow;":"⟶","&looparrowleft;":"↫","&looparrowright;":"↬","&lopar;":"⦅","&lopf;":"𝕝","&loplus;":"⨭","&lotimes;":"⨴","&lowast;":"∗","&lowbar;":"_","&loz;":"◊","&lozenge;":"◊","&lozf;":"⧫","&lpar;":"(","&lparlt;":"⦓","&lrarr;":"⇆","&lrcorner;":"⌟","&lrhar;":"⇋","&lrhard;":"⥭","&lrm;":"‎","&lrtri;":"⊿","&lsaquo;":"‹","&lscr;":"𝓁","&lsh;":"↰","&lsim;":"≲","&lsime;":"⪍","&lsimg;":"⪏","&lsqb;":"[","&lsquo;":"‘","&lsquor;":"‚","&lstrok;":"ł","&lt":"<","&lt;":"<","&ltcc;":"⪦","&ltcir;":"⩹","&ltdot;":"⋖","&lthree;":"⋋","&ltimes;":"⋉","&ltlarr;":"⥶","&ltquest;":"⩻","&ltrPar;":"⦖","&ltri;":"◃","&ltrie;":"⊴","&ltrif;":"◂","&lurdshar;":"⥊","&luruhar;":"⥦","&lvertneqq;":"≨︀","&lvnE;":"≨︀","&mDDot;":"∺","&macr":"¯","&macr;":"¯","&male;":"♂","&malt;":"✠","&maltese;":"✠","&map;":"↦","&mapsto;":"↦","&mapstodown;":"↧","&mapstoleft;":"↤","&mapstoup;":"↥","&marker;":"▮","&mcomma;":"⨩","&mcy;":"м","&mdash;":"—","&measuredangle;":"∡","&mfr;":"𝔪","&mho;":"℧","&micro":"µ","&micro;":"µ","&mid;":"∣","&midast;":"*","&midcir;":"⫰","&middot":"·","&middot;":"·","&minus;":"−","&minusb;":"⊟","&minusd;":"∸","&minusdu;":"⨪","&mlcp;":"⫛","&mldr;":"…","&mnplus;":"∓","&models;":"⊧","&mopf;":"𝕞","&mp;":"∓","&mscr;":"𝓂","&mstpos;":"∾","&mu;":"μ","&multimap;":"⊸","&mumap;":"⊸","&nGg;":"⋙̸","&nGt;":"≫⃒","&nGtv;":"≫̸","&nLeftarrow;":"⇍","&nLeftrightarrow;":"⇎","&nLl;":"⋘̸","&nLt;":"≪⃒","&nLtv;":"≪̸","&nRightarrow;":"⇏","&nVDash;":"⊯","&nVdash;":"⊮","&nabla;":"∇","&nacute;":"ń","&nang;":"∠⃒","&nap;":"≉","&napE;":"⩰̸","&napid;":"≋̸","&napos;":"ŉ","&napprox;":"≉","&natur;":"♮","&natural;":"♮","&naturals;":"ℕ","&nbsp":" ","&nbsp;":" ","&nbump;":"≎̸","&nbumpe;":"≏̸","&ncap;":"⩃","&ncaron;":"ň","&ncedil;":"ņ","&ncong;":"≇","&ncongdot;":"⩭̸","&ncup;":"⩂","&ncy;":"н","&ndash;":"–","&ne;":"≠","&neArr;":"⇗","&nearhk;":"⤤","&nearr;":"↗","&nearrow;":"↗","&nedot;":"≐̸","&nequiv;":"≢","&nesear;":"⤨","&nesim;":"≂̸","&nexist;":"∄","&nexists;":"∄","&nfr;":"𝔫","&ngE;":"≧̸","&nge;":"≱","&ngeq;":"≱","&ngeqq;":"≧̸","&ngeqslant;":"⩾̸","&nges;":"⩾̸","&ngsim;":"≵","&ngt;":"≯","&ngtr;":"≯","&nhArr;":"⇎","&nharr;":"↮","&nhpar;":"⫲","&ni;":"∋","&nis;":"⋼","&nisd;":"⋺","&niv;":"∋","&njcy;":"њ","&nlArr;":"⇍","&nlE;":"≦̸","&nlarr;":"↚","&nldr;":"‥","&nle;":"≰","&nleftarrow;":"↚","&nleftrightarrow;":"↮","&nleq;":"≰","&nleqq;":"≦̸","&nleqslant;":"⩽̸","&nles;":"⩽̸","&nless;":"≮","&nlsim;":"≴","&nlt;":"≮","&nltri;":"⋪","&nltrie;":"⋬","&nmid;":"∤","&nopf;":"𝕟","&not":"¬","&not;":"¬","&notin;":"∉","&notinE;":"⋹̸","&notindot;":"⋵̸","&notinva;":"∉","&notinvb;":"⋷","&notinvc;":"⋶","&notni;":"∌","&notniva;":"∌","&notnivb;":"⋾","&notnivc;":"⋽","&npar;":"∦","&nparallel;":"∦","&nparsl;":"⫽⃥","&npart;":"∂̸","&npolint;":"⨔","&npr;":"⊀","&nprcue;":"⋠","&npre;":"⪯̸","&nprec;":"⊀","&npreceq;":"⪯̸","&nrArr;":"⇏","&nrarr;":"↛","&nrarrc;":"⤳̸","&nrarrw;":"↝̸","&nrightarrow;":"↛","&nrtri;":"⋫","&nrtrie;":"⋭","&nsc;":"⊁","&nsccue;":"⋡","&nsce;":"⪰̸","&nscr;":"𝓃","&nshortmid;":"∤","&nshortparallel;":"∦","&nsim;":"≁","&nsime;":"≄","&nsimeq;":"≄","&nsmid;":"∤","&nspar;":"∦","&nsqsube;":"⋢","&nsqsupe;":"⋣","&nsub;":"⊄","&nsubE;":"⫅̸","&nsube;":"⊈","&nsubset;":"⊂⃒","&nsubseteq;":"⊈","&nsubseteqq;":"⫅̸","&nsucc;":"⊁","&nsucceq;":"⪰̸","&nsup;":"⊅","&nsupE;":"⫆̸","&nsupe;":"⊉","&nsupset;":"⊃⃒","&nsupseteq;":"⊉","&nsupseteqq;":"⫆̸","&ntgl;":"≹","&ntilde":"ñ","&ntilde;":"ñ","&ntlg;":"≸","&ntriangleleft;":"⋪","&ntrianglelefteq;":"⋬","&ntriangleright;":"⋫","&ntrianglerighteq;":"⋭","&nu;":"ν","&num;":"#","&numero;":"№","&numsp;":" ","&nvDash;":"⊭","&nvHarr;":"⤄","&nvap;":"≍⃒","&nvdash;":"⊬","&nvge;":"≥⃒","&nvgt;":">⃒","&nvinfin;":"⧞","&nvlArr;":"⤂","&nvle;":"≤⃒","&nvlt;":"<⃒","&nvltrie;":"⊴⃒","&nvrArr;":"⤃","&nvrtrie;":"⊵⃒","&nvsim;":"∼⃒","&nwArr;":"⇖","&nwarhk;":"⤣","&nwarr;":"↖","&nwarrow;":"↖","&nwnear;":"⤧","&oS;":"Ⓢ","&oacute":"ó","&oacute;":"ó","&oast;":"⊛","&ocir;":"⊚","&ocirc":"ô","&ocirc;":"ô","&ocy;":"о","&odash;":"⊝","&odblac;":"ő","&odiv;":"⨸","&odot;":"⊙","&odsold;":"⦼","&oelig;":"œ","&ofcir;":"⦿","&ofr;":"𝔬","&ogon;":"˛","&ograve":"ò","&ograve;":"ò","&ogt;":"⧁","&ohbar;":"⦵","&ohm;":"Ω","&oint;":"∮","&olarr;":"↺","&olcir;":"⦾","&olcross;":"⦻","&oline;":"‾","&olt;":"⧀","&omacr;":"ō","&omega;":"ω","&omicron;":"ο","&omid;":"⦶","&ominus;":"⊖","&oopf;":"𝕠","&opar;":"⦷","&operp;":"⦹","&oplus;":"⊕","&or;":"∨","&orarr;":"↻","&ord;":"⩝","&order;":"ℴ","&orderof;":"ℴ","&ordf":"ª","&ordf;":"ª","&ordm":"º","&ordm;":"º","&origof;":"⊶","&oror;":"⩖","&orslope;":"⩗","&orv;":"⩛","&oscr;":"ℴ","&oslash":"ø","&oslash;":"ø","&osol;":"⊘","&otilde":"õ","&otilde;":"õ","&otimes;":"⊗","&otimesas;":"⨶","&ouml":"ö","&ouml;":"ö","&ovbar;":"⌽","&par;":"∥","&para":"¶","&para;":"¶","&parallel;":"∥","&parsim;":"⫳","&parsl;":"⫽","&part;":"∂","&pcy;":"п","&percnt;":"%","&period;":".","&permil;":"‰","&perp;":"⊥","&pertenk;":"‱","&pfr;":"𝔭","&phi;":"φ","&phiv;":"ϕ","&phmmat;":"ℳ","&phone;":"☎","&pi;":"π","&pitchfork;":"⋔","&piv;":"ϖ","&planck;":"ℏ","&planckh;":"ℎ","&plankv;":"ℏ","&plus;":"+","&plusacir;":"⨣","&plusb;":"⊞","&pluscir;":"⨢","&plusdo;":"∔","&plusdu;":"⨥","&pluse;":"⩲","&plusmn":"±","&plusmn;":"±","&plussim;":"⨦","&plustwo;":"⨧","&pm;":"±","&pointint;":"⨕","&popf;":"𝕡","&pound":"£","&pound;":"£","&pr;":"≺","&prE;":"⪳","&prap;":"⪷","&prcue;":"≼","&pre;":"⪯","&prec;":"≺","&precapprox;":"⪷","&preccurlyeq;":"≼","&preceq;":"⪯","&precnapprox;":"⪹","&precneqq;":"⪵","&precnsim;":"⋨","&precsim;":"≾","&prime;":"′","&primes;":"ℙ","&prnE;":"⪵","&prnap;":"⪹","&prnsim;":"⋨","&prod;":"∏","&profalar;":"⌮","&profline;":"⌒","&profsurf;":"⌓","&prop;":"∝","&propto;":"∝","&prsim;":"≾","&prurel;":"⊰","&pscr;":"𝓅","&psi;":"ψ","&puncsp;":" ","&qfr;":"𝔮","&qint;":"⨌","&qopf;":"𝕢","&qprime;":"⁗","&qscr;":"𝓆","&quaternions;":"ℍ","&quatint;":"⨖","&quest;":"?","&questeq;":"≟","&quot":\'"\',"&quot;":\'"\',"&rAarr;":"⇛","&rArr;":"⇒","&rAtail;":"⤜","&rBarr;":"⤏","&rHar;":"⥤","&race;":"∽̱","&racute;":"ŕ","&radic;":"√","&raemptyv;":"⦳","&rang;":"⟩","&rangd;":"⦒","&range;":"⦥","&rangle;":"⟩","&raquo":"»","&raquo;":"»","&rarr;":"→","&rarrap;":"⥵","&rarrb;":"⇥","&rarrbfs;":"⤠","&rarrc;":"⤳","&rarrfs;":"⤞","&rarrhk;":"↪","&rarrlp;":"↬","&rarrpl;":"⥅","&rarrsim;":"⥴","&rarrtl;":"↣","&rarrw;":"↝","&ratail;":"⤚","&ratio;":"∶","&rationals;":"ℚ","&rbarr;":"⤍","&rbbrk;":"❳","&rbrace;":"}","&rbrack;":"]","&rbrke;":"⦌","&rbrksld;":"⦎","&rbrkslu;":"⦐","&rcaron;":"ř","&rcedil;":"ŗ","&rceil;":"⌉","&rcub;":"}","&rcy;":"р","&rdca;":"⤷","&rdldhar;":"⥩","&rdquo;":"”","&rdquor;":"”","&rdsh;":"↳","&real;":"ℜ","&realine;":"ℛ","&realpart;":"ℜ","&reals;":"ℝ","&rect;":"▭","&reg":"®","&reg;":"®","&rfisht;":"⥽","&rfloor;":"⌋","&rfr;":"𝔯","&rhard;":"⇁","&rharu;":"⇀","&rharul;":"⥬","&rho;":"ρ","&rhov;":"ϱ","&rightarrow;":"→","&rightarrowtail;":"↣","&rightharpoondown;":"⇁","&rightharpoonup;":"⇀","&rightleftarrows;":"⇄","&rightleftharpoons;":"⇌","&rightrightarrows;":"⇉","&rightsquigarrow;":"↝","&rightthreetimes;":"⋌","&ring;":"˚","&risingdotseq;":"≓","&rlarr;":"⇄","&rlhar;":"⇌","&rlm;":"‏","&rmoust;":"⎱","&rmoustache;":"⎱","&rnmid;":"⫮","&roang;":"⟭","&roarr;":"⇾","&robrk;":"⟧","&ropar;":"⦆","&ropf;":"𝕣","&roplus;":"⨮","&rotimes;":"⨵","&rpar;":")","&rpargt;":"⦔","&rppolint;":"⨒","&rrarr;":"⇉","&rsaquo;":"›","&rscr;":"𝓇","&rsh;":"↱","&rsqb;":"]","&rsquo;":"’","&rsquor;":"’","&rthree;":"⋌","&rtimes;":"⋊","&rtri;":"▹","&rtrie;":"⊵","&rtrif;":"▸","&rtriltri;":"⧎","&ruluhar;":"⥨","&rx;":"℞","&sacute;":"ś","&sbquo;":"‚","&sc;":"≻","&scE;":"⪴","&scap;":"⪸","&scaron;":"š","&sccue;":"≽","&sce;":"⪰","&scedil;":"ş","&scirc;":"ŝ","&scnE;":"⪶","&scnap;":"⪺","&scnsim;":"⋩","&scpolint;":"⨓","&scsim;":"≿","&scy;":"с","&sdot;":"⋅","&sdotb;":"⊡","&sdote;":"⩦","&seArr;":"⇘","&searhk;":"⤥","&searr;":"↘","&searrow;":"↘","&sect":"§","&sect;":"§","&semi;":";","&seswar;":"⤩","&setminus;":"∖","&setmn;":"∖","&sext;":"✶","&sfr;":"𝔰","&sfrown;":"⌢","&sharp;":"♯","&shchcy;":"щ","&shcy;":"ш","&shortmid;":"∣","&shortparallel;":"∥","&shy":"­","&shy;":"­","&sigma;":"σ","&sigmaf;":"ς","&sigmav;":"ς","&sim;":"∼","&simdot;":"⩪","&sime;":"≃","&simeq;":"≃","&simg;":"⪞","&simgE;":"⪠","&siml;":"⪝","&simlE;":"⪟","&simne;":"≆","&simplus;":"⨤","&simrarr;":"⥲","&slarr;":"←","&smallsetminus;":"∖","&smashp;":"⨳","&smeparsl;":"⧤","&smid;":"∣","&smile;":"⌣","&smt;":"⪪","&smte;":"⪬","&smtes;":"⪬︀","&softcy;":"ь","&sol;":"/","&solb;":"⧄","&solbar;":"⌿","&sopf;":"𝕤","&spades;":"♠","&spadesuit;":"♠","&spar;":"∥","&sqcap;":"⊓","&sqcaps;":"⊓︀","&sqcup;":"⊔","&sqcups;":"⊔︀","&sqsub;":"⊏","&sqsube;":"⊑","&sqsubset;":"⊏","&sqsubseteq;":"⊑","&sqsup;":"⊐","&sqsupe;":"⊒","&sqsupset;":"⊐","&sqsupseteq;":"⊒","&squ;":"□","&square;":"□","&squarf;":"▪","&squf;":"▪","&srarr;":"→","&sscr;":"𝓈","&ssetmn;":"∖","&ssmile;":"⌣","&sstarf;":"⋆","&star;":"☆","&starf;":"★","&straightepsilon;":"ϵ","&straightphi;":"ϕ","&strns;":"¯","&sub;":"⊂","&subE;":"⫅","&subdot;":"⪽","&sube;":"⊆","&subedot;":"⫃","&submult;":"⫁","&subnE;":"⫋","&subne;":"⊊","&subplus;":"⪿","&subrarr;":"⥹","&subset;":"⊂","&subseteq;":"⊆","&subseteqq;":"⫅","&subsetneq;":"⊊","&subsetneqq;":"⫋","&subsim;":"⫇","&subsub;":"⫕","&subsup;":"⫓","&succ;":"≻","&succapprox;":"⪸","&succcurlyeq;":"≽","&succeq;":"⪰","&succnapprox;":"⪺","&succneqq;":"⪶","&succnsim;":"⋩","&succsim;":"≿","&sum;":"∑","&sung;":"♪","&sup1":"¹","&sup1;":"¹","&sup2":"²","&sup2;":"²","&sup3":"³","&sup3;":"³","&sup;":"⊃","&supE;":"⫆","&supdot;":"⪾","&supdsub;":"⫘","&supe;":"⊇","&supedot;":"⫄","&suphsol;":"⟉","&suphsub;":"⫗","&suplarr;":"⥻","&supmult;":"⫂","&supnE;":"⫌","&supne;":"⊋","&supplus;":"⫀","&supset;":"⊃","&supseteq;":"⊇","&supseteqq;":"⫆","&supsetneq;":"⊋","&supsetneqq;":"⫌","&supsim;":"⫈","&supsub;":"⫔","&supsup;":"⫖","&swArr;":"⇙","&swarhk;":"⤦","&swarr;":"↙","&swarrow;":"↙","&swnwar;":"⤪","&szlig":"ß","&szlig;":"ß","&target;":"⌖","&tau;":"τ","&tbrk;":"⎴","&tcaron;":"ť","&tcedil;":"ţ","&tcy;":"т","&tdot;":"⃛","&telrec;":"⌕","&tfr;":"𝔱","&there4;":"∴","&therefore;":"∴","&theta;":"θ","&thetasym;":"ϑ","&thetav;":"ϑ","&thickapprox;":"≈","&thicksim;":"∼","&thinsp;":" ","&thkap;":"≈","&thksim;":"∼","&thorn":"þ","&thorn;":"þ","&tilde;":"˜","&times":"×","&times;":"×","&timesb;":"⊠","&timesbar;":"⨱","&timesd;":"⨰","&tint;":"∭","&toea;":"⤨","&top;":"⊤","&topbot;":"⌶","&topcir;":"⫱","&topf;":"𝕥","&topfork;":"⫚","&tosa;":"⤩","&tprime;":"‴","&trade;":"™","&triangle;":"▵","&triangledown;":"▿","&triangleleft;":"◃","&trianglelefteq;":"⊴","&triangleq;":"≜","&triangleright;":"▹","&trianglerighteq;":"⊵","&tridot;":"◬","&trie;":"≜","&triminus;":"⨺","&triplus;":"⨹","&trisb;":"⧍","&tritime;":"⨻","&trpezium;":"⏢","&tscr;":"𝓉","&tscy;":"ц","&tshcy;":"ћ","&tstrok;":"ŧ","&twixt;":"≬","&twoheadleftarrow;":"↞","&twoheadrightarrow;":"↠","&uArr;":"⇑","&uHar;":"⥣","&uacute":"ú","&uacute;":"ú","&uarr;":"↑","&ubrcy;":"ў","&ubreve;":"ŭ","&ucirc":"û","&ucirc;":"û","&ucy;":"у","&udarr;":"⇅","&udblac;":"ű","&udhar;":"⥮","&ufisht;":"⥾","&ufr;":"𝔲","&ugrave":"ù","&ugrave;":"ù","&uharl;":"↿","&uharr;":"↾","&uhblk;":"▀","&ulcorn;":"⌜","&ulcorner;":"⌜","&ulcrop;":"⌏","&ultri;":"◸","&umacr;":"ū","&uml":"¨","&uml;":"¨","&uogon;":"ų","&uopf;":"𝕦","&uparrow;":"↑","&updownarrow;":"↕","&upharpoonleft;":"↿","&upharpoonright;":"↾","&uplus;":"⊎","&upsi;":"υ","&upsih;":"ϒ","&upsilon;":"υ","&upuparrows;":"⇈","&urcorn;":"⌝","&urcorner;":"⌝","&urcrop;":"⌎","&uring;":"ů","&urtri;":"◹","&uscr;":"𝓊","&utdot;":"⋰","&utilde;":"ũ","&utri;":"▵","&utrif;":"▴","&uuarr;":"⇈","&uuml":"ü","&uuml;":"ü","&uwangle;":"⦧","&vArr;":"⇕","&vBar;":"⫨","&vBarv;":"⫩","&vDash;":"⊨","&vangrt;":"⦜","&varepsilon;":"ϵ","&varkappa;":"ϰ","&varnothing;":"∅","&varphi;":"ϕ","&varpi;":"ϖ","&varpropto;":"∝","&varr;":"↕","&varrho;":"ϱ","&varsigma;":"ς","&varsubsetneq;":"⊊︀","&varsubsetneqq;":"⫋︀","&varsupsetneq;":"⊋︀","&varsupsetneqq;":"⫌︀","&vartheta;":"ϑ","&vartriangleleft;":"⊲","&vartriangleright;":"⊳","&vcy;":"в","&vdash;":"⊢","&vee;":"∨","&veebar;":"⊻","&veeeq;":"≚","&vellip;":"⋮","&verbar;":"|","&vert;":"|","&vfr;":"𝔳","&vltri;":"⊲","&vnsub;":"⊂⃒","&vnsup;":"⊃⃒","&vopf;":"𝕧","&vprop;":"∝","&vrtri;":"⊳","&vscr;":"𝓋","&vsubnE;":"⫋︀","&vsubne;":"⊊︀","&vsupnE;":"⫌︀","&vsupne;":"⊋︀","&vzigzag;":"⦚","&wcirc;":"ŵ","&wedbar;":"⩟","&wedge;":"∧","&wedgeq;":"≙","&weierp;":"℘","&wfr;":"𝔴","&wopf;":"𝕨","&wp;":"℘","&wr;":"≀","&wreath;":"≀","&wscr;":"𝓌","&xcap;":"⋂","&xcirc;":"◯","&xcup;":"⋃","&xdtri;":"▽","&xfr;":"𝔵","&xhArr;":"⟺","&xharr;":"⟷","&xi;":"ξ","&xlArr;":"⟸","&xlarr;":"⟵","&xmap;":"⟼","&xnis;":"⋻","&xodot;":"⨀","&xopf;":"𝕩","&xoplus;":"⨁","&xotime;":"⨂","&xrArr;":"⟹","&xrarr;":"⟶","&xscr;":"𝓍","&xsqcup;":"⨆","&xuplus;":"⨄","&xutri;":"△","&xvee;":"⋁","&xwedge;":"⋀","&yacute":"ý","&yacute;":"ý","&yacy;":"я","&ycirc;":"ŷ","&ycy;":"ы","&yen":"¥","&yen;":"¥","&yfr;":"𝔶","&yicy;":"ї","&yopf;":"𝕪","&yscr;":"𝓎","&yucy;":"ю","&yuml":"ÿ","&yuml;":"ÿ","&zacute;":"ź","&zcaron;":"ž","&zcy;":"з","&zdot;":"ż","&zeetrf;":"ℨ","&zeta;":"ζ","&zfr;":"𝔷","&zhcy;":"ж","&zigrarr;":"⇝","&zopf;":"𝕫","&zscr;":"𝓏","&zwj;":"‍","&zwnj;":"‌"},characters:{Æ:"&AElig;","&":"&amp;",Á:"&Aacute;",Ă:"&Abreve;",Â:"&Acirc;",А:"&Acy;",𝔄:"&Afr;",À:"&Agrave;",Α:"&Alpha;",Ā:"&Amacr;","⩓":"&And;",Ą:"&Aogon;",𝔸:"&Aopf;","⁡":"&af;",Å:"&angst;",𝒜:"&Ascr;","≔":"&coloneq;",Ã:"&Atilde;",Ä:"&Auml;","∖":"&ssetmn;","⫧":"&Barv;","⌆":"&doublebarwedge;",Б:"&Bcy;","∵":"&because;",ℬ:"&bernou;",Β:"&Beta;",𝔅:"&Bfr;",𝔹:"&Bopf;","˘":"&breve;","≎":"&bump;",Ч:"&CHcy;","©":"&copy;",Ć:"&Cacute;","⋒":"&Cap;",ⅅ:"&DD;",ℭ:"&Cfr;",Č:"&Ccaron;",Ç:"&Ccedil;",Ĉ:"&Ccirc;","∰":"&Cconint;",Ċ:"&Cdot;","¸":"&cedil;","·":"&middot;",Χ:"&Chi;","⊙":"&odot;","⊖":"&ominus;","⊕":"&oplus;","⊗":"&otimes;","∲":"&cwconint;","”":"&rdquor;","’":"&rsquor;","∷":"&Proportion;","⩴":"&Colone;","≡":"&equiv;","∯":"&DoubleContourIntegral;","∮":"&oint;",ℂ:"&complexes;","∐":"&coprod;","∳":"&awconint;","⨯":"&Cross;",𝒞:"&Cscr;","⋓":"&Cup;","≍":"&asympeq;","⤑":"&DDotrahd;",Ђ:"&DJcy;",Ѕ:"&DScy;",Џ:"&DZcy;","‡":"&ddagger;","↡":"&Darr;","⫤":"&DoubleLeftTee;",Ď:"&Dcaron;",Д:"&Dcy;","∇":"&nabla;",Δ:"&Delta;",𝔇:"&Dfr;","´":"&acute;","˙":"&dot;","˝":"&dblac;","`":"&grave;","˜":"&tilde;","⋄":"&diamond;",ⅆ:"&dd;",𝔻:"&Dopf;","¨":"&uml;","⃜":"&DotDot;","≐":"&esdot;","⇓":"&dArr;","⇐":"&lArr;","⇔":"&iff;","⟸":"&xlArr;","⟺":"&xhArr;","⟹":"&xrArr;","⇒":"&rArr;","⊨":"&vDash;","⇑":"&uArr;","⇕":"&vArr;","∥":"&spar;","↓":"&downarrow;","⤓":"&DownArrowBar;","⇵":"&duarr;","̑":"&DownBreve;","⥐":"&DownLeftRightVector;","⥞":"&DownLeftTeeVector;","↽":"&lhard;","⥖":"&DownLeftVectorBar;","⥟":"&DownRightTeeVector;","⇁":"&rightharpoondown;","⥗":"&DownRightVectorBar;","⊤":"&top;","↧":"&mapstodown;",𝒟:"&Dscr;",Đ:"&Dstrok;",Ŋ:"&ENG;",Ð:"&ETH;",É:"&Eacute;",Ě:"&Ecaron;",Ê:"&Ecirc;",Э:"&Ecy;",Ė:"&Edot;",𝔈:"&Efr;",È:"&Egrave;","∈":"&isinv;",Ē:"&Emacr;","◻":"&EmptySmallSquare;","▫":"&EmptyVerySmallSquare;",Ę:"&Eogon;",𝔼:"&Eopf;",Ε:"&Epsilon;","⩵":"&Equal;","≂":"&esim;","⇌":"&rlhar;",ℰ:"&expectation;","⩳":"&Esim;",Η:"&Eta;",Ë:"&Euml;","∃":"&exist;",ⅇ:"&exponentiale;",Ф:"&Fcy;",𝔉:"&Ffr;","◼":"&FilledSmallSquare;","▪":"&squf;",𝔽:"&Fopf;","∀":"&forall;",ℱ:"&Fscr;",Ѓ:"&GJcy;",">":"&gt;",Γ:"&Gamma;",Ϝ:"&Gammad;",Ğ:"&Gbreve;",Ģ:"&Gcedil;",Ĝ:"&Gcirc;",Г:"&Gcy;",Ġ:"&Gdot;",𝔊:"&Gfr;","⋙":"&ggg;",𝔾:"&Gopf;","≥":"&geq;","⋛":"&gtreqless;","≧":"&geqq;","⪢":"&GreaterGreater;","≷":"&gtrless;","⩾":"&ges;","≳":"&gtrsim;",𝒢:"&Gscr;","≫":"&gg;",Ъ:"&HARDcy;",ˇ:"&caron;","^":"&Hat;",Ĥ:"&Hcirc;",ℌ:"&Poincareplane;",ℋ:"&hamilt;",ℍ:"&quaternions;","─":"&boxh;",Ħ:"&Hstrok;","≏":"&bumpeq;",Е:"&IEcy;",Ĳ:"&IJlig;",Ё:"&IOcy;",Í:"&Iacute;",Î:"&Icirc;",И:"&Icy;",İ:"&Idot;",ℑ:"&imagpart;",Ì:"&Igrave;",Ī:"&Imacr;",ⅈ:"&ii;","∬":"&Int;","∫":"&int;","⋂":"&xcap;","⁣":"&ic;","⁢":"&it;",Į:"&Iogon;",𝕀:"&Iopf;",Ι:"&Iota;",ℐ:"&imagline;",Ĩ:"&Itilde;",І:"&Iukcy;",Ï:"&Iuml;",Ĵ:"&Jcirc;",Й:"&Jcy;",𝔍:"&Jfr;",𝕁:"&Jopf;",𝒥:"&Jscr;",Ј:"&Jsercy;",Є:"&Jukcy;",Х:"&KHcy;",Ќ:"&KJcy;",Κ:"&Kappa;",Ķ:"&Kcedil;",К:"&Kcy;",𝔎:"&Kfr;",𝕂:"&Kopf;",𝒦:"&Kscr;",Љ:"&LJcy;","<":"&lt;",Ĺ:"&Lacute;",Λ:"&Lambda;","⟪":"&Lang;",ℒ:"&lagran;","↞":"&twoheadleftarrow;",Ľ:"&Lcaron;",Ļ:"&Lcedil;",Л:"&Lcy;","⟨":"&langle;","←":"&slarr;","⇤":"&larrb;","⇆":"&lrarr;","⌈":"&lceil;","⟦":"&lobrk;","⥡":"&LeftDownTeeVector;","⇃":"&downharpoonleft;","⥙":"&LeftDownVectorBar;","⌊":"&lfloor;","↔":"&leftrightarrow;","⥎":"&LeftRightVector;","⊣":"&dashv;","↤":"&mapstoleft;","⥚":"&LeftTeeVector;","⊲":"&vltri;","⧏":"&LeftTriangleBar;","⊴":"&trianglelefteq;","⥑":"&LeftUpDownVector;","⥠":"&LeftUpTeeVector;","↿":"&upharpoonleft;","⥘":"&LeftUpVectorBar;","↼":"&lharu;","⥒":"&LeftVectorBar;","⋚":"&lesseqgtr;","≦":"&leqq;","≶":"&lg;","⪡":"&LessLess;","⩽":"&les;","≲":"&lsim;",𝔏:"&Lfr;","⋘":"&Ll;","⇚":"&lAarr;",Ŀ:"&Lmidot;","⟵":"&xlarr;","⟷":"&xharr;","⟶":"&xrarr;",𝕃:"&Lopf;","↙":"&swarrow;","↘":"&searrow;","↰":"&lsh;",Ł:"&Lstrok;","≪":"&ll;","⤅":"&Map;",М:"&Mcy;"," ":"&MediumSpace;",ℳ:"&phmmat;",𝔐:"&Mfr;","∓":"&mp;",𝕄:"&Mopf;",Μ:"&Mu;",Њ:"&NJcy;",Ń:"&Nacute;",Ň:"&Ncaron;",Ņ:"&Ncedil;",Н:"&Ncy;","​":"&ZeroWidthSpace;","\\n":"&NewLine;",𝔑:"&Nfr;","⁠":"&NoBreak;"," ":"&nbsp;",ℕ:"&naturals;","⫬":"&Not;","≢":"&nequiv;","≭":"&NotCupCap;","∦":"&nspar;","∉":"&notinva;","≠":"&ne;","≂̸":"&nesim;","∄":"&nexists;","≯":"&ngtr;","≱":"&ngeq;","≧̸":"&ngeqq;","≫̸":"&nGtv;","≹":"&ntgl;","⩾̸":"&nges;","≵":"&ngsim;","≎̸":"&nbump;","≏̸":"&nbumpe;","⋪":"&ntriangleleft;","⧏̸":"&NotLeftTriangleBar;","⋬":"&ntrianglelefteq;","≮":"&nlt;","≰":"&nleq;","≸":"&ntlg;","≪̸":"&nLtv;","⩽̸":"&nles;","≴":"&nlsim;","⪢̸":"&NotNestedGreaterGreater;","⪡̸":"&NotNestedLessLess;","⊀":"&nprec;","⪯̸":"&npreceq;","⋠":"&nprcue;","∌":"&notniva;","⋫":"&ntriangleright;","⧐̸":"&NotRightTriangleBar;","⋭":"&ntrianglerighteq;","⊏̸":"&NotSquareSubset;","⋢":"&nsqsube;","⊐̸":"&NotSquareSuperset;","⋣":"&nsqsupe;","⊂⃒":"&vnsub;","⊈":"&nsubseteq;","⊁":"&nsucc;","⪰̸":"&nsucceq;","⋡":"&nsccue;","≿̸":"&NotSucceedsTilde;","⊃⃒":"&vnsup;","⊉":"&nsupseteq;","≁":"&nsim;","≄":"&nsimeq;","≇":"&ncong;","≉":"&napprox;","∤":"&nsmid;",𝒩:"&Nscr;",Ñ:"&Ntilde;",Ν:"&Nu;",Œ:"&OElig;",Ó:"&Oacute;",Ô:"&Ocirc;",О:"&Ocy;",Ő:"&Odblac;",𝔒:"&Ofr;",Ò:"&Ograve;",Ō:"&Omacr;",Ω:"&ohm;",Ο:"&Omicron;",𝕆:"&Oopf;","“":"&ldquo;","‘":"&lsquo;","⩔":"&Or;",𝒪:"&Oscr;",Ø:"&Oslash;",Õ:"&Otilde;","⨷":"&Otimes;",Ö:"&Ouml;","‾":"&oline;","⏞":"&OverBrace;","⎴":"&tbrk;","⏜":"&OverParenthesis;","∂":"&part;",П:"&Pcy;",𝔓:"&Pfr;",Φ:"&Phi;",Π:"&Pi;","±":"&pm;",ℙ:"&primes;","⪻":"&Pr;","≺":"&prec;","⪯":"&preceq;","≼":"&preccurlyeq;","≾":"&prsim;","″":"&Prime;","∏":"&prod;","∝":"&vprop;",𝒫:"&Pscr;",Ψ:"&Psi;",\'"\':"&quot;",𝔔:"&Qfr;",ℚ:"&rationals;",𝒬:"&Qscr;","⤐":"&drbkarow;","®":"&reg;",Ŕ:"&Racute;","⟫":"&Rang;","↠":"&twoheadrightarrow;","⤖":"&Rarrtl;",Ř:"&Rcaron;",Ŗ:"&Rcedil;",Р:"&Rcy;",ℜ:"&realpart;","∋":"&niv;","⇋":"&lrhar;","⥯":"&duhar;",Ρ:"&Rho;","⟩":"&rangle;","→":"&srarr;","⇥":"&rarrb;","⇄":"&rlarr;","⌉":"&rceil;","⟧":"&robrk;","⥝":"&RightDownTeeVector;","⇂":"&downharpoonright;","⥕":"&RightDownVectorBar;","⌋":"&rfloor;","⊢":"&vdash;","↦":"&mapsto;","⥛":"&RightTeeVector;","⊳":"&vrtri;","⧐":"&RightTriangleBar;","⊵":"&trianglerighteq;","⥏":"&RightUpDownVector;","⥜":"&RightUpTeeVector;","↾":"&upharpoonright;","⥔":"&RightUpVectorBar;","⇀":"&rightharpoonup;","⥓":"&RightVectorBar;",ℝ:"&reals;","⥰":"&RoundImplies;","⇛":"&rAarr;",ℛ:"&realine;","↱":"&rsh;","⧴":"&RuleDelayed;",Щ:"&SHCHcy;",Ш:"&SHcy;",Ь:"&SOFTcy;",Ś:"&Sacute;","⪼":"&Sc;",Š:"&Scaron;",Ş:"&Scedil;",Ŝ:"&Scirc;",С:"&Scy;",𝔖:"&Sfr;","↑":"&uparrow;",Σ:"&Sigma;","∘":"&compfn;",𝕊:"&Sopf;","√":"&radic;","□":"&square;","⊓":"&sqcap;","⊏":"&sqsubset;","⊑":"&sqsubseteq;","⊐":"&sqsupset;","⊒":"&sqsupseteq;","⊔":"&sqcup;",𝒮:"&Sscr;","⋆":"&sstarf;","⋐":"&Subset;","⊆":"&subseteq;","≻":"&succ;","⪰":"&succeq;","≽":"&succcurlyeq;","≿":"&succsim;","∑":"&sum;","⋑":"&Supset;","⊃":"&supset;","⊇":"&supseteq;",Þ:"&THORN;","™":"&trade;",Ћ:"&TSHcy;",Ц:"&TScy;","\\t":"&Tab;",Τ:"&Tau;",Ť:"&Tcaron;",Ţ:"&Tcedil;",Т:"&Tcy;",𝔗:"&Tfr;","∴":"&therefore;",Θ:"&Theta;","  ":"&ThickSpace;"," ":"&thinsp;","∼":"&thksim;","≃":"&simeq;","≅":"&cong;","≈":"&thkap;",𝕋:"&Topf;","⃛":"&tdot;",𝒯:"&Tscr;",Ŧ:"&Tstrok;",Ú:"&Uacute;","↟":"&Uarr;","⥉":"&Uarrocir;",Ў:"&Ubrcy;",Ŭ:"&Ubreve;",Û:"&Ucirc;",У:"&Ucy;",Ű:"&Udblac;",𝔘:"&Ufr;",Ù:"&Ugrave;",Ū:"&Umacr;",_:"&lowbar;","⏟":"&UnderBrace;","⎵":"&bbrk;","⏝":"&UnderParenthesis;","⋃":"&xcup;","⊎":"&uplus;",Ų:"&Uogon;",𝕌:"&Uopf;","⤒":"&UpArrowBar;","⇅":"&udarr;","↕":"&varr;","⥮":"&udhar;","⊥":"&perp;","↥":"&mapstoup;","↖":"&nwarrow;","↗":"&nearrow;",ϒ:"&upsih;",Υ:"&Upsilon;",Ů:"&Uring;",𝒰:"&Uscr;",Ũ:"&Utilde;",Ü:"&Uuml;","⊫":"&VDash;","⫫":"&Vbar;",В:"&Vcy;","⊩":"&Vdash;","⫦":"&Vdashl;","⋁":"&xvee;","‖":"&Vert;","∣":"&smid;","|":"&vert;","❘":"&VerticalSeparator;","≀":"&wreath;"," ":"&hairsp;",𝔙:"&Vfr;",𝕍:"&Vopf;",𝒱:"&Vscr;","⊪":"&Vvdash;",Ŵ:"&Wcirc;","⋀":"&xwedge;",𝔚:"&Wfr;",𝕎:"&Wopf;",𝒲:"&Wscr;",𝔛:"&Xfr;",Ξ:"&Xi;",𝕏:"&Xopf;",𝒳:"&Xscr;",Я:"&YAcy;",Ї:"&YIcy;",Ю:"&YUcy;",Ý:"&Yacute;",Ŷ:"&Ycirc;",Ы:"&Ycy;",𝔜:"&Yfr;",𝕐:"&Yopf;",𝒴:"&Yscr;",Ÿ:"&Yuml;",Ж:"&ZHcy;",Ź:"&Zacute;",Ž:"&Zcaron;",З:"&Zcy;",Ż:"&Zdot;",Ζ:"&Zeta;",ℨ:"&zeetrf;",ℤ:"&integers;",𝒵:"&Zscr;",á:"&aacute;",ă:"&abreve;","∾":"&mstpos;","∾̳":"&acE;","∿":"&acd;",â:"&acirc;",а:"&acy;",æ:"&aelig;",𝔞:"&afr;",à:"&agrave;",ℵ:"&aleph;",α:"&alpha;",ā:"&amacr;","⨿":"&amalg;","∧":"&wedge;","⩕":"&andand;","⩜":"&andd;","⩘":"&andslope;","⩚":"&andv;","∠":"&angle;","⦤":"&ange;","∡":"&measuredangle;","⦨":"&angmsdaa;","⦩":"&angmsdab;","⦪":"&angmsdac;","⦫":"&angmsdad;","⦬":"&angmsdae;","⦭":"&angmsdaf;","⦮":"&angmsdag;","⦯":"&angmsdah;","∟":"&angrt;","⊾":"&angrtvb;","⦝":"&angrtvbd;","∢":"&angsph;","⍼":"&angzarr;",ą:"&aogon;",𝕒:"&aopf;","⩰":"&apE;","⩯":"&apacir;","≊":"&approxeq;","≋":"&apid;","\'":"&apos;",å:"&aring;",𝒶:"&ascr;","*":"&midast;",ã:"&atilde;",ä:"&auml;","⨑":"&awint;","⫭":"&bNot;","≌":"&bcong;","϶":"&bepsi;","‵":"&bprime;","∽":"&bsim;","⋍":"&bsime;","⊽":"&barvee;","⌅":"&barwedge;","⎶":"&bbrktbrk;",б:"&bcy;","„":"&ldquor;","⦰":"&bemptyv;",β:"&beta;",ℶ:"&beth;","≬":"&twixt;",𝔟:"&bfr;","◯":"&xcirc;","⨀":"&xodot;","⨁":"&xoplus;","⨂":"&xotime;","⨆":"&xsqcup;","★":"&starf;","▽":"&xdtri;","△":"&xutri;","⨄":"&xuplus;","⤍":"&rbarr;","⧫":"&lozf;","▴":"&utrif;","▾":"&dtrif;","◂":"&ltrif;","▸":"&rtrif;","␣":"&blank;","▒":"&blk12;","░":"&blk14;","▓":"&blk34;","█":"&block;","=⃥":"&bne;","≡⃥":"&bnequiv;","⌐":"&bnot;",𝕓:"&bopf;","⋈":"&bowtie;","╗":"&boxDL;","╔":"&boxDR;","╖":"&boxDl;","╓":"&boxDr;","═":"&boxH;","╦":"&boxHD;","╩":"&boxHU;","╤":"&boxHd;","╧":"&boxHu;","╝":"&boxUL;","╚":"&boxUR;","╜":"&boxUl;","╙":"&boxUr;","║":"&boxV;","╬":"&boxVH;","╣":"&boxVL;","╠":"&boxVR;","╫":"&boxVh;","╢":"&boxVl;","╟":"&boxVr;","⧉":"&boxbox;","╕":"&boxdL;","╒":"&boxdR;","┐":"&boxdl;","┌":"&boxdr;","╥":"&boxhD;","╨":"&boxhU;","┬":"&boxhd;","┴":"&boxhu;","⊟":"&minusb;","⊞":"&plusb;","⊠":"&timesb;","╛":"&boxuL;","╘":"&boxuR;","┘":"&boxul;","└":"&boxur;","│":"&boxv;","╪":"&boxvH;","╡":"&boxvL;","╞":"&boxvR;","┼":"&boxvh;","┤":"&boxvl;","├":"&boxvr;","¦":"&brvbar;",𝒷:"&bscr;","⁏":"&bsemi;","\\\\":"&bsol;","⧅":"&bsolb;","⟈":"&bsolhsub;","•":"&bullet;","⪮":"&bumpE;",ć:"&cacute;","∩":"&cap;","⩄":"&capand;","⩉":"&capbrcup;","⩋":"&capcap;","⩇":"&capcup;","⩀":"&capdot;","∩︀":"&caps;","⁁":"&caret;","⩍":"&ccaps;",č:"&ccaron;",ç:"&ccedil;",ĉ:"&ccirc;","⩌":"&ccups;","⩐":"&ccupssm;",ċ:"&cdot;","⦲":"&cemptyv;","¢":"&cent;",𝔠:"&cfr;",ч:"&chcy;","✓":"&checkmark;",χ:"&chi;","○":"&cir;","⧃":"&cirE;",ˆ:"&circ;","≗":"&cire;","↺":"&olarr;","↻":"&orarr;","Ⓢ":"&oS;","⊛":"&oast;","⊚":"&ocir;","⊝":"&odash;","⨐":"&cirfnint;","⫯":"&cirmid;","⧂":"&cirscir;","♣":"&clubsuit;",":":"&colon;",",":"&comma;","@":"&commat;","∁":"&complement;","⩭":"&congdot;",𝕔:"&copf;","℗":"&copysr;","↵":"&crarr;","✗":"&cross;",𝒸:"&cscr;","⫏":"&csub;","⫑":"&csube;","⫐":"&csup;","⫒":"&csupe;","⋯":"&ctdot;","⤸":"&cudarrl;","⤵":"&cudarrr;","⋞":"&curlyeqprec;","⋟":"&curlyeqsucc;","↶":"&curvearrowleft;","⤽":"&cularrp;","∪":"&cup;","⩈":"&cupbrcap;","⩆":"&cupcap;","⩊":"&cupcup;","⊍":"&cupdot;","⩅":"&cupor;","∪︀":"&cups;","↷":"&curvearrowright;","⤼":"&curarrm;","⋎":"&cuvee;","⋏":"&cuwed;","¤":"&curren;","∱":"&cwint;","⌭":"&cylcty;","⥥":"&dHar;","†":"&dagger;",ℸ:"&daleth;","‐":"&hyphen;","⤏":"&rBarr;",ď:"&dcaron;",д:"&dcy;","⇊":"&downdownarrows;","⩷":"&eDDot;","°":"&deg;",δ:"&delta;","⦱":"&demptyv;","⥿":"&dfisht;",𝔡:"&dfr;","♦":"&diams;",ϝ:"&gammad;","⋲":"&disin;","÷":"&divide;","⋇":"&divonx;",ђ:"&djcy;","⌞":"&llcorner;","⌍":"&dlcrop;",$:"&dollar;",𝕕:"&dopf;","≑":"&eDot;","∸":"&minusd;","∔":"&plusdo;","⊡":"&sdotb;","⌟":"&lrcorner;","⌌":"&drcrop;",𝒹:"&dscr;",ѕ:"&dscy;","⧶":"&dsol;",đ:"&dstrok;","⋱":"&dtdot;","▿":"&triangledown;","⦦":"&dwangle;",џ:"&dzcy;","⟿":"&dzigrarr;",é:"&eacute;","⩮":"&easter;",ě:"&ecaron;","≖":"&eqcirc;",ê:"&ecirc;","≕":"&eqcolon;",э:"&ecy;",ė:"&edot;","≒":"&fallingdotseq;",𝔢:"&efr;","⪚":"&eg;",è:"&egrave;","⪖":"&eqslantgtr;","⪘":"&egsdot;","⪙":"&el;","⏧":"&elinters;",ℓ:"&ell;","⪕":"&eqslantless;","⪗":"&elsdot;",ē:"&emacr;","∅":"&varnothing;"," ":"&emsp13;"," ":"&emsp14;"," ":"&emsp;",ŋ:"&eng;"," ":"&ensp;",ę:"&eogon;",𝕖:"&eopf;","⋕":"&epar;","⧣":"&eparsl;","⩱":"&eplus;",ε:"&epsilon;",ϵ:"&varepsilon;","=":"&equals;","≟":"&questeq;","⩸":"&equivDD;","⧥":"&eqvparsl;","≓":"&risingdotseq;","⥱":"&erarr;",ℯ:"&escr;",η:"&eta;",ð:"&eth;",ë:"&euml;","€":"&euro;","!":"&excl;",ф:"&fcy;","♀":"&female;",ﬃ:"&ffilig;",ﬀ:"&fflig;",ﬄ:"&ffllig;",𝔣:"&ffr;",ﬁ:"&filig;",fj:"&fjlig;","♭":"&flat;",ﬂ:"&fllig;","▱":"&fltns;",ƒ:"&fnof;",𝕗:"&fopf;","⋔":"&pitchfork;","⫙":"&forkv;","⨍":"&fpartint;","½":"&half;","⅓":"&frac13;","¼":"&frac14;","⅕":"&frac15;","⅙":"&frac16;","⅛":"&frac18;","⅔":"&frac23;","⅖":"&frac25;","¾":"&frac34;","⅗":"&frac35;","⅜":"&frac38;","⅘":"&frac45;","⅚":"&frac56;","⅝":"&frac58;","⅞":"&frac78;","⁄":"&frasl;","⌢":"&sfrown;",𝒻:"&fscr;","⪌":"&gtreqqless;",ǵ:"&gacute;",γ:"&gamma;","⪆":"&gtrapprox;",ğ:"&gbreve;",ĝ:"&gcirc;",г:"&gcy;",ġ:"&gdot;","⪩":"&gescc;","⪀":"&gesdot;","⪂":"&gesdoto;","⪄":"&gesdotol;","⋛︀":"&gesl;","⪔":"&gesles;",𝔤:"&gfr;",ℷ:"&gimel;",ѓ:"&gjcy;","⪒":"&glE;","⪥":"&gla;","⪤":"&glj;","≩":"&gneqq;","⪊":"&gnapprox;","⪈":"&gneq;","⋧":"&gnsim;",𝕘:"&gopf;",ℊ:"&gscr;","⪎":"&gsime;","⪐":"&gsiml;","⪧":"&gtcc;","⩺":"&gtcir;","⋗":"&gtrdot;","⦕":"&gtlPar;","⩼":"&gtquest;","⥸":"&gtrarr;","≩︀":"&gvnE;",ъ:"&hardcy;","⥈":"&harrcir;","↭":"&leftrightsquigarrow;",ℏ:"&plankv;",ĥ:"&hcirc;","♥":"&heartsuit;","…":"&mldr;","⊹":"&hercon;",𝔥:"&hfr;","⤥":"&searhk;","⤦":"&swarhk;","⇿":"&hoarr;","∻":"&homtht;","↩":"&larrhk;","↪":"&rarrhk;",𝕙:"&hopf;","―":"&horbar;",𝒽:"&hscr;",ħ:"&hstrok;","⁃":"&hybull;",í:"&iacute;",î:"&icirc;",и:"&icy;",е:"&iecy;","¡":"&iexcl;",𝔦:"&ifr;",ì:"&igrave;","⨌":"&qint;","∭":"&tint;","⧜":"&iinfin;","℩":"&iiota;",ĳ:"&ijlig;",ī:"&imacr;",ı:"&inodot;","⊷":"&imof;",Ƶ:"&imped;","℅":"&incare;","∞":"&infin;","⧝":"&infintie;","⊺":"&intercal;","⨗":"&intlarhk;","⨼":"&iprod;",ё:"&iocy;",į:"&iogon;",𝕚:"&iopf;",ι:"&iota;","¿":"&iquest;",𝒾:"&iscr;","⋹":"&isinE;","⋵":"&isindot;","⋴":"&isins;","⋳":"&isinsv;",ĩ:"&itilde;",і:"&iukcy;",ï:"&iuml;",ĵ:"&jcirc;",й:"&jcy;",𝔧:"&jfr;",ȷ:"&jmath;",𝕛:"&jopf;",𝒿:"&jscr;",ј:"&jsercy;",є:"&jukcy;",κ:"&kappa;",ϰ:"&varkappa;",ķ:"&kcedil;",к:"&kcy;",𝔨:"&kfr;",ĸ:"&kgreen;",х:"&khcy;",ќ:"&kjcy;",𝕜:"&kopf;",𝓀:"&kscr;","⤛":"&lAtail;","⤎":"&lBarr;","⪋":"&lesseqqgtr;","⥢":"&lHar;",ĺ:"&lacute;","⦴":"&laemptyv;",λ:"&lambda;","⦑":"&langd;","⪅":"&lessapprox;","«":"&laquo;","⤟":"&larrbfs;","⤝":"&larrfs;","↫":"&looparrowleft;","⤹":"&larrpl;","⥳":"&larrsim;","↢":"&leftarrowtail;","⪫":"&lat;","⤙":"&latail;","⪭":"&late;","⪭︀":"&lates;","⤌":"&lbarr;","❲":"&lbbrk;","{":"&lcub;","[":"&lsqb;","⦋":"&lbrke;","⦏":"&lbrksld;","⦍":"&lbrkslu;",ľ:"&lcaron;",ļ:"&lcedil;",л:"&lcy;","⤶":"&ldca;","⥧":"&ldrdhar;","⥋":"&ldrushar;","↲":"&ldsh;","≤":"&leq;","⇇":"&llarr;","⋋":"&lthree;","⪨":"&lescc;","⩿":"&lesdot;","⪁":"&lesdoto;","⪃":"&lesdotor;","⋚︀":"&lesg;","⪓":"&lesges;","⋖":"&ltdot;","⥼":"&lfisht;",𝔩:"&lfr;","⪑":"&lgE;","⥪":"&lharul;","▄":"&lhblk;",љ:"&ljcy;","⥫":"&llhard;","◺":"&lltri;",ŀ:"&lmidot;","⎰":"&lmoustache;","≨":"&lneqq;","⪉":"&lnapprox;","⪇":"&lneq;","⋦":"&lnsim;","⟬":"&loang;","⇽":"&loarr;","⟼":"&xmap;","↬":"&rarrlp;","⦅":"&lopar;",𝕝:"&lopf;","⨭":"&loplus;","⨴":"&lotimes;","∗":"&lowast;","◊":"&lozenge;","(":"&lpar;","⦓":"&lparlt;","⥭":"&lrhard;","‎":"&lrm;","⊿":"&lrtri;","‹":"&lsaquo;",𝓁:"&lscr;","⪍":"&lsime;","⪏":"&lsimg;","‚":"&sbquo;",ł:"&lstrok;","⪦":"&ltcc;","⩹":"&ltcir;","⋉":"&ltimes;","⥶":"&ltlarr;","⩻":"&ltquest;","⦖":"&ltrPar;","◃":"&triangleleft;","⥊":"&lurdshar;","⥦":"&luruhar;","≨︀":"&lvnE;","∺":"&mDDot;","¯":"&strns;","♂":"&male;","✠":"&maltese;","▮":"&marker;","⨩":"&mcomma;",м:"&mcy;","—":"&mdash;",𝔪:"&mfr;","℧":"&mho;",µ:"&micro;","⫰":"&midcir;","−":"&minus;","⨪":"&minusdu;","⫛":"&mlcp;","⊧":"&models;",𝕞:"&mopf;",𝓂:"&mscr;",μ:"&mu;","⊸":"&mumap;","⋙̸":"&nGg;","≫⃒":"&nGt;","⇍":"&nlArr;","⇎":"&nhArr;","⋘̸":"&nLl;","≪⃒":"&nLt;","⇏":"&nrArr;","⊯":"&nVDash;","⊮":"&nVdash;",ń:"&nacute;","∠⃒":"&nang;","⩰̸":"&napE;","≋̸":"&napid;",ŉ:"&napos;","♮":"&natural;","⩃":"&ncap;",ň:"&ncaron;",ņ:"&ncedil;","⩭̸":"&ncongdot;","⩂":"&ncup;",н:"&ncy;","–":"&ndash;","⇗":"&neArr;","⤤":"&nearhk;","≐̸":"&nedot;","⤨":"&toea;",𝔫:"&nfr;","↮":"&nleftrightarrow;","⫲":"&nhpar;","⋼":"&nis;","⋺":"&nisd;",њ:"&njcy;","≦̸":"&nleqq;","↚":"&nleftarrow;","‥":"&nldr;",𝕟:"&nopf;","¬":"&not;","⋹̸":"&notinE;","⋵̸":"&notindot;","⋷":"&notinvb;","⋶":"&notinvc;","⋾":"&notnivb;","⋽":"&notnivc;","⫽⃥":"&nparsl;","∂̸":"&npart;","⨔":"&npolint;","↛":"&nrightarrow;","⤳̸":"&nrarrc;","↝̸":"&nrarrw;",𝓃:"&nscr;","⊄":"&nsub;","⫅̸":"&nsubseteqq;","⊅":"&nsup;","⫆̸":"&nsupseteqq;",ñ:"&ntilde;",ν:"&nu;","#":"&num;","№":"&numero;"," ":"&numsp;","⊭":"&nvDash;","⤄":"&nvHarr;","≍⃒":"&nvap;","⊬":"&nvdash;","≥⃒":"&nvge;",">⃒":"&nvgt;","⧞":"&nvinfin;","⤂":"&nvlArr;","≤⃒":"&nvle;","<⃒":"&nvlt;","⊴⃒":"&nvltrie;","⤃":"&nvrArr;","⊵⃒":"&nvrtrie;","∼⃒":"&nvsim;","⇖":"&nwArr;","⤣":"&nwarhk;","⤧":"&nwnear;",ó:"&oacute;",ô:"&ocirc;",о:"&ocy;",ő:"&odblac;","⨸":"&odiv;","⦼":"&odsold;",œ:"&oelig;","⦿":"&ofcir;",𝔬:"&ofr;","˛":"&ogon;",ò:"&ograve;","⧁":"&ogt;","⦵":"&ohbar;","⦾":"&olcir;","⦻":"&olcross;","⧀":"&olt;",ō:"&omacr;",ω:"&omega;",ο:"&omicron;","⦶":"&omid;",𝕠:"&oopf;","⦷":"&opar;","⦹":"&operp;","∨":"&vee;","⩝":"&ord;",ℴ:"&oscr;",ª:"&ordf;",º:"&ordm;","⊶":"&origof;","⩖":"&oror;","⩗":"&orslope;","⩛":"&orv;",ø:"&oslash;","⊘":"&osol;",õ:"&otilde;","⨶":"&otimesas;",ö:"&ouml;","⌽":"&ovbar;","¶":"&para;","⫳":"&parsim;","⫽":"&parsl;",п:"&pcy;","%":"&percnt;",".":"&period;","‰":"&permil;","‱":"&pertenk;",𝔭:"&pfr;",φ:"&phi;",ϕ:"&varphi;","☎":"&phone;",π:"&pi;",ϖ:"&varpi;",ℎ:"&planckh;","+":"&plus;","⨣":"&plusacir;","⨢":"&pluscir;","⨥":"&plusdu;","⩲":"&pluse;","⨦":"&plussim;","⨧":"&plustwo;","⨕":"&pointint;",𝕡:"&popf;","£":"&pound;","⪳":"&prE;","⪷":"&precapprox;","⪹":"&prnap;","⪵":"&prnE;","⋨":"&prnsim;","′":"&prime;","⌮":"&profalar;","⌒":"&profline;","⌓":"&profsurf;","⊰":"&prurel;",𝓅:"&pscr;",ψ:"&psi;"," ":"&puncsp;",𝔮:"&qfr;",𝕢:"&qopf;","⁗":"&qprime;",𝓆:"&qscr;","⨖":"&quatint;","?":"&quest;","⤜":"&rAtail;","⥤":"&rHar;","∽̱":"&race;",ŕ:"&racute;","⦳":"&raemptyv;","⦒":"&rangd;","⦥":"&range;","»":"&raquo;","⥵":"&rarrap;","⤠":"&rarrbfs;","⤳":"&rarrc;","⤞":"&rarrfs;","⥅":"&rarrpl;","⥴":"&rarrsim;","↣":"&rightarrowtail;","↝":"&rightsquigarrow;","⤚":"&ratail;","∶":"&ratio;","❳":"&rbbrk;","}":"&rcub;","]":"&rsqb;","⦌":"&rbrke;","⦎":"&rbrksld;","⦐":"&rbrkslu;",ř:"&rcaron;",ŗ:"&rcedil;",р:"&rcy;","⤷":"&rdca;","⥩":"&rdldhar;","↳":"&rdsh;","▭":"&rect;","⥽":"&rfisht;",𝔯:"&rfr;","⥬":"&rharul;",ρ:"&rho;",ϱ:"&varrho;","⇉":"&rrarr;","⋌":"&rthree;","˚":"&ring;","‏":"&rlm;","⎱":"&rmoustache;","⫮":"&rnmid;","⟭":"&roang;","⇾":"&roarr;","⦆":"&ropar;",𝕣:"&ropf;","⨮":"&roplus;","⨵":"&rotimes;",")":"&rpar;","⦔":"&rpargt;","⨒":"&rppolint;","›":"&rsaquo;",𝓇:"&rscr;","⋊":"&rtimes;","▹":"&triangleright;","⧎":"&rtriltri;","⥨":"&ruluhar;","℞":"&rx;",ś:"&sacute;","⪴":"&scE;","⪸":"&succapprox;",š:"&scaron;",ş:"&scedil;",ŝ:"&scirc;","⪶":"&succneqq;","⪺":"&succnapprox;","⋩":"&succnsim;","⨓":"&scpolint;",с:"&scy;","⋅":"&sdot;","⩦":"&sdote;","⇘":"&seArr;","§":"&sect;",";":"&semi;","⤩":"&tosa;","✶":"&sext;",𝔰:"&sfr;","♯":"&sharp;",щ:"&shchcy;",ш:"&shcy;","­":"&shy;",σ:"&sigma;",ς:"&varsigma;","⩪":"&simdot;","⪞":"&simg;","⪠":"&simgE;","⪝":"&siml;","⪟":"&simlE;","≆":"&simne;","⨤":"&simplus;","⥲":"&simrarr;","⨳":"&smashp;","⧤":"&smeparsl;","⌣":"&ssmile;","⪪":"&smt;","⪬":"&smte;","⪬︀":"&smtes;",ь:"&softcy;","/":"&sol;","⧄":"&solb;","⌿":"&solbar;",𝕤:"&sopf;","♠":"&spadesuit;","⊓︀":"&sqcaps;","⊔︀":"&sqcups;",𝓈:"&sscr;","☆":"&star;","⊂":"&subset;","⫅":"&subseteqq;","⪽":"&subdot;","⫃":"&subedot;","⫁":"&submult;","⫋":"&subsetneqq;","⊊":"&subsetneq;","⪿":"&subplus;","⥹":"&subrarr;","⫇":"&subsim;","⫕":"&subsub;","⫓":"&subsup;","♪":"&sung;","¹":"&sup1;","²":"&sup2;","³":"&sup3;","⫆":"&supseteqq;","⪾":"&supdot;","⫘":"&supdsub;","⫄":"&supedot;","⟉":"&suphsol;","⫗":"&suphsub;","⥻":"&suplarr;","⫂":"&supmult;","⫌":"&supsetneqq;","⊋":"&supsetneq;","⫀":"&supplus;","⫈":"&supsim;","⫔":"&supsub;","⫖":"&supsup;","⇙":"&swArr;","⤪":"&swnwar;",ß:"&szlig;","⌖":"&target;",τ:"&tau;",ť:"&tcaron;",ţ:"&tcedil;",т:"&tcy;","⌕":"&telrec;",𝔱:"&tfr;",θ:"&theta;",ϑ:"&vartheta;",þ:"&thorn;","×":"&times;","⨱":"&timesbar;","⨰":"&timesd;","⌶":"&topbot;","⫱":"&topcir;",𝕥:"&topf;","⫚":"&topfork;","‴":"&tprime;","▵":"&utri;","≜":"&trie;","◬":"&tridot;","⨺":"&triminus;","⨹":"&triplus;","⧍":"&trisb;","⨻":"&tritime;","⏢":"&trpezium;",𝓉:"&tscr;",ц:"&tscy;",ћ:"&tshcy;",ŧ:"&tstrok;","⥣":"&uHar;",ú:"&uacute;",ў:"&ubrcy;",ŭ:"&ubreve;",û:"&ucirc;",у:"&ucy;",ű:"&udblac;","⥾":"&ufisht;",𝔲:"&ufr;",ù:"&ugrave;","▀":"&uhblk;","⌜":"&ulcorner;","⌏":"&ulcrop;","◸":"&ultri;",ū:"&umacr;",ų:"&uogon;",𝕦:"&uopf;",υ:"&upsilon;","⇈":"&uuarr;","⌝":"&urcorner;","⌎":"&urcrop;",ů:"&uring;","◹":"&urtri;",𝓊:"&uscr;","⋰":"&utdot;",ũ:"&utilde;",ü:"&uuml;","⦧":"&uwangle;","⫨":"&vBar;","⫩":"&vBarv;","⦜":"&vangrt;","⊊︀":"&vsubne;","⫋︀":"&vsubnE;","⊋︀":"&vsupne;","⫌︀":"&vsupnE;",в:"&vcy;","⊻":"&veebar;","≚":"&veeeq;","⋮":"&vellip;",𝔳:"&vfr;",𝕧:"&vopf;",𝓋:"&vscr;","⦚":"&vzigzag;",ŵ:"&wcirc;","⩟":"&wedbar;","≙":"&wedgeq;",℘:"&wp;",𝔴:"&wfr;",𝕨:"&wopf;",𝓌:"&wscr;",𝔵:"&xfr;",ξ:"&xi;","⋻":"&xnis;",𝕩:"&xopf;",𝓍:"&xscr;",ý:"&yacute;",я:"&yacy;",ŷ:"&ycirc;",ы:"&ycy;","¥":"&yen;",𝔶:"&yfr;",ї:"&yicy;",𝕪:"&yopf;",𝓎:"&yscr;",ю:"&yucy;",ÿ:"&yuml;",ź:"&zacute;",ž:"&zcaron;",з:"&zcy;",ż:"&zdot;",ζ:"&zeta;",𝔷:"&zfr;",ж:"&zhcy;","⇝":"&zigrarr;",𝕫:"&zopf;",𝓏:"&zscr;","‍":"&zwj;","‌":"&zwnj;"}}}},2920:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376}},7630:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fromCodePoint=String.fromCodePoint||function(e){return String.fromCharCode(Math.floor((e-65536)/1024)+55296,(e-65536)%1024+56320)},t.getCodePoint=String.prototype.codePointAt?function(e,t){return e.codePointAt(t)}:function(e,t){return 1024*(e.charCodeAt(t)-55296)+e.charCodeAt(t+1)-56320+65536},t.highSurrogateFrom=55296,t.highSurrogateTo=56319},690:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=/(([\'"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\\'"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyus]{1,6}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g,t.matchToToken=function(e){var t={type:"invalid",value:e[0],closed:void 0};return e[1]?(t.type="string",t.closed=!(!e[3]&&!e[4])):e[5]?t.type="comment":e[6]?(t.type="comment",t.closed=!!e[7]):e[8]?t.type="regex":e[9]?t.type="number":e[10]?t.type="name":e[11]?t.type="punctuator":e[12]&&(t.type="whitespace"),t}},9934:e=>{"use strict";var t=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;function o(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},r=0;r<10;r++)t["_"+String.fromCharCode(r)]=r;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach((function(e){n[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(e){return!1}}()?Object.assign:function(e,a){for(var i,l,u=o(e),s=1;s<arguments.length;s++){for(var c in i=Object(arguments[s]))r.call(i,c)&&(u[c]=i[c]);if(t){l=t(i);for(var f=0;f<l.length;f++)n.call(i,l[f])&&(u[l[f]]=i[l[f]])}}return u}},3495:function(e){(function(){var t,r,n,o,a,i;"undefined"!==typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:"undefined"!==typeof process&&null!==process&&process.hrtime?(e.exports=function(){return(t()-a)/1e6},r=process.hrtime,o=(t=function(){var e;return 1e9*(e=r())[0]+e[1]})(),i=1e9*process.uptime(),a=o-i):Date.now?(e.exports=function(){return Date.now()-n},n=Date.now()):(e.exports=function(){return(new Date).getTime()-n},n=(new Date).getTime())}).call(this)},2009:(e,t,r)=>{"use strict";var n=r(2457);function o(){}var a=null,i={};function l(e){if("object"!==typeof this)throw new TypeError("Promises must be constructed via new");if("function"!==typeof e)throw new TypeError("Promise constructor\'s argument is not a function");this._U=0,this._V=0,this._W=null,this._X=null,e!==o&&p(e,this)}function u(e,t){for(;3===e._V;)e=e._W;if(l._Y&&l._Y(e),0===e._V)return 0===e._U?(e._U=1,void(e._X=t)):1===e._U?(e._U=2,void(e._X=[e._X,t])):void e._X.push(t);!function(e,t){n((function(){var r=1===e._V?t.onFulfilled:t.onRejected;if(null!==r){var n=function(e,t){try{return e(t)}catch(e){return a=e,i}}(r,e._W);n===i?c(t.promise,a):s(t.promise,n)}else 1===e._V?s(t.promise,e._W):c(t.promise,e._W)}))}(e,t)}function s(e,t){if(t===e)return c(e,new TypeError("A promise cannot be resolved with itself."));if(t&&("object"===typeof t||"function"===typeof t)){var r=function(e){try{return e.then}catch(e){return a=e,i}}(t);if(r===i)return c(e,a);if(r===e.then&&t instanceof l)return e._V=3,e._W=t,void f(e);if("function"===typeof r)return void p(r.bind(t),e)}e._V=1,e._W=t,f(e)}function c(e,t){e._V=2,e._W=t,l._Z&&l._Z(e,t),f(e)}function f(e){if(1===e._U&&(u(e,e._X),e._X=null),2===e._U){for(var t=0;t<e._X.length;t++)u(e,e._X[t]);e._X=null}}function d(e,t,r){this.onFulfilled="function"===typeof e?e:null,this.onRejected="function"===typeof t?t:null,this.promise=r}function p(e,t){var r=!1,n=function(e,t,r){try{e(t,r)}catch(e){return a=e,i}}(e,(function(e){r||(r=!0,s(t,e))}),(function(e){r||(r=!0,c(t,e))}));r||n!==i||(r=!0,c(t,a))}e.exports=l,l._Y=null,l._Z=null,l._0=o,l.prototype.then=function(e,t){if(this.constructor!==l)return function(e,t,r){return new e.constructor((function(n,a){var i=new l(o);i.then(n,a),u(e,new d(t,r,i))}))}(this,e,t);var r=new l(o);return u(this,new d(e,t,r)),r}},83:(e,t,r)=>{"use strict";var n=r(2009);e.exports=n;var o=c(!0),a=c(!1),i=c(null),l=c(void 0),u=c(0),s=c("");function c(e){var t=new n(n._0);return t._V=1,t._W=e,t}n.resolve=function(e){if(e instanceof n)return e;if(null===e)return i;if(void 0===e)return l;if(!0===e)return o;if(!1===e)return a;if(0===e)return u;if(""===e)return s;if("object"===typeof e||"function"===typeof e)try{var t=e.then;if("function"===typeof t)return new n(t.bind(e))}catch(e){return new n((function(t,r){r(e)}))}return c(e)};var f=function(e){return"function"===typeof Array.from?(f=Array.from,Array.from(e)):(f=function(e){return Array.prototype.slice.call(e)},Array.prototype.slice.call(e))};n.all=function(e){var t=f(e);return new n((function(e,r){if(0===t.length)return e([]);var o=t.length;function a(i,l){if(l&&("object"===typeof l||"function"===typeof l)){if(l instanceof n&&l.then===n.prototype.then){for(;3===l._V;)l=l._W;return 1===l._V?a(i,l._W):(2===l._V&&r(l._W),void l.then((function(e){a(i,e)}),r))}var u=l.then;if("function"===typeof u)return void new n(u.bind(l)).then((function(e){a(i,e)}),r)}t[i]=l,0===--o&&e(t)}for(var i=0;i<t.length;i++)a(i,t[i])}))},n.reject=function(e){return new n((function(t,r){r(e)}))},n.race=function(e){return new n((function(t,r){f(e).forEach((function(e){n.resolve(e).then(t,r)}))}))},n.prototype.catch=function(e){return this.then(null,e)}},7247:(e,t,r)=>{"use strict";var n=r(2009),o=[ReferenceError,TypeError,RangeError],a=!1;function i(){a=!1,n._Y=null,n._Z=null}function l(e,t){return t.some((function(t){return e instanceof t}))}t.disable=i,t.enable=function(e){e=e||{},a&&i();a=!0;var t=0,r=0,u={};function s(t){(e.allRejections||l(u[t].error,e.whitelist||o))&&(u[t].displayId=r++,e.onUnhandled?(u[t].logged=!0,e.onUnhandled(u[t].displayId,u[t].error)):(u[t].logged=!0,function(e,t){console.warn("Possible Unhandled Promise Rejection (id: "+e+"):"),((t&&(t.stack||t))+"").split("\\n").forEach((function(e){console.warn("  "+e)}))}(u[t].displayId,u[t].error)))}n._Y=function(t){2===t._V&&u[t._1]&&(u[t._1].logged?function(t){u[t].logged&&(e.onHandled?e.onHandled(u[t].displayId,u[t].error):u[t].onUnhandled||(console.warn("Promise Rejection Handled (id: "+u[t].displayId+"):"),console.warn(\'  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id \'+u[t].displayId+".")))}(t._1):clearTimeout(u[t._1].timeout),delete u[t._1])},n._Z=function(e,r){0===e._U&&(e._1=t++,u[e._1]={displayId:null,error:r,timeout:setTimeout(s.bind(null,e._1),l(r,o)?100:2e3),logged:!1})}}},6597:(e,t,r)=>{for(var n=r(3495),o="undefined"===typeof window?r.g:window,a=["moz","webkit"],i="AnimationFrame",l=o["request"+i],u=o["cancel"+i]||o["cancelRequest"+i],s=0;!l&&s<a.length;s++)l=o[a[s]+"Request"+i],u=o[a[s]+"Cancel"+i]||o[a[s]+"CancelRequest"+i];if(!l||!u){var c=0,f=0,d=[];l=function(e){if(0===d.length){var t=n(),r=Math.max(0,16.666666666666668-(t-c));c=r+t,setTimeout((function(){var e=d.slice(0);d.length=0;for(var t=0;t<e.length;t++)if(!e[t].cancelled)try{e[t].callback(c)}catch(e){setTimeout((function(){throw e}),0)}}),Math.round(r))}return d.push({handle:++f,callback:e,cancelled:!1}),f},u=function(e){for(var t=0;t<d.length;t++)d[t].handle===e&&(d[t].cancelled=!0)}}e.exports=function(e){return l.call(o,e)},e.exports.cancel=function(){u.apply(o,arguments)},e.exports.polyfill=function(e){e||(e=o),e.requestAnimationFrame=l,e.cancelAnimationFrame=u}},2015:(e,t,r)=>{"use strict";var n=r(6346),o=r(9934),a=r(7425);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!n)throw Error(i(227));var l=new Set,u={};function s(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},g={};function m(e,t,r,n,o,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=n,this.attributeNamespace=o,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=i}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){v[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];v[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){v[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){v[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){v[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){v[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){v[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){v[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){v[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,r,n){var o=v.hasOwnProperty(t)?v[t]:null;(null!==o?0===o.type:!n&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,r,n){if(null===t||"undefined"===typeof t||function(e,t,r,n){if(null!==r&&0===r.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!n&&(null!==r?!r.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,r,n))return!0;if(n)return!1;if(null!==r)switch(r.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,r,o,n)&&(r=null),n||null===o?function(e){return!!p.call(g,e)||!p.call(h,e)&&(d.test(e)?g[e]=!0:(h[e]=!0,!1))}(t)&&(null===r?e.removeAttribute(t):e.setAttribute(t,""+r)):o.mustUseProperty?e[o.propertyName]=null===r?3!==o.type&&"":r:(t=o.attributeName,n=o.attributeNamespace,null===r?e.removeAttribute(t):(r=3===(o=o.type)||4===o&&!0===r?"":""+r,n?e.setAttributeNS(n,t,r):e.setAttribute(t,r))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);v[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);v[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);v[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){v[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),v.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){v[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,k=60103,E=60106,S=60107,T=60108,_=60114,C=60109,O=60110,P=60112,R=60113,A=60120,q=60115,L=60116,N=60121,D=60128,I=60129,j=60130,M=60131;if("function"===typeof Symbol&&Symbol.for){var F=Symbol.for;k=F("react.element"),E=F("react.portal"),S=F("react.fragment"),T=F("react.strict_mode"),_=F("react.profiler"),C=F("react.provider"),O=F("react.context"),P=F("react.forward_ref"),R=F("react.suspense"),A=F("react.suspense_list"),q=F("react.memo"),L=F("react.lazy"),N=F("react.block"),F("react.scope"),D=F("react.opaque.id"),I=F("react.debug_trace_mode"),j=F("react.offscreen"),M=F("react.legacy_hidden")}var z,U="function"===typeof Symbol&&Symbol.iterator;function B(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=U&&e[U]||e["@@iterator"])?e:null}function V(e){if(void 0===z)try{throw Error()}catch(e){var t=e.stack.trim().match(/\\n( *(at )?)/);z=t&&t[1]||""}return"\\n"+z+e}var H=!1;function W(e,t){if(!e||H)return"";H=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var n=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){n=e}e.call(t.prototype)}else{try{throw Error()}catch(e){n=e}e()}}catch(e){if(e&&n&&"string"===typeof e.stack){for(var o=e.stack.split("\\n"),a=n.stack.split("\\n"),i=o.length-1,l=a.length-1;1<=i&&0<=l&&o[i]!==a[l];)l--;for(;1<=i&&0<=l;i--,l--)if(o[i]!==a[l]){if(1!==i||1!==l)do{if(i--,0>--l||o[i]!==a[l])return"\\n"+o[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{H=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?V(e):""}function G(e){switch(e.tag){case 5:return V(e.type);case 16:return V("Lazy");case 13:return V("Suspense");case 19:return V("SuspenseList");case 0:case 2:case 15:return e=W(e.type,!1);case 11:return e=W(e.type.render,!1);case 22:return e=W(e.type._render,!1);case 1:return e=W(e.type,!0);default:return""}}function $(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case E:return"Portal";case _:return"Profiler";case T:return"StrictMode";case R:return"Suspense";case A:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case O:return(e.displayName||"Context")+".Consumer";case C:return(e._context.displayName||"Context")+".Provider";case P:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case q:return $(e.type);case N:return $(e._render);case L:t=e._payload,e=e._init;try{return $(e(t))}catch(e){}}return null}function Q(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function K(e){e._valueTracker||(e._valueTracker=function(e){var t=Y(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),n=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof r&&"function"===typeof r.get&&"function"===typeof r.set){var o=r.get,a=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){n=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return n},setValue:function(e){n=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),n="";return e&&(n=Y(e)?e.checked?"true":"false":e.value),(e=n)!==r&&(t.setValue(e),!0)}function J(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var r=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function ee(e,t){var r=null==t.defaultValue?"":t.defaultValue,n=null!=t.checked?t.checked:t.defaultChecked;r=Q(null!=t.value?t.value:r),e._wrapperState={initialChecked:n,initialValue:r,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function re(e,t){te(e,t);var r=Q(t.value),n=t.type;if(null!=r)"number"===n?(0===r&&""===e.value||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if("submit"===n||"reset"===n)return void e.removeAttribute("value");t.hasOwnProperty("value")?oe(e,t.type,r):t.hasOwnProperty("defaultValue")&&oe(e,t.type,Q(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function ne(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var n=t.type;if(!("submit"!==n&&"reset"!==n||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}""!==(r=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==r&&(e.name=r)}function oe(e,t,r){"number"===t&&J(e.ownerDocument)===e||(null==r?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}function ae(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return n.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,r,n){if(e=e.options,t){t={};for(var o=0;o<r.length;o++)t["$"+r[o]]=!0;for(r=0;r<e.length;r++)o=t.hasOwnProperty("$"+e[r].value),e[r].selected!==o&&(e[r].selected=o),o&&n&&(e[r].defaultSelected=!0)}else{for(r=""+Q(r),t=null,o=0;o<e.length;o++){if(e[o].value===r)return e[o].selected=!0,void(n&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var r=t.value;if(null==r){if(r=t.children,t=t.defaultValue,null!=r){if(null!=t)throw Error(i(92));if(Array.isArray(r)){if(!(1>=r.length))throw Error(i(93));r=r[0]}t=r}null==t&&(t=""),r=t}e._wrapperState={initialValue:Q(r)}}function se(e,t){var r=Q(t.value),n=Q(t.defaultValue);null!=r&&((r=""+r)!==e.value&&(e.value=r),null==t.defaultValue&&e.defaultValue!==r&&(e.defaultValue=r)),null!=n&&(e.defaultValue=""+n)}function ce(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml",de="http://www.w3.org/2000/svg";function pe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function he(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?pe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ge,me,ve=(me=function(e,t){if(e.namespaceURI!==de||"innerHTML"in e)e.innerHTML=t;else{for((ge=ge||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ge.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,r,n){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ye(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&3===r.nodeType)return void(r.nodeValue=t)}e.textContent=t}var be={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},we=["Webkit","ms","Moz","O"];function xe(e,t,r){return null==t||"boolean"===typeof t||""===t?"":r||"number"!==typeof t||0===t||be.hasOwnProperty(e)&&be[e]?(""+t).trim():t+"px"}function ke(e,t){for(var r in e=e.style,t)if(t.hasOwnProperty(r)){var n=0===r.indexOf("--"),o=xe(r,t[r],n);"float"===r&&(r="cssFloat"),n?e.setProperty(r,o):e[r]=o}}Object.keys(be).forEach((function(e){we.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),be[t]=be[e]}))}));var Ee=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Se(e,t){if(t){if(Ee[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(i(62))}}function Te(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function _e(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,Oe=null,Pe=null;function Re(e){if(e=no(e)){if("function"!==typeof Ce)throw Error(i(280));var t=e.stateNode;t&&(t=ao(t),Ce(e.stateNode,e.type,t))}}function Ae(e){Oe?Pe?Pe.push(e):Pe=[e]:Oe=e}function qe(){if(Oe){var e=Oe,t=Pe;if(Pe=Oe=null,Re(e),t)for(e=0;e<t.length;e++)Re(t[e])}}function Le(e,t){return e(t)}function Ne(e,t,r,n,o){return e(t,r,n,o)}function De(){}var Ie=Le,je=!1,Me=!1;function Fe(){null===Oe&&null===Pe||(De(),qe())}function ze(e,t){var r=e.stateNode;if(null===r)return null;var n=ao(r);if(null===n)return null;r=n[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(n=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!n;break e;default:e=!1}if(e)return null;if(r&&"function"!==typeof r)throw Error(i(231,t,typeof r));return r}var Ue=!1;if(f)try{var Be={};Object.defineProperty(Be,"passive",{get:function(){Ue=!0}}),window.addEventListener("test",Be,Be),window.removeEventListener("test",Be,Be)}catch(me){Ue=!1}function Ve(e,t,r,n,o,a,i,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(r,s)}catch(e){this.onError(e)}}var He=!1,We=null,Ge=!1,$e=null,Qe={onError:function(e){He=!0,We=e}};function Ye(e,t,r,n,o,a,i,l,u){He=!1,We=null,Ve.apply(Qe,arguments)}function Ke(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(1026&(t=e).flags)&&(r=t.return),e=t.return}while(e)}return 3===t.tag?r:null}function Xe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Je(e){if(Ke(e)!==e)throw Error(i(188))}function Ze(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ke(e)))throw Error(i(188));return t!==e?null:e}for(var r=e,n=t;;){var o=r.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(n=o.return)){r=n;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===r)return Je(o),e;if(a===n)return Je(o),t;a=a.sibling}throw Error(i(188))}if(r.return!==n.return)r=o,n=a;else{for(var l=!1,u=o.child;u;){if(u===r){l=!0,r=o,n=a;break}if(u===n){l=!0,n=o,r=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===r){l=!0,r=a,n=o;break}if(u===n){l=!0,n=a,r=o;break}u=u.sibling}if(!l)throw Error(i(189))}}if(r.alternate!==n)throw Error(i(190))}if(3!==r.tag)throw Error(i(188));return r.stateNode.current===r?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function et(e,t){for(var r=e.alternate;null!==t;){if(t===e||t===r)return!0;t=t.return}return!1}var tt,rt,nt,ot,at=!1,it=[],lt=null,ut=null,st=null,ct=new Map,ft=new Map,dt=[],pt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function ht(e,t,r,n,o){return{blockedOn:e,domEventName:t,eventSystemFlags:16|r,nativeEvent:o,targetContainers:[n]}}function gt(e,t){switch(e){case"focusin":case"focusout":lt=null;break;case"dragenter":case"dragleave":ut=null;break;case"mouseover":case"mouseout":st=null;break;case"pointerover":case"pointerout":ct.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ft.delete(t.pointerId)}}function mt(e,t,r,n,o,a){return null===e||e.nativeEvent!==a?(e=ht(t,r,n,o,a),null!==t&&(null!==(t=no(t))&&rt(t)),e):(e.eventSystemFlags|=n,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function vt(e){var t=ro(e.target);if(null!==t){var r=Ke(t);if(null!==r)if(13===(t=r.tag)){if(null!==(t=Xe(r)))return e.blockedOn=t,void ot(e.lanePriority,(function(){a.unstable_runWithPriority(e.priority,(function(){nt(r)}))}))}else if(3===t&&r.stateNode.hydrate)return void(e.blockedOn=3===r.tag?r.stateNode.containerInfo:null)}e.blockedOn=null}function yt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var r=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r)return null!==(t=no(r))&&rt(t),e.blockedOn=r,!1;t.shift()}return!0}function bt(e,t,r){yt(e)&&r.delete(t)}function wt(){for(at=!1;0<it.length;){var e=it[0];if(null!==e.blockedOn){null!==(e=no(e.blockedOn))&&tt(e);break}for(var t=e.targetContainers;0<t.length;){var r=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r){e.blockedOn=r;break}t.shift()}null===e.blockedOn&&it.shift()}null!==lt&&yt(lt)&&(lt=null),null!==ut&&yt(ut)&&(ut=null),null!==st&&yt(st)&&(st=null),ct.forEach(bt),ft.forEach(bt)}function xt(e,t){e.blockedOn===t&&(e.blockedOn=null,at||(at=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,wt)))}function kt(e){function t(t){return xt(t,e)}if(0<it.length){xt(it[0],e);for(var r=1;r<it.length;r++){var n=it[r];n.blockedOn===e&&(n.blockedOn=null)}}for(null!==lt&&xt(lt,e),null!==ut&&xt(ut,e),null!==st&&xt(st,e),ct.forEach(t),ft.forEach(t),r=0;r<dt.length;r++)(n=dt[r]).blockedOn===e&&(n.blockedOn=null);for(;0<dt.length&&null===(r=dt[0]).blockedOn;)vt(r),null===r.blockedOn&&dt.shift()}function Et(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var St={animationend:Et("Animation","AnimationEnd"),animationiteration:Et("Animation","AnimationIteration"),animationstart:Et("Animation","AnimationStart"),transitionend:Et("Transition","TransitionEnd")},Tt={},_t={};function Ct(e){if(Tt[e])return Tt[e];if(!St[e])return e;var t,r=St[e];for(t in r)if(r.hasOwnProperty(t)&&t in _t)return Tt[e]=r[t];return e}f&&(_t=document.createElement("div").style,"AnimationEvent"in window||(delete St.animationend.animation,delete St.animationiteration.animation,delete St.animationstart.animation),"TransitionEvent"in window||delete St.transitionend.transition);var Ot=Ct("animationend"),Pt=Ct("animationiteration"),Rt=Ct("animationstart"),At=Ct("transitionend"),qt=new Map,Lt=new Map,Nt=["abort","abort",Ot,"animationEnd",Pt,"animationIteration",Rt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",At,"transitionEnd","waiting","waiting"];function Dt(e,t){for(var r=0;r<e.length;r+=2){var n=e[r],o=e[r+1];o="on"+(o[0].toUpperCase()+o.slice(1)),Lt.set(n,t),qt.set(n,o),s(o,[n])}}(0,a.unstable_now)();var It=8;function jt(e){if(0!==(1&e))return It=15,1;if(0!==(2&e))return It=14,2;if(0!==(4&e))return It=13,4;var t=24&e;return 0!==t?(It=12,t):0!==(32&e)?(It=11,32):0!==(t=192&e)?(It=10,t):0!==(256&e)?(It=9,256):0!==(t=3584&e)?(It=8,t):0!==(4096&e)?(It=7,4096):0!==(t=4186112&e)?(It=6,t):0!==(t=62914560&e)?(It=5,t):67108864&e?(It=4,67108864):0!==(134217728&e)?(It=3,134217728):0!==(t=805306368&e)?(It=2,t):0!==(1073741824&e)?(It=1,1073741824):(It=8,e)}function Mt(e,t){var r=e.pendingLanes;if(0===r)return It=0;var n=0,o=0,a=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==a)n=a,o=It=15;else if(0!==(a=134217727&r)){var u=a&~i;0!==u?(n=jt(u),o=It):0!==(l&=a)&&(n=jt(l),o=It)}else 0!==(a=r&~i)?(n=jt(a),o=It):0!==l&&(n=jt(l),o=It);if(0===n)return 0;if(n=r&((0>(n=31-Ht(n))?0:1<<n)<<1)-1,0!==t&&t!==n&&0===(t&i)){if(jt(t),o<=It)return t;It=o}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=n;0<t;)o=1<<(r=31-Ht(t)),n|=e[r],t&=~o;return n}function Ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function zt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Ut(24&~t))?zt(10,t):e;case 10:return 0===(e=Ut(192&~t))?zt(8,t):e;case 8:return 0===(e=Ut(3584&~t))&&(0===(e=Ut(4186112&~t))&&(e=512)),e;case 2:return 0===(t=Ut(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function Ut(e){return e&-e}function Bt(e){for(var t=[],r=0;31>r;r++)t.push(e);return t}function Vt(e,t,r){e.pendingLanes|=t;var n=t-1;e.suspendedLanes&=n,e.pingedLanes&=n,(e=e.eventTimes)[t=31-Ht(t)]=r}var Ht=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Wt(e)/Gt|0)|0},Wt=Math.log,Gt=Math.LN2;var $t=a.unstable_UserBlockingPriority,Qt=a.unstable_runWithPriority,Yt=!0;function Kt(e,t,r,n){je||De();var o=Jt,a=je;je=!0;try{Ne(o,e,t,r,n)}finally{(je=a)||Fe()}}function Xt(e,t,r,n){Qt($t,Jt.bind(null,e,t,r,n))}function Jt(e,t,r,n){var o;if(Yt)if((o=0===(4&t))&&0<it.length&&-1<pt.indexOf(e))e=ht(null,e,t,r,n),it.push(e);else{var a=Zt(e,t,r,n);if(null===a)o&&gt(e,n);else{if(o){if(-1<pt.indexOf(e))return e=ht(a,e,t,r,n),void it.push(e);if(function(e,t,r,n,o){switch(t){case"focusin":return lt=mt(lt,e,t,r,n,o),!0;case"dragenter":return ut=mt(ut,e,t,r,n,o),!0;case"mouseover":return st=mt(st,e,t,r,n,o),!0;case"pointerover":var a=o.pointerId;return ct.set(a,mt(ct.get(a)||null,e,t,r,n,o)),!0;case"gotpointercapture":return a=o.pointerId,ft.set(a,mt(ft.get(a)||null,e,t,r,n,o)),!0}return!1}(a,e,t,r,n))return;gt(e,n)}Dn(e,t,n,null,r)}}}function Zt(e,t,r,n){var o=_e(n);if(null!==(o=ro(o))){var a=Ke(o);if(null===a)o=null;else{var i=a.tag;if(13===i){if(null!==(o=Xe(a)))return o;o=null}else if(3===i){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;o=null}else a!==o&&(o=null)}}return Dn(e,t,n,o,r),null}var er=null,tr=null,rr=null;function nr(){if(rr)return rr;var e,t,r=tr,n=r.length,o="value"in er?er.value:er.textContent,a=o.length;for(e=0;e<n&&r[e]===o[e];e++);var i=n-e;for(t=1;t<=i&&r[n-t]===o[a-t];t++);return rr=o.slice(e,1<t?1-t:void 0)}function or(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function ar(){return!0}function ir(){return!1}function lr(e){function t(t,r,n,o,a){for(var i in this._reactName=t,this._targetInst=n,this.type=r,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?ar:ir,this.isPropagationStopped=ir,this}return o(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ar)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ar)},persist:function(){},isPersistent:ar}),t}var ur,sr,cr,fr={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dr=lr(fr),pr=o({},fr,{view:0,detail:0}),hr=lr(pr),gr=o({},pr,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cr,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cr&&(cr&&"mousemove"===e.type?(ur=e.screenX-cr.screenX,sr=e.screenY-cr.screenY):sr=ur=0,cr=e),ur)},movementY:function(e){return"movementY"in e?e.movementY:sr}}),mr=lr(gr),vr=lr(o({},gr,{dataTransfer:0})),yr=lr(o({},pr,{relatedTarget:0})),br=lr(o({},fr,{animationName:0,elapsedTime:0,pseudoElement:0})),wr=o({},fr,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),xr=lr(wr),kr=lr(o({},fr,{data:0})),Er={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Tr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function _r(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Tr[e])&&!!t[e]}function Cr(){return _r}var Or=o({},pr,{key:function(e){if(e.key){var t=Er[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=or(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sr[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cr,charCode:function(e){return"keypress"===e.type?or(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?or(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Pr=lr(Or),Rr=lr(o({},gr,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Ar=lr(o({},pr,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cr})),qr=lr(o({},fr,{propertyName:0,elapsedTime:0,pseudoElement:0})),Lr=o({},gr,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Nr=lr(Lr),Dr=[9,13,27,32],Ir=f&&"CompositionEvent"in window,jr=null;f&&"documentMode"in document&&(jr=document.documentMode);var Mr=f&&"TextEvent"in window&&!jr,Fr=f&&(!Ir||jr&&8<jr&&11>=jr),zr=String.fromCharCode(32),Ur=!1;function Br(e,t){switch(e){case"keyup":return-1!==Dr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Vr(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Hr=!1;var Wr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Gr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Wr[e.type]:"textarea"===t}function $r(e,t,r,n){Ae(n),0<(t=jn(t,"onChange")).length&&(r=new dr("onChange","change",null,r,n),e.push({event:r,listeners:t}))}var Qr=null,Yr=null;function Kr(e){Pn(e,0)}function Xr(e){if(X(oo(e)))return e}function Jr(e,t){if("change"===e)return t}var Zr=!1;if(f){var en;if(f){var tn="oninput"in document;if(!tn){var rn=document.createElement("div");rn.setAttribute("oninput","return;"),tn="function"===typeof rn.oninput}en=tn}else en=!1;Zr=en&&(!document.documentMode||9<document.documentMode)}function nn(){Qr&&(Qr.detachEvent("onpropertychange",on),Yr=Qr=null)}function on(e){if("value"===e.propertyName&&Xr(Yr)){var t=[];if($r(t,Yr,e,_e(e)),e=Kr,je)e(t);else{je=!0;try{Le(e,t)}finally{je=!1,Fe()}}}}function an(e,t,r){"focusin"===e?(nn(),Yr=r,(Qr=t).attachEvent("onpropertychange",on)):"focusout"===e&&nn()}function ln(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xr(Yr)}function un(e,t){if("click"===e)return Xr(t)}function sn(e,t){if("input"===e||"change"===e)return Xr(t)}var cn="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t},fn=Object.prototype.hasOwnProperty;function dn(e,t){if(cn(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(n=0;n<r.length;n++)if(!fn.call(t,r[n])||!cn(e[r[n]],t[r[n]]))return!1;return!0}function pn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function hn(e,t){var r,n=pn(e);for(e=0;n;){if(3===n.nodeType){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=pn(n)}}function gn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?gn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function mn(){for(var e=window,t=J();t instanceof e.HTMLIFrameElement;){try{var r="string"===typeof t.contentWindow.location.href}catch(e){r=!1}if(!r)break;t=J((e=t.contentWindow).document)}return t}function vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var yn=f&&"documentMode"in document&&11>=document.documentMode,bn=null,wn=null,xn=null,kn=!1;function En(e,t,r){var n=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;kn||null==bn||bn!==J(n)||("selectionStart"in(n=bn)&&vn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},xn&&dn(xn,n)||(xn=n,0<(n=jn(wn,"onSelect")).length&&(t=new dr("onSelect","select",null,t,r),e.push({event:t,listeners:n}),t.target=bn)))}Dt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Dt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Dt(Nt,2);for(var Sn="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Tn=0;Tn<Sn.length;Tn++)Lt.set(Sn[Tn],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var _n="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Cn=new Set("cancel close invalid load scroll toggle".split(" ").concat(_n));function On(e,t,r){var n=e.type||"unknown-event";e.currentTarget=r,function(e,t,r,n,o,a,l,u,s){if(Ye.apply(this,arguments),He){if(!He)throw Error(i(198));var c=We;He=!1,We=null,Ge||(Ge=!0,$e=c)}}(n,t,void 0,e),e.currentTarget=null}function Pn(e,t){t=0!==(4&t);for(var r=0;r<e.length;r++){var n=e[r],o=n.event;n=n.listeners;e:{var a=void 0;if(t)for(var i=n.length-1;0<=i;i--){var l=n[i],u=l.instance,s=l.currentTarget;if(l=l.listener,u!==a&&o.isPropagationStopped())break e;On(o,l,s),a=u}else for(i=0;i<n.length;i++){if(u=(l=n[i]).instance,s=l.currentTarget,l=l.listener,u!==a&&o.isPropagationStopped())break e;On(o,l,s),a=u}}}if(Ge)throw e=$e,Ge=!1,$e=null,e}function Rn(e,t){var r=io(t),n=e+"__bubble";r.has(n)||(Nn(t,e,2,!1),r.add(n))}var An="_reactListening"+Math.random().toString(36).slice(2);function qn(e){e[An]||(e[An]=!0,l.forEach((function(t){Cn.has(t)||Ln(t,!1,e,null),Ln(t,!0,e,null)})))}function Ln(e,t,r,n){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,a=r;if("selectionchange"===e&&9!==r.nodeType&&(a=r.ownerDocument),null!==n&&!t&&Cn.has(e)){if("scroll"!==e)return;o|=2,a=n}var i=io(a),l=e+"__"+(t?"capture":"bubble");i.has(l)||(t&&(o|=4),Nn(a,e,o,t),i.add(l))}function Nn(e,t,r,n){var o=Lt.get(t);switch(void 0===o?2:o){case 0:o=Kt;break;case 1:o=Xt;break;default:o=Jt}r=o.bind(null,t,r,e),o=void 0,!Ue||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),n?void 0!==o?e.addEventListener(t,r,{capture:!0,passive:o}):e.addEventListener(t,r,!0):void 0!==o?e.addEventListener(t,r,{passive:o}):e.addEventListener(t,r,!1)}function Dn(e,t,r,n,o){var a=n;if(0===(1&t)&&0===(2&t)&&null!==n)e:for(;;){if(null===n)return;var i=n.tag;if(3===i||4===i){var l=n.stateNode.containerInfo;if(l===o||8===l.nodeType&&l.parentNode===o)break;if(4===i)for(i=n.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;i=i.return}for(;null!==l;){if(null===(i=ro(l)))return;if(5===(u=i.tag)||6===u){n=a=i;continue e}l=l.parentNode}}n=n.return}!function(e,t,r){if(Me)return e(t,r);Me=!0;try{Ie(e,t,r)}finally{Me=!1,Fe()}}((function(){var n=a,o=_e(r),i=[];e:{var l=qt.get(e);if(void 0!==l){var u=dr,s=e;switch(e){case"keypress":if(0===or(r))break e;case"keydown":case"keyup":u=Pr;break;case"focusin":s="focus",u=yr;break;case"focusout":s="blur",u=yr;break;case"beforeblur":case"afterblur":u=yr;break;case"click":if(2===r.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=mr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=vr;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Ar;break;case Ot:case Pt:case Rt:u=br;break;case At:u=qr;break;case"scroll":u=hr;break;case"wheel":u=Nr;break;case"copy":case"cut":case"paste":u=xr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Rr}var c=0!==(4&t),f=!c&&"scroll"===e,d=c?null!==l?l+"Capture":null:l;c=[];for(var p,h=n;null!==h;){var g=(p=h).stateNode;if(5===p.tag&&null!==g&&(p=g,null!==d&&(null!=(g=ze(h,d))&&c.push(In(h,g,p)))),f)break;h=h.return}0<c.length&&(l=new u(l,s,null,r,o),i.push({event:l,listeners:c}))}}if(0===(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!==(16&t)||!(s=r.relatedTarget||r.fromElement)||!ro(s)&&!s[eo])&&(u||l)&&(l=o.window===o?o:(l=o.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=n,null!==(s=(s=r.relatedTarget||r.toElement)?ro(s):null)&&(s!==(f=Ke(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=n),u!==s)){if(c=mr,g="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=Rr,g="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?l:oo(u),p=null==s?l:oo(s),(l=new c(g,h+"leave",u,r,o)).target=f,l.relatedTarget=p,g=null,ro(o)===n&&((c=new c(d,h+"enter",s,r,o)).target=p,c.relatedTarget=f,g=c),f=g,u&&s)e:{for(d=s,h=0,p=c=u;p;p=Mn(p))h++;for(p=0,g=d;g;g=Mn(g))p++;for(;0<h-p;)c=Mn(c),h--;for(;0<p-h;)d=Mn(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=Mn(c),d=Mn(d)}c=null}else c=null;null!==u&&Fn(i,l,u,c,!1),null!==s&&null!==f&&Fn(i,f,s,c,!0)}if("select"===(u=(l=n?oo(n):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var m=Jr;else if(Gr(l))if(Zr)m=sn;else{m=ln;var v=an}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(m=un);switch(m&&(m=m(e,n))?$r(i,m,r,o):(v&&v(e,l,n),"focusout"===e&&(v=l._wrapperState)&&v.controlled&&"number"===l.type&&oe(l,"number",l.value)),v=n?oo(n):window,e){case"focusin":(Gr(v)||"true"===v.contentEditable)&&(bn=v,wn=n,xn=null);break;case"focusout":xn=wn=bn=null;break;case"mousedown":kn=!0;break;case"contextmenu":case"mouseup":case"dragend":kn=!1,En(i,r,o);break;case"selectionchange":if(yn)break;case"keydown":case"keyup":En(i,r,o)}var y;if(Ir)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Hr?Br(e,r)&&(b="onCompositionEnd"):"keydown"===e&&229===r.keyCode&&(b="onCompositionStart");b&&(Fr&&"ko"!==r.locale&&(Hr||"onCompositionStart"!==b?"onCompositionEnd"===b&&Hr&&(y=nr()):(tr="value"in(er=o)?er.value:er.textContent,Hr=!0)),0<(v=jn(n,b)).length&&(b=new kr(b,e,null,r,o),i.push({event:b,listeners:v}),y?b.data=y:null!==(y=Vr(r))&&(b.data=y))),(y=Mr?function(e,t){switch(e){case"compositionend":return Vr(t);case"keypress":return 32!==t.which?null:(Ur=!0,zr);case"textInput":return(e=t.data)===zr&&Ur?null:e;default:return null}}(e,r):function(e,t){if(Hr)return"compositionend"===e||!Ir&&Br(e,t)?(e=nr(),rr=tr=er=null,Hr=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Fr&&"ko"!==t.locale?null:t.data}}(e,r))&&(0<(n=jn(n,"onBeforeInput")).length&&(o=new kr("onBeforeInput","beforeinput",null,r,o),i.push({event:o,listeners:n}),o.data=y))}Pn(i,t)}))}function In(e,t,r){return{instance:e,listener:t,currentTarget:r}}function jn(e,t){for(var r=t+"Capture",n=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=ze(e,r))&&n.unshift(In(e,a,o)),null!=(a=ze(e,t))&&n.push(In(e,a,o))),e=e.return}return n}function Mn(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Fn(e,t,r,n,o){for(var a=t._reactName,i=[];null!==r&&r!==n;){var l=r,u=l.alternate,s=l.stateNode;if(null!==u&&u===n)break;5===l.tag&&null!==s&&(l=s,o?null!=(u=ze(r,a))&&i.unshift(In(r,u,l)):o||null!=(u=ze(r,a))&&i.push(In(r,u,l))),r=r.return}0!==i.length&&e.push({event:t,listeners:i})}function zn(){}var Un=null,Bn=null;function Vn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Hn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Wn="function"===typeof setTimeout?setTimeout:void 0,Gn="function"===typeof clearTimeout?clearTimeout:void 0;function $n(e){1===e.nodeType?e.textContent="":9===e.nodeType&&(null!=(e=e.body)&&(e.textContent=""))}function Qn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Yn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var r=e.data;if("$"===r||"$!"===r||"$?"===r){if(0===t)return e;t--}else"/$"===r&&t++}e=e.previousSibling}return null}var Kn=0;var Xn=Math.random().toString(36).slice(2),Jn="__reactFiber$"+Xn,Zn="__reactProps$"+Xn,eo="__reactContainer$"+Xn,to="__reactEvents$"+Xn;function ro(e){var t=e[Jn];if(t)return t;for(var r=e.parentNode;r;){if(t=r[eo]||r[Jn]){if(r=t.alternate,null!==t.child||null!==r&&null!==r.child)for(e=Yn(e);null!==e;){if(r=e[Jn])return r;e=Yn(e)}return t}r=(e=r).parentNode}return null}function no(e){return!(e=e[Jn]||e[eo])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function oo(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function ao(e){return e[Zn]||null}function io(e){var t=e[to];return void 0===t&&(t=e[to]=new Set),t}var lo=[],uo=-1;function so(e){return{current:e}}function co(e){0>uo||(e.current=lo[uo],lo[uo]=null,uo--)}function fo(e,t){uo++,lo[uo]=e.current,e.current=t}var po={},ho=so(po),go=so(!1),mo=po;function vo(e,t){var r=e.type.contextTypes;if(!r)return po;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===t)return n.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in r)a[o]=t[o];return n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function yo(e){return null!==(e=e.childContextTypes)&&void 0!==e}function bo(){co(go),co(ho)}function wo(e,t,r){if(ho.current!==po)throw Error(i(168));fo(ho,t),fo(go,r)}function xo(e,t,r){var n=e.stateNode;if(e=t.childContextTypes,"function"!==typeof n.getChildContext)return r;for(var a in n=n.getChildContext())if(!(a in e))throw Error(i(108,$(t)||"Unknown",a));return o({},r,n)}function ko(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||po,mo=ho.current,fo(ho,e),fo(go,go.current),!0}function Eo(e,t,r){var n=e.stateNode;if(!n)throw Error(i(169));r?(e=xo(e,t,mo),n.__reactInternalMemoizedMergedChildContext=e,co(go),co(ho),fo(ho,e)):co(go),fo(go,r)}var So=null,To=null,_o=a.unstable_runWithPriority,Co=a.unstable_scheduleCallback,Oo=a.unstable_cancelCallback,Po=a.unstable_shouldYield,Ro=a.unstable_requestPaint,Ao=a.unstable_now,qo=a.unstable_getCurrentPriorityLevel,Lo=a.unstable_ImmediatePriority,No=a.unstable_UserBlockingPriority,Do=a.unstable_NormalPriority,Io=a.unstable_LowPriority,jo=a.unstable_IdlePriority,Mo={},Fo=void 0!==Ro?Ro:function(){},zo=null,Uo=null,Bo=!1,Vo=Ao(),Ho=1e4>Vo?Ao:function(){return Ao()-Vo};function Wo(){switch(qo()){case Lo:return 99;case No:return 98;case Do:return 97;case Io:return 96;case jo:return 95;default:throw Error(i(332))}}function Go(e){switch(e){case 99:return Lo;case 98:return No;case 97:return Do;case 96:return Io;case 95:return jo;default:throw Error(i(332))}}function $o(e,t){return e=Go(e),_o(e,t)}function Qo(e,t,r){return e=Go(e),Co(e,t,r)}function Yo(){if(null!==Uo){var e=Uo;Uo=null,Oo(e)}Ko()}function Ko(){if(!Bo&&null!==zo){Bo=!0;var e=0;try{var t=zo;$o(99,(function(){for(;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}})),zo=null}catch(t){throw null!==zo&&(zo=zo.slice(e+1)),Co(Lo,Yo),t}finally{Bo=!1}}}var Xo=x.ReactCurrentBatchConfig;function Jo(e,t){if(e&&e.defaultProps){for(var r in t=o({},t),e=e.defaultProps)void 0===t[r]&&(t[r]=e[r]);return t}return t}var Zo=so(null),ea=null,ta=null,ra=null;function na(){ra=ta=ea=null}function oa(e){var t=Zo.current;co(Zo),e.type._context._currentValue=t}function aa(e,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)===t){if(null===r||(r.childLanes&t)===t)break;r.childLanes|=t}else e.childLanes|=t,null!==r&&(r.childLanes|=t);e=e.return}}function ia(e,t){ea=e,ra=ta=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(ji=!0),e.firstContext=null)}function la(e,t){if(ra!==e&&!1!==t&&0!==t)if("number"===typeof t&&1073741823!==t||(ra=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ta){if(null===ea)throw Error(i(308));ta=t,ea.dependencies={lanes:0,firstContext:t,responders:null}}else ta=ta.next=t;return e._currentValue}var ua=!1;function sa(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ca(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function fa(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function da(e,t){if(null!==(e=e.updateQueue)){var r=(e=e.shared).pending;null===r?t.next=t:(t.next=r.next,r.next=t),e.pending=t}}function pa(e,t){var r=e.updateQueue,n=e.alternate;if(null!==n&&r===(n=n.updateQueue)){var o=null,a=null;if(null!==(r=r.firstBaseUpdate)){do{var i={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};null===a?o=a=i:a=a.next=i,r=r.next}while(null!==r);null===a?o=a=t:a=a.next=t}else o=a=t;return r={baseState:n.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:n.shared,effects:n.effects},void(e.updateQueue=r)}null===(e=r.lastBaseUpdate)?r.firstBaseUpdate=t:e.next=t,r.lastBaseUpdate=t}function ha(e,t,r,n){var a=e.updateQueue;ua=!1;var i=a.firstBaseUpdate,l=a.lastBaseUpdate,u=a.shared.pending;if(null!==u){a.shared.pending=null;var s=u,c=s.next;s.next=null,null===l?i=c:l.next=c,l=s;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=c:d.next=c,f.lastBaseUpdate=s)}}if(null!==i){for(d=a.baseState,l=0,f=c=s=null;;){u=i.lane;var p=i.eventTime;if((n&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,g=i;switch(u=t,p=r,g.tag){case 1:if("function"===typeof(h=g.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null===(u="function"===typeof(h=g.payload)?h.call(p,d,u):h)||void 0===u)break e;d=o({},d,u);break e;case 2:ua=!0}}null!==i.callback&&(e.flags|=32,null===(u=a.effects)?a.effects=[i]:u.push(i))}else p={eventTime:p,lane:u,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===f?(c=f=p,s=d):f=f.next=p,l|=u;if(null===(i=i.next)){if(null===(u=a.shared.pending))break;i=u.next,u.next=null,a.lastBaseUpdate=u,a.shared.pending=null}}null===f&&(s=d),a.baseState=s,a.firstBaseUpdate=c,a.lastBaseUpdate=f,Ul|=l,e.lanes=l,e.memoizedState=d}}function ga(e,t,r){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var n=e[t],o=n.callback;if(null!==o){if(n.callback=null,n=r,"function"!==typeof o)throw Error(i(191,o));o.call(n)}}}var ma=(new n.Component).refs;function va(e,t,r,n){r=null===(r=r(n,t=e.memoizedState))||void 0===r?t:o({},t,r),e.memoizedState=r,0===e.lanes&&(e.updateQueue.baseState=r)}var ya={isMounted:function(e){return!!(e=e._reactInternals)&&Ke(e)===e},enqueueSetState:function(e,t,r){e=e._reactInternals;var n=du(),o=pu(e),a=fa(n,o);a.payload=t,void 0!==r&&null!==r&&(a.callback=r),da(e,a),hu(e,o,n)},enqueueReplaceState:function(e,t,r){e=e._reactInternals;var n=du(),o=pu(e),a=fa(n,o);a.tag=1,a.payload=t,void 0!==r&&null!==r&&(a.callback=r),da(e,a),hu(e,o,n)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var r=du(),n=pu(e),o=fa(r,n);o.tag=2,void 0!==t&&null!==t&&(o.callback=t),da(e,o),hu(e,n,r)}};function ba(e,t,r,n,o,a,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(n,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!dn(r,n)||!dn(o,a))}function wa(e,t,r){var n=!1,o=po,a=t.contextType;return"object"===typeof a&&null!==a?a=la(a):(o=yo(t)?mo:ho.current,a=(n=null!==(n=t.contextTypes)&&void 0!==n)?vo(e,o):po),t=new t(r,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ya,e.stateNode=t,t._reactInternals=e,n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function xa(e,t,r,n){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(r,n),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(r,n),t.state!==e&&ya.enqueueReplaceState(t,t.state,null)}function ka(e,t,r,n){var o=e.stateNode;o.props=r,o.state=e.memoizedState,o.refs=ma,sa(e);var a=t.contextType;"object"===typeof a&&null!==a?o.context=la(a):(a=yo(t)?mo:ho.current,o.context=vo(e,a)),ha(e,r,o,n),o.state=e.memoizedState,"function"===typeof(a=t.getDerivedStateFromProps)&&(va(e,t,a,r),o.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof o.getSnapshotBeforeUpdate||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||(t=o.state,"function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ya.enqueueReplaceState(o,o.state,null),ha(e,r,o,n),o.state=e.memoizedState),"function"===typeof o.componentDidMount&&(e.flags|=4)}var Ea=Array.isArray;function Sa(e,t,r){if(null!==(e=r.ref)&&"function"!==typeof e&&"object"!==typeof e){if(r._owner){if(r=r._owner){if(1!==r.tag)throw Error(i(309));var n=r.stateNode}if(!n)throw Error(i(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=n.refs;t===ma&&(t=n.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!==typeof e)throw Error(i(284));if(!r._owner)throw Error(i(290,e))}return e}function Ta(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function _a(e){function t(t,r){if(e){var n=t.lastEffect;null!==n?(n.nextEffect=r,t.lastEffect=r):t.firstEffect=t.lastEffect=r,r.nextEffect=null,r.flags=8}}function r(r,n){if(!e)return null;for(;null!==n;)t(r,n),n=n.sibling;return null}function n(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Gu(e,t)).index=0,e.sibling=null,e}function a(t,r,n){return t.index=n,e?null!==(n=t.alternate)?(n=n.index)<r?(t.flags=2,r):n:(t.flags=2,r):r}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,r,n){return null===t||6!==t.tag?((t=Ku(r,e.mode,n)).return=e,t):((t=o(t,r)).return=e,t)}function s(e,t,r,n){return null!==t&&t.elementType===r.type?((n=o(t,r.props)).ref=Sa(e,t,r),n.return=e,n):((n=$u(r.type,r.key,r.props,null,e.mode,n)).ref=Sa(e,t,r),n.return=e,n)}function c(e,t,r,n){return null===t||4!==t.tag||t.stateNode.containerInfo!==r.containerInfo||t.stateNode.implementation!==r.implementation?((t=Xu(r,e.mode,n)).return=e,t):((t=o(t,r.children||[])).return=e,t)}function f(e,t,r,n,a){return null===t||7!==t.tag?((t=Qu(r,e.mode,n,a)).return=e,t):((t=o(t,r)).return=e,t)}function d(e,t,r){if("string"===typeof t||"number"===typeof t)return(t=Ku(""+t,e.mode,r)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case k:return(r=$u(t.type,t.key,t.props,null,e.mode,r)).ref=Sa(e,null,t),r.return=e,r;case E:return(t=Xu(t,e.mode,r)).return=e,t}if(Ea(t)||B(t))return(t=Qu(t,e.mode,r,null)).return=e,t;Ta(e,t)}return null}function p(e,t,r,n){var o=null!==t?t.key:null;if("string"===typeof r||"number"===typeof r)return null!==o?null:u(e,t,""+r,n);if("object"===typeof r&&null!==r){switch(r.$$typeof){case k:return r.key===o?r.type===S?f(e,t,r.props.children,n,o):s(e,t,r,n):null;case E:return r.key===o?c(e,t,r,n):null}if(Ea(r)||B(r))return null!==o?null:f(e,t,r,n,null);Ta(e,r)}return null}function h(e,t,r,n,o){if("string"===typeof n||"number"===typeof n)return u(t,e=e.get(r)||null,""+n,o);if("object"===typeof n&&null!==n){switch(n.$$typeof){case k:return e=e.get(null===n.key?r:n.key)||null,n.type===S?f(t,e,n.props.children,o,n.key):s(t,e,n,o);case E:return c(t,e=e.get(null===n.key?r:n.key)||null,n,o)}if(Ea(n)||B(n))return f(t,e=e.get(r)||null,n,o,null);Ta(t,n)}return null}function g(o,i,l,u){for(var s=null,c=null,f=i,g=i=0,m=null;null!==f&&g<l.length;g++){f.index>g?(m=f,f=null):m=f.sibling;var v=p(o,f,l[g],u);if(null===v){null===f&&(f=m);break}e&&f&&null===v.alternate&&t(o,f),i=a(v,i,g),null===c?s=v:c.sibling=v,c=v,f=m}if(g===l.length)return r(o,f),s;if(null===f){for(;g<l.length;g++)null!==(f=d(o,l[g],u))&&(i=a(f,i,g),null===c?s=f:c.sibling=f,c=f);return s}for(f=n(o,f);g<l.length;g++)null!==(m=h(f,o,g,l[g],u))&&(e&&null!==m.alternate&&f.delete(null===m.key?g:m.key),i=a(m,i,g),null===c?s=m:c.sibling=m,c=m);return e&&f.forEach((function(e){return t(o,e)})),s}function m(o,l,u,s){var c=B(u);if("function"!==typeof c)throw Error(i(150));if(null==(u=c.call(u)))throw Error(i(151));for(var f=c=null,g=l,m=l=0,v=null,y=u.next();null!==g&&!y.done;m++,y=u.next()){g.index>m?(v=g,g=null):v=g.sibling;var b=p(o,g,y.value,s);if(null===b){null===g&&(g=v);break}e&&g&&null===b.alternate&&t(o,g),l=a(b,l,m),null===f?c=b:f.sibling=b,f=b,g=v}if(y.done)return r(o,g),c;if(null===g){for(;!y.done;m++,y=u.next())null!==(y=d(o,y.value,s))&&(l=a(y,l,m),null===f?c=y:f.sibling=y,f=y);return c}for(g=n(o,g);!y.done;m++,y=u.next())null!==(y=h(g,o,m,y.value,s))&&(e&&null!==y.alternate&&g.delete(null===y.key?m:y.key),l=a(y,l,m),null===f?c=y:f.sibling=y,f=y);return e&&g.forEach((function(e){return t(o,e)})),c}return function(e,n,a,u){var s="object"===typeof a&&null!==a&&a.type===S&&null===a.key;s&&(a=a.props.children);var c="object"===typeof a&&null!==a;if(c)switch(a.$$typeof){case k:e:{for(c=a.key,s=n;null!==s;){if(s.key===c){if(7===s.tag){if(a.type===S){r(e,s.sibling),(n=o(s,a.props.children)).return=e,e=n;break e}}else if(s.elementType===a.type){r(e,s.sibling),(n=o(s,a.props)).ref=Sa(e,s,a),n.return=e,e=n;break e}r(e,s);break}t(e,s),s=s.sibling}a.type===S?((n=Qu(a.props.children,e.mode,u,a.key)).return=e,e=n):((u=$u(a.type,a.key,a.props,null,e.mode,u)).ref=Sa(e,n,a),u.return=e,e=u)}return l(e);case E:e:{for(s=a.key;null!==n;){if(n.key===s){if(4===n.tag&&n.stateNode.containerInfo===a.containerInfo&&n.stateNode.implementation===a.implementation){r(e,n.sibling),(n=o(n,a.children||[])).return=e,e=n;break e}r(e,n);break}t(e,n),n=n.sibling}(n=Xu(a,e.mode,u)).return=e,e=n}return l(e)}if("string"===typeof a||"number"===typeof a)return a=""+a,null!==n&&6===n.tag?(r(e,n.sibling),(n=o(n,a)).return=e,e=n):(r(e,n),(n=Ku(a,e.mode,u)).return=e,e=n),l(e);if(Ea(a))return g(e,n,a,u);if(B(a))return m(e,n,a,u);if(c&&Ta(e,a),"undefined"===typeof a&&!s)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,$(e.type)||"Component"))}return r(e,n)}}var Ca=_a(!0),Oa=_a(!1),Pa={},Ra=so(Pa),Aa=so(Pa),qa=so(Pa);function La(e){if(e===Pa)throw Error(i(174));return e}function Na(e,t){switch(fo(qa,t),fo(Aa,e),fo(Ra,Pa),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:he(null,"");break;default:t=he(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}co(Ra),fo(Ra,t)}function Da(){co(Ra),co(Aa),co(qa)}function Ia(e){La(qa.current);var t=La(Ra.current),r=he(t,e.type);t!==r&&(fo(Aa,e),fo(Ra,r))}function ja(e){Aa.current===e&&(co(Ra),co(Aa))}var Ma=so(0);function Fa(e){for(var t=e;null!==t;){if(13===t.tag){var r=t.memoizedState;if(null!==r&&(null===(r=r.dehydrated)||"$?"===r.data||"$!"===r.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var za=null,Ua=null,Ba=!1;function Va(e,t){var r=Hu(5,null,null,0);r.elementType="DELETED",r.type="DELETED",r.stateNode=t,r.return=e,r.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=r,e.lastEffect=r):e.firstEffect=e.lastEffect=r}function Ha(e,t){switch(e.tag){case 5:var r=e.type;return null!==(t=1!==t.nodeType||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Wa(e){if(Ba){var t=Ua;if(t){var r=t;if(!Ha(e,t)){if(!(t=Qn(r.nextSibling))||!Ha(e,t))return e.flags=-1025&e.flags|2,Ba=!1,void(za=e);Va(za,r)}za=e,Ua=Qn(t.firstChild)}else e.flags=-1025&e.flags|2,Ba=!1,za=e}}function Ga(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;za=e}function $a(e){if(e!==za)return!1;if(!Ba)return Ga(e),Ba=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Hn(t,e.memoizedProps))for(t=Ua;t;)Va(e,t),t=Qn(t.nextSibling);if(Ga(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var r=e.data;if("/$"===r){if(0===t){Ua=Qn(e.nextSibling);break e}t--}else"$"!==r&&"$!"!==r&&"$?"!==r||t++}e=e.nextSibling}Ua=null}}else Ua=za?Qn(e.stateNode.nextSibling):null;return!0}function Qa(){Ua=za=null,Ba=!1}var Ya=[];function Ka(){for(var e=0;e<Ya.length;e++)Ya[e]._workInProgressVersionPrimary=null;Ya.length=0}var Xa=x.ReactCurrentDispatcher,Ja=x.ReactCurrentBatchConfig,Za=0,ei=null,ti=null,ri=null,ni=!1,oi=!1;function ai(){throw Error(i(321))}function ii(e,t){if(null===t)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!cn(e[r],t[r]))return!1;return!0}function li(e,t,r,n,o,a){if(Za=a,ei=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Xa.current=null===e||null===e.memoizedState?Li:Ni,e=r(n,o),oi){a=0;do{if(oi=!1,!(25>a))throw Error(i(301));a+=1,ri=ti=null,t.updateQueue=null,Xa.current=Di,e=r(n,o)}while(oi)}if(Xa.current=qi,t=null!==ti&&null!==ti.next,Za=0,ri=ti=ei=null,ni=!1,t)throw Error(i(300));return e}function ui(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ri?ei.memoizedState=ri=e:ri=ri.next=e,ri}function si(){if(null===ti){var e=ei.alternate;e=null!==e?e.memoizedState:null}else e=ti.next;var t=null===ri?ei.memoizedState:ri.next;if(null!==t)ri=t,ti=e;else{if(null===e)throw Error(i(310));e={memoizedState:(ti=e).memoizedState,baseState:ti.baseState,baseQueue:ti.baseQueue,queue:ti.queue,next:null},null===ri?ei.memoizedState=ri=e:ri=ri.next=e}return ri}function ci(e,t){return"function"===typeof t?t(e):t}function fi(e){var t=si(),r=t.queue;if(null===r)throw Error(i(311));r.lastRenderedReducer=e;var n=ti,o=n.baseQueue,a=r.pending;if(null!==a){if(null!==o){var l=o.next;o.next=a.next,a.next=l}n.baseQueue=o=a,r.pending=null}if(null!==o){o=o.next,n=n.baseState;var u=l=a=null,s=o;do{var c=s.lane;if((Za&c)===c)null!==u&&(u=u.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),n=s.eagerReducer===e?s.eagerState:e(n,s.action);else{var f={lane:c,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===u?(l=u=f,a=n):u=u.next=f,ei.lanes|=c,Ul|=c}s=s.next}while(null!==s&&s!==o);null===u?a=n:u.next=l,cn(n,t.memoizedState)||(ji=!0),t.memoizedState=n,t.baseState=a,t.baseQueue=u,r.lastRenderedState=n}return[t.memoizedState,r.dispatch]}function di(e){var t=si(),r=t.queue;if(null===r)throw Error(i(311));r.lastRenderedReducer=e;var n=r.dispatch,o=r.pending,a=t.memoizedState;if(null!==o){r.pending=null;var l=o=o.next;do{a=e(a,l.action),l=l.next}while(l!==o);cn(a,t.memoizedState)||(ji=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),r.lastRenderedState=a}return[a,n]}function pi(e,t,r){var n=t._getVersion;n=n(t._source);var o=t._workInProgressVersionPrimary;if(null!==o?e=o===n:(e=e.mutableReadLanes,(e=(Za&e)===e)&&(t._workInProgressVersionPrimary=n,Ya.push(t))),e)return r(t._source);throw Ya.push(t),Error(i(350))}function hi(e,t,r,n){var o=Ll;if(null===o)throw Error(i(349));var a=t._getVersion,l=a(t._source),u=Xa.current,s=u.useState((function(){return pi(o,t,r)})),c=s[1],f=s[0];s=ri;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,g=d.source;d=d.subscribe;var m=ei;return e.memoizedState={refs:p,source:t,subscribe:n},u.useEffect((function(){p.getSnapshot=r,p.setSnapshot=c;var e=a(t._source);if(!cn(l,e)){e=r(t._source),cn(f,e)||(c(e),e=pu(m),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var n=o.entanglements,i=e;0<i;){var u=31-Ht(i),s=1<<u;n[u]|=e,i&=~s}}}),[r,t,n]),u.useEffect((function(){return n(t._source,(function(){var e=p.getSnapshot,r=p.setSnapshot;try{r(e(t._source));var n=pu(m);o.mutableReadLanes|=n&o.pendingLanes}catch(e){r((function(){throw e}))}}))}),[t,n]),cn(h,r)&&cn(g,t)&&cn(d,n)||((e={pending:null,dispatch:null,lastRenderedReducer:ci,lastRenderedState:f}).dispatch=c=Ai.bind(null,ei,e),s.queue=e,s.baseQueue=null,f=pi(o,t,r),s.memoizedState=s.baseState=f),f}function gi(e,t,r){return hi(si(),e,t,r)}function mi(e){var t=ui();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:ci,lastRenderedState:e}).dispatch=Ai.bind(null,ei,e),[t.memoizedState,e]}function vi(e,t,r,n){return e={tag:e,create:t,destroy:r,deps:n,next:null},null===(t=ei.updateQueue)?(t={lastEffect:null},ei.updateQueue=t,t.lastEffect=e.next=e):null===(r=t.lastEffect)?t.lastEffect=e.next=e:(n=r.next,r.next=e,e.next=n,t.lastEffect=e),e}function yi(e){return e={current:e},ui().memoizedState=e}function bi(){return si().memoizedState}function wi(e,t,r,n){var o=ui();ei.flags|=e,o.memoizedState=vi(1|t,r,void 0,void 0===n?null:n)}function xi(e,t,r,n){var o=si();n=void 0===n?null:n;var a=void 0;if(null!==ti){var i=ti.memoizedState;if(a=i.destroy,null!==n&&ii(n,i.deps))return void vi(t,r,a,n)}ei.flags|=e,o.memoizedState=vi(1|t,r,a,n)}function ki(e,t){return wi(516,4,e,t)}function Ei(e,t){return xi(516,4,e,t)}function Si(e,t){return xi(4,2,e,t)}function Ti(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function _i(e,t,r){return r=null!==r&&void 0!==r?r.concat([e]):null,xi(4,2,Ti.bind(null,t,e),r)}function Ci(){}function Oi(e,t){var r=si();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&ii(t,n[1])?n[0]:(r.memoizedState=[e,t],e)}function Pi(e,t){var r=si();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&ii(t,n[1])?n[0]:(e=e(),r.memoizedState=[e,t],e)}function Ri(e,t){var r=Wo();$o(98>r?98:r,(function(){e(!0)})),$o(97<r?97:r,(function(){var r=Ja.transition;Ja.transition=1;try{e(!1),t()}finally{Ja.transition=r}}))}function Ai(e,t,r){var n=du(),o=pu(e),a={lane:o,action:r,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?a.next=a:(a.next=i.next,i.next=a),t.pending=a,i=e.alternate,e===ei||null!==i&&i===ei)oi=ni=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=i(l,r);if(a.eagerReducer=i,a.eagerState=u,cn(u,l))return}catch(e){}hu(e,o,n)}}var qi={readContext:la,useCallback:ai,useContext:ai,useEffect:ai,useImperativeHandle:ai,useLayoutEffect:ai,useMemo:ai,useReducer:ai,useRef:ai,useState:ai,useDebugValue:ai,useDeferredValue:ai,useTransition:ai,useMutableSource:ai,useOpaqueIdentifier:ai,unstable_isNewReconciler:!1},Li={readContext:la,useCallback:function(e,t){return ui().memoizedState=[e,void 0===t?null:t],e},useContext:la,useEffect:ki,useImperativeHandle:function(e,t,r){return r=null!==r&&void 0!==r?r.concat([e]):null,wi(4,2,Ti.bind(null,t,e),r)},useLayoutEffect:function(e,t){return wi(4,2,e,t)},useMemo:function(e,t){var r=ui();return t=void 0===t?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var n=ui();return t=void 0!==r?r(t):t,n.memoizedState=n.baseState=t,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Ai.bind(null,ei,e),[n.memoizedState,e]},useRef:yi,useState:mi,useDebugValue:Ci,useDeferredValue:function(e){var t=mi(e),r=t[0],n=t[1];return ki((function(){var t=Ja.transition;Ja.transition=1;try{n(e)}finally{Ja.transition=t}}),[e]),r},useTransition:function(){var e=mi(!1),t=e[0];return yi(e=Ri.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,r){var n=ui();return n.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:r},hi(n,e,t,r)},useOpaqueIdentifier:function(){if(Ba){var e=!1,t=function(e){return{$$typeof:D,toString:e,valueOf:e}}((function(){throw e||(e=!0,r("r:"+(Kn++).toString(36))),Error(i(355))})),r=mi(t)[1];return 0===(2&ei.mode)&&(ei.flags|=516,vi(5,(function(){r("r:"+(Kn++).toString(36))}),void 0,null)),t}return mi(t="r:"+(Kn++).toString(36)),t},unstable_isNewReconciler:!1},Ni={readContext:la,useCallback:Oi,useContext:la,useEffect:Ei,useImperativeHandle:_i,useLayoutEffect:Si,useMemo:Pi,useReducer:fi,useRef:bi,useState:function(){return fi(ci)},useDebugValue:Ci,useDeferredValue:function(e){var t=fi(ci),r=t[0],n=t[1];return Ei((function(){var t=Ja.transition;Ja.transition=1;try{n(e)}finally{Ja.transition=t}}),[e]),r},useTransition:function(){var e=fi(ci)[0];return[bi().current,e]},useMutableSource:gi,useOpaqueIdentifier:function(){return fi(ci)[0]},unstable_isNewReconciler:!1},Di={readContext:la,useCallback:Oi,useContext:la,useEffect:Ei,useImperativeHandle:_i,useLayoutEffect:Si,useMemo:Pi,useReducer:di,useRef:bi,useState:function(){return di(ci)},useDebugValue:Ci,useDeferredValue:function(e){var t=di(ci),r=t[0],n=t[1];return Ei((function(){var t=Ja.transition;Ja.transition=1;try{n(e)}finally{Ja.transition=t}}),[e]),r},useTransition:function(){var e=di(ci)[0];return[bi().current,e]},useMutableSource:gi,useOpaqueIdentifier:function(){return di(ci)[0]},unstable_isNewReconciler:!1},Ii=x.ReactCurrentOwner,ji=!1;function Mi(e,t,r,n){t.child=null===e?Oa(t,null,r,n):Ca(t,e.child,r,n)}function Fi(e,t,r,n,o){r=r.render;var a=t.ref;return ia(t,o),n=li(e,t,r,n,a,o),null===e||ji?(t.flags|=1,Mi(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,al(e,t,o))}function zi(e,t,r,n,o,a){if(null===e){var i=r.type;return"function"!==typeof i||Wu(i)||void 0!==i.defaultProps||null!==r.compare||void 0!==r.defaultProps?((e=$u(r.type,null,n,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Ui(e,t,i,n,o,a))}return i=e.child,0===(o&a)&&(o=i.memoizedProps,(r=null!==(r=r.compare)?r:dn)(o,n)&&e.ref===t.ref)?al(e,t,a):(t.flags|=1,(e=Gu(i,n)).ref=t.ref,e.return=t,t.child=e)}function Ui(e,t,r,n,o,a){if(null!==e&&dn(e.memoizedProps,n)&&e.ref===t.ref){if(ji=!1,0===(a&o))return t.lanes=e.lanes,al(e,t,a);0!==(16384&e.flags)&&(ji=!0)}return Hi(e,t,r,n,a)}function Bi(e,t,r){var n=t.pendingProps,o=n.children,a=null!==e?e.memoizedState:null;if("hidden"===n.mode||"unstable-defer-without-hiding"===n.mode)if(0===(4&t.mode))t.memoizedState={baseLanes:0},ku(t,r);else{if(0===(1073741824&r))return e=null!==a?a.baseLanes|r:r,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},ku(t,e),null;t.memoizedState={baseLanes:0},ku(t,null!==a?a.baseLanes:r)}else null!==a?(n=a.baseLanes|r,t.memoizedState=null):n=r,ku(t,n);return Mi(e,t,o,r),t.child}function Vi(e,t){var r=t.ref;(null===e&&null!==r||null!==e&&e.ref!==r)&&(t.flags|=128)}function Hi(e,t,r,n,o){var a=yo(r)?mo:ho.current;return a=vo(t,a),ia(t,o),r=li(e,t,r,n,a,o),null===e||ji?(t.flags|=1,Mi(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,al(e,t,o))}function Wi(e,t,r,n,o){if(yo(r)){var a=!0;ko(t)}else a=!1;if(ia(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),wa(t,r,n),ka(t,r,n,o),n=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,s=r.contextType;"object"===typeof s&&null!==s?s=la(s):s=vo(t,s=yo(r)?mo:ho.current);var c=r.getDerivedStateFromProps,f="function"===typeof c||"function"===typeof i.getSnapshotBeforeUpdate;f||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==n||u!==s)&&xa(t,i,n,s),ua=!1;var d=t.memoizedState;i.state=d,ha(t,n,i,o),u=t.memoizedState,l!==n||d!==u||go.current||ua?("function"===typeof c&&(va(t,r,c,n),u=t.memoizedState),(l=ua||ba(t,r,l,n,d,u,s))?(f||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.flags|=4)):("function"===typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=n,t.memoizedState=u),i.props=n,i.state=u,i.context=s,n=l):("function"===typeof i.componentDidMount&&(t.flags|=4),n=!1)}else{i=t.stateNode,ca(e,t),l=t.memoizedProps,s=t.type===t.elementType?l:Jo(t.type,l),i.props=s,f=t.pendingProps,d=i.context,"object"===typeof(u=r.contextType)&&null!==u?u=la(u):u=vo(t,u=yo(r)?mo:ho.current);var p=r.getDerivedStateFromProps;(c="function"===typeof p||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==f||d!==u)&&xa(t,i,n,u),ua=!1,d=t.memoizedState,i.state=d,ha(t,n,i,o);var h=t.memoizedState;l!==f||d!==h||go.current||ua?("function"===typeof p&&(va(t,r,p,n),h=t.memoizedState),(s=ua||ba(t,r,s,n,d,h,u))?(c||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(n,h,u),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(n,h,u)),"function"===typeof i.componentDidUpdate&&(t.flags|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!==typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=n,t.memoizedState=h),i.props=n,i.state=h,i.context=u,n=s):("function"!==typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),n=!1)}return Gi(e,t,r,n,a,o)}function Gi(e,t,r,n,o,a){Vi(e,t);var i=0!==(64&t.flags);if(!n&&!i)return o&&Eo(t,r,!1),al(e,t,a);n=t.stateNode,Ii.current=t;var l=i&&"function"!==typeof r.getDerivedStateFromError?null:n.render();return t.flags|=1,null!==e&&i?(t.child=Ca(t,e.child,null,a),t.child=Ca(t,null,l,a)):Mi(e,t,l,a),t.memoizedState=n.state,o&&Eo(t,r,!0),t.child}function $i(e){var t=e.stateNode;t.pendingContext?wo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&wo(0,t.context,!1),Na(e,t.containerInfo)}var Qi,Yi,Ki,Xi={dehydrated:null,retryLane:0};function Ji(e,t,r){var n,o=t.pendingProps,a=Ma.current,i=!1;return(n=0!==(64&t.flags))||(n=(null===e||null!==e.memoizedState)&&0!==(2&a)),n?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(a|=1),fo(Ma,1&a),null===e?(void 0!==o.fallback&&Wa(t),e=o.children,a=o.fallback,i?(e=Zi(t,e,a,r),t.child.memoizedState={baseLanes:r},t.memoizedState=Xi,e):"number"===typeof o.unstable_expectedLoadTime?(e=Zi(t,e,a,r),t.child.memoizedState={baseLanes:r},t.memoizedState=Xi,t.lanes=33554432,e):((r=Yu({mode:"visible",children:e},t.mode,r,null)).return=t,t.child=r)):(e.memoizedState,i?(o=tl(e,t,o.children,o.fallback,r),i=t.child,a=e.child.memoizedState,i.memoizedState=null===a?{baseLanes:r}:{baseLanes:a.baseLanes|r},i.childLanes=e.childLanes&~r,t.memoizedState=Xi,o):(r=el(e,t,o.children,r),t.memoizedState=null,r))}function Zi(e,t,r,n){var o=e.mode,a=e.child;return t={mode:"hidden",children:t},0===(2&o)&&null!==a?(a.childLanes=0,a.pendingProps=t):a=Yu(t,o,0,null),r=Qu(r,o,n,null),a.return=e,r.return=e,a.sibling=r,e.child=a,r}function el(e,t,r,n){var o=e.child;return e=o.sibling,r=Gu(o,{mode:"visible",children:r}),0===(2&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=r}function tl(e,t,r,n,o){var a=t.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:r};return 0===(2&a)&&t.child!==i?((r=t.child).childLanes=0,r.pendingProps=l,null!==(i=r.lastEffect)?(t.firstEffect=r.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):r=Gu(i,l),null!==e?n=Gu(e,n):(n=Qu(n,a,o,null)).flags|=2,n.return=t,r.return=t,r.sibling=n,t.child=r,n}function rl(e,t){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),aa(e.return,t)}function nl(e,t,r,n,o,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:n,tail:r,tailMode:o,lastEffect:a}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=n,i.tail=r,i.tailMode=o,i.lastEffect=a)}function ol(e,t,r){var n=t.pendingProps,o=n.revealOrder,a=n.tail;if(Mi(e,t,n.children,r),0!==(2&(n=Ma.current)))n=1&n|2,t.flags|=64;else{if(null!==e&&0!==(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&rl(e,r);else if(19===e.tag)rl(e,r);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if(fo(Ma,n),0===(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(r=t.child,o=null;null!==r;)null!==(e=r.alternate)&&null===Fa(e)&&(o=r),r=r.sibling;null===(r=o)?(o=t.child,t.child=null):(o=r.sibling,r.sibling=null),nl(t,!1,o,r,a,t.lastEffect);break;case"backwards":for(r=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Fa(e)){t.child=o;break}e=o.sibling,o.sibling=r,r=o,o=e}nl(t,!0,r,null,a,t.lastEffect);break;case"together":nl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function al(e,t,r){if(null!==e&&(t.dependencies=e.dependencies),Ul|=t.lanes,0!==(r&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(r=Gu(e=t.child,e.pendingProps),t.child=r,r.return=t;null!==e.sibling;)e=e.sibling,(r=r.sibling=Gu(e,e.pendingProps)).return=t;r.sibling=null}return t.child}return null}function il(e,t){if(!Ba)switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var n=null;null!==r;)null!==r.alternate&&(n=r),r=r.sibling;null===n?t||null===e.tail?e.tail=null:e.tail.sibling=null:n.sibling=null}}function ll(e,t,r){var n=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return yo(t.type)&&bo(),null;case 3:return Da(),co(go),co(ho),Ka(),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||($a(t)?t.flags|=4:n.hydrate||(t.flags|=256)),null;case 5:ja(t);var a=La(qa.current);if(r=t.type,null!==e&&null!=t.stateNode)Yi(e,t,r,n),e.ref!==t.ref&&(t.flags|=128);else{if(!n){if(null===t.stateNode)throw Error(i(166));return null}if(e=La(Ra.current),$a(t)){n=t.stateNode,r=t.type;var l=t.memoizedProps;switch(n[Jn]=t,n[Zn]=l,r){case"dialog":Rn("cancel",n),Rn("close",n);break;case"iframe":case"object":case"embed":Rn("load",n);break;case"video":case"audio":for(e=0;e<_n.length;e++)Rn(_n[e],n);break;case"source":Rn("error",n);break;case"img":case"image":case"link":Rn("error",n),Rn("load",n);break;case"details":Rn("toggle",n);break;case"input":ee(n,l),Rn("invalid",n);break;case"select":n._wrapperState={wasMultiple:!!l.multiple},Rn("invalid",n);break;case"textarea":ue(n,l),Rn("invalid",n)}for(var s in Se(r,l),e=null,l)l.hasOwnProperty(s)&&(a=l[s],"children"===s?"string"===typeof a?n.textContent!==a&&(e=["children",a]):"number"===typeof a&&n.textContent!==""+a&&(e=["children",""+a]):u.hasOwnProperty(s)&&null!=a&&"onScroll"===s&&Rn("scroll",n));switch(r){case"input":K(n),ne(n,l,!0);break;case"textarea":K(n),ce(n);break;case"select":case"option":break;default:"function"===typeof l.onClick&&(n.onclick=zn)}n=e,t.updateQueue=n,null!==n&&(t.flags|=4)}else{switch(s=9===a.nodeType?a:a.ownerDocument,e===fe&&(e=pe(r)),e===fe?"script"===r?((e=s.createElement("div")).innerHTML="<script><\\/script>",e=e.removeChild(e.firstChild)):"string"===typeof n.is?e=s.createElement(r,{is:n.is}):(e=s.createElement(r),"select"===r&&(s=e,n.multiple?s.multiple=!0:n.size&&(s.size=n.size))):e=s.createElementNS(e,r),e[Jn]=t,e[Zn]=n,Qi(e,t),t.stateNode=e,s=Te(r,n),r){case"dialog":Rn("cancel",e),Rn("close",e),a=n;break;case"iframe":case"object":case"embed":Rn("load",e),a=n;break;case"video":case"audio":for(a=0;a<_n.length;a++)Rn(_n[a],e);a=n;break;case"source":Rn("error",e),a=n;break;case"img":case"image":case"link":Rn("error",e),Rn("load",e),a=n;break;case"details":Rn("toggle",e),a=n;break;case"input":ee(e,n),a=Z(e,n),Rn("invalid",e);break;case"option":a=ae(e,n);break;case"select":e._wrapperState={wasMultiple:!!n.multiple},a=o({},n,{value:void 0}),Rn("invalid",e);break;case"textarea":ue(e,n),a=le(e,n),Rn("invalid",e);break;default:a=n}Se(r,a);var c=a;for(l in c)if(c.hasOwnProperty(l)){var f=c[l];"style"===l?ke(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&ve(e,f):"children"===l?"string"===typeof f?("textarea"!==r||""!==f)&&ye(e,f):"number"===typeof f&&ye(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=f&&"onScroll"===l&&Rn("scroll",e):null!=f&&w(e,l,f,s))}switch(r){case"input":K(e),ne(e,n,!1);break;case"textarea":K(e),ce(e);break;case"option":null!=n.value&&e.setAttribute("value",""+Q(n.value));break;case"select":e.multiple=!!n.multiple,null!=(l=n.value)?ie(e,!!n.multiple,l,!1):null!=n.defaultValue&&ie(e,!!n.multiple,n.defaultValue,!0);break;default:"function"===typeof a.onClick&&(e.onclick=zn)}Vn(r,n)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Ki(0,t,e.memoizedProps,n);else{if("string"!==typeof n&&null===t.stateNode)throw Error(i(166));r=La(qa.current),La(Ra.current),$a(t)?(n=t.stateNode,r=t.memoizedProps,n[Jn]=t,n.nodeValue!==r&&(t.flags|=4)):((n=(9===r.nodeType?r:r.ownerDocument).createTextNode(n))[Jn]=t,t.stateNode=n)}return null;case 13:return co(Ma),n=t.memoizedState,0!==(64&t.flags)?(t.lanes=r,t):(n=null!==n,r=!1,null===e?void 0!==t.memoizedProps.fallback&&$a(t):r=null!==e.memoizedState,n&&!r&&0!==(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!==(1&Ma.current)?0===Ml&&(Ml=3):(0!==Ml&&3!==Ml||(Ml=4),null===Ll||0===(134217727&Ul)&&0===(134217727&Bl)||yu(Ll,Dl))),(n||r)&&(t.flags|=4),null);case 4:return Da(),null===e&&qn(t.stateNode.containerInfo),null;case 10:return oa(t),null;case 19:if(co(Ma),null===(n=t.memoizedState))return null;if(l=0!==(64&t.flags),null===(s=n.rendering))if(l)il(n,!1);else{if(0!==Ml||null!==e&&0!==(64&e.flags))for(e=t.child;null!==e;){if(null!==(s=Fa(e))){for(t.flags|=64,il(n,!1),null!==(l=s.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===n.lastEffect&&(t.firstEffect=null),t.lastEffect=n.lastEffect,n=r,r=t.child;null!==r;)e=n,(l=r).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(s=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=s.childLanes,l.lanes=s.lanes,l.child=s.child,l.memoizedProps=s.memoizedProps,l.memoizedState=s.memoizedState,l.updateQueue=s.updateQueue,l.type=s.type,e=s.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return fo(Ma,1&Ma.current|2),t.child}e=e.sibling}null!==n.tail&&Ho()>Gl&&(t.flags|=64,l=!0,il(n,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=Fa(s))){if(t.flags|=64,l=!0,null!==(r=e.updateQueue)&&(t.updateQueue=r,t.flags|=4),il(n,!0),null===n.tail&&"hidden"===n.tailMode&&!s.alternate&&!Ba)return null!==(t=t.lastEffect=n.lastEffect)&&(t.nextEffect=null),null}else 2*Ho()-n.renderingStartTime>Gl&&1073741824!==r&&(t.flags|=64,l=!0,il(n,!1),t.lanes=33554432);n.isBackwards?(s.sibling=t.child,t.child=s):(null!==(r=n.last)?r.sibling=s:t.child=s,n.last=s)}return null!==n.tail?(r=n.tail,n.rendering=r,n.tail=r.sibling,n.lastEffect=t.lastEffect,n.renderingStartTime=Ho(),r.sibling=null,t=Ma.current,fo(Ma,l?1&t|2:1&t),r):null;case 23:case 24:return Eu(),null!==e&&null!==e.memoizedState!==(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==n.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function ul(e){switch(e.tag){case 1:yo(e.type)&&bo();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Da(),co(go),co(ho),Ka(),0!==(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return ja(e),null;case 13:return co(Ma),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return co(Ma),null;case 4:return Da(),null;case 10:return oa(e),null;case 23:case 24:return Eu(),null;default:return null}}function sl(e,t){try{var r="",n=t;do{r+=G(n),n=n.return}while(n);var o=r}catch(e){o="\\nError generating stack: "+e.message+"\\n"+e.stack}return{value:e,source:t,stack:o}}function cl(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Qi=function(e,t){for(var r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}},Yi=function(e,t,r,n){var a=e.memoizedProps;if(a!==n){e=t.stateNode,La(Ra.current);var i,l=null;switch(r){case"input":a=Z(e,a),n=Z(e,n),l=[];break;case"option":a=ae(e,a),n=ae(e,n),l=[];break;case"select":a=o({},a,{value:void 0}),n=o({},n,{value:void 0}),l=[];break;case"textarea":a=le(e,a),n=le(e,n),l=[];break;default:"function"!==typeof a.onClick&&"function"===typeof n.onClick&&(e.onclick=zn)}for(f in Se(r,n),r=null,a)if(!n.hasOwnProperty(f)&&a.hasOwnProperty(f)&&null!=a[f])if("style"===f){var s=a[f];for(i in s)s.hasOwnProperty(i)&&(r||(r={}),r[i]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in n){var c=n[f];if(s=null!=a?a[f]:void 0,n.hasOwnProperty(f)&&c!==s&&(null!=c||null!=s))if("style"===f)if(s){for(i in s)!s.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(r||(r={}),r[i]="");for(i in c)c.hasOwnProperty(i)&&s[i]!==c[i]&&(r||(r={}),r[i]=c[i])}else r||(l||(l=[]),l.push(f,r)),r=c;else"dangerouslySetInnerHTML"===f?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(l=l||[]).push(f,c)):"children"===f?"string"!==typeof c&&"number"!==typeof c||(l=l||[]).push(f,""+c):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=c&&"onScroll"===f&&Rn("scroll",e),l||s===c||(l=[])):"object"===typeof c&&null!==c&&c.$$typeof===D?c.toString():(l=l||[]).push(f,c))}r&&(l=l||[]).push("style",r);var f=l;(t.updateQueue=f)&&(t.flags|=4)}},Ki=function(e,t,r,n){r!==n&&(t.flags|=4)};var fl="function"===typeof WeakMap?WeakMap:Map;function dl(e,t,r){(r=fa(-1,r)).tag=3,r.payload={element:null};var n=t.value;return r.callback=function(){Kl||(Kl=!0,Xl=n),cl(0,t)},r}function pl(e,t,r){(r=fa(-1,r)).tag=3;var n=e.type.getDerivedStateFromError;if("function"===typeof n){var o=t.value;r.payload=function(){return cl(0,t),n(o)}}var a=e.stateNode;return null!==a&&"function"===typeof a.componentDidCatch&&(r.callback=function(){"function"!==typeof n&&(null===Jl?Jl=new Set([this]):Jl.add(this),cl(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),r}var hl="function"===typeof WeakSet?WeakSet:Set;function gl(e){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(t){zu(e,t)}else t.current=null}function ml(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 5:case 6:case 4:case 17:return;case 1:if(256&t.flags&&null!==e){var r=e.memoizedProps,n=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?r:Jo(t.type,r),n),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&$n(t.stateNode.containerInfo))}throw Error(i(163))}function vl(e,t,r){switch(r.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=r.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3===(3&e.tag)){var n=e.create;e.destroy=n()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=r.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var o=e;n=o.next,0!==(4&(o=o.tag))&&0!==(1&o)&&(ju(r,e),Iu(r,e)),e=n}while(e!==t)}return;case 1:return e=r.stateNode,4&r.flags&&(null===t?e.componentDidMount():(n=r.elementType===r.type?t.memoizedProps:Jo(r.type,t.memoizedProps),e.componentDidUpdate(n,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=r.updateQueue)&&ga(r,t,e));case 3:if(null!==(t=r.updateQueue)){if(e=null,null!==r.child)switch(r.child.tag){case 5:case 1:e=r.child.stateNode}ga(r,t,e)}return;case 5:return e=r.stateNode,void(null===t&&4&r.flags&&Vn(r.type,r.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:case 23:case 24:return;case 13:return void(null===r.memoizedState&&(r=r.alternate,null!==r&&(r=r.memoizedState,null!==r&&(r=r.dehydrated,null!==r&&kt(r)))))}throw Error(i(163))}function yl(e,t){for(var r=e;;){if(5===r.tag){var n=r.stateNode;if(t)"function"===typeof(n=n.style).setProperty?n.setProperty("display","none","important"):n.display="none";else{n=r.stateNode;var o=r.memoizedProps.style;o=void 0!==o&&null!==o&&o.hasOwnProperty("display")?o.display:null,n.style.display=xe("display",o)}}else if(6===r.tag)r.stateNode.nodeValue=t?"":r.memoizedProps;else if((23!==r.tag&&24!==r.tag||null===r.memoizedState||r===e)&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===e)break;for(;null===r.sibling;){if(null===r.return||r.return===e)return;r=r.return}r.sibling.return=r.return,r=r.sibling}}function bl(e,t){if(To&&"function"===typeof To.onCommitFiberUnmount)try{To.onCommitFiberUnmount(So,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e=e.next;do{var n=r,o=n.destroy;if(n=n.tag,void 0!==o)if(0!==(4&n))ju(t,r);else{n=t;try{o()}catch(e){zu(n,e)}}r=r.next}while(r!==e)}break;case 1:if(gl(t),"function"===typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){zu(t,e)}break;case 5:gl(t);break;case 4:Tl(e,t)}}function wl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function xl(e){return 5===e.tag||3===e.tag||4===e.tag}function kl(e){e:{for(var t=e.return;null!==t;){if(xl(t))break e;t=t.return}throw Error(i(160))}var r=t;switch(t=r.stateNode,r.tag){case 5:var n=!1;break;case 3:case 4:t=t.containerInfo,n=!0;break;default:throw Error(i(161))}16&r.flags&&(ye(t,""),r.flags&=-17);e:t:for(r=e;;){for(;null===r.sibling;){if(null===r.return||xl(r.return)){r=null;break e}r=r.return}for(r.sibling.return=r.return,r=r.sibling;5!==r.tag&&6!==r.tag&&18!==r.tag;){if(2&r.flags)continue t;if(null===r.child||4===r.tag)continue t;r.child.return=r,r=r.child}if(!(2&r.flags)){r=r.stateNode;break e}}n?El(e,r,t):Sl(e,r,t)}function El(e,t,r){var n=e.tag,o=5===n||6===n;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===r.nodeType?r.parentNode.insertBefore(e,t):r.insertBefore(e,t):(8===r.nodeType?(t=r.parentNode).insertBefore(e,r):(t=r).appendChild(e),null!==(r=r._reactRootContainer)&&void 0!==r||null!==t.onclick||(t.onclick=zn));else if(4!==n&&null!==(e=e.child))for(El(e,t,r),e=e.sibling;null!==e;)El(e,t,r),e=e.sibling}function Sl(e,t,r){var n=e.tag,o=5===n||6===n;if(o)e=o?e.stateNode:e.stateNode.instance,t?r.insertBefore(e,t):r.appendChild(e);else if(4!==n&&null!==(e=e.child))for(Sl(e,t,r),e=e.sibling;null!==e;)Sl(e,t,r),e=e.sibling}function Tl(e,t){for(var r,n,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(i(160));switch(r=a.stateNode,a.tag){case 5:n=!1;break e;case 3:case 4:r=r.containerInfo,n=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var l=e,u=o,s=u;;)if(bl(l,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===u)break e;for(;null===s.sibling;){if(null===s.return||s.return===u)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}n?(l=r,u=o.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):r.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){r=o.stateNode.containerInfo,n=!0,o.child.return=o,o=o.child;continue}}else if(bl(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function _l(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var n=r=r.next;do{3===(3&n.tag)&&(e=n.destroy,n.destroy=void 0,void 0!==e&&e()),n=n.next}while(n!==r)}return;case 1:case 12:case 17:return;case 5:if(null!=(r=t.stateNode)){n=t.memoizedProps;var o=null!==e?e.memoizedProps:n;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(r[Zn]=n,"input"===e&&"radio"===n.type&&null!=n.name&&te(r,n),Te(e,o),t=Te(e,n),o=0;o<a.length;o+=2){var l=a[o],u=a[o+1];"style"===l?ke(r,u):"dangerouslySetInnerHTML"===l?ve(r,u):"children"===l?ye(r,u):w(r,l,u,t)}switch(e){case"input":re(r,n);break;case"textarea":se(r,n);break;case"select":e=r._wrapperState.wasMultiple,r._wrapperState.wasMultiple=!!n.multiple,null!=(a=n.value)?ie(r,!!n.multiple,a,!1):e!==!!n.multiple&&(null!=n.defaultValue?ie(r,!!n.multiple,n.defaultValue,!0):ie(r,!!n.multiple,n.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((r=t.stateNode).hydrate&&(r.hydrate=!1,kt(r.containerInfo)));case 13:return null!==t.memoizedState&&(Wl=Ho(),yl(t.child,!0)),void Cl(t);case 19:return void Cl(t);case 23:case 24:return void yl(t,null!==t.memoizedState)}throw Error(i(163))}function Cl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var r=e.stateNode;null===r&&(r=e.stateNode=new hl),t.forEach((function(t){var n=Bu.bind(null,e,t);r.has(t)||(r.add(t),t.then(n,n))}))}}function Ol(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&(null!==(t=t.memoizedState)&&null===t.dehydrated)}var Pl=Math.ceil,Rl=x.ReactCurrentDispatcher,Al=x.ReactCurrentOwner,ql=0,Ll=null,Nl=null,Dl=0,Il=0,jl=so(0),Ml=0,Fl=null,zl=0,Ul=0,Bl=0,Vl=0,Hl=null,Wl=0,Gl=1/0;function $l(){Gl=Ho()+500}var Ql,Yl=null,Kl=!1,Xl=null,Jl=null,Zl=!1,eu=null,tu=90,ru=[],nu=[],ou=null,au=0,iu=null,lu=-1,uu=0,su=0,cu=null,fu=!1;function du(){return 0!==(48&ql)?Ho():-1!==lu?lu:lu=Ho()}function pu(e){if(0===(2&(e=e.mode)))return 1;if(0===(4&e))return 99===Wo()?1:2;if(0===uu&&(uu=zl),0!==Xo.transition){0!==su&&(su=null!==Hl?Hl.pendingLanes:0),e=uu;var t=4186112&~su;return 0===(t&=-t)&&(0===(t=(e=4186112&~e)&-e)&&(t=8192)),t}return e=Wo(),0!==(4&ql)&&98===e?e=zt(12,uu):e=zt(e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),uu),e}function hu(e,t,r){if(50<au)throw au=0,iu=null,Error(i(185));if(null===(e=gu(e,t)))return null;Vt(e,t,r),e===Ll&&(Bl|=t,4===Ml&&yu(e,Dl));var n=Wo();1===t?0!==(8&ql)&&0===(48&ql)?bu(e):(mu(e,r),0===ql&&($l(),Yo())):(0===(4&ql)||98!==n&&99!==n||(null===ou?ou=new Set([e]):ou.add(e)),mu(e,r)),Hl=e}function gu(e,t){e.lanes|=t;var r=e.alternate;for(null!==r&&(r.lanes|=t),r=e,e=e.return;null!==e;)e.childLanes|=t,null!==(r=e.alternate)&&(r.childLanes|=t),r=e,e=e.return;return 3===r.tag?r.stateNode:null}function mu(e,t){for(var r=e.callbackNode,n=e.suspendedLanes,o=e.pingedLanes,a=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-Ht(l),s=1<<u,c=a[u];if(-1===c){if(0===(s&n)||0!==(s&o)){c=t,jt(s);var f=It;a[u]=10<=f?c+250:6<=f?c+5e3:-1}}else c<=t&&(e.expiredLanes|=s);l&=~s}if(n=Mt(e,e===Ll?Dl:0),t=It,0===n)null!==r&&(r!==Mo&&Oo(r),e.callbackNode=null,e.callbackPriority=0);else{if(null!==r){if(e.callbackPriority===t)return;r!==Mo&&Oo(r)}15===t?(r=bu.bind(null,e),null===zo?(zo=[r],Uo=Co(Lo,Ko)):zo.push(r),r=Mo):14===t?r=Qo(99,bu.bind(null,e)):(r=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),r=Qo(r,vu.bind(null,e))),e.callbackPriority=t,e.callbackNode=r}}function vu(e){if(lu=-1,su=uu=0,0!==(48&ql))throw Error(i(327));var t=e.callbackNode;if(Du()&&e.callbackNode!==t)return null;var r=Mt(e,e===Ll?Dl:0);if(0===r)return null;var n=r,o=ql;ql|=16;var a=_u();for(Ll===e&&Dl===n||($l(),Su(e,n));;)try{Pu();break}catch(t){Tu(e,t)}if(na(),Rl.current=a,ql=o,null!==Nl?n=0:(Ll=null,Dl=0,n=Ml),0!==(zl&Bl))Su(e,0);else if(0!==n){if(2===n&&(ql|=64,e.hydrate&&(e.hydrate=!1,$n(e.containerInfo)),0!==(r=Ft(e))&&(n=Cu(e,r))),1===n)throw t=Fl,Su(e,0),yu(e,r),mu(e,Ho()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=r,n){case 0:case 1:throw Error(i(345));case 2:case 5:qu(e);break;case 3:if(yu(e,r),(62914560&r)===r&&10<(n=Wl+500-Ho())){if(0!==Mt(e,0))break;if(((o=e.suspendedLanes)&r)!==r){du(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=Wn(qu.bind(null,e),n);break}qu(e);break;case 4:if(yu(e,r),(4186112&r)===r)break;for(n=e.eventTimes,o=-1;0<r;){var l=31-Ht(r);a=1<<l,(l=n[l])>o&&(o=l),r&=~a}if(r=o,10<(r=(120>(r=Ho()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Pl(r/1960))-r)){e.timeoutHandle=Wn(qu.bind(null,e),r);break}qu(e);break;default:throw Error(i(329))}}return mu(e,Ho()),e.callbackNode===t?vu.bind(null,e):null}function yu(e,t){for(t&=~Vl,t&=~Bl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var r=31-Ht(t),n=1<<r;e[r]=-1,t&=~n}}function bu(e){if(0!==(48&ql))throw Error(i(327));if(Du(),e===Ll&&0!==(e.expiredLanes&Dl)){var t=Dl,r=Cu(e,t);0!==(zl&Bl)&&(r=Cu(e,t=Mt(e,t)))}else r=Cu(e,t=Mt(e,0));if(0!==e.tag&&2===r&&(ql|=64,e.hydrate&&(e.hydrate=!1,$n(e.containerInfo)),0!==(t=Ft(e))&&(r=Cu(e,t))),1===r)throw r=Fl,Su(e,0),yu(e,t),mu(e,Ho()),r;return e.finishedWork=e.current.alternate,e.finishedLanes=t,qu(e),mu(e,Ho()),null}function wu(e,t){var r=ql;ql|=1;try{return e(t)}finally{0===(ql=r)&&($l(),Yo())}}function xu(e,t){var r=ql;ql&=-2,ql|=8;try{return e(t)}finally{0===(ql=r)&&($l(),Yo())}}function ku(e,t){fo(jl,Il),Il|=t,zl|=t}function Eu(){Il=jl.current,co(jl)}function Su(e,t){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(-1!==r&&(e.timeoutHandle=-1,Gn(r)),null!==Nl)for(r=Nl.return;null!==r;){var n=r;switch(n.tag){case 1:null!==(n=n.type.childContextTypes)&&void 0!==n&&bo();break;case 3:Da(),co(go),co(ho),Ka();break;case 5:ja(n);break;case 4:Da();break;case 13:case 19:co(Ma);break;case 10:oa(n);break;case 23:case 24:Eu()}r=r.return}Ll=e,Nl=Gu(e.current,null),Dl=Il=zl=t,Ml=0,Fl=null,Vl=Bl=Ul=0}function Tu(e,t){for(;;){var r=Nl;try{if(na(),Xa.current=qi,ni){for(var n=ei.memoizedState;null!==n;){var o=n.queue;null!==o&&(o.pending=null),n=n.next}ni=!1}if(Za=0,ri=ti=ei=null,oi=!1,Al.current=null,null===r||null===r.return){Ml=1,Fl=t,Nl=null;break}e:{var a=e,i=r.return,l=r,u=t;if(t=Dl,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"===typeof u&&"function"===typeof u.then){var s=u;if(0===(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.lanes=c.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!==(1&Ma.current),d=i;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var g=d.memoizedProps;p=void 0!==g.fallback&&(!0!==g.unstable_avoidThisFallback||!f)}}if(p){var m=d.updateQueue;if(null===m){var v=new Set;v.add(s),d.updateQueue=v}else m.add(s);if(0===(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var y=fa(-1,1);y.tag=2,da(l,y)}l.lanes|=1;break e}u=void 0,l=t;var b=a.pingCache;if(null===b?(b=a.pingCache=new fl,u=new Set,b.set(s,u)):void 0===(u=b.get(s))&&(u=new Set,b.set(s,u)),!u.has(l)){u.add(l);var w=Uu.bind(null,a,s,l);s.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error(($(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Ml&&(Ml=2),u=sl(u,l),d=i;do{switch(d.tag){case 3:a=u,d.flags|=4096,t&=-t,d.lanes|=t,pa(d,dl(0,a,t));break e;case 1:a=u;var x=d.type,k=d.stateNode;if(0===(64&d.flags)&&("function"===typeof x.getDerivedStateFromError||null!==k&&"function"===typeof k.componentDidCatch&&(null===Jl||!Jl.has(k)))){d.flags|=4096,t&=-t,d.lanes|=t,pa(d,pl(d,a,t));break e}}d=d.return}while(null!==d)}Au(r)}catch(e){t=e,Nl===r&&null!==r&&(Nl=r=r.return);continue}break}}function _u(){var e=Rl.current;return Rl.current=qi,null===e?qi:e}function Cu(e,t){var r=ql;ql|=16;var n=_u();for(Ll===e&&Dl===t||Su(e,t);;)try{Ou();break}catch(t){Tu(e,t)}if(na(),ql=r,Rl.current=n,null!==Nl)throw Error(i(261));return Ll=null,Dl=0,Ml}function Ou(){for(;null!==Nl;)Ru(Nl)}function Pu(){for(;null!==Nl&&!Po();)Ru(Nl)}function Ru(e){var t=Ql(e.alternate,e,Il);e.memoizedProps=e.pendingProps,null===t?Au(e):Nl=t,Al.current=null}function Au(e){var t=e;do{var r=t.alternate;if(e=t.return,0===(2048&t.flags)){if(null!==(r=ll(r,t,Il)))return void(Nl=r);if(24!==(r=t).tag&&23!==r.tag||null===r.memoizedState||0!==(1073741824&Il)||0===(4&r.mode)){for(var n=0,o=r.child;null!==o;)n|=o.lanes|o.childLanes,o=o.sibling;r.childLanes=n}null!==e&&0===(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(r=ul(t)))return r.flags&=2047,void(Nl=r);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Nl=t);Nl=t=e}while(null!==t);0===Ml&&(Ml=5)}function qu(e){var t=Wo();return $o(99,Lu.bind(null,e,t)),null}function Lu(e,t){do{Du()}while(null!==eu);if(0!==(48&ql))throw Error(i(327));var r=e.finishedWork;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(i(177));e.callbackNode=null;var n=r.lanes|r.childLanes,o=n,a=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<a;){var s=31-Ht(a),c=1<<s;o[s]=0,l[s]=-1,u[s]=-1,a&=~c}if(null!==ou&&0===(24&n)&&ou.has(e)&&ou.delete(e),e===Ll&&(Nl=Ll=null,Dl=0),1<r.flags?null!==r.lastEffect?(r.lastEffect.nextEffect=r,n=r.firstEffect):n=r:n=r.firstEffect,null!==n){if(o=ql,ql|=32,Al.current=null,Un=Yt,vn(l=mn())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(c=u.getSelection&&u.getSelection())&&0!==c.rangeCount){u=c.anchorNode,a=c.anchorOffset,s=c.focusNode,c=c.focusOffset;try{u.nodeType,s.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,g=0,m=l,v=null;t:for(;;){for(var y;m!==u||0!==a&&3!==m.nodeType||(d=f+a),m!==s||0!==c&&3!==m.nodeType||(p=f+c),3===m.nodeType&&(f+=m.nodeValue.length),null!==(y=m.firstChild);)v=m,m=y;for(;;){if(m===l)break t;if(v===u&&++h===a&&(d=f),v===s&&++g===c&&(p=f),null!==(y=m.nextSibling))break;v=(m=v).parentNode}m=y}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Bn={focusedElem:l,selectionRange:u},Yt=!1,cu=null,fu=!1,Yl=n;do{try{Nu()}catch(e){if(null===Yl)throw Error(i(330));zu(Yl,e),Yl=Yl.nextEffect}}while(null!==Yl);cu=null,Yl=n;do{try{for(l=e;null!==Yl;){var b=Yl.flags;if(16&b&&ye(Yl.stateNode,""),128&b){var w=Yl.alternate;if(null!==w){var x=w.ref;null!==x&&("function"===typeof x?x(null):x.current=null)}}switch(1038&b){case 2:kl(Yl),Yl.flags&=-3;break;case 6:kl(Yl),Yl.flags&=-3,_l(Yl.alternate,Yl);break;case 1024:Yl.flags&=-1025;break;case 1028:Yl.flags&=-1025,_l(Yl.alternate,Yl);break;case 4:_l(Yl.alternate,Yl);break;case 8:Tl(l,u=Yl);var k=u.alternate;wl(u),null!==k&&wl(k)}Yl=Yl.nextEffect}}catch(e){if(null===Yl)throw Error(i(330));zu(Yl,e),Yl=Yl.nextEffect}}while(null!==Yl);if(x=Bn,w=mn(),b=x.focusedElem,l=x.selectionRange,w!==b&&b&&b.ownerDocument&&gn(b.ownerDocument.documentElement,b)){null!==l&&vn(b)&&(w=l.start,void 0===(x=l.end)&&(x=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(x,b.value.length)):(x=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(x=x.getSelection(),u=b.textContent.length,k=Math.min(l.start,u),l=void 0===l.end?k:Math.min(l.end,u),!x.extend&&k>l&&(u=l,l=k,k=u),u=hn(b,k),a=hn(b,l),u&&a&&(1!==x.rangeCount||x.anchorNode!==u.node||x.anchorOffset!==u.offset||x.focusNode!==a.node||x.focusOffset!==a.offset)&&((w=w.createRange()).setStart(u.node,u.offset),x.removeAllRanges(),k>l?(x.addRange(w),x.extend(a.node,a.offset)):(w.setEnd(a.node,a.offset),x.addRange(w))))),w=[];for(x=b;x=x.parentNode;)1===x.nodeType&&w.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"===typeof b.focus&&b.focus(),b=0;b<w.length;b++)(x=w[b]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Yt=!!Un,Bn=Un=null,e.current=r,Yl=n;do{try{for(b=e;null!==Yl;){var E=Yl.flags;if(36&E&&vl(b,Yl.alternate,Yl),128&E){w=void 0;var S=Yl.ref;if(null!==S){var T=Yl.stateNode;Yl.tag,w=T,"function"===typeof S?S(w):S.current=w}}Yl=Yl.nextEffect}}catch(e){if(null===Yl)throw Error(i(330));zu(Yl,e),Yl=Yl.nextEffect}}while(null!==Yl);Yl=null,Fo(),ql=o}else e.current=r;if(Zl)Zl=!1,eu=e,tu=t;else for(Yl=n;null!==Yl;)t=Yl.nextEffect,Yl.nextEffect=null,8&Yl.flags&&((E=Yl).sibling=null,E.stateNode=null),Yl=t;if(0===(n=e.pendingLanes)&&(Jl=null),1===n?e===iu?au++:(au=0,iu=e):au=0,r=r.stateNode,To&&"function"===typeof To.onCommitFiberRoot)try{To.onCommitFiberRoot(So,r,void 0,64===(64&r.current.flags))}catch(e){}if(mu(e,Ho()),Kl)throw Kl=!1,e=Xl,Xl=null,e;return 0!==(8&ql)||Yo(),null}function Nu(){for(;null!==Yl;){var e=Yl.alternate;fu||null===cu||(0!==(8&Yl.flags)?et(Yl,cu)&&(fu=!0):13===Yl.tag&&Ol(e,Yl)&&et(Yl,cu)&&(fu=!0));var t=Yl.flags;0!==(256&t)&&ml(e,Yl),0===(512&t)||Zl||(Zl=!0,Qo(97,(function(){return Du(),null}))),Yl=Yl.nextEffect}}function Du(){if(90!==tu){var e=97<tu?97:tu;return tu=90,$o(e,Mu)}return!1}function Iu(e,t){ru.push(t,e),Zl||(Zl=!0,Qo(97,(function(){return Du(),null})))}function ju(e,t){nu.push(t,e),Zl||(Zl=!0,Qo(97,(function(){return Du(),null})))}function Mu(){if(null===eu)return!1;var e=eu;if(eu=null,0!==(48&ql))throw Error(i(331));var t=ql;ql|=32;var r=nu;nu=[];for(var n=0;n<r.length;n+=2){var o=r[n],a=r[n+1],l=o.destroy;if(o.destroy=void 0,"function"===typeof l)try{l()}catch(e){if(null===a)throw Error(i(330));zu(a,e)}}for(r=ru,ru=[],n=0;n<r.length;n+=2){o=r[n],a=r[n+1];try{var u=o.create;o.destroy=u()}catch(e){if(null===a)throw Error(i(330));zu(a,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return ql=t,Yo(),!0}function Fu(e,t,r){da(e,t=dl(0,t=sl(r,t),1)),t=du(),null!==(e=gu(e,1))&&(Vt(e,1,t),mu(e,t))}function zu(e,t){if(3===e.tag)Fu(e,e,t);else for(var r=e.return;null!==r;){if(3===r.tag){Fu(r,e,t);break}if(1===r.tag){var n=r.stateNode;if("function"===typeof r.type.getDerivedStateFromError||"function"===typeof n.componentDidCatch&&(null===Jl||!Jl.has(n))){var o=pl(r,e=sl(t,e),1);if(da(r,o),o=du(),null!==(r=gu(r,1)))Vt(r,1,o),mu(r,o);else if("function"===typeof n.componentDidCatch&&(null===Jl||!Jl.has(n)))try{n.componentDidCatch(t,e)}catch(e){}break}}r=r.return}}function Uu(e,t,r){var n=e.pingCache;null!==n&&n.delete(t),t=du(),e.pingedLanes|=e.suspendedLanes&r,Ll===e&&(Dl&r)===r&&(4===Ml||3===Ml&&(62914560&Dl)===Dl&&500>Ho()-Wl?Su(e,0):Vl|=r),mu(e,t)}function Bu(e,t){var r=e.stateNode;null!==r&&r.delete(t),0===(t=0)&&(0===(2&(t=e.mode))?t=1:0===(4&t)?t=99===Wo()?1:2:(0===uu&&(uu=zl),0===(t=Ut(62914560&~uu))&&(t=4194304))),r=du(),null!==(e=gu(e,t))&&(Vt(e,t,r),mu(e,r))}function Vu(e,t,r,n){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Hu(e,t,r,n){return new Vu(e,t,r,n)}function Wu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Gu(e,t){var r=e.alternate;return null===r?((r=Hu(e.tag,t,e.key,e.mode)).elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.type=e.type,r.flags=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function $u(e,t,r,n,o,a){var l=2;if(n=e,"function"===typeof e)Wu(e)&&(l=1);else if("string"===typeof e)l=5;else e:switch(e){case S:return Qu(r.children,o,a,t);case I:l=8,o|=16;break;case T:l=8,o|=1;break;case _:return(e=Hu(12,r,t,8|o)).elementType=_,e.type=_,e.lanes=a,e;case R:return(e=Hu(13,r,t,o)).type=R,e.elementType=R,e.lanes=a,e;case A:return(e=Hu(19,r,t,o)).elementType=A,e.lanes=a,e;case j:return Yu(r,o,a,t);case M:return(e=Hu(24,r,t,o)).elementType=M,e.lanes=a,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case C:l=10;break e;case O:l=9;break e;case P:l=11;break e;case q:l=14;break e;case L:l=16,n=null;break e;case N:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Hu(l,r,t,o)).elementType=e,t.type=n,t.lanes=a,t}function Qu(e,t,r,n){return(e=Hu(7,e,n,t)).lanes=r,e}function Yu(e,t,r,n){return(e=Hu(23,e,n,t)).elementType=j,e.lanes=r,e}function Ku(e,t,r){return(e=Hu(6,e,null,t)).lanes=r,e}function Xu(e,t,r){return(t=Hu(4,null!==e.children?e.children:[],e.key,t)).lanes=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ju(e,t,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=r,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Bt(0),this.expirationTimes=Bt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Bt(0),this.mutableSourceEagerHydrationData=null}function Zu(e,t,r){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:E,key:null==n?null:""+n,children:e,containerInfo:t,implementation:r}}function es(e,t,r,n){var o=t.current,a=du(),l=pu(o);e:if(r){t:{if(Ke(r=r._reactInternals)!==r||1!==r.tag)throw Error(i(170));var u=r;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(yo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===r.tag){var s=r.type;if(yo(s)){r=xo(r,s,u);break e}}r=u}else r=po;return null===t.context?t.context=r:t.pendingContext=r,(t=fa(a,l)).payload={element:e},null!==(n=void 0===n?null:n)&&(t.callback=n),da(o,t),hu(o,l,a),l}function ts(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function rs(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var r=e.retryLane;e.retryLane=0!==r&&r<t?r:t}}function ns(e,t){rs(e,t),(e=e.alternate)&&rs(e,t)}function os(e,t,r){var n=null!=r&&null!=r.hydrationOptions&&r.hydrationOptions.mutableSources||null;if(r=new Ju(e,t,null!=r&&!0===r.hydrate),t=Hu(3,null,null,2===t?7:1===t?3:0),r.current=t,t.stateNode=r,sa(t),e[eo]=r.current,qn(8===e.nodeType?e.parentNode:e),n)for(e=0;e<n.length;e++){var o=(t=n[e])._getVersion;o=o(t._source),null==r.mutableSourceEagerHydrationData?r.mutableSourceEagerHydrationData=[t,o]:r.mutableSourceEagerHydrationData.push(t,o)}this._internalRoot=r}function as(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function is(e,t,r,n,o){var a=r._reactRootContainer;if(a){var i=a._internalRoot;if("function"===typeof o){var l=o;o=function(){var e=ts(i);l.call(e)}}es(t,i,e,o)}else{if(a=r._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var r;r=e.lastChild;)e.removeChild(r);return new os(e,0,t?{hydrate:!0}:void 0)}(r,n),i=a._internalRoot,"function"===typeof o){var u=o;o=function(){var e=ts(i);u.call(e)}}xu((function(){es(t,i,e,o)}))}return ts(i)}function ls(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!as(t))throw Error(i(200));return Zu(e,t,null,r)}Ql=function(e,t,r){var n=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||go.current)ji=!0;else{if(0===(r&n)){switch(ji=!1,t.tag){case 3:$i(t),Qa();break;case 5:Ia(t);break;case 1:yo(t.type)&&ko(t);break;case 4:Na(t,t.stateNode.containerInfo);break;case 10:n=t.memoizedProps.value;var o=t.type._context;fo(Zo,o._currentValue),o._currentValue=n;break;case 13:if(null!==t.memoizedState)return 0!==(r&t.child.childLanes)?Ji(e,t,r):(fo(Ma,1&Ma.current),null!==(t=al(e,t,r))?t.sibling:null);fo(Ma,1&Ma.current);break;case 19:if(n=0!==(r&t.childLanes),0!==(64&e.flags)){if(n)return ol(e,t,r);t.flags|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),fo(Ma,Ma.current),n)break;return null;case 23:case 24:return t.lanes=0,Bi(e,t,r)}return al(e,t,r)}ji=0!==(16384&e.flags)}else ji=!1;switch(t.lanes=0,t.tag){case 2:if(n=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=vo(t,ho.current),ia(t,r),o=li(null,t,n,e,o,r),t.flags|=1,"object"===typeof o&&null!==o&&"function"===typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,yo(n)){var a=!0;ko(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,sa(t);var l=n.getDerivedStateFromProps;"function"===typeof l&&va(t,n,l,e),o.updater=ya,t.stateNode=o,o._reactInternals=t,ka(t,n,e,r),t=Gi(null,t,n,!0,a,r)}else t.tag=0,Mi(null,t,o,r),t=t.child;return t;case 16:o=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=(a=o._init)(o._payload),t.type=o,a=t.tag=function(e){if("function"===typeof e)return Wu(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===P)return 11;if(e===q)return 14}return 2}(o),e=Jo(o,e),a){case 0:t=Hi(null,t,o,e,r);break e;case 1:t=Wi(null,t,o,e,r);break e;case 11:t=Fi(null,t,o,e,r);break e;case 14:t=zi(null,t,o,Jo(o.type,e),n,r);break e}throw Error(i(306,o,""))}return t;case 0:return n=t.type,o=t.pendingProps,Hi(e,t,n,o=t.elementType===n?o:Jo(n,o),r);case 1:return n=t.type,o=t.pendingProps,Wi(e,t,n,o=t.elementType===n?o:Jo(n,o),r);case 3:if($i(t),n=t.updateQueue,null===e||null===n)throw Error(i(282));if(n=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,ca(e,t),ha(t,n,null,r),(n=t.memoizedState.element)===o)Qa(),t=al(e,t,r);else{if((a=(o=t.stateNode).hydrate)&&(Ua=Qn(t.stateNode.containerInfo.firstChild),za=t,a=Ba=!0),a){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(a=e[o])._workInProgressVersionPrimary=e[o+1],Ya.push(a);for(r=Oa(t,null,n,r),t.child=r;r;)r.flags=-3&r.flags|1024,r=r.sibling}else Mi(e,t,n,r),Qa();t=t.child}return t;case 5:return Ia(t),null===e&&Wa(t),n=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,Hn(n,o)?l=null:null!==a&&Hn(n,a)&&(t.flags|=16),Vi(e,t),Mi(e,t,l,r),t.child;case 6:return null===e&&Wa(t),null;case 13:return Ji(e,t,r);case 4:return Na(t,t.stateNode.containerInfo),n=t.pendingProps,null===e?t.child=Ca(t,null,n,r):Mi(e,t,n,r),t.child;case 11:return n=t.type,o=t.pendingProps,Fi(e,t,n,o=t.elementType===n?o:Jo(n,o),r);case 7:return Mi(e,t,t.pendingProps,r),t.child;case 8:case 12:return Mi(e,t,t.pendingProps.children,r),t.child;case 10:e:{n=t.type._context,o=t.pendingProps,l=t.memoizedProps,a=o.value;var u=t.type._context;if(fo(Zo,u._currentValue),u._currentValue=a,null!==l)if(u=l.value,0===(a=cn(u,a)?0:0|("function"===typeof n._calculateChangedBits?n._calculateChangedBits(u,a):1073741823))){if(l.children===o.children&&!go.current){t=al(e,t,r);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.dependencies;if(null!==s){l=u.child;for(var c=s.firstContext;null!==c;){if(c.context===n&&0!==(c.observedBits&a)){1===u.tag&&((c=fa(-1,r&-r)).tag=2,da(u,c)),u.lanes|=r,null!==(c=u.alternate)&&(c.lanes|=r),aa(u.return,r),s.lanes|=r;break}c=c.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}Mi(e,t,o.children,r),t=t.child}return t;case 9:return o=t.type,n=(a=t.pendingProps).children,ia(t,r),n=n(o=la(o,a.unstable_observedBits)),t.flags|=1,Mi(e,t,n,r),t.child;case 14:return a=Jo(o=t.type,t.pendingProps),zi(e,t,o,a=Jo(o.type,a),n,r);case 15:return Ui(e,t,t.type,t.pendingProps,n,r);case 17:return n=t.type,o=t.pendingProps,o=t.elementType===n?o:Jo(n,o),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,yo(n)?(e=!0,ko(t)):e=!1,ia(t,r),wa(t,n,o),ka(t,n,o,r),Gi(null,t,n,!0,e,r);case 19:return ol(e,t,r);case 23:case 24:return Bi(e,t,r)}throw Error(i(156,t.tag))},os.prototype.render=function(e){es(e,this._internalRoot,null,null)},os.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;es(null,e,null,(function(){t[eo]=null}))},tt=function(e){13===e.tag&&(hu(e,4,du()),ns(e,4))},rt=function(e){13===e.tag&&(hu(e,67108864,du()),ns(e,67108864))},nt=function(e){if(13===e.tag){var t=du(),r=pu(e);hu(e,r,t),ns(e,r)}},ot=function(e,t){return t()},Ce=function(e,t,r){switch(t){case"input":if(re(e,r),t=r.name,"radio"===r.type&&null!=t){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+\'][type="radio"]\'),t=0;t<r.length;t++){var n=r[t];if(n!==e&&n.form===e.form){var o=ao(n);if(!o)throw Error(i(90));X(n),re(n,o)}}}break;case"textarea":se(e,r);break;case"select":null!=(t=r.value)&&ie(e,!!r.multiple,t,!1)}},Le=wu,Ne=function(e,t,r,n,o){var a=ql;ql|=4;try{return $o(98,e.bind(null,t,r,n,o))}finally{0===(ql=a)&&($l(),Yo())}},De=function(){0===(49&ql)&&(function(){if(null!==ou){var e=ou;ou=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,mu(e,Ho())}))}Yo()}(),Du())},Ie=function(e,t){var r=ql;ql|=2;try{return e(t)}finally{0===(ql=r)&&($l(),Yo())}};var us={Events:[no,oo,ao,Ae,qe,Du,{current:!1}]},ss={findFiberByHostInstance:ro,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},cs={bundleType:ss.bundleType,version:ss.version,rendererPackageName:ss.rendererPackageName,rendererConfig:ss.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ze(e))?null:e.stateNode},findFiberByHostInstance:ss.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!==typeof{}){var fs={};if(!fs.isDisabled&&fs.supportsFiber)try{So=fs.inject(cs),To=fs}catch(me){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=us,t.createPortal=ls,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return e=null===(e=Ze(t))?null:e.stateNode},t.flushSync=function(e,t){var r=ql;if(0!==(48&r))return e(t);ql|=1;try{if(e)return $o(99,e.bind(null,t))}finally{ql=r,Yo()}},t.hydrate=function(e,t,r){if(!as(t))throw Error(i(200));return is(null,e,t,!0,r)},t.render=function(e,t,r){if(!as(t))throw Error(i(200));return is(null,e,t,!1,r)},t.unmountComponentAtNode=function(e){if(!as(e))throw Error(i(40));return!!e._reactRootContainer&&(xu((function(){is(null,null,e,!1,(function(){e._reactRootContainer=null,e[eo]=null}))})),!0)},t.unstable_batchedUpdates=wu,t.unstable_createPortal=function(e,t){return ls(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,r,n){if(!as(r))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return is(e,t,r,!1,n)},t.version="17.0.2"},2171:(e,t,r)=>{"use strict";!function e(){if("undefined"!==typeof{}&&"function"===typeof{}.checkDCE)try{({}).checkDCE(e)}catch(e){console.error(e)}}(),e.exports=r(2015)},5931:(e,t,r)=>{"use strict";var n=r(9934),o=60103,a=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,l=60110,u=60112;t.Suspense=60113;var s=60115,c=60116;if("function"===typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),a=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),i=f("react.provider"),l=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),s=f("react.memo"),c=f("react.lazy")}var d="function"===typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function m(e,t,r){this.props=e,this.context=t,this.refs=g,this.updater=r||h}function v(){}function y(e,t,r){this.props=e,this.context=t,this.refs=g,this.updater=r||h}m.prototype.isReactComponent={},m.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=m.prototype;var b=y.prototype=new v;b.constructor=y,n(b,m.prototype),b.isPureReactComponent=!0;var w={current:null},x=Object.prototype.hasOwnProperty,k={key:!0,ref:!0,__self:!0,__source:!0};function E(e,t,r){var n,a={},i=null,l=null;if(null!=t)for(n in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)x.call(t,n)&&!k.hasOwnProperty(n)&&(a[n]=t[n]);var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];a.children=s}if(e&&e.defaultProps)for(n in u=e.defaultProps)void 0===a[n]&&(a[n]=u[n]);return{$$typeof:o,type:e,key:i,ref:l,props:a,_owner:w.current}}function S(e){return"object"===typeof e&&null!==e&&e.$$typeof===o}var T=/\\/+/g;function _(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function C(e,t,r,n,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case o:case a:u=!0}}if(u)return i=i(u=e),e=""===n?"."+_(u,0):n,Array.isArray(i)?(r="",null!=e&&(r=e.replace(T,"$&/")+"/"),C(i,t,r,"",(function(e){return e}))):null!=i&&(S(i)&&(i=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,r+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(T,"$&/")+"/")+e)),t.push(i)),1;if(u=0,n=""===n?".":n+":",Array.isArray(e))for(var s=0;s<e.length;s++){var c=n+_(l=e[s],s);u+=C(l,t,r,c,i)}else if(c=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e),"function"===typeof c)for(e=c.call(e),s=0;!(l=e.next()).done;)u+=C(l=l.value,t,r,c=n+_(l,s++),i);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function O(e,t,r){if(null==e)return e;var n=[],o=0;return C(e,n,"","",(function(e){return t.call(r,e,o++)})),n}function P(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var R={current:null};function A(){var e=R.current;if(null===e)throw Error(p(321));return e}var q={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:n};t.Children={map:O,forEach:function(e,t,r){O(e,(function(){t.apply(this,arguments)}),r)},count:function(e){var t=0;return O(e,(function(){t++})),t},toArray:function(e){return O(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error(p(143));return e}},t.Component=m,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=q,t.cloneElement=function(e,t,r){if(null===e||void 0===e)throw Error(p(267,e));var a=n({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=w.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)x.call(t,c)&&!k.hasOwnProperty(c)&&(a[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)a.children=r;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:o,type:e.type,key:i,ref:l,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=E,t.createFactory=function(e){var t=E.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:P}},t.memo=function(e,t){return{$$typeof:s,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return A().useCallback(e,t)},t.useContext=function(e,t){return A().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return A().useEffect(e,t)},t.useImperativeHandle=function(e,t,r){return A().useImperativeHandle(e,t,r)},t.useLayoutEffect=function(e,t){return A().useLayoutEffect(e,t)},t.useMemo=function(e,t){return A().useMemo(e,t)},t.useReducer=function(e,t,r){return A().useReducer(e,t,r)},t.useRef=function(e){return A().useRef(e)},t.useState=function(e){return A().useState(e)},t.version="17.0.2"},6346:(e,t,r)=>{"use strict";e.exports=r(5931)},2205:e=>{var t=function(e){"use strict";var t,r=Object.prototype,n=r.hasOwnProperty,o="function"===typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",i=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag";function u(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,r){return e[t]=r}}function s(e,t,r,n){var o=t&&t.prototype instanceof m?t:m,a=Object.create(o.prototype),i=new O(n||[]);return a._invoke=function(e,t,r){var n=f;return function(o,a){if(n===p)throw new Error("Generator is already running");if(n===h){if("throw"===o)throw a;return R()}for(r.method=o,r.arg=a;;){var i=r.delegate;if(i){var l=T(i,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(n===f)throw n=h,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n=p;var u=c(e,t,r);if("normal"===u.type){if(n=r.done?h:d,u.arg===g)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(n=h,r.method="throw",r.arg=u.arg)}}}(e,r,i),a}function c(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=s;var f="suspendedStart",d="suspendedYield",p="executing",h="completed",g={};function m(){}function v(){}function y(){}var b={};u(b,a,(function(){return this}));var w=Object.getPrototypeOf,x=w&&w(w(P([])));x&&x!==r&&n.call(x,a)&&(b=x);var k=y.prototype=m.prototype=Object.create(b);function E(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){function r(o,a,i,l){var u=c(e[o],e,a);if("throw"!==u.type){var s=u.arg,f=s.value;return f&&"object"===typeof f&&n.call(f,"__await")?t.resolve(f.__await).then((function(e){r("next",e,i,l)}),(function(e){r("throw",e,i,l)})):t.resolve(f).then((function(e){s.value=e,i(s)}),(function(e){return r("throw",e,i,l)}))}l(u.arg)}var o;this._invoke=function(e,n){function a(){return new t((function(t,o){r(e,n,t,o)}))}return o=o?o.then(a,a):a()}}function T(e,r){var n=e.iterator[r.method];if(n===t){if(r.delegate=null,"throw"===r.method){if(e.iterator.return&&(r.method="return",r.arg=t,T(e,r),"throw"===r.method))return g;r.method="throw",r.arg=new TypeError("The iterator does not provide a \'throw\' method")}return g}var o=c(n,e.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,g;var a=o.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,g):a:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,g)}function _(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function C(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function O(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(_,this),this.reset(!0)}function P(e){if(e){var r=e[a];if(r)return r.call(e);if("function"===typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return i.next=i}}return{next:R}}function R(){return{value:t,done:!0}}return v.prototype=y,u(k,"constructor",y),u(y,"constructor",v),v.displayName=u(y,l,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"===typeof e&&e.constructor;return!!t&&(t===v||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,u(e,l,"GeneratorFunction")),e.prototype=Object.create(k),e},e.awrap=function(e){return{__await:e}},E(S.prototype),u(S.prototype,i,(function(){return this})),e.AsyncIterator=S,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new S(s(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},E(k),u(k,l,"Generator"),u(k,a,(function(){return this})),u(k,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=P,O.prototype={constructor:O,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(C),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return l.type="throw",l.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],l=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var u=n.call(i,"catchLoc"),s=n.call(i,"finallyLoc");if(u&&s){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,g):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),C(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;C(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:P(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),g}},e}(e.exports);try{regeneratorRuntime=t}catch(e){"object"===typeof globalThis?globalThis.regeneratorRuntime=t:Function("r","regeneratorRuntime = r")(t)}},8142:(e,t)=>{"use strict";var r,n,o,a;if("object"===typeof performance&&"function"===typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var l=Date,u=l.now();t.unstable_now=function(){return l.now()-u}}if("undefined"===typeof window||"function"!==typeof MessageChannel){var s=null,c=null,f=function e(){if(null!==s)try{var r=t.unstable_now();s(!0,r),s=null}catch(t){throw setTimeout(e,0),t}};r=function(e){null!==s?setTimeout(r,0,e):(s=e,setTimeout(f,0))},n=function(e,t){c=setTimeout(e,t)},o=function(){clearTimeout(c)},t.unstable_shouldYield=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!==typeof console){var h=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn\'t support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!==typeof h&&console.error("This browser doesn\'t support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var g=!1,m=null,v=-1,y=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):y=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,x=w.port2;w.port1.onmessage=function(){if(null!==m){var e=t.unstable_now();b=e+y;try{m(!0,e)?x.postMessage(null):(g=!1,m=null)}catch(e){throw x.postMessage(null),e}}else g=!1},r=function(e){m=e,g||(g=!0,x.postMessage(null))},n=function(e,r){v=d((function(){e(t.unstable_now())}),r)},o=function(){p(v),v=-1}}function k(e,t){var r=e.length;e.push(t);e:for(;;){var n=r-1>>>1,o=e[n];if(!(void 0!==o&&0<T(o,t)))break e;e[n]=t,e[r]=o,r=n}}function E(e){return void 0===(e=e[0])?null:e}function S(e){var t=e[0];if(void 0!==t){var r=e.pop();if(r!==t){e[0]=r;e:for(var n=0,o=e.length;n<o;){var a=2*(n+1)-1,i=e[a],l=a+1,u=e[l];if(void 0!==i&&0>T(i,r))void 0!==u&&0>T(u,i)?(e[n]=u,e[l]=r,n=l):(e[n]=i,e[a]=r,n=a);else{if(!(void 0!==u&&0>T(u,r)))break e;e[n]=u,e[l]=r,n=l}}}return t}return null}function T(e,t){var r=e.sortIndex-t.sortIndex;return 0!==r?r:e.id-t.id}var _=[],C=[],O=1,P=null,R=3,A=!1,q=!1,L=!1;function N(e){for(var t=E(C);null!==t;){if(null===t.callback)S(C);else{if(!(t.startTime<=e))break;S(C),t.sortIndex=t.expirationTime,k(_,t)}t=E(C)}}function D(e){if(L=!1,N(e),!q)if(null!==E(_))q=!0,r(I);else{var t=E(C);null!==t&&n(D,t.startTime-e)}}function I(e,r){q=!1,L&&(L=!1,o()),A=!0;var a=R;try{for(N(r),P=E(_);null!==P&&(!(P.expirationTime>r)||e&&!t.unstable_shouldYield());){var i=P.callback;if("function"===typeof i){P.callback=null,R=P.priorityLevel;var l=i(P.expirationTime<=r);r=t.unstable_now(),"function"===typeof l?P.callback=l:P===E(_)&&S(_),N(r)}else S(_);P=E(_)}if(null!==P)var u=!0;else{var s=E(C);null!==s&&n(D,s.startTime-r),u=!1}return u}finally{P=null,R=a,A=!1}}var j=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){q||A||(q=!0,r(I))},t.unstable_getCurrentPriorityLevel=function(){return R},t.unstable_getFirstCallbackNode=function(){return E(_)},t.unstable_next=function(e){switch(R){case 1:case 2:case 3:var t=3;break;default:t=R}var r=R;R=t;try{return e()}finally{R=r}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=j,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=R;R=e;try{return t()}finally{R=r}},t.unstable_scheduleCallback=function(e,a,i){var l=t.unstable_now();switch("object"===typeof i&&null!==i?i="number"===typeof(i=i.delay)&&0<i?l+i:l:i=l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:O++,callback:a,priorityLevel:e,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(e.sortIndex=i,k(C,e),null===E(_)&&e===E(C)&&(L?o():L=!0,n(D,i-l))):(e.sortIndex=u,k(_,e),q||A||(q=!0,r(I))),e},t.unstable_wrapCallback=function(e){var t=R;return function(){var r=R;R=t;try{return e.apply(this,arguments)}finally{R=r}}}},7425:(e,t,r)=>{"use strict";e.exports=r(8142)},9853:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Headers:()=>h,Request:()=>x,Response:()=>E,DOMException:()=>T,fetch:()=>_});var n="undefined"!==typeof globalThis&&globalThis||"undefined"!==typeof self&&self||"undefined"!==typeof n&&n,o="URLSearchParams"in n,a="Symbol"in n&&"iterator"in Symbol,i="FileReader"in n&&"Blob"in n&&function(){try{return new Blob,!0}catch(e){return!1}}(),l="FormData"in n,u="ArrayBuffer"in n;if(u)var s=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],c=ArrayBuffer.isView||function(e){return e&&s.indexOf(Object.prototype.toString.call(e))>-1};function f(e){if("string"!==typeof e&&(e=String(e)),/[^a-z0-9\\-#$%&\'*+.^_`|~!]/i.test(e)||""===e)throw new TypeError(\'Invalid character in header field name: "\'+e+\'"\');return e.toLowerCase()}function d(e){return"string"!==typeof e&&(e=String(e)),e}function p(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return a&&(t[Symbol.iterator]=function(){return t}),t}function h(e){this.map={},e instanceof h?e.forEach((function(e,t){this.append(t,e)}),this):Array.isArray(e)?e.forEach((function(e){this.append(e[0],e[1])}),this):e&&Object.getOwnPropertyNames(e).forEach((function(t){this.append(t,e[t])}),this)}function g(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function m(e){return new Promise((function(t,r){e.onload=function(){t(e.result)},e.onerror=function(){r(e.error)}}))}function v(e){var t=new FileReader,r=m(t);return t.readAsArrayBuffer(e),r}function y(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function b(){return this.bodyUsed=!1,this._initBody=function(e){var t;this.bodyUsed=this.bodyUsed,this._bodyInit=e,e?"string"===typeof e?this._bodyText=e:i&&Blob.prototype.isPrototypeOf(e)?this._bodyBlob=e:l&&FormData.prototype.isPrototypeOf(e)?this._bodyFormData=e:o&&URLSearchParams.prototype.isPrototypeOf(e)?this._bodyText=e.toString():u&&i&&((t=e)&&DataView.prototype.isPrototypeOf(t))?(this._bodyArrayBuffer=y(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):u&&(ArrayBuffer.prototype.isPrototypeOf(e)||c(e))?this._bodyArrayBuffer=y(e):this._bodyText=e=Object.prototype.toString.call(e):this._bodyText="",this.headers.get("content-type")||("string"===typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):o&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},i&&(this.blob=function(){var e=g(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){if(this._bodyArrayBuffer){var e=g(this);return e||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer))}return this.blob().then(v)}),this.text=function(){var e,t,r,n=g(this);if(n)return n;if(this._bodyBlob)return e=this._bodyBlob,t=new FileReader,r=m(t),t.readAsText(e),r;if(this._bodyArrayBuffer)return Promise.resolve(function(e){for(var t=new Uint8Array(e),r=new Array(t.length),n=0;n<t.length;n++)r[n]=String.fromCharCode(t[n]);return r.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},l&&(this.formData=function(){return this.text().then(k)}),this.json=function(){return this.text().then(JSON.parse)},this}h.prototype.append=function(e,t){e=f(e),t=d(t);var r=this.map[e];this.map[e]=r?r+", "+t:t},h.prototype.delete=function(e){delete this.map[f(e)]},h.prototype.get=function(e){return e=f(e),this.has(e)?this.map[e]:null},h.prototype.has=function(e){return this.map.hasOwnProperty(f(e))},h.prototype.set=function(e,t){this.map[f(e)]=d(t)},h.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)},h.prototype.keys=function(){var e=[];return this.forEach((function(t,r){e.push(r)})),p(e)},h.prototype.values=function(){var e=[];return this.forEach((function(t){e.push(t)})),p(e)},h.prototype.entries=function(){var e=[];return this.forEach((function(t,r){e.push([r,t])})),p(e)},a&&(h.prototype[Symbol.iterator]=h.prototype.entries);var w=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function x(e,t){if(!(this instanceof x))throw new TypeError(\'Please use the "new" operator, this DOM object constructor cannot be called as a function.\');var r,n,o=(t=t||{}).body;if(e instanceof x){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new h(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,o||null==e._bodyInit||(o=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"same-origin",!t.headers&&this.headers||(this.headers=new h(t.headers)),this.method=(r=t.method||this.method||"GET",n=r.toUpperCase(),w.indexOf(n)>-1?n:r),this.mode=t.mode||this.mode||null,this.signal=t.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&o)throw new TypeError("Body not allowed for GET or HEAD requests");if(this._initBody(o),("GET"===this.method||"HEAD"===this.method)&&("no-store"===t.cache||"no-cache"===t.cache)){var a=/([?&])_=[^&]*/;if(a.test(this.url))this.url=this.url.replace(a,"$1_="+(new Date).getTime());else{this.url+=(/\\?/.test(this.url)?"&":"?")+"_="+(new Date).getTime()}}}function k(e){var t=new FormData;return e.trim().split("&").forEach((function(e){if(e){var r=e.split("="),n=r.shift().replace(/\\+/g," "),o=r.join("=").replace(/\\+/g," ");t.append(decodeURIComponent(n),decodeURIComponent(o))}})),t}function E(e,t){if(!(this instanceof E))throw new TypeError(\'Please use the "new" operator, this DOM object constructor cannot be called as a function.\');t||(t={}),this.type="default",this.status=void 0===t.status?200:t.status,this.ok=this.status>=200&&this.status<300,this.statusText=void 0===t.statusText?"":""+t.statusText,this.headers=new h(t.headers),this.url=t.url||"",this._initBody(e)}x.prototype.clone=function(){return new x(this,{body:this._bodyInit})},b.call(x.prototype),b.call(E.prototype),E.prototype.clone=function(){return new E(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new h(this.headers),url:this.url})},E.error=function(){var e=new E(null,{status:0,statusText:""});return e.type="error",e};var S=[301,302,303,307,308];E.redirect=function(e,t){if(-1===S.indexOf(t))throw new RangeError("Invalid status code");return new E(null,{status:t,headers:{location:e}})};var T=n.DOMException;try{new T}catch(e){(T=function(e,t){this.message=e,this.name=t;var r=Error(e);this.stack=r.stack}).prototype=Object.create(Error.prototype),T.prototype.constructor=T}function _(e,t){return new Promise((function(r,o){var a=new x(e,t);if(a.signal&&a.signal.aborted)return o(new T("Aborted","AbortError"));var l=new XMLHttpRequest;function s(){l.abort()}l.onload=function(){var e,t,n={status:l.status,statusText:l.statusText,headers:(e=l.getAllResponseHeaders()||"",t=new h,e.replace(/\\r?\\n[\\t ]+/g," ").split("\\r").map((function(e){return 0===e.indexOf("\\n")?e.substr(1,e.length):e})).forEach((function(e){var r=e.split(":"),n=r.shift().trim();if(n){var o=r.join(":").trim();t.append(n,o)}})),t)};n.url="responseURL"in l?l.responseURL:n.headers.get("X-Request-URL");var o="response"in l?l.response:l.responseText;setTimeout((function(){r(new E(o,n))}),0)},l.onerror=function(){setTimeout((function(){o(new TypeError("Network request failed"))}),0)},l.ontimeout=function(){setTimeout((function(){o(new TypeError("Network request failed"))}),0)},l.onabort=function(){setTimeout((function(){o(new T("Aborted","AbortError"))}),0)},l.open(a.method,function(e){try{return""===e&&n.location.href?n.location.href:e}catch(t){return e}}(a.url),!0),"include"===a.credentials?l.withCredentials=!0:"omit"===a.credentials&&(l.withCredentials=!1),"responseType"in l&&(i?l.responseType="blob":u&&a.headers.get("Content-Type")&&-1!==a.headers.get("Content-Type").indexOf("application/octet-stream")&&(l.responseType="arraybuffer")),!t||"object"!==typeof t.headers||t.headers instanceof h?a.headers.forEach((function(e,t){l.setRequestHeader(t,e)})):Object.getOwnPropertyNames(t.headers).forEach((function(e){l.setRequestHeader(e,d(t.headers[e]))})),a.signal&&(a.signal.addEventListener("abort",s),l.onreadystatechange=function(){4===l.readyState&&a.signal.removeEventListener("abort",s)}),l.send("undefined"===typeof a._bodyInit?null:a._bodyInit)}))}_.polyfill=!0,n.fetch||(n.fetch=_,n.Headers=h,n.Request=x,n.Response=E)},8950:(e,t,r)=>{"use strict";r(1522),r(5998),r(4658),r(4711),r(7105),r(1034),r(9227),r(9385),r(9764),r(3264),r(1257),r(6435),r(681),r(7313),r(5185),r(100),r(1168),r(3782),r(8458),r(620),r(7987),r(8151),r(7925),r(8955),"undefined"===typeof Promise&&(r(7247).enable(),self.Promise=r(83)),"undefined"!==typeof window&&r(9853),Object.assign=r(9934)},4037:(e,t,r)=>{"use strict";r(4801),r(1537),r(3782),r(8955),r(3035),r(2481),r(673),r(4756),r(5837),r(471),r(6692),r(5853),r(7415),r(4837),r(4285),r(9932),r(5843),r(1080),r(7074),r(7992),r(6443),r(8151),r(3763),r(1061),r(1675),r(3860),r(8088),r(7041),r(3922),r(156),r(8946),r(9492),r(1402),r(9787),r(6024),r(2681),r(2632),r(1463),r(5691),r(7705),r(5154),r(8950),r(6597).polyfill()}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var a=t[n]={id:n,loaded:!1,exports:{}};return e[n].call(a.exports,a,a.exports,r),a.loaded=!0,a.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var n={};(()=>{"use strict";r.d(n,{N:()=>he});r(4037);var e=r(6346),t=r(2171),o=function(e){return{position:"relative",display:"inline-flex",flexDirection:"column",height:"100%",width:"1024px",maxWidth:"100%",overflowX:"hidden",overflowY:"auto",padding:"0.5rem",boxSizing:"border-box",textAlign:"left",fontFamily:"Consolas, Menlo, monospace",fontSize:"11px",whiteSpace:"pre-wrap",wordBreak:"break-word",lineHeight:1.5,color:e.color}},a=null;const i=function(t){var r=(0,e.useContext)(he),n=t.shortcutHandler;return(0,e.useEffect)((function(){var e=function(e){n&&n(e.key)};return window.addEventListener("keydown",e),a&&a.addEventListener("keydown",e),function(){window.removeEventListener("keydown",e),a&&a.removeEventListener("keydown",e)}}),[n]),e.createElement("div",{style:o(r),ref:function(e){if(e){var t=e.ownerDocument;a=t.defaultView}}},t.children)};var l=function(e){return{fontFamily:"sans-serif",color:e.footer,marginTop:"0.5rem",flex:"0 0 auto"}};const u=function(t){var r=(0,e.useContext)(he);return e.createElement("div",{style:l(r)},t.line1,e.createElement("br",null),t.line2)};var s=function(e){return{fontSize:"2em",fontFamily:"sans-serif",color:e.headerColor,whiteSpace:"pre-wrap",margin:"0 2rem 0.75rem 0",flex:"0 0 auto",maxHeight:"50%",overflow:"auto"}};const c=function(t){var r=(0,e.useContext)(he);return e.createElement("div",{style:s(r)},t.headerText)};function f(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function d(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?d(Object(r),!0).forEach((function(t){f(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):d(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var h={position:"relative",display:"block",padding:"0.5em",marginTop:"0.5em",marginBottom:"0.5em",overflowX:"auto",whiteSpace:"pre-wrap",borderRadius:"0.25rem"},g={fontFamily:"Consolas, Menlo, monospace"};const m=function(t){var r=t.main,n=t.codeHTML,o=(0,e.useContext)(he),a=p(p({},h),{},{backgroundColor:o.primaryPreBackground,color:o.primaryPreColor}),i=p(p({},h),{},{backgroundColor:o.secondaryPreBackground,color:o.secondaryPreColor}),l=r?a:i,u={__html:n};return e.createElement("pre",{style:l},e.createElement("code",{style:g,dangerouslySetInnerHTML:u}))};var v=r(2434),y=r.n(v),b=r(3624),w=function(e){return{reset:[e.base05,"transparent"],black:e.base05,red:e.base08,green:e.base0B,yellow:e.base08,blue:e.base0C,magenta:e.base0C,cyan:e.base0E,gray:e.base03,lightgrey:e.base01,darkgrey:e.base03}},x={"ansi-bright-black":"black","ansi-bright-yellow":"yellow","ansi-yellow":"yellow","ansi-bright-green":"green","ansi-green":"green","ansi-bright-cyan":"cyan","ansi-cyan":"cyan","ansi-bright-red":"red","ansi-red":"red","ansi-bright-magenta":"magenta","ansi-magenta":"magenta","ansi-white":"darkgrey"};const k=function(e,t){for(var r=(new(y())).ansiToJson((0,b.encode)(e),{use_classes:!0}),n="",o=!1,a=0;a<r.length;++a)for(var i=r[a],l=i.content,u=i.fg,s=l.split("\\n"),c=0;c<s.length;++c){o||(n+=\'<span data-ansi-line="true">\',o=!0);var f=s[c].replace("\\r",""),d=w(t)[x[u]];null!=d?n+=\'<span style="color: \'+d+\';">\'+f+"</span>":(null!=u&&console.log("Missing color mapping: ",u),n+="<span>"+f+"</span>"),c<s.length-1&&(n+="</span>",o=!1,n+="<br/>")}return o&&(n+="</span>",o=!1),n};var E=/^\\.(\\/[^/\\n ]+)+\\.[^/\\n ]+$/,S=[/^.*\\((\\d+):(\\d+)\\)$/,/^Line (\\d+):.+$/];const T=function(e){for(var t=e.split("\\n"),r="",n=0,o=0,a=0;a<t.length;a++){var i=y().ansiToText(t[a]).trim();if(i){!r&&i.match(E)&&(r=i);for(var l=0;l<S.length;){var u=i.match(S[l]);if(u){n=parseInt(u[1],10),o=parseInt(u[2],10)+1||1;break}l++}if(r&&n)break}}return r&&n?{fileName:r,lineNumber:n,colNumber:o}:null};var _={cursor:"pointer"};const C=function(t){var r=(0,e.useContext)(he),n=t.error,o=t.editorHandler,a=T(n),l=null!==a&&null!==o;return e.createElement(i,null,e.createElement(c,{headerText:"Failed to compile"}),e.createElement("div",{onClick:l&&a?function(){return o(a)}:null,style:l?_:null},e.createElement(m,{main:!0,codeHTML:k(n,r)})),e.createElement(u,{line1:"This error occurred during the build time and cannot be dismissed."}))};function O(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function P(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function R(e,t,r){return t&&P(e.prototype,t),r&&P(e,r),e}function A(e,t){return A=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},A(e,t)}function q(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&A(e,t)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}function N(e){return N="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},N(e)}function D(e,t){if(t&&("object"===N(t)||"function"===typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return e}(e)}function I(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=L(e);if(t){var o=L(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return D(this,r)}}var j=function(e){return{color:e.closeColor,lineHeight:"1rem",fontSize:"1.5rem",padding:"1rem",cursor:"pointer",position:"absolute",right:0,top:0}};const M=function(t){var r=t.close,n=(0,e.useContext)(he);return e.createElement("span",{title:"Click or press Escape to dismiss.",onClick:r,style:j(n)},"×")};var F={marginBottom:"0.5rem"},z={marginRight:"1em"},U={border:"none",borderRadius:"4px",padding:"3px 6px",cursor:"pointer"},B=function(e){return p(p({},U),{},{backgroundColor:e.navBackground,color:e.navArrow,borderTopRightRadius:"0px",borderBottomRightRadius:"0px",marginRight:"1px"})},V=function(e){return p(p({},U),{},{backgroundColor:e.navBackground,color:e.navArrow,borderTopLeftRadius:"0px",borderBottomLeftRadius:"0px"})};const H=function(t){var r=(0,e.useContext)(he),n=t.currentError,o=t.totalErrors,a=t.previous,i=t.next;return e.createElement("div",{style:F},e.createElement("span",{style:z},e.createElement("button",{onClick:a,style:B(r)},"←"),e.createElement("button",{onClick:i,style:V(r)},"→")),"".concat(n," of ").concat(o," errors on the page"))};function W(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function G(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,a=[],i=!0,l=!1;try{for(r=r.call(e);!(i=(n=r.next()).done)&&(a.push(n.value),!t||a.length!==t);i=!0);}catch(e){l=!0,o=e}finally{try{i||null==r.return||r.return()}finally{if(l)throw o}}return a}}(e,t)||function(e,t){if(e){if("string"===typeof e)return W(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?W(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function $(e,t){for(;null!=t&&"br"!==t.tagName.toLowerCase();)t=t.nextElementSibling;null!=t&&e.removeChild(t)}var Q=r(8641);const Y=function(t){var r=(0,e.useContext)(he),n=t.lines,o=t.lineNum,a=t.columnNum,i=t.contextSize,l=t.main,u=[],s=1/0;n.forEach((function(e){var t=e.content,r=t.match(/^\\s*/);""!==t&&(s=r&&r[0]?Math.min(s,r[0].length):0)})),n.forEach((function(e){var t=e.content,r=e.lineNumber;isFinite(s)&&(t=t.substring(s)),u[r-1]=t}));var c=(0,Q.rf)(u.join("\\n"),{start:{line:o,column:null==a?0:a-(isFinite(s)?s:0)}},{forceColor:!0,linesAbove:i,linesBelow:i}),f=k(c,r),d=document.createElement("code");d.innerHTML=f,function(e){for(var t=e.childNodes,r=0;r<t.length;++r){var n=t[r];if("span"===n.tagName.toLowerCase()){var o=n.innerText;null!=o&&"|^"===o.replace(/\\s/g,"")&&(n.style.position="absolute",$(e,n))}}}(d);var p=d.childNodes;e:for(var h=0;h<p.length;++h)for(var g=p[h].childNodes,v=0;v<g.length;++v){var y=g[v].innerText;if(null!=y&&-1!==y.indexOf(" "+o+" |"))break e}return e.createElement(m,{main:l,codeHTML:d.innerHTML})};function K(e,t,r,n,o,a,i){var l;if(!i&&e&&"number"===typeof t){var u=/^[/|\\\\].*?[/|\\\\]((src|node_modules)[/|\\\\].*)/.exec(e);l=u&&u[1]?u[1]:e,l+=":"+t,r&&(l+=":"+r)}else n&&"number"===typeof o?(l=n+":"+o,a&&(l+=":"+a)):l="unknown";return l.replace("webpack://",".")}var X=function(e){return{textDecoration:"none",color:e.anchorColor,cursor:"pointer"}},J=function(e){return{marginBottom:"1.5em",color:e.toggleColor,cursor:"pointer",border:"none",display:"block",width:"100%",textAlign:"left",background:e.toggleBackground,fontFamily:"Consolas, Menlo, monospace",fontSize:"1em",padding:"0px",lineHeight:"1.5"}};const Z=function(t){var r=(0,e.useContext)(he),n=G((0,e.useState)(!1),2),o=n[0],a=n[1],i=function(){var e=t.frame,r=e._originalFileName,n=e._originalLineNumber;return r?-1!==r.trim().indexOf(" ")?null:{fileName:r,lineNumber:n||1}:null},l=function(){var e=i();e&&t.editorHandler(e)},u=t.frame,s=t.contextSize,c=t.critical,f=t.showCode,d=u.fileName,p=u.lineNumber,h=u.columnNumber,g=u._scriptCode,m=u._originalFileName,v=u._originalLineNumber,y=u._originalColumnNumber,b=u._originalScriptCode,w=u.getFunctionName(),x=K(m,v,y,d,p,h,o),k=null;f&&(o&&g&&0!==g.length&&null!=p?k={lines:g,lineNum:p,columnNum:h,contextSize:s,main:c}:!o&&b&&0!==b.length&&null!=v&&(k={lines:b,lineNum:v,columnNum:y,contextSize:s,main:c}));var E=null!==i()&&null!==t.editorHandler;return e.createElement("div",null,e.createElement("div",null,w),e.createElement("div",{style:{fontSize:"0.9em",marginBottom:"0.9em"}},e.createElement("span",{style:E?X(r):null,onClick:E?l:null,onKeyDown:E?function(e){"Enter"===e.key&&l()}:null,tabIndex:E?"0":null},x)),k&&e.createElement("span",null,e.createElement("span",{onClick:E?l:null,style:E?{cursor:"pointer"}:null},e.createElement(Y,k)),e.createElement("button",{style:J(r),onClick:function(){a(!o)}},"View "+(o?"source":"compiled"))))};var ee={cursor:"pointer",border:"none",display:"block",width:"100%",textAlign:"left",fontFamily:"Consolas, Menlo, monospace",fontSize:"1em",padding:"0px",lineHeight:"1.5"},te=function(e){return p(p({},ee),{},{color:e.color,background:e.background,marginBottom:"1.5em"})},re=function(e){return p(p({},ee),{},{color:e.color,background:e.background,marginBottom:"0.6em"})};const ne=function(t){var r=(0,e.useContext)(he),n=G((0,e.useState)(!0),2),o=n[0],a=n[1],i=function(){a(!o)},l=t.children.length;return e.createElement("div",null,e.createElement("button",{onClick:i,style:o?te(r):re(r)},(o?"▶":"▼")+" ".concat(l," stack frames were ")+(o?"collapsed.":"expanded.")),e.createElement("div",{style:{display:o?"none":"block"}},t.children,e.createElement("button",{onClick:i,style:re(r)},"▲ ".concat(l," stack frames were expanded."))))};function oe(e){switch(e){case"EvalError":case"InternalError":case"RangeError":case"ReferenceError":case"SyntaxError":case"TypeError":case"URIError":return!0;default:return!1}}var ae={fontSize:"1em",flex:"0 1 auto",minHeight:"0px",overflow:"auto"};const ie=function(t){q(n,t);var r=I(n);function n(){return O(this,n),r.apply(this,arguments)}return R(n,[{key:"renderFrames",value:function(){var t=this.props,r=t.stackFrames,n=t.errorName,o=t.contextSize,a=t.editorHandler,i=[],l=!1,u=[],s=0;return r.forEach((function(t,c){var f=t.fileName,d=function(e,t){return null==e||""===e||-1!==e.indexOf("/~/")||-1!==e.indexOf("/node_modules/")||-1!==e.trim().indexOf(" ")||null==t||""===t}(t._originalFileName,f),p=!oe(n),h=d&&(p||l);d||(l=!0);var g=e.createElement(Z,{key:"frame-"+c,frame:t,contextSize:o,critical:0===c,showCode:!h,editorHandler:a}),m=c===r.length-1;h&&u.push(g),h&&!m||(1===u.length?i.push(u[0]):u.length>1&&(s++,i.push(e.createElement(ne,{key:"bundle-"+s},u))),u=[]),h||i.push(g)})),i}},{key:"render",value:function(){return e.createElement("div",{style:ae},this.renderFrames())}}]),n}(e.Component);var le={display:"flex",flexDirection:"column"};const ue=function(t){var r=t.errorRecord,n=t.editorHandler,o=r.error,a=r.unhandledRejection,i=r.contextSize,l=r.stackFrames,u=a?"Unhandled Rejection ("+o.name+")":o.name,s=o.message,f=s.match(/^\\w*:/)||!u?s:u+": "+s;return f=f.replace(/^Invariant Violation:\\s*/,"").replace(/^Warning:\\s*/,"").replace(" Check the render method","\\n\\nCheck the render method").replace(" Check your code at","\\n\\nCheck your code at"),e.createElement("div",{style:le},e.createElement(c,{headerText:f}),e.createElement(ie,{stackFrames:l,errorName:u,contextSize:i,editorHandler:n}))};const se=function(t){q(n,t);var r=I(n);function n(){var e;O(this,n);for(var t=arguments.length,o=new Array(t),a=0;a<t;a++)o[a]=arguments[a];return(e=r.call.apply(r,[this].concat(o))).state={currentIndex:0},e.previous=function(){e.setState((function(e,t){return{currentIndex:e.currentIndex>0?e.currentIndex-1:t.errorRecords.length-1}}))},e.next=function(){e.setState((function(e,t){return{currentIndex:e.currentIndex<t.errorRecords.length-1?e.currentIndex+1:0}}))},e.shortcutHandler=function(t){"Escape"===t?e.props.close():"ArrowLeft"===t?e.previous():"ArrowRight"===t&&e.next()},e}return R(n,[{key:"render",value:function(){var t=this.props,r=t.errorRecords,n=t.close,o=r.length;return e.createElement(i,{shortcutHandler:this.shortcutHandler},e.createElement(M,{close:n}),o>1&&e.createElement(H,{currentError:this.state.currentIndex+1,totalErrors:o,previous:this.previous,next:this.next}),e.createElement(ue,{errorRecord:r[this.state.currentIndex],editorHandler:this.props.editorHandler}),e.createElement(u,{line1:"This screen is visible only in development. It will not appear if the app crashes in production.",line2:"Open your browser’s developer console to further inspect this error.  Click the \'X\' or hit ESC to dismiss this message."}))}}]),n}(e.PureComponent);var ce={background:"white",color:"black",headerColor:"#ce1126",primaryPreBackground:"rgba(206, 17, 38, 0.05)",primaryPreColor:"inherit",secondaryPreBackground:"rgba(251, 245, 180, 0.3)",secondaryPreColor:"inherit",footer:"#878e91",anchorColor:"#878e91",toggleBackground:"transparent",toggleColor:"#878e91",closeColor:"#293238",navBackground:"rgba(206, 17, 38, 0.05)",navArrow:"#ce1126",base01:"#f5f5f5",base03:"#6e6e6e",base05:"#333333",base08:"#881280",base0B:"#1155cc",base0C:"#994500",base0E:"#c80000"},fe={background:"#353535",color:"white",headerColor:"#e83b46",primaryPreBackground:"rgba(206, 17, 38, 0.1)",primaryPreColor:"#fccfcf",secondaryPreBackground:"rgba(251, 245, 180, 0.1)",secondaryPreColor:"#fbf5b4",footer:"#878e91",anchorColor:"#878e91",toggleBackground:"transparent",toggleColor:"#878e91",closeColor:"#ffffff",navBackground:"rgba(206, 17, 38, 0.2)",navArrow:"#ce1126",base01:"#282a2e",base03:"#969896",base05:"#c5c8c6",base08:"#cc6666",base0B:"#b5bd68",base0C:"#8abeb7",base0E:"#b294bb"};var de=null,pe=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?fe:ce,he=(0,e.createContext)();window.updateContent=function(r){var n,o,a,i,l,u=(o=(n=r).currentBuildError,a=n.currentRuntimeErrorRecords,i=n.dismissRuntimeErrors,l=n.editorHandler,o?e.createElement(he.Provider,{value:pe},e.createElement(C,{error:o,editorHandler:l})):a.length>0?e.createElement(he.Provider,{value:pe},e.createElement(se,{errorRecords:a,close:i,editorHandler:l})):null);return null===u?(t.unmountComponentAtNode(de),!1):(t.render(u,de),!0)},document.body.style.margin="0",document.body.style["max-width"]="100vw",function(e,t){for(var r in e.setAttribute("style",""),t)t.hasOwnProperty(r)&&(e.style[r]=t[r])}(de=document.createElement("div"),function(e){return{width:"100%",height:"100%","box-sizing":"border-box","text-align":"center","background-color":e.background}}(pe)),document.body.appendChild(de),window.parent.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__.iframeReady()})()})();',t.body.appendChild(r)}},window.document.body.appendChild(e)}}function we(){if(!se)throw new Error("Expected options to be injected.");if(!ne)throw new Error("Iframe has not been created yet.");ne.contentWindow.updateContent({currentBuildError:le,currentRuntimeErrorRecords:ue,dismissRuntimeErrors:ve,editorHandler:ie})||(window.document.body.removeChild(ne),ne=null,ae=!1)}window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__=window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__||{},window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__.iframeReady=function(){ae=!0,oe=!1,we()},"production"===undefined&&console.warn("react-error-overlay is not meant for use in production. You should ensure it is not included in your build to reduce bundle size.")})(),n})()}));

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "app-" + {"vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesUtilityRtl_iconS-e8b064":"d20de9562a378b6f49f1","vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesActionRtl_iconSv-8296d9":"e0b4bc40e610d1190a9f","vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesStandardRtl_icon-9d9064":"488169f87b06130cbf81","vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesDoctypeRtl_iconS-844b2b":"4309ad7df74c9f4c813b","vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesCustomRtl_iconSv-510854":"8f2dadfcc1f9c6873a3e","vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesUtility_iconSvgT-7b4df3":"322c430b9b640d26c18f","vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesAction_iconSvgTe-c9f95a":"241b8a0de92a5dfc3fe4","vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesStandard_iconSvg-a4537e":"99917cbc5096845757d9","vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesDoctype_iconSvgT-b6500b":"56d53c777d657931ba5d","vendors-node_modules_lightning-base-components_src_lightning_iconSvgTemplatesCustom_iconSvgTe-6e9a35":"929606632a5ca7fbb4ba"}[chunkId] + ".js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "json-csv-formatter:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "./";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			for(moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) var result = runtime(__webpack_require__);
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkjson_csv_formatter"] = self["webpackChunkjson_csv_formatter"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!***********************************************************************!*\
  !*** ../node_modules/error-overlay-webpack-plugin/lib/entry-basic.js ***!
  \***********************************************************************/


var _reactErrorOverlay = __webpack_require__(/*! react-error-overlay */ "../node_modules/react-error-overlay/lib/index.js");

var _launchEditorEndpoint = _interopRequireDefault(__webpack_require__(/*! react-dev-utils/launchEditorEndpoint */ "../node_modules/react-dev-utils/launchEditorEndpoint.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/* eslint-disable */
(0, _reactErrorOverlay.setEditorHandler)(function (errorLocation) {
  // Keep this sync with errorOverlayMiddleware.js
  fetch(_launchEditorEndpoint["default"] + '?fileName=' + window.encodeURIComponent(errorLocation.fileName) + '&lineNumber=' + window.encodeURIComponent(errorLocation.lineNumber || 1) + '&colNumber=' + window.encodeURIComponent(errorLocation.colNumber || 1));
});
(0, _reactErrorOverlay.startReportingRuntimeErrors)({
  onError: function onError() {
    if (false) {}
  }
});
})();

// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lwc_synthetic_shadow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lwc/synthetic-shadow */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/synthetic-shadow/dist/synthetic-shadow.js");
/* harmony import */ var _lwc_synthetic_shadow__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lwc_synthetic_shadow__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lwc */ "../node_modules/lwc-webpack-plugin/node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js");
/* harmony import */ var my_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! my/app */ "./src/modules/my/app/app.js");



const app = (0,lwc__WEBPACK_IMPORTED_MODULE_1__.createElement)('my-app', {
  is: my_app__WEBPACK_IMPORTED_MODULE_2__.default
}); // eslint-disable-next-line @lwc/lwc/no-document-query

document.querySelector('#main').appendChild(app);
})();

/******/ })()
;
//# sourceMappingURL=app-95ab84ac744ac91fbf65.js.map